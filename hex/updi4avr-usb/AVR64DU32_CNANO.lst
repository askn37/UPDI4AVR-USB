
build/AVR64DU32_CNANO.ino.elf:     file format elf32-avr


Disassembly of section .data:

00806000 <__data_start>:
__data_start():
  806000:	4c 00       	.word	0x004c	; ????
  806002:	00 00       	nop
	...

00806005 <PDI::recv_byte(unsigned long)::_set_ptr>:
  806005:	0c 00 00 00 00                                      .....

0080600a <PDI::_set_repeat>:
  80600a:	a1 00 00 00                                         ....

0080600e <PDI::_set_ptr32>:
  80600e:	6b 00 00 00 00                                      k....

00806013 <UPDI::recv_byte(unsigned long)::_set_ptr>:
  806013:	55 08 00 00 00 00                                   U.....

00806019 <UPDI::send_byte(unsigned long, unsigned char)::_set_ptr>:
  806019:	55 48 00 00 00 00                                   UH....

0080601f <UPDI::_set_repeat>:
  80601f:	55 a0 00 55 04                                      U..U.

00806024 <UPDI::_set_ptr24>:
  806024:	55 6a 00 00 00 00 00 30 20 00                       Uj.....0 .

0080602e <SYS::_updi_bitmap_reset>:
  80602e:	00 00 00 00 ff ff 7f 55 7e c8 7f 59 fe ff           .......U~..Y..

0080603c <SYS::_updi_bitmap_leave>:
  80603c:	7f 55 7e c8 7f 00 fe 7f 55 7e c3 7e 04 ff           .U~.....U~.~..

0080604a <PDI::connect()::_init>:
  80604a:	c2 05 c1 59 82                                      ...Y.

0080604f <PDI::disconnect()::_leave>:
  80604f:	c0 02 c1 00                                         ....

00806053 <PDI::nvmprog_key>:
  806053:	e0 ff 88 d8 cd 45 ab 89 12                          .....E...

0080605c <UPDI::set_rsd()::_set_rsd>:
  80605c:	55 c2 1d                                            U..

0080605f <UPDI::key_status()::_key_stat>:
  80605f:	55 87                                               U.

00806061 <UPDI::sys_status()::_sys_stat>:
  806061:	55 8b                                               U.

00806063 <UPDI::nvmprog_key>:
  806063:	55 e0 20 67 6f 72 50 4d 56 4e                       U. gorPMVN

0080606d <UPDI::erase_key>:
  80606d:	55 e0 65 73 61 72 45 4d 56 4e                       U.esarEMVN

00806077 <UPDI::urowwrite_key>:
  806077:	55 e0 65 74 26 73 55 4d 56 4e                       U.et&sUMVN

00806081 <UPDI::write_userrow()::_urowstop>:
  806081:	55 c7 20                                            U. 

00806084 <UPDI::write_userrow()::_urowdone>:
  806084:	55 ca 03                                            U..

00806087 <UPDI::clear_rsd()::_clear_rsd>:
  806087:	55 c2 15                                            U..

0080608a <UPDI::connect()::_sib256>:
  80608a:	55 e6                                               U.

0080608c <UPDI::connect()::_init>:
  80608c:	55 c8 59 55 c3 08 55 c2 15 55 82                    U.YU..U..U.

00806097 <UPDI::sys_reset(bool)::_reset>:
  806097:	55 c8 59 55 c8 00 55 c3 04                          U.YU..U..

Disassembly of section .text:

00000000 <__vectors>:
__vectors():
../../../../crt1/gcrt1.S:61
       0:	0d c1       	rjmp	.+538    	; 0x21c <__ctors_end>
       2:	00 00       	nop
../../../../crt1/gcrt1.S:67
       4:	3d c1       	rjmp	.+634    	; 0x280 <__bad_interrupt>
       6:	00 00       	nop
../../../../crt1/gcrt1.S:68
       8:	3b c1       	rjmp	.+630    	; 0x280 <__bad_interrupt>
       a:	00 00       	nop
../../../../crt1/gcrt1.S:69
       c:	39 c1       	rjmp	.+626    	; 0x280 <__bad_interrupt>
       e:	00 00       	nop
../../../../crt1/gcrt1.S:70
      10:	37 c1       	rjmp	.+622    	; 0x280 <__bad_interrupt>
      12:	00 00       	nop
../../../../crt1/gcrt1.S:71
      14:	35 c1       	rjmp	.+618    	; 0x280 <__bad_interrupt>
      16:	00 00       	nop
../../../../crt1/gcrt1.S:72
      18:	0c 94 3c 13 	jmp	0x2678	; 0x2678 <__vector_6>
../../../../crt1/gcrt1.S:73
      1c:	31 c1       	rjmp	.+610    	; 0x280 <__bad_interrupt>
      1e:	00 00       	nop
../../../../crt1/gcrt1.S:74
      20:	2f c1       	rjmp	.+606    	; 0x280 <__bad_interrupt>
      22:	00 00       	nop
../../../../crt1/gcrt1.S:75
      24:	2d c1       	rjmp	.+602    	; 0x280 <__bad_interrupt>
      26:	00 00       	nop
../../../../crt1/gcrt1.S:76
      28:	2b c1       	rjmp	.+598    	; 0x280 <__bad_interrupt>
      2a:	00 00       	nop
../../../../crt1/gcrt1.S:77
      2c:	29 c1       	rjmp	.+594    	; 0x280 <__bad_interrupt>
      2e:	00 00       	nop
../../../../crt1/gcrt1.S:78
      30:	27 c1       	rjmp	.+590    	; 0x280 <__bad_interrupt>
      32:	00 00       	nop
../../../../crt1/gcrt1.S:79
      34:	25 c1       	rjmp	.+586    	; 0x280 <__bad_interrupt>
      36:	00 00       	nop
../../../../crt1/gcrt1.S:80
      38:	23 c1       	rjmp	.+582    	; 0x280 <__bad_interrupt>
      3a:	00 00       	nop
../../../../crt1/gcrt1.S:81
      3c:	0c 94 e1 12 	jmp	0x25c2	; 0x25c2 <__vector_15>
../../../../crt1/gcrt1.S:82
      40:	1f c1       	rjmp	.+574    	; 0x280 <__bad_interrupt>
      42:	00 00       	nop
../../../../crt1/gcrt1.S:83
      44:	1d c1       	rjmp	.+570    	; 0x280 <__bad_interrupt>
      46:	00 00       	nop
../../../../crt1/gcrt1.S:84
      48:	1b c1       	rjmp	.+566    	; 0x280 <__bad_interrupt>
      4a:	00 00       	nop
../../../../crt1/gcrt1.S:85
      4c:	0c 94 98 12 	jmp	0x2530	; 0x2530 <__vector_19>
../../../../crt1/gcrt1.S:86
      50:	17 c1       	rjmp	.+558    	; 0x280 <__bad_interrupt>
      52:	00 00       	nop
../../../../crt1/gcrt1.S:87
      54:	15 c1       	rjmp	.+554    	; 0x280 <__bad_interrupt>
      56:	00 00       	nop
../../../../crt1/gcrt1.S:88
      58:	13 c1       	rjmp	.+550    	; 0x280 <__bad_interrupt>
      5a:	00 00       	nop
../../../../crt1/gcrt1.S:89
      5c:	11 c1       	rjmp	.+546    	; 0x280 <__bad_interrupt>
      5e:	00 00       	nop
../../../../crt1/gcrt1.S:90
      60:	0c 94 4c 13 	jmp	0x2698	; 0x2698 <__vector_24>
../../../../crt1/gcrt1.S:91
      64:	0d c1       	rjmp	.+538    	; 0x280 <__bad_interrupt>
      66:	00 00       	nop
../../../../crt1/gcrt1.S:92
      68:	0b c1       	rjmp	.+534    	; 0x280 <__bad_interrupt>
      6a:	00 00       	nop
../../../../crt1/gcrt1.S:93
      6c:	09 c1       	rjmp	.+530    	; 0x280 <__bad_interrupt>
      6e:	00 00       	nop
../../../../crt1/gcrt1.S:94
      70:	07 c1       	rjmp	.+526    	; 0x280 <__bad_interrupt>
      72:	00 00       	nop
../../../../crt1/gcrt1.S:95
      74:	05 c1       	rjmp	.+522    	; 0x280 <__bad_interrupt>
      76:	00 00       	nop
../../../../crt1/gcrt1.S:96
      78:	03 c1       	rjmp	.+518    	; 0x280 <__bad_interrupt>
      7a:	00 00       	nop
../../../../crt1/gcrt1.S:97
      7c:	01 c1       	rjmp	.+514    	; 0x280 <__bad_interrupt>
      7e:	00 00       	nop
../../../../crt1/gcrt1.S:98
      80:	ff c0       	rjmp	.+510    	; 0x280 <__bad_interrupt>
      82:	00 00       	nop
../../../../crt1/gcrt1.S:99
      84:	fd c0       	rjmp	.+506    	; 0x280 <__bad_interrupt>
	...

00000088 <__trampolines_end>:
__trampolines_start():
      88:	43 00       	.word	0x0043	; ????
      8a:	44 00       	.word	0x0044	; ????
      8c:	43 00       	.word	0x0043	; ????
      8e:	2d 00       	.word	0x002d	; ????
      90:	41 00       	.word	0x0041	; ????
      92:	43 00       	.word	0x0043	; ????
      94:	4d 00       	.word	0x004d	; ????
      96:	2f 00       	.word	0x002f	; ????
      98:	56 00       	.word	0x0056	; ????
      9a:	43 00       	.word	0x0043	; ????
      9c:	50 00       	.word	0x0050	; ????
	...

000000a0 <USB::mstring>:
      a0:	55 00 50 00 44 00 49 00 34 00 41 00 56 00 52 00     U.P.D.I.4.A.V.R.
      b0:	2d 00 55 00 53 00 42 00 3a 00 41 00 56 00 52 00     -.U.S.B.:.A.V.R.
      c0:	2d 00 44 00 55 00 3a 00 45 00 44 00 42 00 47 00     -.D.U.:.E.D.B.G.
      d0:	2f 00 43 00 4d 00 53 00 49 00 53 00 2d 00 44 00     /.C.M.S.I.S.-.D.
      e0:	41 00 50 00 00 00                                   A.P...

000000e6 <USB::vstring>:
      e6:	4d 00 75 00 6c 00 74 00 69 00 58 00 2e 00 6a 00     M.u.l.t.i.X...j.
      f6:	70 00 20 00 4f 00 53 00 53 00 57 00 2f 00 4f 00     p. .O.S.S.W./.O.
     106:	53 00 48 00 57 00 20 00 50 00 72 00 6f 00 64 00     S.H.W. .P.r.o.d.
     116:	2e 00 00 00                                         ....

0000011a <USB::report_descriptor>:
     11a:	06 00 ff 09 01 a1 01 15 00 26 ff 00 75 08 96 40     .........&..u..@
     12a:	00 09 01 81 02 96 40 00 09 01 91 02 95 04 09 01     ......@.........
     13a:	b1 02 c0                                            ...

0000013d <USB::current_descriptor>:
     13d:	09 02 6b 00 03 01 00 80 32 09 04 00 00 02 03 00     ..k.....2.......
     14d:	00 00 09 21 11 01 00 01 22 23 00 07 05 02 03 40     ...!...."#.....@
     15d:	00 01 07 05 81 03 40 00 01 08 0b 01 02 02 02 01     ......@.........
     16d:	04 09 04 01 00 01 02 02 01 00 05 24 00 10 01 04     ...........$....
     17d:	24 02 06 05 24 06 01 02 05 24 01 03 02 07 05 82     $...$....$......
     18d:	03 10 00 04 09 04 02 00 02 0a 00 00 00 07 05 03     ................
     19d:	02 40 00 00 07 05 83 02 40 00 00                    .@......@..

000001a8 <USB::qualifier_descriptor>:
     1a8:	0a 06 00 02 ef 02 01 40 00 00                       .......@..

000001b2 <USB::device_descriptor>:
     1b2:	12 01 00 02 ef 02 01 40 d8 04 15 0b 00 01 01 02     .......@........
     1c2:	03 01                                               ..

000001c4 <JTAG::jtag_physical>:
     1c4:	90 28 00 18 38 00 00 00                             .(..8...

000001cc <JTAG::jtag_version>:
     1cc:	00 01 21 2e 00                                      ..!..

000001d1 <USB::ep_init>:
	...
     1d9:	00 4b 00 00 4a 63 00 00 00 7b 00 00 52 63 00 00     .K..Jc...{..Rc..
	...
     1f1:	00 bb 40 00 62 63 00 00 00 8b 00 00 62 63 40 00     ..@.bc......bc@.
     201:	00 b9 00 00 52 63 00 00 00 8b 00 00 a2 63 40 00     ....Rc.......c@.
     211:	02 bb 00 00 e2 63 00 00 00 00 00                    .....c.....

0000021c <__ctors_end>:
__dtors_end():
../../../../crt1/gcrt1.S:230
     21c:	11 24       	eor	r1, r1
../../../../crt1/gcrt1.S:231
     21e:	1f be       	out	0x3f, r1	; 63
../../../../crt1/gcrt1.S:232
     220:	cf ef       	ldi	r28, 0xFF	; 255
../../../../crt1/gcrt1.S:234
     222:	cd bf       	out	0x3d, r28	; 61
../../../../crt1/gcrt1.S:236
     224:	df e7       	ldi	r29, 0x7F	; 127
../../../../crt1/gcrt1.S:237
     226:	de bf       	out	0x3e, r29	; 62

00000228 <setup_mcu()>:
_Z9setup_mcuv():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/CLKCTRL_modernAVR.h:301
#else
#assert This internal CPU clock is not supported
#endif

#if defined(_CLKCTRL_FREQSEL_)
  _PROTECTED_WRITE(CLKCTRL_OSCHFCTRLA, _CLKCTRL_FREQSEL_);
     228:	88 ed       	ldi	r24, 0xD8	; 216
     22a:	90 e2       	ldi	r25, 0x20	; 32
     22c:	84 bf       	out	0x34, r24	; 52
     22e:	90 93 68 00 	sts	0x0068, r25	; 0x800068 <__TEXT_REGION_LENGTH__+0x7f0068>
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/CLKCTRL_modernAVR.h:313
#endif

#if defined(_CLKCTRL_PDIV_)
  _PROTECTED_WRITE(CLKCTRL_MCLKCTRLB, _CLKCTRL_PDIV_ | CLKCTRL_PEN_bm);
#else
  _PROTECTED_WRITE(CLKCTRL_MCLKCTRLB, 0);
     232:	90 e0       	ldi	r25, 0x00	; 0
     234:	84 bf       	out	0x34, r24	; 52
     236:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__TEXT_REGION_LENGTH__+0x7f0061>
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/variants/avr_du32/variant.h:267
extern "C" {
#endif

inline void initVariant (void) {
  _CLKCTRL_SETUP();
  PORTA.PINCONFIG = PORT_ISC_INPUT_DISABLE_gc;
     23a:	e0 e0       	ldi	r30, 0x00	; 0
     23c:	f4 e0       	ldi	r31, 0x04	; 4
     23e:	84 e0       	ldi	r24, 0x04	; 4
     240:	83 87       	std	Z+11, r24	; 0x0b
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/variants/avr_du32/variant.h:268
  PORTA.PINCTRLUPD = ~0;
     242:	8f ef       	ldi	r24, 0xFF	; 255
     244:	84 87       	std	Z+12, r24	; 0x0c
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/variants/avr_du32/variant.h:269
  PORTC.PINCTRLUPD = ~0;
     246:	80 93 4c 04 	sts	0x044C, r24	; 0x80044c <__TEXT_REGION_LENGTH__+0x7f044c>
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/variants/avr_du32/variant.h:270
  PORTD.PINCTRLUPD = ~0;
     24a:	80 93 6c 04 	sts	0x046C, r24	; 0x80046c <__TEXT_REGION_LENGTH__+0x7f046c>
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/variants/avr_du32/variant.h:271
  PORTF.PINCTRLUPD = ~0;
     24e:	80 93 ac 04 	sts	0x04AC, r24	; 0x8004ac <__TEXT_REGION_LENGTH__+0x7f04ac>

00000252 <__do_copy_data>:
__do_copy_data():
     252:	10 e6       	ldi	r17, 0x60	; 96
     254:	a0 e0       	ldi	r26, 0x00	; 0
     256:	b0 e6       	ldi	r27, 0x60	; 96
     258:	e2 eb       	ldi	r30, 0xB2	; 178
     25a:	f6 e3       	ldi	r31, 0x36	; 54
     25c:	02 c0       	rjmp	.+4      	; 0x262 <__do_copy_data+0x10>
     25e:	05 90       	lpm	r0, Z+
     260:	0d 92       	st	X+, r0
     262:	a0 3a       	cpi	r26, 0xA0	; 160
     264:	b1 07       	cpc	r27, r17
     266:	d9 f7       	brne	.-10     	; 0x25e <__do_copy_data+0xc>

00000268 <__do_clear_bss>:
__do_clear_bss():
     268:	20 e6       	ldi	r18, 0x60	; 96
     26a:	a0 ea       	ldi	r26, 0xA0	; 160
     26c:	b0 e6       	ldi	r27, 0x60	; 96
     26e:	01 c0       	rjmp	.+2      	; 0x272 <.do_clear_bss_start>

00000270 <.do_clear_bss_loop>:
     270:	1d 92       	st	X+, r1

00000272 <.do_clear_bss_start>:
     272:	a9 3a       	cpi	r26, 0xA9	; 169
     274:	b2 07       	cpc	r27, r18
     276:	e1 f7       	brne	.-8      	; 0x270 <.do_clear_bss_loop>
.do_clear_bss_start():
../../../../crt1/gcrt1.S:314
     278:	0e 94 5b 13 	call	0x26b6	; 0x26b6 <main>
../../../../crt1/gcrt1.S:315
     27c:	0c 94 57 1b 	jmp	0x36ae	; 0x36ae <_exit>

00000280 <__bad_interrupt>:
__vector_22():
../../../../crt1/gcrt1.S:209
     280:	bf ce       	rjmp	.-642    	; 0x0 <__vectors>

00000282 <USART::drain(unsigned int) [clone .constprop.11]>:
_ZN5USART5drainEj.constprop.11():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:60
    if (_baud < 64) _baud = 64;
    else if (_baud > 0xFFFFU) _baud = 0xFFFF;
    return _baud;
  }

  void drain (size_t _delay) {
     282:	80 e0       	ldi	r24, 0x00	; 0
     284:	94 e0       	ldi	r25, 0x04	; 4
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:62
    do {
      if (bit_is_set(USART0_STATUS, USART_RXCIF_bp)) {
     286:	20 91 04 08 	lds	r18, 0x0804	; 0x800804 <__TEXT_REGION_LENGTH__+0x7f0804>
     28a:	27 ff       	sbrs	r18, 7
     28c:	04 c0       	rjmp	.+8      	; 0x296 <USART::drain(unsigned int) [clone .constprop.11]+0x14>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:66
        __asm__ __volatile__ (
          "LDS R0, 0x0801\n"  /* drop USART0_RXDATAH */
          "LDS R0, 0x0800\n"  /* drop USART0_RXDATAL */
        );
     28e:	00 90 01 08 	lds	r0, 0x0801	; 0x800801 <__TEXT_REGION_LENGTH__+0x7f0801>
     292:	00 90 00 08 	lds	r0, 0x0800	; 0x800800 <__TEXT_REGION_LENGTH__+0x7f0800>
     296:	01 97       	sbiw	r24, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:68
      }
    } while (--_delay);
     298:	b1 f7       	brne	.-20     	; 0x286 <USART::drain(unsigned int) [clone .constprop.11]+0x4>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:69
  }
     29a:	08 95       	ret

0000029c <SYS::send_bitmap(unsigned char const*, unsigned int) [clone .constprop.10]>:
_ZN3SYS11send_bitmapEPKhj.constprop.10():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:360
  }

  /*** Low level TDAT stream manipulation ***/
  /* UPDI commands are sent from TDAT using only TCA0 and bit manipulation, without switching USART. */
  /* 128kbps is the lowest limit that can be achieved with an 8-bit timer at 32MHz or less. */
  void send_bitmap (const uint8_t _bitmap[], const size_t _length) {
     29c:	bc 01       	movw	r22, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:361
    TCA0_SPLIT_HPER  = F_CPU / 125000L;
     29e:	80 ea       	ldi	r24, 0xA0	; 160
     2a0:	80 93 27 0a 	sts	0x0A27, r24	; 0x800a27 <__TEXT_REGION_LENGTH__+0x7f0a27>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:362
    TCA0_SPLIT_CTRLA = TCA_SPLIT_ENABLE_bm | TCA_SPLIT_CLKSEL_DIV1_gc;
     2a4:	81 e0       	ldi	r24, 0x01	; 1
     2a6:	80 93 00 0a 	sts	0x0A00, r24	; 0x800a00 <__TEXT_REGION_LENGTH__+0x7f0a00>
     2aa:	30 e0       	ldi	r19, 0x00	; 0
     2ac:	20 e0       	ldi	r18, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:364
    for (uint8_t i = 0; i < _length; i++) {
      uint8_t _d = (_bitmap[i >> 3]) >> (i & 7);
     2ae:	f9 01       	movw	r30, r18
     2b0:	83 e0       	ldi	r24, 0x03	; 3
     2b2:	f5 95       	asr	r31
     2b4:	e7 95       	ror	r30
     2b6:	8a 95       	dec	r24
     2b8:	e1 f7       	brne	.-8      	; 0x2b2 <SYS::send_bitmap(unsigned char const*, unsigned int) [clone .constprop.10]+0x16>
     2ba:	e6 0f       	add	r30, r22
     2bc:	f7 1f       	adc	r31, r23
     2be:	40 81       	ld	r20, Z
     2c0:	50 e0       	ldi	r21, 0x00	; 0
     2c2:	82 2f       	mov	r24, r18
     2c4:	87 70       	andi	r24, 0x07	; 7
     2c6:	02 c0       	rjmp	.+4      	; 0x2cc <SYS::send_bitmap(unsigned char const*, unsigned int) [clone .constprop.10]+0x30>
     2c8:	55 95       	asr	r21
     2ca:	47 95       	ror	r20
     2cc:	8a 95       	dec	r24
     2ce:	e2 f7       	brpl	.-8      	; 0x2c8 <SYS::send_bitmap(unsigned char const*, unsigned int) [clone .constprop.10]+0x2c>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:365
      loop_until_bit_is_set(TCA0_SPLIT_INTFLAGS, TCA_SPLIT_HUNF_bp);
     2d0:	80 91 0b 0a 	lds	r24, 0x0A0B	; 0x800a0b <__TEXT_REGION_LENGTH__+0x7f0a0b>
     2d4:	81 ff       	sbrs	r24, 1
     2d6:	fc cf       	rjmp	.-8      	; 0x2d0 <SYS::send_bitmap(unsigned char const*, unsigned int) [clone .constprop.10]+0x34>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:366
      if (bit_is_set(_d, 0))
     2d8:	40 ff       	sbrs	r20, 0
     2da:	0e c0       	rjmp	.+28     	; 0x2f8 <SYS::send_bitmap(unsigned char const*, unsigned int) [clone .constprop.10]+0x5c>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:367
        pinLogicOpen(PIN_PGM_TDAT);
     2dc:	00 98       	cbi	0x00, 0	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:370
      else
        pinLogicPush(PIN_PGM_TDAT);
      bit_set(TCA0_SPLIT_INTFLAGS, TCA_SPLIT_HUNF_bp);
     2de:	90 91 0b 0a 	lds	r25, 0x0A0B	; 0x800a0b <__TEXT_REGION_LENGTH__+0x7f0a0b>
     2e2:	92 60       	ori	r25, 0x02	; 2
     2e4:	90 93 0b 0a 	sts	0x0A0B, r25	; 0x800a0b <__TEXT_REGION_LENGTH__+0x7f0a0b>
     2e8:	2f 5f       	subi	r18, 0xFF	; 255
     2ea:	3f 4f       	sbci	r19, 0xFF	; 255
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:363
  /* UPDI commands are sent from TDAT using only TCA0 and bit manipulation, without switching USART. */
  /* 128kbps is the lowest limit that can be achieved with an 8-bit timer at 32MHz or less. */
  void send_bitmap (const uint8_t _bitmap[], const size_t _length) {
    TCA0_SPLIT_HPER  = F_CPU / 125000L;
    TCA0_SPLIT_CTRLA = TCA_SPLIT_ENABLE_bm | TCA_SPLIT_CLKSEL_DIV1_gc;
    for (uint8_t i = 0; i < _length; i++) {
     2ec:	20 37       	cpi	r18, 0x70	; 112
     2ee:	31 05       	cpc	r19, r1
     2f0:	f1 f6       	brne	.-68     	; 0x2ae <SYS::send_bitmap(unsigned char const*, unsigned int) [clone .constprop.10]+0x12>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:372
        pinLogicOpen(PIN_PGM_TDAT);
      else
        pinLogicPush(PIN_PGM_TDAT);
      bit_set(TCA0_SPLIT_INTFLAGS, TCA_SPLIT_HUNF_bp);
    }
    TCA0_SPLIT_CTRLA = 0;
     2f2:	10 92 00 0a 	sts	0x0A00, r1	; 0x800a00 <__TEXT_REGION_LENGTH__+0x7f0a00>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:373
  }
     2f6:	08 95       	ret
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:369
      uint8_t _d = (_bitmap[i >> 3]) >> (i & 7);
      loop_until_bit_is_set(TCA0_SPLIT_INTFLAGS, TCA_SPLIT_HUNF_bp);
      if (bit_is_set(_d, 0))
        pinLogicOpen(PIN_PGM_TDAT);
      else
        pinLogicPush(PIN_PGM_TDAT);
     2f8:	00 9a       	sbi	0x00, 0	; 0
     2fa:	f1 cf       	rjmp	.-30     	; 0x2de <SYS::send_bitmap(unsigned char const*, unsigned int) [clone .constprop.10]+0x42>

000002fc <USB::ep_cdo_listen()>:
_ZN3USB13ep_cdo_listenEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:335
    loop_until_bit_is_clear(USB0_INTFLAGSB, USB_RMWBUSY_bp);
    USB_EP_STATUS_CLR(USB_EP_CDI) = ~USB_TOGGLE_bm;
  }

  void ep_cdo_listen (void) {
    ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
     2fc:	8f b7       	in	r24, 0x3f	; 63
__iCliRetVal():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:50
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
     2fe:	f8 94       	cli
_ZN3USB13ep_cdo_listenEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:336
      _recv_count = 0;
     300:	10 92 64 64 	sts	0x6464, r1	; 0x806464 <_recv_count>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:337
      EP_CDO.CNT  = 0;
     304:	10 92 a2 64 	sts	0x64A2, r1	; 0x8064a2 <EP_TABLE+0x3a>
     308:	10 92 a3 64 	sts	0x64A3, r1	; 0x8064a3 <EP_TABLE+0x3b>
__iRestore():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:70
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
     30c:	8f bf       	out	0x3f, r24	; 63
_ZN3USB13ep_cdo_listenEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:339
    }
    loop_until_bit_is_clear(USB0_INTFLAGSB, USB_RMWBUSY_bp);
     30e:	80 91 0b 0c 	lds	r24, 0x0C0B	; 0x800c0b <__TEXT_REGION_LENGTH__+0x7f0c0b>
     312:	82 fd       	sbrc	r24, 2
     314:	fc cf       	rjmp	.-8      	; 0x30e <USB::ep_cdo_listen()+0x12>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:340
    USB_EP_STATUS_CLR(USB_EP_CDO) = ~USB_TOGGLE_bm;
     316:	8e ef       	ldi	r24, 0xFE	; 254
     318:	80 93 4c 0c 	sts	0x0C4C, r24	; 0x800c4c <__TEXT_REGION_LENGTH__+0x7f0c4c>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:341
  }
     31c:	08 95       	ret

0000031e <USB::ep_cdi_listen()>:
_ZN3USB13ep_cdi_listenEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:311
    /* Send the VCP-RxD buffer to the host. */
    /* If our math is correct, then if each side of the double */
    /* buffer can complete the transmission of 64 characters   */
    /* in 1 ms, then it can support 640 kbps. */
    if (bit_is_clear(GPCONF, GPCONF_OPN_bp)
     || bit_is_clear(EP_CDI.STATUS, USB_BUSNAK_bp)) {
     31e:	f4 9b       	sbis	0x1e, 4	; 30
     320:	0b c0       	rjmp	.+22     	; 0x338 <USB::ep_cdi_listen()+0x1a>
     322:	80 91 a8 64 	lds	r24, 0x64A8	; 0x8064a8 <EP_TABLE+0x40>
     326:	81 ff       	sbrs	r24, 1
     328:	07 c0       	rjmp	.+14     	; 0x338 <USB::ep_cdi_listen()+0x1a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:321
    }
    D2PRINTF(" VI=%02X:", _send_count);
    D2PRINTHEX(bit_is_set(GPCONF, GPCONF_DBL_bp)
      ? &EP_MEM.cdi_data[64]
      : &EP_MEM.cdi_data[0], _send_count);
    ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
     32a:	2f b7       	in	r18, 0x3f	; 63
__iCliRetVal():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:50
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
     32c:	f8 94       	cli
_ZN3USB13ep_cdi_listenEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:323
      EP_CDI.DATAPTR = bit_is_set(GPCONF, GPCONF_DBL_bp)
        ? (register16_t)&EP_MEM.cdi_data[64]
     32e:	f2 99       	sbic	0x1e, 2	; 30
     330:	0a c0       	rjmp	.+20     	; 0x346 <USB::ep_cdi_listen()+0x28>
     332:	82 ee       	ldi	r24, 0xE2	; 226
     334:	93 e6       	ldi	r25, 0x63	; 99
     336:	09 c0       	rjmp	.+18     	; 0x34a <USB::ep_cdi_listen()+0x2c>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:314
    /* in 1 ms, then it can support 640 kbps. */
    if (bit_is_clear(GPCONF, GPCONF_OPN_bp)
     || bit_is_clear(EP_CDI.STATUS, USB_BUSNAK_bp)) {
      /* No sending allowed while port is closed.  */
      /* If the buffer overflows, it is discarded. */
      if (_send_count == 64) _send_count = 0;
     338:	80 91 65 64 	lds	r24, 0x6465	; 0x806465 <_send_count>
     33c:	80 34       	cpi	r24, 0x40	; 64
     33e:	11 f5       	brne	.+68     	; 0x384 <USB::ep_cdi_listen()+0x66>
     340:	10 92 65 64 	sts	0x6465, r1	; 0x806465 <_send_count>
     344:	08 95       	ret
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:323
    D2PRINTHEX(bit_is_set(GPCONF, GPCONF_DBL_bp)
      ? &EP_MEM.cdi_data[64]
      : &EP_MEM.cdi_data[0], _send_count);
    ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
      EP_CDI.DATAPTR = bit_is_set(GPCONF, GPCONF_DBL_bp)
        ? (register16_t)&EP_MEM.cdi_data[64]
     346:	82 e2       	ldi	r24, 0x22	; 34
     348:	94 e6       	ldi	r25, 0x64	; 100
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:322
    D2PRINTF(" VI=%02X:", _send_count);
    D2PRINTHEX(bit_is_set(GPCONF, GPCONF_DBL_bp)
      ? &EP_MEM.cdi_data[64]
      : &EP_MEM.cdi_data[0], _send_count);
    ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
      EP_CDI.DATAPTR = bit_is_set(GPCONF, GPCONF_DBL_bp)
     34a:	80 93 ac 64 	sts	0x64AC, r24	; 0x8064ac <EP_TABLE+0x44>
     34e:	90 93 ad 64 	sts	0x64AD, r25	; 0x8064ad <EP_TABLE+0x45>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:325
        ? (register16_t)&EP_MEM.cdi_data[64]
        : (register16_t)&EP_MEM.cdi_data[0];
      EP_CDI.CNT = _send_count;
     352:	80 91 65 64 	lds	r24, 0x6465	; 0x806465 <_send_count>
     356:	90 e0       	ldi	r25, 0x00	; 0
     358:	80 93 aa 64 	sts	0x64AA, r24	; 0x8064aa <EP_TABLE+0x42>
     35c:	90 93 ab 64 	sts	0x64AB, r25	; 0x8064ab <EP_TABLE+0x43>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:326
      EP_CDI.MCNT = 0;
     360:	10 92 ae 64 	sts	0x64AE, r1	; 0x8064ae <EP_TABLE+0x46>
     364:	10 92 af 64 	sts	0x64AF, r1	; 0x8064af <EP_TABLE+0x47>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:327
      _send_count = 0;
     368:	10 92 65 64 	sts	0x6465, r1	; 0x806465 <_send_count>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:328
      GPCONF ^= GPCONF_DBL_bm;
     36c:	8e b3       	in	r24, 0x1e	; 30
     36e:	94 e0       	ldi	r25, 0x04	; 4
     370:	89 27       	eor	r24, r25
     372:	8e bb       	out	0x1e, r24	; 30
__iRestore():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:70
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
     374:	2f bf       	out	0x3f, r18	; 63
_ZN3USB13ep_cdi_listenEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:330
    }
    loop_until_bit_is_clear(USB0_INTFLAGSB, USB_RMWBUSY_bp);
     376:	80 91 0b 0c 	lds	r24, 0x0C0B	; 0x800c0b <__TEXT_REGION_LENGTH__+0x7f0c0b>
     37a:	82 fd       	sbrc	r24, 2
     37c:	fc cf       	rjmp	.-8      	; 0x376 <USB::ep_cdi_listen()+0x58>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:331
    USB_EP_STATUS_CLR(USB_EP_CDI) = ~USB_TOGGLE_bm;
     37e:	8e ef       	ldi	r24, 0xFE	; 254
     380:	80 93 4e 0c 	sts	0x0C4E, r24	; 0x800c4e <__TEXT_REGION_LENGTH__+0x7f0c4e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:332
  }
     384:	08 95       	ret

00000386 <USB::ep_res_listen()>:
_ZN3USB13ep_res_listenEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:277
    loop_until_bit_is_clear(USB0_INTFLAGSB, USB_RMWBUSY_bp);
    USB_EP_STATUS_CLR(USB_EP_REQ) = ~USB_TOGGLE_bm;
  }

  void ep_res_listen (void) {
    EP_RES.MCNT = 0;
     386:	10 92 7e 64 	sts	0x647E, r1	; 0x80647e <EP_TABLE+0x16>
     38a:	10 92 7f 64 	sts	0x647F, r1	; 0x80647f <EP_TABLE+0x17>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:278
    loop_until_bit_is_clear(USB0_INTFLAGSB, USB_RMWBUSY_bp);
     38e:	80 91 0b 0c 	lds	r24, 0x0C0B	; 0x800c0b <__TEXT_REGION_LENGTH__+0x7f0c0b>
     392:	82 fd       	sbrc	r24, 2
     394:	fc cf       	rjmp	.-8      	; 0x38e <USB::ep_res_listen()+0x8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:279
    USB_EP_STATUS_CLR(USB_EP_RES) = ~USB_TOGGLE_bm;
     396:	8e ef       	ldi	r24, 0xFE	; 254
     398:	80 93 42 0c 	sts	0x0C42, r24	; 0x800c42 <__TEXT_REGION_LENGTH__+0x7f0c42>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:280
  }
     39c:	08 95       	ret

0000039e <USB::ep_req_listen()>:
_ZN3USB13ep_req_listenEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:271
  void ep_cci_pending (void) { loop_until_bit_is_set(EP_CCI.STATUS, USB_BUSNAK_bp); }
  void ep_cdo_pending (void) { loop_until_bit_is_set(EP_CDO.STATUS, USB_BUSNAK_bp); }
  void ep_cdi_pending (void) { loop_until_bit_is_set(EP_CDI.STATUS, USB_BUSNAK_bp); }

  void ep_req_listen (void) {
    EP_REQ.CNT = 0;
     39e:	10 92 72 64 	sts	0x6472, r1	; 0x806472 <EP_TABLE+0xa>
     3a2:	10 92 73 64 	sts	0x6473, r1	; 0x806473 <EP_TABLE+0xb>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:272
    loop_until_bit_is_clear(USB0_INTFLAGSB, USB_RMWBUSY_bp);
     3a6:	80 91 0b 0c 	lds	r24, 0x0C0B	; 0x800c0b <__TEXT_REGION_LENGTH__+0x7f0c0b>
     3aa:	82 fd       	sbrc	r24, 2
     3ac:	fc cf       	rjmp	.-8      	; 0x3a6 <USB::ep_req_listen()+0x8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:273
    USB_EP_STATUS_CLR(USB_EP_REQ) = ~USB_TOGGLE_bm;
     3ae:	8e ef       	ldi	r24, 0xFE	; 254
     3b0:	80 93 40 0c 	sts	0x0C40, r24	; 0x800c40 <__TEXT_REGION_LENGTH__+0x7f0c40>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:274
  }
     3b4:	08 95       	ret

000003b6 <USART::change_pdi()>:
_ZN5USART10change_pdiEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:126
    }
  }

  /*** Set up single-wire synchronous mode for PDI operation. ***/
  /* The TRST is repurposed to transmit the synchronous clock. */
  void change_pdi (void) {
     3b6:	cf 93       	push	r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:128
    #if defined(CONFIG_PGM_PDI_ENABLE)
    ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
     3b8:	cf b7       	in	r28, 0x3f	; 63
__iCliRetVal():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:50
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
     3ba:	f8 94       	cli
_ZN5USART10change_pdiEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:129
      PORTMUX_USARTROUTEA = PORTMUX_USART_PDI;
     3bc:	81 e1       	ldi	r24, 0x11	; 17
     3be:	80 93 e2 05 	sts	0x05E2, r24	; 0x8005e2 <__TEXT_REGION_LENGTH__+0x7f05e2>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:130
      pinControlRegister(PIN_PGM_PCLK) = PORT_INVEN_bm;
     3c2:	80 e8       	ldi	r24, 0x80	; 128
     3c4:	80 93 16 04 	sts	0x0416, r24	; 0x800416 <__TEXT_REGION_LENGTH__+0x7f0416>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:131
      pinLogicPush(PIN_PGM_PCLK);   /* Everything except CNANO is shared with TRST */
     3c8:	06 9a       	sbi	0x00, 6	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:132
      USART0_STATUS = USART_DREIF_bm;
     3ca:	80 e2       	ldi	r24, 0x20	; 32
     3cc:	80 93 04 08 	sts	0x0804, r24	; 0x800804 <__TEXT_REGION_LENGTH__+0x7f0804>
sync_baud_khz():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:53
    else if (_baud > 0xFFFFU) _baud = 0xFFFF;
    return _baud;
  }

  uint16_t sync_baud_khz (uint16_t _khz) {
    uint32_t _baud = ((F_CPU / 1000) / _khz + 1) / 2;
     3d0:	20 91 47 63 	lds	r18, 0x6347	; 0x806347 <_xclk>
     3d4:	30 91 48 63 	lds	r19, 0x6348	; 0x806348 <_xclk+0x1>
     3d8:	50 e0       	ldi	r21, 0x00	; 0
     3da:	40 e0       	ldi	r20, 0x00	; 0
     3dc:	60 e2       	ldi	r22, 0x20	; 32
     3de:	7e e4       	ldi	r23, 0x4E	; 78
     3e0:	80 e0       	ldi	r24, 0x00	; 0
     3e2:	90 e0       	ldi	r25, 0x00	; 0
     3e4:	0e 94 1e 1b 	call	0x363c	; 0x363c <__divmodsi4>
     3e8:	da 01       	movw	r26, r20
     3ea:	c9 01       	movw	r24, r18
     3ec:	01 96       	adiw	r24, 0x01	; 1
     3ee:	a1 1d       	adc	r26, r1
     3f0:	b1 1d       	adc	r27, r1
     3f2:	b5 95       	asr	r27
     3f4:	a7 95       	ror	r26
     3f6:	97 95       	ror	r25
     3f8:	87 95       	ror	r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:54
    _baud <<= 6;
     3fa:	36 e0       	ldi	r19, 0x06	; 6
     3fc:	88 0f       	add	r24, r24
     3fe:	99 1f       	adc	r25, r25
     400:	aa 1f       	adc	r26, r26
     402:	bb 1f       	adc	r27, r27
     404:	3a 95       	dec	r19
     406:	d1 f7       	brne	.-12     	; 0x3fc <USART::change_pdi()+0x46>
     408:	00 97       	sbiw	r24, 0x00	; 0
     40a:	21 e0       	ldi	r18, 0x01	; 1
     40c:	a2 07       	cpc	r26, r18
     40e:	b1 05       	cpc	r27, r1
     410:	20 f0       	brcs	.+8      	; 0x41a <__BOOT_SIGNATURE_REGION_LENGTH__+0x1a>
     412:	8f ef       	ldi	r24, 0xFF	; 255
     414:	9f ef       	ldi	r25, 0xFF	; 255
     416:	a0 e0       	ldi	r26, 0x00	; 0
     418:	b0 e0       	ldi	r27, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:57
    if (_baud < 64) _baud = 64;
    else if (_baud > 0xFFFFU) _baud = 0xFFFF;
    return _baud;
     41a:	80 34       	cpi	r24, 0x40	; 64
     41c:	91 05       	cpc	r25, r1
     41e:	a1 05       	cpc	r26, r1
     420:	b1 05       	cpc	r27, r1
     422:	20 f4       	brcc	.+8      	; 0x42c <__BOOT_SIGNATURE_REGION_LENGTH__+0x2c>
     424:	80 e4       	ldi	r24, 0x40	; 64
     426:	90 e0       	ldi	r25, 0x00	; 0
     428:	a0 e0       	ldi	r26, 0x00	; 0
     42a:	b0 e0       	ldi	r27, 0x00	; 0
_ZN5USART10change_pdiEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:133
    ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
      PORTMUX_USARTROUTEA = PORTMUX_USART_PDI;
      pinControlRegister(PIN_PGM_PCLK) = PORT_INVEN_bm;
      pinLogicPush(PIN_PGM_PCLK);   /* Everything except CNANO is shared with TRST */
      USART0_STATUS = USART_DREIF_bm;
      USART0_BAUD  = sync_baud_khz(_xclk);
     42c:	80 93 08 08 	sts	0x0808, r24	; 0x800808 <__TEXT_REGION_LENGTH__+0x7f0808>
     430:	90 93 09 08 	sts	0x0809, r25	; 0x800809 <__TEXT_REGION_LENGTH__+0x7f0809>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:134
      USART0_CTRLC = USART_CHSIZE_8BIT_gc | USART_PMODE_EVEN_gc | USART_CMODE_SYNCHRONOUS_gc | USART_SBMODE_2BIT_gc;
     434:	8b e6       	ldi	r24, 0x6B	; 107
     436:	80 93 07 08 	sts	0x0807, r24	; 0x800807 <__TEXT_REGION_LENGTH__+0x7f0807>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:135
      USART0_CTRLA = USART_LBME_bm | USART_RS485_INT_gc;
     43a:	8a e0       	ldi	r24, 0x0A	; 10
     43c:	80 93 05 08 	sts	0x0805, r24	; 0x800805 <__TEXT_REGION_LENGTH__+0x7f0805>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:136
      USART0_CTRLB = USART_RXEN_bm;
     440:	80 e8       	ldi	r24, 0x80	; 128
     442:	80 93 06 08 	sts	0x0806, r24	; 0x800806 <__TEXT_REGION_LENGTH__+0x7f0806>
__iRestore():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:70
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
     446:	cf bf       	out	0x3f, r28	; 63
_ZN5USART10change_pdiEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:140
      D1PRINTF(" USART=PDI BAUD=%04X\r\n", USART0_BAUD);
    }
    #endif
  }
     448:	cf 91       	pop	r28
     44a:	08 95       	ret

0000044c <NVM::V1::prog_init()>:
_ZN3NVM2V19prog_initEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv1.cpp:30
 * This file is a template for the future.
 */

namespace NVM::V1 {

  size_t prog_init (void) { return 0; }
     44c:	90 e0       	ldi	r25, 0x00	; 0
     44e:	80 e0       	ldi	r24, 0x00	; 0
     450:	08 95       	ret

00000452 <PDI::recv()>:
_ZN3PDI4recvEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:120
    idle_clock(16);
    return start_txd();
  }

  bool recv (void) {
    do { RXSTAT = USART0_RXDATAH; } while (!RXSTAT);
     452:	80 91 01 08 	lds	r24, 0x0801	; 0x800801 <__TEXT_REGION_LENGTH__+0x7f0801>
     456:	8c bb       	out	0x1c, r24	; 28
     458:	8c b3       	in	r24, 0x1c	; 28
     45a:	88 23       	and	r24, r24
     45c:	d1 f3       	breq	.-12     	; 0x452 <PDI::recv()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:121
    RXDATA = USART0_RXDATAL;
     45e:	80 91 00 08 	lds	r24, 0x0800	; 0x800800 <__TEXT_REGION_LENGTH__+0x7f0800>
     462:	8d bb       	out	0x1d, r24	; 29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:122
    RXSTAT ^= 0x80;
     464:	8c b3       	in	r24, 0x1c	; 28
     466:	80 58       	subi	r24, 0x80	; 128
     468:	8c bb       	out	0x1c, r24	; 28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:124
    // D2PRINTF("(%02X:%02X)", RXSTAT, RXDATA);
    return RXSTAT == 0;
     46a:	9c b3       	in	r25, 0x1c	; 28
     46c:	81 e0       	ldi	r24, 0x01	; 1
     46e:	91 11       	cpse	r25, r1
     470:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:125
  }
     472:	08 95       	ret

00000474 <PDI::recv_byte() [clone .part.3]>:
_ZN3PDI9recv_byteEv.part.3():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:128

  bool recv_byte (void) {
    return stop_txd() && recv();
     474:	ee cf       	rjmp	.-36     	; 0x452 <PDI::recv()>

00000476 <PDI::send(unsigned char)>:
_ZN3PDI4sendEh():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:148
      *_data++ = RXDATA;
    } while (--_len);
    return true;
  }

  bool send (const uint8_t _data) {
     476:	cf 93       	push	r28
     478:	c8 2f       	mov	r28, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:149
    loop_until_bit_is_set(USART0_STATUS, USART_DREIF_bp);
     47a:	80 91 04 08 	lds	r24, 0x0804	; 0x800804 <__TEXT_REGION_LENGTH__+0x7f0804>
     47e:	85 ff       	sbrs	r24, 5
     480:	fc cf       	rjmp	.-8      	; 0x47a <PDI::send(unsigned char)+0x4>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:151
    // D2PRINTF("[%02X]", _data);
    USART0_TXDATAL = _data;
     482:	c0 93 02 08 	sts	0x0802, r28	; 0x800802 <__TEXT_REGION_LENGTH__+0x7f0802>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:152
    return recv() && _data == RXDATA;
     486:	e5 df       	rcall	.-54     	; 0x452 <PDI::recv()>
     488:	88 23       	and	r24, r24
     48a:	21 f0       	breq	.+8      	; 0x494 <PDI::send(unsigned char)+0x1e>
     48c:	9d b3       	in	r25, 0x1d	; 29
     48e:	81 e0       	ldi	r24, 0x01	; 1
     490:	9c 13       	cpse	r25, r28
     492:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:153
  }
     494:	cf 91       	pop	r28
     496:	08 95       	ret

00000498 <UPDI::send_bytes(unsigned char const*, unsigned int)>:
_ZN4UPDI10send_bytesEPKhj():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:103
    // D1PRINTF("\r\n[%02X]", _data);
    USART0_TXDATAL = _data;
    return recv() && _data == RXDATA;
  }

  bool send_bytes (const uint8_t* _data, size_t _len) {
     498:	0f 93       	push	r16
     49a:	1f 93       	push	r17
     49c:	cf 93       	push	r28
     49e:	df 93       	push	r29
     4a0:	eb 01       	movw	r28, r22
     4a2:	8c 01       	movw	r16, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:105
    do {
      if (!send(*_data++)) return false;
     4a4:	f8 01       	movw	r30, r16
     4a6:	81 91       	ld	r24, Z+
     4a8:	8f 01       	movw	r16, r30
     4aa:	e5 df       	rcall	.-54     	; 0x476 <PDI::send(unsigned char)>
     4ac:	88 23       	and	r24, r24
     4ae:	11 f0       	breq	.+4      	; 0x4b4 <UPDI::send_bytes(unsigned char const*, unsigned int)+0x1c>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:106
    } while (--_len);
     4b0:	21 97       	sbiw	r28, 0x01	; 1
     4b2:	c1 f7       	brne	.-16     	; 0x4a4 <UPDI::send_bytes(unsigned char const*, unsigned int)+0xc>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:108
    return true;
  }
     4b4:	df 91       	pop	r29
     4b6:	cf 91       	pop	r28
     4b8:	1f 91       	pop	r17
     4ba:	0f 91       	pop	r16
     4bc:	08 95       	ret

000004be <UPDI::disconnect()>:
_ZN4UPDI10disconnectEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:137
    const static uint8_t _reset[] = {
      0x55, 0xC8, 0x59, /* SYSRST */
      0x55, 0xC8, 0x00, /* SYSRUN */
      0x55, 0xC3, 0x04  /* UPDIDIS */
    };
    return send_bytes(_reset, _leave ? 9 : 6);
     4be:	69 e0       	ldi	r22, 0x09	; 9
     4c0:	70 e0       	ldi	r23, 0x00	; 0
     4c2:	87 e9       	ldi	r24, 0x97	; 151
     4c4:	90 e6       	ldi	r25, 0x60	; 96
     4c6:	e8 df       	rcall	.-48     	; 0x498 <UPDI::send_bytes(unsigned char const*, unsigned int)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:467
    return 0;
  }

  inline size_t disconnect (void) {
    return sys_reset(true);
  }
     4c8:	90 e0       	ldi	r25, 0x00	; 0
     4ca:	08 95       	ret

000004cc <UPDI::sys_status()>:
_ZN4UPDI10sys_statusEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:231
    return send_bytes(_key_stat, 2) && recv();
  }

  bool sys_status (void) {
    const static uint8_t _sys_stat[] = {0x55, 0x8B};
    return send_bytes(_sys_stat, 2) && recv();
     4cc:	62 e0       	ldi	r22, 0x02	; 2
     4ce:	70 e0       	ldi	r23, 0x00	; 0
     4d0:	81 e6       	ldi	r24, 0x61	; 97
     4d2:	90 e6       	ldi	r25, 0x60	; 96
     4d4:	e1 df       	rcall	.-62     	; 0x498 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     4d6:	81 11       	cpse	r24, r1
     4d8:	cd cf       	rjmp	.-102    	; 0x474 <PDI::recv_byte() [clone .part.3]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:232
  }
     4da:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:226
    return send_byte(0x1000, _nvmcmd);  /* NVMCTRL_CTRLA */
  }

  bool key_status (void) {
    const static uint8_t _key_stat[] = {0x55, 0x87};
    return send_bytes(_key_stat, 2) && recv();
     4dc:	08 95       	ret

000004de <UPDI::key_status()>:
_ZN4UPDI10key_statusEv():
     4de:	62 e0       	ldi	r22, 0x02	; 2
     4e0:	70 e0       	ldi	r23, 0x00	; 0
     4e2:	8f e5       	ldi	r24, 0x5F	; 95
     4e4:	90 e6       	ldi	r25, 0x60	; 96
     4e6:	d8 df       	rcall	.-80     	; 0x498 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     4e8:	81 11       	cpse	r24, r1
     4ea:	c4 cf       	rjmp	.-120    	; 0x474 <PDI::recv_byte() [clone .part.3]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:227
  }
     4ec:	80 e0       	ldi	r24, 0x00	; 0
     4ee:	08 95       	ret

000004f0 <UPDI::recv_byte(unsigned long)>:
_ZN4UPDI9recv_byteEm():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:116
  /* The acquired data is stored in RXDATA.    */
  bool recv_byte (uint32_t _dwAddr) {
    static uint8_t _set_ptr[] = {
      0x55, 0x08, 0, 0, 0, 0  /* LDS ADDR3 DATA1 */
    };
    _CAPS32(_set_ptr[2])->dword = _dwAddr;
     4f0:	60 93 15 60 	sts	0x6015, r22	; 0x806015 <UPDI::recv_byte(unsigned long)::_set_ptr+0x2>
     4f4:	70 93 16 60 	sts	0x6016, r23	; 0x806016 <UPDI::recv_byte(unsigned long)::_set_ptr+0x3>
     4f8:	80 93 17 60 	sts	0x6017, r24	; 0x806017 <UPDI::recv_byte(unsigned long)::_set_ptr+0x4>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:117
    return send_bytes(_set_ptr, 5) && recv();
     4fc:	90 93 18 60 	sts	0x6018, r25	; 0x806018 <UPDI::recv_byte(unsigned long)::_set_ptr+0x5>
     500:	65 e0       	ldi	r22, 0x05	; 5
     502:	70 e0       	ldi	r23, 0x00	; 0
     504:	83 e1       	ldi	r24, 0x13	; 19
     506:	90 e6       	ldi	r25, 0x60	; 96
     508:	c7 df       	rcall	.-114    	; 0x498 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     50a:	81 11       	cpse	r24, r1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:118
  }
     50c:	b3 cf       	rjmp	.-154    	; 0x474 <PDI::recv_byte() [clone .part.3]>
     50e:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:93
    } while (--_len);
    return true;
  }

  bool is_ack (void) {
    return recv() && 0x40 == RXDATA;
     510:	08 95       	ret

00000512 <UPDI::is_ack()>:
_ZN4UPDI6is_ackEv():
     512:	9f df       	rcall	.-194    	; 0x452 <PDI::recv()>
     514:	88 23       	and	r24, r24
     516:	29 f0       	breq	.+10     	; 0x522 <UPDI::is_ack()+0x10>
     518:	9d b3       	in	r25, 0x1d	; 29
     51a:	81 e0       	ldi	r24, 0x01	; 1
     51c:	90 34       	cpi	r25, 0x40	; 64
     51e:	09 f0       	breq	.+2      	; 0x522 <UPDI::is_ack()+0x10>
     520:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:94
  }
     522:	08 95       	ret

00000524 <UPDI::send_words_block(unsigned long, unsigned int)>:
_ZN4UPDI16send_words_blockEmj():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:194
      && send_bytes(_set_repeat, sizeof(_set_repeat))
      && send_bytes(&packet.out.memData[0], _wLength)
      && clear_rsd();
  }

  bool send_words_block (uint32_t _dwAddr, size_t _wLength) {
     524:	cf 93       	push	r28
     526:	df 93       	push	r29
     528:	ea 01       	movw	r28, r20
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:197
    /* This function works in word units up to 256 words, */
    /* and will round down any fractional words.          */
    _CAPS32(_set_ptr24[2])->dword = _dwAddr;
     52a:	60 93 26 60 	sts	0x6026, r22	; 0x806026 <UPDI::_set_ptr24+0x2>
     52e:	70 93 27 60 	sts	0x6027, r23	; 0x806027 <UPDI::_set_ptr24+0x3>
     532:	80 93 28 60 	sts	0x6028, r24	; 0x806028 <UPDI::_set_ptr24+0x4>
     536:	90 93 29 60 	sts	0x6029, r25	; 0x806029 <UPDI::_set_ptr24+0x5>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:198
    _set_repeat[2] = (_wLength >> 1) - 1;
     53a:	ca 01       	movw	r24, r20
     53c:	96 95       	lsr	r25
     53e:	87 95       	ror	r24
     540:	81 50       	subi	r24, 0x01	; 1
     542:	80 93 21 60 	sts	0x6021, r24	; 0x806021 <UPDI::_set_repeat+0x2>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:199
    _set_repeat[4] = 0x65;  /* ST PTR++ DATA2 */
     546:	85 e6       	ldi	r24, 0x65	; 101
     548:	80 93 23 60 	sts	0x6023, r24	; 0x806023 <UPDI::_set_repeat+0x4>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:200
    return send_bytes(_set_ptr24, 5)
     54c:	65 e0       	ldi	r22, 0x05	; 5
     54e:	70 e0       	ldi	r23, 0x00	; 0
     550:	84 e2       	ldi	r24, 0x24	; 36
     552:	90 e6       	ldi	r25, 0x60	; 96
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:205
      && is_ack()
      && set_rsd()
      && send_bytes(_set_repeat, sizeof(_set_repeat))
      && send_bytes(&packet.out.memData[0], _wLength & ~1)
      && clear_rsd();
     554:	a1 df       	rcall	.-190    	; 0x498 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     556:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:201
    /* and will round down any fractional words.          */
    _CAPS32(_set_ptr24[2])->dword = _dwAddr;
    _set_repeat[2] = (_wLength >> 1) - 1;
    _set_repeat[4] = 0x65;  /* ST PTR++ DATA2 */
    return send_bytes(_set_ptr24, 5)
      && is_ack()
     558:	f9 f0       	breq	.+62     	; 0x598 <UPDI::send_words_block(unsigned long, unsigned int)+0x74>
     55a:	db df       	rcall	.-74     	; 0x512 <UPDI::is_ack()>
     55c:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:142
    return send_bytes(_reset, _leave ? 9 : 6);
  }

  bool set_rsd (void) {
    const static uint8_t _set_rsd[] = {0x55, 0xC2, 0x08 + UPDI_CTRLAV};
    return send_bytes(_set_rsd, 3);
     55e:	e1 f0       	breq	.+56     	; 0x598 <UPDI::send_words_block(unsigned long, unsigned int)+0x74>
set_rsd():
     560:	63 e0       	ldi	r22, 0x03	; 3
     562:	70 e0       	ldi	r23, 0x00	; 0
     564:	8c e5       	ldi	r24, 0x5C	; 92
     566:	90 e6       	ldi	r25, 0x60	; 96
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:202
    _CAPS32(_set_ptr24[2])->dword = _dwAddr;
    _set_repeat[2] = (_wLength >> 1) - 1;
    _set_repeat[4] = 0x65;  /* ST PTR++ DATA2 */
    return send_bytes(_set_ptr24, 5)
      && is_ack()
      && set_rsd()
     568:	97 df       	rcall	.-210    	; 0x498 <UPDI::send_bytes(unsigned char const*, unsigned int)>
_ZN4UPDI16send_words_blockEmj():
     56a:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:203
      && send_bytes(_set_repeat, sizeof(_set_repeat))
     56c:	a9 f0       	breq	.+42     	; 0x598 <UPDI::send_words_block(unsigned long, unsigned int)+0x74>
     56e:	65 e0       	ldi	r22, 0x05	; 5
     570:	70 e0       	ldi	r23, 0x00	; 0
     572:	8f e1       	ldi	r24, 0x1F	; 31
     574:	90 e6       	ldi	r25, 0x60	; 96
     576:	90 df       	rcall	.-224    	; 0x498 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     578:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:204
      && send_bytes(&packet.out.memData[0], _wLength & ~1)
     57a:	71 f0       	breq	.+28     	; 0x598 <UPDI::send_words_block(unsigned long, unsigned int)+0x74>
     57c:	be 01       	movw	r22, r28
     57e:	6e 7f       	andi	r22, 0xFE	; 254
     580:	81 e0       	ldi	r24, 0x01	; 1
     582:	91 e6       	ldi	r25, 0x61	; 97
     584:	89 df       	rcall	.-238    	; 0x498 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     586:	88 23       	and	r24, r24
     588:	39 f0       	breq	.+14     	; 0x598 <UPDI::send_words_block(unsigned long, unsigned int)+0x74>
clear_rsd():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:147
    return send_bytes(_set_rsd, 3);
  }

  bool clear_rsd (void) {
    const static uint8_t _clear_rsd[] = {0x55, 0xC2, UPDI_CTRLAV};
    return send_bytes(_clear_rsd, 3);
     58a:	63 e0       	ldi	r22, 0x03	; 3
     58c:	70 e0       	ldi	r23, 0x00	; 0
     58e:	87 e8       	ldi	r24, 0x87	; 135
     590:	90 e6       	ldi	r25, 0x60	; 96
_ZN4UPDI16send_words_blockEmj():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:206
      && is_ack()
      && set_rsd()
      && send_bytes(_set_repeat, sizeof(_set_repeat))
      && send_bytes(&packet.out.memData[0], _wLength & ~1)
      && clear_rsd();
  }
     592:	df 91       	pop	r29
     594:	cf 91       	pop	r28
clear_rsd():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:147
    return send_bytes(_set_rsd, 3);
  }

  bool clear_rsd (void) {
    const static uint8_t _clear_rsd[] = {0x55, 0xC2, UPDI_CTRLAV};
    return send_bytes(_clear_rsd, 3);
     596:	80 cf       	rjmp	.-256    	; 0x498 <UPDI::send_bytes(unsigned char const*, unsigned int)>
_ZN4UPDI16send_words_blockEmj():
     598:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:206
      && is_ack()
      && set_rsd()
      && send_bytes(_set_repeat, sizeof(_set_repeat))
      && send_bytes(&packet.out.memData[0], _wLength & ~1)
      && clear_rsd();
  }
     59a:	df 91       	pop	r29
     59c:	cf 91       	pop	r28
     59e:	08 95       	ret

000005a0 <UPDI::send_byte(unsigned long, unsigned char)>:
_ZN4UPDI9send_byteEmh():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:120
    };
    _CAPS32(_set_ptr[2])->dword = _dwAddr;
    return send_bytes(_set_ptr, 5) && recv();
  }

  bool send_byte (uint32_t _dwAddr, uint8_t _data) {
     5a0:	cf 93       	push	r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:124
    static uint8_t _set_ptr[] = {
      0x55, 0x48, 0, 0, 0, 0  /* STS ADDR3 DATA1 */
    };
    _CAPS32(_set_ptr[2])->dword = _dwAddr;
     5a2:	c4 2f       	mov	r28, r20
     5a4:	60 93 1b 60 	sts	0x601B, r22	; 0x80601b <UPDI::send_byte(unsigned long, unsigned char)::_set_ptr+0x2>
     5a8:	70 93 1c 60 	sts	0x601C, r23	; 0x80601c <UPDI::send_byte(unsigned long, unsigned char)::_set_ptr+0x3>
     5ac:	80 93 1d 60 	sts	0x601D, r24	; 0x80601d <UPDI::send_byte(unsigned long, unsigned char)::_set_ptr+0x4>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:125
    return send_bytes(_set_ptr, 5)
     5b0:	90 93 1e 60 	sts	0x601E, r25	; 0x80601e <UPDI::send_byte(unsigned long, unsigned char)::_set_ptr+0x5>
     5b4:	65 e0       	ldi	r22, 0x05	; 5
     5b6:	70 e0       	ldi	r23, 0x00	; 0
     5b8:	89 e1       	ldi	r24, 0x19	; 25
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:128
      && is_ack()
      && send(_data)
      && is_ack();
     5ba:	90 e6       	ldi	r25, 0x60	; 96
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:126
    static uint8_t _set_ptr[] = {
      0x55, 0x48, 0, 0, 0, 0  /* STS ADDR3 DATA1 */
    };
    _CAPS32(_set_ptr[2])->dword = _dwAddr;
    return send_bytes(_set_ptr, 5)
      && is_ack()
     5bc:	6d df       	rcall	.-294    	; 0x498 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     5be:	88 23       	and	r24, r24
     5c0:	49 f0       	breq	.+18     	; 0x5d4 <UPDI::send_byte(unsigned long, unsigned char)+0x34>
     5c2:	a7 df       	rcall	.-178    	; 0x512 <UPDI::is_ack()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:127
      && send(_data)
     5c4:	88 23       	and	r24, r24
     5c6:	31 f0       	breq	.+12     	; 0x5d4 <UPDI::send_byte(unsigned long, unsigned char)+0x34>
     5c8:	8c 2f       	mov	r24, r28
     5ca:	55 df       	rcall	.-342    	; 0x476 <PDI::send(unsigned char)>
     5cc:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:129
      && is_ack();
  }
     5ce:	11 f0       	breq	.+4      	; 0x5d4 <UPDI::send_byte(unsigned long, unsigned char)+0x34>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:128
    };
    _CAPS32(_set_ptr[2])->dword = _dwAddr;
    return send_bytes(_set_ptr, 5)
      && is_ack()
      && send(_data)
      && is_ack();
     5d0:	cf 91       	pop	r28
     5d2:	9f cf       	rjmp	.-194    	; 0x512 <UPDI::is_ack()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:129
  }
     5d4:	80 e0       	ldi	r24, 0x00	; 0
     5d6:	cf 91       	pop	r28
     5d8:	08 95       	ret

000005da <UPDI::nvm_ctrl(unsigned char)>:
_ZN4UPDI8nvm_ctrlEh():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:221
    /* This slow process is due to USERROW and BOOTROW. */
    return send_bytes_data(_dwAddr, &packet.out.memData[0], _wLength);
  }

  bool nvm_ctrl (uint8_t _nvmcmd) {
    return send_byte(0x1000, _nvmcmd);  /* NVMCTRL_CTRLA */
     5da:	48 2f       	mov	r20, r24
     5dc:	60 e0       	ldi	r22, 0x00	; 0
     5de:	70 e1       	ldi	r23, 0x10	; 16
     5e0:	80 e0       	ldi	r24, 0x00	; 0
     5e2:	90 e0       	ldi	r25, 0x00	; 0
     5e4:	dd cf       	rjmp	.-70     	; 0x5a0 <UPDI::send_byte(unsigned long, unsigned char)>

000005e6 <UPDI::send_bytes_block_slow(unsigned long, unsigned int)>:
_ZN4UPDI21send_bytes_block_slowEmj():
     5e6:	cf 92       	push	r12
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:215
      if (!send_byte(_dwAddr++, *_data++)) return false;
    }
    return true;
  }

  bool send_bytes_block_slow (uint32_t _dwAddr, size_t _wLength) {
     5e8:	df 92       	push	r13
     5ea:	ef 92       	push	r14
     5ec:	ff 92       	push	r15
     5ee:	0f 93       	push	r16
     5f0:	1f 93       	push	r17
     5f2:	cf 93       	push	r28
     5f4:	df 93       	push	r29
     5f6:	c0 ef       	ldi	r28, 0xF0	; 240
     5f8:	d0 e6       	ldi	r29, 0x60	; 96
     5fa:	8a 01       	movw	r16, r20
     5fc:	00 51       	subi	r16, 0x10	; 16
     5fe:	1f 49       	sbci	r17, 0x9F	; 159
send_bytes_data():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:209
      && send_bytes(&packet.out.memData[0], _wLength & ~1)
      && clear_rsd();
  }

  bool send_bytes_data (uint32_t _dwAddr, uint8_t* _data, size_t _wLength) {
    for (size_t _i = 0; _i < _wLength; _i++) {
     600:	c0 17       	cp	r28, r16
     602:	d1 07       	cpc	r29, r17
     604:	c1 f0       	breq	.+48     	; 0x636 <UPDI::send_bytes_block_slow(unsigned long, unsigned int)+0x50>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:210
      if (!send_byte(_dwAddr++, *_data++)) return false;
     606:	6b 01       	movw	r12, r22
     608:	7c 01       	movw	r14, r24
     60a:	2f ef       	ldi	r18, 0xFF	; 255
     60c:	c2 1a       	sub	r12, r18
     60e:	d2 0a       	sbc	r13, r18
     610:	e2 0a       	sbc	r14, r18
     612:	f2 0a       	sbc	r15, r18
     614:	49 89       	ldd	r20, Y+17	; 0x11
     616:	c4 df       	rcall	.-120    	; 0x5a0 <UPDI::send_byte(unsigned long, unsigned char)>
     618:	21 96       	adiw	r28, 0x01	; 1
     61a:	81 11       	cpse	r24, r1
     61c:	09 c0       	rjmp	.+18     	; 0x630 <UPDI::send_bytes_block_slow(unsigned long, unsigned int)+0x4a>
_ZN4UPDI21send_bytes_block_slowEmj():
     61e:	df 91       	pop	r29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:218
  }

  bool send_bytes_block_slow (uint32_t _dwAddr, size_t _wLength) {
    /* This slow process is due to USERROW and BOOTROW. */
    return send_bytes_data(_dwAddr, &packet.out.memData[0], _wLength);
  }
     620:	cf 91       	pop	r28
     622:	1f 91       	pop	r17
     624:	0f 91       	pop	r16
     626:	ff 90       	pop	r15
     628:	ef 90       	pop	r14
     62a:	df 90       	pop	r13
     62c:	cf 90       	pop	r12
     62e:	08 95       	ret
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:210
      && clear_rsd();
  }

  bool send_bytes_data (uint32_t _dwAddr, uint8_t* _data, size_t _wLength) {
    for (size_t _i = 0; _i < _wLength; _i++) {
      if (!send_byte(_dwAddr++, *_data++)) return false;
     630:	c7 01       	movw	r24, r14
     632:	b6 01       	movw	r22, r12
     634:	e5 cf       	rjmp	.-54     	; 0x600 <UPDI::send_bytes_block_slow(unsigned long, unsigned int)+0x1a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:212
    }
    return true;
     636:	81 e0       	ldi	r24, 0x01	; 1
     638:	f2 cf       	rjmp	.-28     	; 0x61e <UPDI::send_bytes_block_slow(unsigned long, unsigned int)+0x38>

0000063a <UPDI::send_bytes_block(unsigned long, unsigned int)>:
_ZN4UPDI16send_bytes_blockEmj():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:181
      && is_ack()
      && send_bytes(_set_repeat, sizeof(_set_repeat))
      && recv_bytes(&packet.in.data[0], _wLength & ~1);
  }

  bool send_bytes_block (uint32_t _dwAddr, size_t _wLength) {
     63a:	cf 93       	push	r28
     63c:	df 93       	push	r29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:182
    if (_wLength == 1) return send_byte(_dwAddr, packet.out.memData[0]);
     63e:	41 30       	cpi	r20, 0x01	; 1
     640:	51 05       	cpc	r21, r1
     642:	29 f4       	brne	.+10     	; 0x64e <UPDI::send_bytes_block(unsigned long, unsigned int)+0x14>
     644:	40 91 01 61 	lds	r20, 0x6101	; 0x806101 <packet+0x11>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:192
      && is_ack()
      && set_rsd()
      && send_bytes(_set_repeat, sizeof(_set_repeat))
      && send_bytes(&packet.out.memData[0], _wLength)
      && clear_rsd();
  }
     648:	df 91       	pop	r29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:182
      && send_bytes(_set_repeat, sizeof(_set_repeat))
      && recv_bytes(&packet.in.data[0], _wLength & ~1);
  }

  bool send_bytes_block (uint32_t _dwAddr, size_t _wLength) {
    if (_wLength == 1) return send_byte(_dwAddr, packet.out.memData[0]);
     64a:	cf 91       	pop	r28
     64c:	a9 cf       	rjmp	.-174    	; 0x5a0 <UPDI::send_byte(unsigned long, unsigned char)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:183
    _CAPS32(_set_ptr24[2])->dword = _dwAddr;
     64e:	ea 01       	movw	r28, r20
     650:	60 93 26 60 	sts	0x6026, r22	; 0x806026 <UPDI::_set_ptr24+0x2>
     654:	70 93 27 60 	sts	0x6027, r23	; 0x806027 <UPDI::_set_ptr24+0x3>
     658:	80 93 28 60 	sts	0x6028, r24	; 0x806028 <UPDI::_set_ptr24+0x4>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:184
    _set_repeat[2] = _wLength - 1;
     65c:	90 93 29 60 	sts	0x6029, r25	; 0x806029 <UPDI::_set_ptr24+0x5>
     660:	84 2f       	mov	r24, r20
     662:	81 50       	subi	r24, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:185
    _set_repeat[4] = 0x64;  /* ST PTR++ DATA1 */
     664:	80 93 21 60 	sts	0x6021, r24	; 0x806021 <UPDI::_set_repeat+0x2>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:186
    return send_bytes(_set_ptr24, 5)
     668:	84 e6       	ldi	r24, 0x64	; 100
     66a:	80 93 23 60 	sts	0x6023, r24	; 0x806023 <UPDI::_set_repeat+0x4>
     66e:	65 e0       	ldi	r22, 0x05	; 5
     670:	70 e0       	ldi	r23, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:191
      && is_ack()
      && set_rsd()
      && send_bytes(_set_repeat, sizeof(_set_repeat))
      && send_bytes(&packet.out.memData[0], _wLength)
      && clear_rsd();
     672:	84 e2       	ldi	r24, 0x24	; 36
     674:	90 e6       	ldi	r25, 0x60	; 96
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:187
    if (_wLength == 1) return send_byte(_dwAddr, packet.out.memData[0]);
    _CAPS32(_set_ptr24[2])->dword = _dwAddr;
    _set_repeat[2] = _wLength - 1;
    _set_repeat[4] = 0x64;  /* ST PTR++ DATA1 */
    return send_bytes(_set_ptr24, 5)
      && is_ack()
     676:	10 df       	rcall	.-480    	; 0x498 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     678:	88 23       	and	r24, r24
     67a:	f1 f0       	breq	.+60     	; 0x6b8 <UPDI::send_bytes_block(unsigned long, unsigned int)+0x7e>
     67c:	4a df       	rcall	.-364    	; 0x512 <UPDI::is_ack()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:142
    return send_bytes(_reset, _leave ? 9 : 6);
  }

  bool set_rsd (void) {
    const static uint8_t _set_rsd[] = {0x55, 0xC2, 0x08 + UPDI_CTRLAV};
    return send_bytes(_set_rsd, 3);
     67e:	88 23       	and	r24, r24
     680:	d9 f0       	breq	.+54     	; 0x6b8 <UPDI::send_bytes_block(unsigned long, unsigned int)+0x7e>
set_rsd():
     682:	63 e0       	ldi	r22, 0x03	; 3
     684:	70 e0       	ldi	r23, 0x00	; 0
     686:	8c e5       	ldi	r24, 0x5C	; 92
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:188
    _CAPS32(_set_ptr24[2])->dword = _dwAddr;
    _set_repeat[2] = _wLength - 1;
    _set_repeat[4] = 0x64;  /* ST PTR++ DATA1 */
    return send_bytes(_set_ptr24, 5)
      && is_ack()
      && set_rsd()
     688:	90 e6       	ldi	r25, 0x60	; 96
     68a:	06 df       	rcall	.-500    	; 0x498 <UPDI::send_bytes(unsigned char const*, unsigned int)>
_ZN4UPDI16send_bytes_blockEmj():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:189
      && send_bytes(_set_repeat, sizeof(_set_repeat))
     68c:	88 23       	and	r24, r24
     68e:	a1 f0       	breq	.+40     	; 0x6b8 <UPDI::send_bytes_block(unsigned long, unsigned int)+0x7e>
     690:	65 e0       	ldi	r22, 0x05	; 5
     692:	70 e0       	ldi	r23, 0x00	; 0
     694:	8f e1       	ldi	r24, 0x1F	; 31
     696:	90 e6       	ldi	r25, 0x60	; 96
     698:	ff de       	rcall	.-514    	; 0x498 <UPDI::send_bytes(unsigned char const*, unsigned int)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:190
      && send_bytes(&packet.out.memData[0], _wLength)
     69a:	88 23       	and	r24, r24
     69c:	69 f0       	breq	.+26     	; 0x6b8 <UPDI::send_bytes_block(unsigned long, unsigned int)+0x7e>
     69e:	be 01       	movw	r22, r28
     6a0:	81 e0       	ldi	r24, 0x01	; 1
     6a2:	91 e6       	ldi	r25, 0x61	; 97
     6a4:	f9 de       	rcall	.-526    	; 0x498 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     6a6:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:147
    return send_bytes(_set_rsd, 3);
  }

  bool clear_rsd (void) {
    const static uint8_t _clear_rsd[] = {0x55, 0xC2, UPDI_CTRLAV};
    return send_bytes(_clear_rsd, 3);
     6a8:	39 f0       	breq	.+14     	; 0x6b8 <UPDI::send_bytes_block(unsigned long, unsigned int)+0x7e>
clear_rsd():
     6aa:	63 e0       	ldi	r22, 0x03	; 3
     6ac:	70 e0       	ldi	r23, 0x00	; 0
     6ae:	87 e8       	ldi	r24, 0x87	; 135
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:192
      && is_ack()
      && set_rsd()
      && send_bytes(_set_repeat, sizeof(_set_repeat))
      && send_bytes(&packet.out.memData[0], _wLength)
      && clear_rsd();
  }
     6b0:	90 e6       	ldi	r25, 0x60	; 96
_ZN4UPDI16send_bytes_blockEmj():
     6b2:	df 91       	pop	r29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:147
    return send_bytes(_set_rsd, 3);
  }

  bool clear_rsd (void) {
    const static uint8_t _clear_rsd[] = {0x55, 0xC2, UPDI_CTRLAV};
    return send_bytes(_clear_rsd, 3);
     6b4:	cf 91       	pop	r28
clear_rsd():
     6b6:	f0 ce       	rjmp	.-544    	; 0x498 <UPDI::send_bytes(unsigned char const*, unsigned int)>
_ZN4UPDI16send_bytes_blockEmj():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:192
      && is_ack()
      && set_rsd()
      && send_bytes(_set_repeat, sizeof(_set_repeat))
      && send_bytes(&packet.out.memData[0], _wLength)
      && clear_rsd();
  }
     6b8:	80 e0       	ldi	r24, 0x00	; 0
     6ba:	df 91       	pop	r29
     6bc:	cf 91       	pop	r28
     6be:	08 95       	ret

000006c0 <UPDI::recv_bytes(unsigned char*, unsigned int)>:
_ZN4UPDI10recv_bytesEPhj():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:84
    RXSTAT ^= 0x80;
    // D1PRINTF("(%02X:%02X)", RXSTAT, RXDATA);
    return RXSTAT == 0;
  }

  bool recv_bytes (uint8_t* _data, size_t _len) {
     6c0:	0f 93       	push	r16
     6c2:	1f 93       	push	r17
     6c4:	cf 93       	push	r28
     6c6:	df 93       	push	r29
     6c8:	eb 01       	movw	r28, r22
     6ca:	8c 01       	movw	r16, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:86
    do {
      if (!recv()) return false;
     6cc:	c2 de       	rcall	.-636    	; 0x452 <PDI::recv()>
     6ce:	88 23       	and	r24, r24
     6d0:	31 f0       	breq	.+12     	; 0x6de <UPDI::recv_bytes(unsigned char*, unsigned int)+0x1e>
     6d2:	9d b3       	in	r25, 0x1d	; 29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:87
      *_data++ = RXDATA;
     6d4:	f8 01       	movw	r30, r16
     6d6:	91 93       	st	Z+, r25
     6d8:	8f 01       	movw	r16, r30
     6da:	21 97       	sbiw	r28, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:88
    } while (--_len);
     6dc:	b9 f7       	brne	.-18     	; 0x6cc <UPDI::recv_bytes(unsigned char*, unsigned int)+0xc>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:90
    return true;
  }
     6de:	df 91       	pop	r29
     6e0:	cf 91       	pop	r28
     6e2:	1f 91       	pop	r17
     6e4:	0f 91       	pop	r16
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:169
      && is_ack()
      && send_bytes(_set_repeat, sizeof(_set_repeat))
      && recv_bytes(&packet.in.data[0], _wLength);
  }

  bool recv_words_block (uint32_t _dwAddr, size_t _wLength) {
     6e6:	08 95       	ret

000006e8 <UPDI::recv_words_block(unsigned long, unsigned int)>:
_ZN4UPDI16recv_words_blockEmj():
     6e8:	cf 93       	push	r28
     6ea:	df 93       	push	r29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:172
    /* This function works in word units up to 256 words, */
    /* and will round down any fractional words.          */
    _CAPS32(_set_ptr24[2])->dword = _dwAddr;
     6ec:	ea 01       	movw	r28, r20
     6ee:	60 93 26 60 	sts	0x6026, r22	; 0x806026 <UPDI::_set_ptr24+0x2>
     6f2:	70 93 27 60 	sts	0x6027, r23	; 0x806027 <UPDI::_set_ptr24+0x3>
     6f6:	80 93 28 60 	sts	0x6028, r24	; 0x806028 <UPDI::_set_ptr24+0x4>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:173
    _set_repeat[2] = (_wLength >> 1) - 1;
     6fa:	90 93 29 60 	sts	0x6029, r25	; 0x806029 <UPDI::_set_ptr24+0x5>
     6fe:	ca 01       	movw	r24, r20
     700:	96 95       	lsr	r25
     702:	87 95       	ror	r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:174
    _set_repeat[4] = 0x25;  /* LD PTR++ DATA2 */
     704:	81 50       	subi	r24, 0x01	; 1
     706:	80 93 21 60 	sts	0x6021, r24	; 0x806021 <UPDI::_set_repeat+0x2>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:175
    return send_bytes(_set_ptr24, 5)
     70a:	85 e2       	ldi	r24, 0x25	; 37
     70c:	80 93 23 60 	sts	0x6023, r24	; 0x806023 <UPDI::_set_repeat+0x4>
     710:	65 e0       	ldi	r22, 0x05	; 5
     712:	70 e0       	ldi	r23, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:178
      && is_ack()
      && send_bytes(_set_repeat, sizeof(_set_repeat))
      && recv_bytes(&packet.in.data[0], _wLength & ~1);
     714:	84 e2       	ldi	r24, 0x24	; 36
     716:	90 e6       	ldi	r25, 0x60	; 96
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:176
    /* and will round down any fractional words.          */
    _CAPS32(_set_ptr24[2])->dword = _dwAddr;
    _set_repeat[2] = (_wLength >> 1) - 1;
    _set_repeat[4] = 0x25;  /* LD PTR++ DATA2 */
    return send_bytes(_set_ptr24, 5)
      && is_ack()
     718:	bf de       	rcall	.-642    	; 0x498 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     71a:	88 23       	and	r24, r24
     71c:	89 f0       	breq	.+34     	; 0x740 <UPDI::recv_words_block(unsigned long, unsigned int)+0x58>
     71e:	f9 de       	rcall	.-526    	; 0x512 <UPDI::is_ack()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:177
      && send_bytes(_set_repeat, sizeof(_set_repeat))
     720:	88 23       	and	r24, r24
     722:	71 f0       	breq	.+28     	; 0x740 <UPDI::recv_words_block(unsigned long, unsigned int)+0x58>
     724:	65 e0       	ldi	r22, 0x05	; 5
     726:	70 e0       	ldi	r23, 0x00	; 0
     728:	8f e1       	ldi	r24, 0x1F	; 31
     72a:	90 e6       	ldi	r25, 0x60	; 96
     72c:	b5 de       	rcall	.-662    	; 0x498 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     72e:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:178
      && recv_bytes(&packet.in.data[0], _wLength & ~1);
     730:	39 f0       	breq	.+14     	; 0x740 <UPDI::recv_words_block(unsigned long, unsigned int)+0x58>
     732:	be 01       	movw	r22, r28
     734:	6e 7f       	andi	r22, 0xFE	; 254
     736:	87 ef       	ldi	r24, 0xF7	; 247
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:179
  }
     738:	90 e6       	ldi	r25, 0x60	; 96
     73a:	df 91       	pop	r29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:178
    _set_repeat[2] = (_wLength >> 1) - 1;
    _set_repeat[4] = 0x25;  /* LD PTR++ DATA2 */
    return send_bytes(_set_ptr24, 5)
      && is_ack()
      && send_bytes(_set_repeat, sizeof(_set_repeat))
      && recv_bytes(&packet.in.data[0], _wLength & ~1);
     73c:	cf 91       	pop	r28
     73e:	c0 cf       	rjmp	.-128    	; 0x6c0 <UPDI::recv_bytes(unsigned char*, unsigned int)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:179
  }
     740:	80 e0       	ldi	r24, 0x00	; 0
     742:	df 91       	pop	r29
     744:	cf 91       	pop	r28
     746:	08 95       	ret

00000748 <UPDI::recv_bytes_block(unsigned long, unsigned int)>:
_ZN4UPDI16recv_bytes_blockEmj():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:152
    return send_bytes(_clear_rsd, 3);
  }

  // MARK: UPDI API

  bool recv_bytes_block (uint32_t _dwAddr, size_t _wLength) {
     748:	cf 93       	push	r28
     74a:	df 93       	push	r29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:153
    if (_wLength == 1) {
     74c:	ea 01       	movw	r28, r20
     74e:	41 30       	cpi	r20, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:154
      if (recv_byte(_dwAddr)) {
     750:	51 05       	cpc	r21, r1
     752:	59 f4       	brne	.+22     	; 0x76a <UPDI::recv_bytes_block(unsigned long, unsigned int)+0x22>
     754:	cd de       	rcall	.-614    	; 0x4f0 <UPDI::recv_byte(unsigned long)>
     756:	81 11       	cpse	r24, r1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:158
        packet.in.data[0] = RXDATA;
        return true;
      }
      return false;
     758:	04 c0       	rjmp	.+8      	; 0x762 <UPDI::recv_bytes_block(unsigned long, unsigned int)+0x1a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:167
    _set_repeat[4] = 0x24;  /* LD PTR++ DATA1 */
    return send_bytes(_set_ptr24, 5)
      && is_ack()
      && send_bytes(_set_repeat, sizeof(_set_repeat))
      && recv_bytes(&packet.in.data[0], _wLength);
  }
     75a:	80 e0       	ldi	r24, 0x00	; 0
     75c:	df 91       	pop	r29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:155
  // MARK: UPDI API

  bool recv_bytes_block (uint32_t _dwAddr, size_t _wLength) {
    if (_wLength == 1) {
      if (recv_byte(_dwAddr)) {
        packet.in.data[0] = RXDATA;
     75e:	cf 91       	pop	r28
     760:	08 95       	ret
     762:	9d b3       	in	r25, 0x1d	; 29
     764:	90 93 f7 60 	sts	0x60F7, r25	; 0x8060f7 <packet+0x7>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:160
        return true;
      }
      return false;
    }
    _CAPS32(_set_ptr24[2])->dword = _dwAddr;
     768:	f9 cf       	rjmp	.-14     	; 0x75c <UPDI::recv_bytes_block(unsigned long, unsigned int)+0x14>
     76a:	60 93 26 60 	sts	0x6026, r22	; 0x806026 <UPDI::_set_ptr24+0x2>
     76e:	70 93 27 60 	sts	0x6027, r23	; 0x806027 <UPDI::_set_ptr24+0x3>
     772:	80 93 28 60 	sts	0x6028, r24	; 0x806028 <UPDI::_set_ptr24+0x4>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:161
    _set_repeat[2] = _wLength - 1;
     776:	90 93 29 60 	sts	0x6029, r25	; 0x806029 <UPDI::_set_ptr24+0x5>
     77a:	84 2f       	mov	r24, r20
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:162
    _set_repeat[4] = 0x24;  /* LD PTR++ DATA1 */
     77c:	81 50       	subi	r24, 0x01	; 1
     77e:	80 93 21 60 	sts	0x6021, r24	; 0x806021 <UPDI::_set_repeat+0x2>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:163
    return send_bytes(_set_ptr24, 5)
     782:	84 e2       	ldi	r24, 0x24	; 36
     784:	80 93 23 60 	sts	0x6023, r24	; 0x806023 <UPDI::_set_repeat+0x4>
     788:	65 e0       	ldi	r22, 0x05	; 5
     78a:	70 e0       	ldi	r23, 0x00	; 0
     78c:	84 e2       	ldi	r24, 0x24	; 36
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:166
      && is_ack()
      && send_bytes(_set_repeat, sizeof(_set_repeat))
      && recv_bytes(&packet.in.data[0], _wLength);
     78e:	90 e6       	ldi	r25, 0x60	; 96
     790:	83 de       	rcall	.-762    	; 0x498 <UPDI::send_bytes(unsigned char const*, unsigned int)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:164
    }
    _CAPS32(_set_ptr24[2])->dword = _dwAddr;
    _set_repeat[2] = _wLength - 1;
    _set_repeat[4] = 0x24;  /* LD PTR++ DATA1 */
    return send_bytes(_set_ptr24, 5)
      && is_ack()
     792:	88 23       	and	r24, r24
     794:	11 f3       	breq	.-60     	; 0x75a <UPDI::recv_bytes_block(unsigned long, unsigned int)+0x12>
     796:	bd de       	rcall	.-646    	; 0x512 <UPDI::is_ack()>
     798:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:165
      && send_bytes(_set_repeat, sizeof(_set_repeat))
     79a:	f9 f2       	breq	.-66     	; 0x75a <UPDI::recv_bytes_block(unsigned long, unsigned int)+0x12>
     79c:	65 e0       	ldi	r22, 0x05	; 5
     79e:	70 e0       	ldi	r23, 0x00	; 0
     7a0:	8f e1       	ldi	r24, 0x1F	; 31
     7a2:	90 e6       	ldi	r25, 0x60	; 96
     7a4:	79 de       	rcall	.-782    	; 0x498 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     7a6:	88 23       	and	r24, r24
     7a8:	c1 f2       	breq	.-80     	; 0x75a <UPDI::recv_bytes_block(unsigned long, unsigned int)+0x12>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:166
      && recv_bytes(&packet.in.data[0], _wLength);
     7aa:	be 01       	movw	r22, r28
     7ac:	87 ef       	ldi	r24, 0xF7	; 247
     7ae:	90 e6       	ldi	r25, 0x60	; 96
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:167
  }
     7b0:	df 91       	pop	r29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:166
    _set_repeat[2] = _wLength - 1;
    _set_repeat[4] = 0x24;  /* LD PTR++ DATA1 */
    return send_bytes(_set_ptr24, 5)
      && is_ack()
      && send_bytes(_set_repeat, sizeof(_set_repeat))
      && recv_bytes(&packet.in.data[0], _wLength);
     7b2:	cf 91       	pop	r28
     7b4:	85 cf       	rjmp	.-246    	; 0x6c0 <UPDI::recv_bytes(unsigned char*, unsigned int)>

000007b6 <NVM::V0::read_memory()>:
_ZN3NVM2V011read_memoryEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:114
    UPDI::nvm_ctrl(0x04);         /* NVM_CMD_PBC */
    nvm_wait();
    return UPDI::nvm_ctrl(0x00);
  }

  size_t read_memory (void) {
     7b6:	cf 93       	push	r28
     7b8:	df 93       	push	r29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:115
    uint8_t  m_type = packet.out.bMType;
     7ba:	80 91 f7 60 	lds	r24, 0x60F7	; 0x8060f7 <packet+0x7>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:116
    uint16_t _wAddr = packet.out.dwAddr;
     7be:	60 91 f8 60 	lds	r22, 0x60F8	; 0x8060f8 <packet+0x8>
     7c2:	30 91 f9 60 	lds	r19, 0x60F9	; 0x8060f9 <packet+0x9>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:118
    size_t _wLength = packet.out.dwLength;
    if (m_type == 0xB4) {
     7c6:	84 3b       	cpi	r24, 0xB4	; 180
     7c8:	51 f4       	brne	.+20     	; 0x7de <NVM::V0::read_memory()+0x28>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:120
      /* MTYPE_SIGN_JTAG */
      _wAddr = PROD_SIG + ((uint8_t)_wAddr & 0x7F);
     7ca:	6f 77       	andi	r22, 0x7F	; 127
     7cc:	70 e0       	ldi	r23, 0x00	; 0
     7ce:	7f 5e       	subi	r23, 0xEF	; 239
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:127
    else if (m_type == 0xB0) {
      /* MTYPE_FLASH_PAGE (PROGMEM) */
      _wAddr += Device_Descriptor.UPDI.prog_base;
    }
    if (bit_is_set(PGCONF, PGCONF_PROG_bp)
     && UPDI::recv_bytes_block(_wAddr, _wLength))
     7d0:	f9 99       	sbic	0x1f, 1	; 31
     7d2:	0f c0       	rjmp	.+30     	; 0x7f2 <NVM::V0::read_memory()+0x3c>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:129
      return _wLength + 1;
    return 0;
     7d4:	90 e0       	ldi	r25, 0x00	; 0
     7d6:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:130
  }
     7d8:	df 91       	pop	r29
     7da:	cf 91       	pop	r28
     7dc:	08 95       	ret
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:116
    return UPDI::nvm_ctrl(0x00);
  }

  size_t read_memory (void) {
    uint8_t  m_type = packet.out.bMType;
    uint16_t _wAddr = packet.out.dwAddr;
     7de:	73 2f       	mov	r23, r19
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:122
    size_t _wLength = packet.out.dwLength;
    if (m_type == 0xB4) {
      /* MTYPE_SIGN_JTAG */
      _wAddr = PROD_SIG + ((uint8_t)_wAddr & 0x7F);
    }
    else if (m_type == 0xB0) {
     7e0:	80 3b       	cpi	r24, 0xB0	; 176
     7e2:	b1 f7       	brne	.-20     	; 0x7d0 <NVM::V0::read_memory()+0x1a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:124
      /* MTYPE_FLASH_PAGE (PROGMEM) */
      _wAddr += Device_Descriptor.UPDI.prog_base;
     7e4:	80 91 0e 63 	lds	r24, 0x630E	; 0x80630e <Device_Descriptor>
     7e8:	90 91 0f 63 	lds	r25, 0x630F	; 0x80630f <Device_Descriptor+0x1>
     7ec:	68 0f       	add	r22, r24
     7ee:	79 1f       	adc	r23, r25
     7f0:	ef cf       	rjmp	.-34     	; 0x7d0 <NVM::V0::read_memory()+0x1a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:117
  }

  size_t read_memory (void) {
    uint8_t  m_type = packet.out.bMType;
    uint16_t _wAddr = packet.out.dwAddr;
    size_t _wLength = packet.out.dwLength;
     7f2:	c0 91 fc 60 	lds	r28, 0x60FC	; 0x8060fc <packet+0xc>
     7f6:	d0 91 fd 60 	lds	r29, 0x60FD	; 0x8060fd <packet+0xd>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:127
    else if (m_type == 0xB0) {
      /* MTYPE_FLASH_PAGE (PROGMEM) */
      _wAddr += Device_Descriptor.UPDI.prog_base;
    }
    if (bit_is_set(PGCONF, PGCONF_PROG_bp)
     && UPDI::recv_bytes_block(_wAddr, _wLength))
     7fa:	90 e0       	ldi	r25, 0x00	; 0
     7fc:	80 e0       	ldi	r24, 0x00	; 0
     7fe:	ae 01       	movw	r20, r28
     800:	a3 df       	rcall	.-186    	; 0x748 <UPDI::recv_bytes_block(unsigned long, unsigned int)>
     802:	88 23       	and	r24, r24
     804:	39 f3       	breq	.-50     	; 0x7d4 <NVM::V0::read_memory()+0x1e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:128
      return _wLength + 1;
     806:	ce 01       	movw	r24, r28
     808:	01 96       	adiw	r24, 0x01	; 1
     80a:	e6 cf       	rjmp	.-52     	; 0x7d8 <NVM::V0::read_memory()+0x22>

0000080c <NVM::V2::read_memory()>:
_ZN3NVM2V211read_memoryEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:116

  size_t prog_init (void) {
    return nvm_ctrl_change(0x00);
  }

  size_t read_memory (void) {
     80c:	cf 93       	push	r28
     80e:	df 93       	push	r29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:120
    uint8_t   m_type = packet.out.bMType;
    uint32_t _dwAddr = packet.out.dwAddr;
    size_t  _wLength = packet.out.dwLength;
    if (bit_is_set(PGCONF, PGCONF_PROG_bp)) {
     810:	f9 99       	sbic	0x1f, 1	; 31
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:133
        _dwAddr = PROD_SIG + ((uint8_t)_dwAddr & 0x7F);
      }
      if (UPDI::recv_bytes_block(_dwAddr, _wLength))
        return _wLength + 1;
    }
    return 0;
     812:	05 c0       	rjmp	.+10     	; 0x81e <NVM::V2::read_memory()+0x12>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:134
  }
     814:	90 e0       	ldi	r25, 0x00	; 0
     816:	80 e0       	ldi	r24, 0x00	; 0
     818:	df 91       	pop	r29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:117
  size_t prog_init (void) {
    return nvm_ctrl_change(0x00);
  }

  size_t read_memory (void) {
    uint8_t   m_type = packet.out.bMType;
     81a:	cf 91       	pop	r28
     81c:	08 95       	ret
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:118
    uint32_t _dwAddr = packet.out.dwAddr;
     81e:	20 91 f7 60 	lds	r18, 0x60F7	; 0x8060f7 <packet+0x7>
     822:	60 91 f8 60 	lds	r22, 0x60F8	; 0x8060f8 <packet+0x8>
     826:	70 91 f9 60 	lds	r23, 0x60F9	; 0x8060f9 <packet+0x9>
     82a:	80 91 fa 60 	lds	r24, 0x60FA	; 0x8060fa <packet+0xa>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:119
    size_t  _wLength = packet.out.dwLength;
     82e:	90 91 fb 60 	lds	r25, 0x60FB	; 0x8060fb <packet+0xb>
     832:	c0 91 fc 60 	lds	r28, 0x60FC	; 0x8060fc <packet+0xc>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:121
    if (bit_is_set(PGCONF, PGCONF_PROG_bp)) {
      if (m_type == 0xB0) {
     836:	d0 91 fd 60 	lds	r29, 0x60FD	; 0x8060fd <packet+0xd>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:123
        /* MTYPE_FLASH_PAGE (PROGMEM) */
        _dwAddr += PROG_START;
     83a:	20 3b       	cpi	r18, 0xB0	; 176
     83c:	49 f4       	brne	.+18     	; 0x850 <NVM::V2::read_memory()+0x44>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:124
        return UPDI::recv_words_block(_dwAddr, _wLength) ? _wLength + 1 : 0;
     83e:	80 58       	subi	r24, 0x80	; 128
     840:	9f 4f       	sbci	r25, 0xFF	; 255
     842:	ae 01       	movw	r20, r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:130
      }
      if (m_type == 0xB4) {
        /* MTYPE_SIGN_JTAG */
        _dwAddr = PROD_SIG + ((uint8_t)_dwAddr & 0x7F);
      }
      if (UPDI::recv_bytes_block(_dwAddr, _wLength))
     844:	51 df       	rcall	.-350    	; 0x6e8 <UPDI::recv_words_block(unsigned long, unsigned int)>
     846:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:131
        return _wLength + 1;
     848:	29 f3       	breq	.-54     	; 0x814 <NVM::V2::read_memory()+0x8>
     84a:	ce 01       	movw	r24, r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:126
      if (m_type == 0xB0) {
        /* MTYPE_FLASH_PAGE (PROGMEM) */
        _dwAddr += PROG_START;
        return UPDI::recv_words_block(_dwAddr, _wLength) ? _wLength + 1 : 0;
      }
      if (m_type == 0xB4) {
     84c:	01 96       	adiw	r24, 0x01	; 1
     84e:	e4 cf       	rjmp	.-56     	; 0x818 <NVM::V2::read_memory()+0xc>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:128
        /* MTYPE_SIGN_JTAG */
        _dwAddr = PROD_SIG + ((uint8_t)_dwAddr & 0x7F);
     850:	24 3b       	cpi	r18, 0xB4	; 180
     852:	39 f4       	brne	.+14     	; 0x862 <NVM::V2::read_memory()+0x56>
     854:	6f 77       	andi	r22, 0x7F	; 127
     856:	70 e0       	ldi	r23, 0x00	; 0
     858:	7f 5e       	subi	r23, 0xEF	; 239
     85a:	07 2e       	mov	r0, r23
     85c:	00 0c       	add	r0, r0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:130
      }
      if (UPDI::recv_bytes_block(_dwAddr, _wLength))
     85e:	88 0b       	sbc	r24, r24
     860:	99 0b       	sbc	r25, r25
     862:	ae 01       	movw	r20, r28
     864:	71 df       	rcall	.-286    	; 0x748 <UPDI::recv_bytes_block(unsigned long, unsigned int)>
     866:	ef cf       	rjmp	.-34     	; 0x846 <NVM::V2::read_memory()+0x3a>

00000868 <NVM::V3::read_memory()>:
_ZN3NVM2V311read_memoryEv():
     868:	d1 cf       	rjmp	.-94     	; 0x80c <NVM::V2::read_memory()>

0000086a <NVM::V4::read_memory()>:
_ZN3NVM2V411read_memoryEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:119

  size_t prog_init (void) {
    return nvm_ctrl_change(0x00);
  }

  size_t read_memory (void) {
     86a:	cf 93       	push	r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:123
    uint8_t   m_type = packet.out.bMType;
    uint32_t _dwAddr = packet.out.dwAddr;
    size_t  _wLength = packet.out.dwLength;
    if (bit_is_set(PGCONF, PGCONF_PROG_bp)) {
     86c:	df 93       	push	r29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:136
        _dwAddr = PROD_SIG + ((uint8_t)_dwAddr & 0x7F);
      }
      if (UPDI::recv_bytes_block(_dwAddr, _wLength))
        return _wLength + 1;
    }
    return 0;
     86e:	f9 99       	sbic	0x1f, 1	; 31
     870:	05 c0       	rjmp	.+10     	; 0x87c <NVM::V4::read_memory()+0x12>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:137
  }
     872:	90 e0       	ldi	r25, 0x00	; 0
     874:	80 e0       	ldi	r24, 0x00	; 0
     876:	df 91       	pop	r29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:120
  size_t prog_init (void) {
    return nvm_ctrl_change(0x00);
  }

  size_t read_memory (void) {
    uint8_t   m_type = packet.out.bMType;
     878:	cf 91       	pop	r28
     87a:	08 95       	ret
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:121
    uint32_t _dwAddr = packet.out.dwAddr;
     87c:	20 91 f7 60 	lds	r18, 0x60F7	; 0x8060f7 <packet+0x7>
     880:	60 91 f8 60 	lds	r22, 0x60F8	; 0x8060f8 <packet+0x8>
     884:	70 91 f9 60 	lds	r23, 0x60F9	; 0x8060f9 <packet+0x9>
     888:	80 91 fa 60 	lds	r24, 0x60FA	; 0x8060fa <packet+0xa>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:122
    size_t  _wLength = packet.out.dwLength;
     88c:	90 91 fb 60 	lds	r25, 0x60FB	; 0x8060fb <packet+0xb>
     890:	c0 91 fc 60 	lds	r28, 0x60FC	; 0x8060fc <packet+0xc>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:124
    if (bit_is_set(PGCONF, PGCONF_PROG_bp)) {
      if (m_type == 0xB0) {
     894:	d0 91 fd 60 	lds	r29, 0x60FD	; 0x8060fd <packet+0xd>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:126
        /* MTYPE_FLASH_PAGE (PROGMEM) */
        _dwAddr += PROG_START;
     898:	20 3b       	cpi	r18, 0xB0	; 176
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:127
        return UPDI::recv_words_block(_dwAddr, _wLength) ? _wLength + 1 : 0;
     89a:	49 f4       	brne	.+18     	; 0x8ae <NVM::V4::read_memory()+0x44>
     89c:	80 58       	subi	r24, 0x80	; 128
     89e:	9f 4f       	sbci	r25, 0xFF	; 255
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:133
      }
      if (m_type == 0xB4) {
        /* MTYPE_SIGN_JTAG */
        _dwAddr = PROD_SIG + ((uint8_t)_dwAddr & 0x7F);
      }
      if (UPDI::recv_bytes_block(_dwAddr, _wLength))
     8a0:	ae 01       	movw	r20, r28
     8a2:	22 df       	rcall	.-444    	; 0x6e8 <UPDI::recv_words_block(unsigned long, unsigned int)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:134
        return _wLength + 1;
     8a4:	88 23       	and	r24, r24
     8a6:	29 f3       	breq	.-54     	; 0x872 <NVM::V4::read_memory()+0x8>
     8a8:	ce 01       	movw	r24, r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:129
      if (m_type == 0xB0) {
        /* MTYPE_FLASH_PAGE (PROGMEM) */
        _dwAddr += PROG_START;
        return UPDI::recv_words_block(_dwAddr, _wLength) ? _wLength + 1 : 0;
      }
      if (m_type == 0xB4) {
     8aa:	01 96       	adiw	r24, 0x01	; 1
     8ac:	e4 cf       	rjmp	.-56     	; 0x876 <NVM::V4::read_memory()+0xc>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:131
        /* MTYPE_SIGN_JTAG */
        _dwAddr = PROD_SIG + ((uint8_t)_dwAddr & 0x7F);
     8ae:	24 3b       	cpi	r18, 0xB4	; 180
     8b0:	41 f4       	brne	.+16     	; 0x8c2 <NVM::V4::read_memory()+0x58>
     8b2:	6f 77       	andi	r22, 0x7F	; 127
     8b4:	70 e0       	ldi	r23, 0x00	; 0
     8b6:	60 58       	subi	r22, 0x80	; 128
     8b8:	7f 4e       	sbci	r23, 0xEF	; 239
     8ba:	07 2e       	mov	r0, r23
     8bc:	00 0c       	add	r0, r0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:133
      }
      if (UPDI::recv_bytes_block(_dwAddr, _wLength))
     8be:	88 0b       	sbc	r24, r24
     8c0:	99 0b       	sbc	r25, r25
     8c2:	ae 01       	movw	r20, r28
     8c4:	41 df       	rcall	.-382    	; 0x748 <UPDI::recv_bytes_block(unsigned long, unsigned int)>
     8c6:	ee cf       	rjmp	.-36     	; 0x8a4 <NVM::V4::read_memory()+0x3a>

000008c8 <NVM::V5::read_memory()>:
_ZN3NVM2V511read_memoryEv():
     8c8:	d0 cf       	rjmp	.-96     	; 0x86a <NVM::V4::read_memory()>

000008ca <UPDI::send_break()>:
_ZN4UPDI10send_breakEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:64
  };

  // MARK: UPDI Low level

  bool send_break (void) {
    USART0_BAUD = USART0_BAUD + (USART0_BAUD >> 1);
     8ca:	20 91 08 08 	lds	r18, 0x0808	; 0x800808 <__TEXT_REGION_LENGTH__+0x7f0808>
     8ce:	30 91 09 08 	lds	r19, 0x0809	; 0x800809 <__TEXT_REGION_LENGTH__+0x7f0809>
     8d2:	80 91 08 08 	lds	r24, 0x0808	; 0x800808 <__TEXT_REGION_LENGTH__+0x7f0808>
     8d6:	90 91 09 08 	lds	r25, 0x0809	; 0x800809 <__TEXT_REGION_LENGTH__+0x7f0809>
     8da:	96 95       	lsr	r25
     8dc:	87 95       	ror	r24
     8de:	82 0f       	add	r24, r18
     8e0:	93 1f       	adc	r25, r19
     8e2:	80 93 08 08 	sts	0x0808, r24	; 0x800808 <__TEXT_REGION_LENGTH__+0x7f0808>
     8e6:	90 93 09 08 	sts	0x0809, r25	; 0x800809 <__TEXT_REGION_LENGTH__+0x7f0809>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:65
    send(0x00);
     8ea:	80 e0       	ldi	r24, 0x00	; 0
     8ec:	c4 dd       	rcall	.-1144   	; 0x476 <PDI::send(unsigned char)>
calk_baud_khz():
     8ee:	20 91 47 63 	lds	r18, 0x6347	; 0x806347 <_xclk>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:46
  #endif
  }

  /*** Calculate the baud rate for VCP asynchronous mode. ***/
  uint16_t calk_baud_khz (uint16_t _khz) {
    uint32_t _baud = ((F_CPU / 1000L * 8L) / _khz + 1) / 2;
     8f2:	30 91 48 63 	lds	r19, 0x6348	; 0x806348 <_xclk+0x1>
     8f6:	50 e0       	ldi	r21, 0x00	; 0
     8f8:	40 e0       	ldi	r20, 0x00	; 0
     8fa:	60 e0       	ldi	r22, 0x00	; 0
     8fc:	71 e7       	ldi	r23, 0x71	; 113
     8fe:	82 e0       	ldi	r24, 0x02	; 2
     900:	90 e0       	ldi	r25, 0x00	; 0
     902:	0e 94 1e 1b 	call	0x363c	; 0x363c <__divmodsi4>
     906:	da 01       	movw	r26, r20
     908:	c9 01       	movw	r24, r18
     90a:	01 96       	adiw	r24, 0x01	; 1
     90c:	a1 1d       	adc	r26, r1
     90e:	b1 1d       	adc	r27, r1
     910:	b5 95       	asr	r27
     912:	a7 95       	ror	r26
     914:	97 95       	ror	r25
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:47
    if (_baud < 64) _baud = 64;
     916:	87 95       	ror	r24
     918:	80 34       	cpi	r24, 0x40	; 64
     91a:	91 05       	cpc	r25, r1
     91c:	a1 05       	cpc	r26, r1
     91e:	b1 05       	cpc	r27, r1
     920:	7c f0       	brlt	.+30     	; 0x940 <UPDI::send_break()+0x76>
     922:	00 97       	sbiw	r24, 0x00	; 0
     924:	21 e0       	ldi	r18, 0x01	; 1
     926:	a2 07       	cpc	r26, r18
     928:	b1 05       	cpc	r27, r1
     92a:	20 f0       	brcs	.+8      	; 0x934 <UPDI::send_break()+0x6a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:66
    USART0_BAUD = USART::calk_baud_khz(_xclk);
     92c:	8f ef       	ldi	r24, 0xFF	; 255
     92e:	9f ef       	ldi	r25, 0xFF	; 255
     930:	a0 e0       	ldi	r26, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:68
    return true;
  }
     932:	b0 e0       	ldi	r27, 0x00	; 0
_ZN4UPDI10send_breakEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:47
     934:	80 93 08 08 	sts	0x0808, r24	; 0x800808 <__TEXT_REGION_LENGTH__+0x7f0808>
     938:	90 93 09 08 	sts	0x0809, r25	; 0x800809 <__TEXT_REGION_LENGTH__+0x7f0809>
     93c:	81 e0       	ldi	r24, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:365

  // MARK: UPDI Session

  size_t timeout_fallback (void) {
    /* If a timeout occurs, the communication speed will be reduced. */
    RXDATA = _xclk - 25;
     93e:	08 95       	ret
     940:	80 e4       	ldi	r24, 0x40	; 64
     942:	90 e0       	ldi	r25, 0x00	; 0
     944:	a0 e0       	ldi	r26, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:366
    if (RXDATA < 40) return 0;
     946:	b0 e0       	ldi	r27, 0x00	; 0
     948:	f5 cf       	rjmp	.-22     	; 0x934 <UPDI::send_break()+0x6a>

0000094a <UPDI::timeout_fallback()>:
_ZN4UPDI16timeout_fallbackEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:367
    _xclk = RXDATA;
     94a:	80 91 47 63 	lds	r24, 0x6347	; 0x806347 <_xclk>
     94e:	89 51       	subi	r24, 0x19	; 25
     950:	8d bb       	out	0x1d, r24	; 29
     952:	8d b3       	in	r24, 0x1d	; 29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:368
    send_break();
     954:	88 32       	cpi	r24, 0x28	; 40
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:147
    return send_bytes(_set_rsd, 3);
  }

  bool clear_rsd (void) {
    const static uint8_t _clear_rsd[] = {0x55, 0xC2, UPDI_CTRLAV};
    return send_bytes(_clear_rsd, 3);
     956:	70 f0       	brcs	.+28     	; 0x974 <UPDI::timeout_fallback()+0x2a>
     958:	8d b3       	in	r24, 0x1d	; 29
     95a:	90 e0       	ldi	r25, 0x00	; 0
     95c:	80 93 47 63 	sts	0x6347, r24	; 0x806347 <_xclk>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:369
    /* If a timeout occurs, the communication speed will be reduced. */
    RXDATA = _xclk - 25;
    if (RXDATA < 40) return 0;
    _xclk = RXDATA;
    send_break();
    return clear_rsd();
     960:	90 93 48 63 	sts	0x6348, r25	; 0x806348 <_xclk+0x1>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:366
  // MARK: UPDI Session

  size_t timeout_fallback (void) {
    /* If a timeout occurs, the communication speed will be reduced. */
    RXDATA = _xclk - 25;
    if (RXDATA < 40) return 0;
     964:	b2 df       	rcall	.-156    	; 0x8ca <UPDI::send_break()>
clear_rsd():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:370
    _xclk = RXDATA;
    send_break();
    return clear_rsd();
  }
     966:	63 e0       	ldi	r22, 0x03	; 3
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:156

  bool send_byte (const uint8_t _data) {
    return start_txd() && send(_data);
     968:	70 e0       	ldi	r23, 0x00	; 0
     96a:	87 e8       	ldi	r24, 0x87	; 135
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:116
    while (get_sin(0x62) && RXDATA);  /* NVMCSR_REG: IO=0x32 */
    D2PRINTF("<CSR:%02X>\r\n", RXDATA);
    return true;
  }

  bool nvm_ctrl (const uint8_t _nvmcmd) {
     96c:	90 e6       	ldi	r25, 0x60	; 96
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:82
    return send(0xC0 | _addr) && send(_data);
  }

  bool set_sout (const uint8_t _addr, const uint8_t _data) {
    D2PRINTF("[SOUT:%02X:%02X]\r\n", _addr, _data);
    return send(0x90 | _addr) && send(_data);
     96e:	94 dd       	rcall	.-1240   	; 0x498 <UPDI::send_bytes(unsigned char const*, unsigned int)>
_ZN4UPDI16timeout_fallbackEv():
     970:	90 e0       	ldi	r25, 0x00	; 0
     972:	08 95       	ret
     974:	90 e0       	ldi	r25, 0x00	; 0
     976:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:118
    return true;
  }

  bool nvm_ctrl (const uint8_t _nvmcmd) {
    return set_sout(0x63, _nvmcmd);   /* NVMCMD_REG: IO=0x33 */
  }
     978:	08 95       	ret

0000097a <PDI::send_byte(unsigned char) [clone .part.4]>:
_ZN3PDI9send_byteEh.part.4():
     97a:	7d cd       	rjmp	.-1286   	; 0x476 <PDI::send(unsigned char)>

0000097c <TPI::nvm_ctrl(unsigned char)>:
_ZN3TPI8nvm_ctrlEh():
     97c:	cf 93       	push	r28
     97e:	c8 2f       	mov	r28, r24
set_sout():
     980:	83 ef       	ldi	r24, 0xF3	; 243
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:87
    return send(0x90 | _addr) && send(_data);
  }

  bool get_sin (const uint8_t _addr) {
    D2PRINTF("[SIN:%02X]\r\n", _addr);
    return send(0x10 | _addr) && recv();
     982:	79 dd       	rcall	.-1294   	; 0x476 <PDI::send(unsigned char)>
     984:	88 23       	and	r24, r24
     986:	19 f0       	breq	.+6      	; 0x98e <TPI::nvm_ctrl(unsigned char)+0x12>
     988:	8c 2f       	mov	r24, r28
_ZN3TPI8nvm_ctrlEh():
     98a:	cf 91       	pop	r28
set_sout():
     98c:	f6 cf       	rjmp	.-20     	; 0x97a <PDI::send_byte(unsigned char) [clone .part.4]>
_ZN3TPI8nvm_ctrlEh():
     98e:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:111
  }

  // MARK: TPI NVM Control

  bool nvm_wait (void) {
    while (get_sin(0x62) && RXDATA);  /* NVMCSR_REG: IO=0x32 */
     990:	cf 91       	pop	r28
     992:	08 95       	ret

00000994 <TPI::nvm_wait()>:
_ZN3TPI8nvm_waitEv():
     994:	82 e7       	ldi	r24, 0x72	; 114
     996:	6f dd       	rcall	.-1314   	; 0x476 <PDI::send(unsigned char)>
     998:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:114
    D2PRINTF("<CSR:%02X>\r\n", RXDATA);
    return true;
  }
     99a:	31 f0       	breq	.+12     	; 0x9a8 <TPI::nvm_wait()+0x14>
     99c:	6b dd       	rcall	.-1322   	; 0x474 <PDI::recv_byte() [clone .part.3]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:103
  bool get_sld (void) {
    D2PRINTF("[SLD]\r\n");
    return send(0x24) && recv();
  }

  bool set_sst (const uint8_t _data) {
     99e:	88 23       	and	r24, r24
     9a0:	19 f0       	breq	.+6      	; 0x9a8 <TPI::nvm_wait()+0x14>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:105
    D2PRINTF("[SST:%02X]\r\n", _data);
    return send(0x64) && send(_data);
     9a2:	8d b3       	in	r24, 0x1d	; 29
     9a4:	81 11       	cpse	r24, r1
     9a6:	f6 cf       	rjmp	.-20     	; 0x994 <TPI::nvm_wait()>
     9a8:	81 e0       	ldi	r24, 0x01	; 1
     9aa:	08 95       	ret

000009ac <TPI::set_sst(unsigned char)>:
_ZN3TPI7set_sstEh():
     9ac:	cf 93       	push	r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:106
  }
     9ae:	c8 2f       	mov	r28, r24
     9b0:	84 e6       	ldi	r24, 0x64	; 100
     9b2:	61 dd       	rcall	.-1342   	; 0x476 <PDI::send(unsigned char)>
     9b4:	88 23       	and	r24, r24
     9b6:	19 f0       	breq	.+6      	; 0x9be <TPI::set_sst(unsigned char)+0x12>
     9b8:	8c 2f       	mov	r24, r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:100
        && send(_addr >> 8);
  }

  bool get_sld (void) {
    D2PRINTF("[SLD]\r\n");
    return send(0x24) && recv();
     9ba:	cf 91       	pop	r28
     9bc:	de cf       	rjmp	.-68     	; 0x97a <PDI::send_byte(unsigned char) [clone .part.4]>
     9be:	80 e0       	ldi	r24, 0x00	; 0
     9c0:	cf 91       	pop	r28
     9c2:	08 95       	ret

000009c4 <TPI::get_sld()>:
_ZN3TPI7get_sldEv():
     9c4:	84 e2       	ldi	r24, 0x24	; 36
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:101
  }
     9c6:	57 dd       	rcall	.-1362   	; 0x476 <PDI::send(unsigned char)>
     9c8:	81 11       	cpse	r24, r1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:90
  bool get_sin (const uint8_t _addr) {
    D2PRINTF("[SIN:%02X]\r\n", _addr);
    return send(0x10 | _addr) && recv();
  }

  bool set_sstpr (const uint16_t _addr) {
     9ca:	54 cd       	rjmp	.-1368   	; 0x474 <PDI::recv_byte() [clone .part.3]>
     9cc:	80 e0       	ldi	r24, 0x00	; 0
     9ce:	08 95       	ret

000009d0 <TPI::set_sstpr(unsigned int)>:
_ZN3TPI9set_sstprEj():
     9d0:	cf 93       	push	r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:92
    D2PRINTF("[SSTPR:%04X]\r\n", _addr);
    return send(0x68)
     9d2:	df 93       	push	r29
     9d4:	d8 2f       	mov	r29, r24
     9d6:	c9 2f       	mov	r28, r25
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:95
        && send(_addr & 0xFF)
        && send(0x69)
        && send(_addr >> 8);
     9d8:	88 e6       	ldi	r24, 0x68	; 104
     9da:	4d dd       	rcall	.-1382   	; 0x476 <PDI::send(unsigned char)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:93
  }

  bool set_sstpr (const uint16_t _addr) {
    D2PRINTF("[SSTPR:%04X]\r\n", _addr);
    return send(0x68)
        && send(_addr & 0xFF)
     9dc:	88 23       	and	r24, r24
     9de:	61 f0       	breq	.+24     	; 0x9f8 <TPI::set_sstpr(unsigned int)+0x28>
     9e0:	8d 2f       	mov	r24, r29
     9e2:	49 dd       	rcall	.-1390   	; 0x476 <PDI::send(unsigned char)>
     9e4:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:94
        && send(0x69)
     9e6:	41 f0       	breq	.+16     	; 0x9f8 <TPI::set_sstpr(unsigned int)+0x28>
     9e8:	89 e6       	ldi	r24, 0x69	; 105
     9ea:	45 dd       	rcall	.-1398   	; 0x476 <PDI::send(unsigned char)>
     9ec:	88 23       	and	r24, r24
     9ee:	21 f0       	breq	.+8      	; 0x9f8 <TPI::set_sstpr(unsigned int)+0x28>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:95
        && send(_addr >> 8);
     9f0:	8c 2f       	mov	r24, r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:96
  }
     9f2:	df 91       	pop	r29
     9f4:	cf 91       	pop	r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:95
  bool set_sstpr (const uint16_t _addr) {
    D2PRINTF("[SSTPR:%04X]\r\n", _addr);
    return send(0x68)
        && send(_addr & 0xFF)
        && send(0x69)
        && send(_addr >> 8);
     9f6:	3f cd       	rjmp	.-1410   	; 0x476 <PDI::send(unsigned char)>
     9f8:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:96
  }
     9fa:	df 91       	pop	r29
     9fc:	cf 91       	pop	r28
     9fe:	08 95       	ret

00000a00 <TPI::idle_clock(unsigned int)>:
_ZN3TPI10idle_clockEj():
     a00:	30 e0       	ldi	r19, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:49
  };

  // MARK: TPI Low level

  void idle_clock (const size_t clock) {
    for (size_t i = 0; i < clock; i++) {
     a02:	20 e0       	ldi	r18, 0x00	; 0
     a04:	40 91 08 04 	lds	r20, 0x0408	; 0x800408 <__TEXT_REGION_LENGTH__+0x7f0408>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:50
      loop_until_bit_is_set(TCLK_IN, TCLK_bp);
     a08:	42 ff       	sbrs	r20, 2
     a0a:	fc cf       	rjmp	.-8      	; 0xa04 <TPI::idle_clock(unsigned int)+0x4>
     a0c:	40 91 08 04 	lds	r20, 0x0408	; 0x800408 <__TEXT_REGION_LENGTH__+0x7f0408>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:51
      loop_until_bit_is_clear(TCLK_IN, TCLK_bp);
     a10:	42 fd       	sbrc	r20, 2
     a12:	fc cf       	rjmp	.-8      	; 0xa0c <TPI::idle_clock(unsigned int)+0xc>
     a14:	2f 5f       	subi	r18, 0xFF	; 255
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:49
  };

  // MARK: TPI Low level

  void idle_clock (const size_t clock) {
    for (size_t i = 0; i < clock; i++) {
     a16:	3f 4f       	sbci	r19, 0xFF	; 255
     a18:	82 17       	cp	r24, r18
     a1a:	93 07       	cpc	r25, r19
     a1c:	99 f7       	brne	.-26     	; 0xa04 <TPI::idle_clock(unsigned int)+0x4>
     a1e:	08 95       	ret

00000a20 <SYS::get_vdd()>:
_ZN3SYS7get_vddEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:53
      loop_until_bit_is_set(TCLK_IN, TCLK_bp);
      loop_until_bit_is_clear(TCLK_IN, TCLK_bp);
    }
  }
     a20:	84 e1       	ldi	r24, 0x14	; 20
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:457
   * A delay of 1250us is required for the voltage to stabilize.
   * The result is 10-bit, so multiply by 10.0 to convert to 1V * 0.0001.
   * The ADC0 peripheral is operational only during voltage measurements.
   */
  uint16_t get_vdd (void) {
    CLKCTRL_MCLKTIMEBASE = F_CPU / 1000000.0;
     a22:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <__TEXT_REGION_LENGTH__+0x7f0066>
     a26:	8f ef       	ldi	r24, 0xFF	; 255
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:458
    ADC0_INTFLAGS = ~0;
     a28:	80 93 07 06 	sts	0x0607, r24	; 0x800607 <__TEXT_REGION_LENGTH__+0x7f0607>
     a2c:	10 92 0e 06 	sts	0x060E, r1	; 0x80060e <__TEXT_REGION_LENGTH__+0x7f060e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:459
    ADC0_SAMPLE = 0;
     a30:	10 92 0f 06 	sts	0x060F, r1	; 0x80060f <__TEXT_REGION_LENGTH__+0x7f060f>
     a34:	81 e0       	ldi	r24, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:460
    ADC0_CTRLA = ADC_ENABLE_bm;
     a36:	80 93 00 06 	sts	0x0600, r24	; 0x800600 <__TEXT_REGION_LENGTH__+0x7f0600>
     a3a:	80 93 01 06 	sts	0x0601, r24	; 0x800601 <__TEXT_REGION_LENGTH__+0x7f0601>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:461
    ADC0_CTRLB = ADC_PRESC_DIV4_gc;
     a3e:	84 e0       	ldi	r24, 0x04	; 4
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:462
    ADC0_CTRLC = ADC_REFSEL_1V024_gc;
     a40:	80 93 02 06 	sts	0x0602, r24	; 0x800602 <__TEXT_REGION_LENGTH__+0x7f0602>
     a44:	8a ef       	ldi	r24, 0xFA	; 250
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:463
    ADC0_CTRLE = 250; /* (SAMPDUR + 0.5) * fCLK_ADC sample duration */
     a46:	80 93 04 06 	sts	0x0604, r24	; 0x800604 <__TEXT_REGION_LENGTH__+0x7f0604>
     a4a:	84 e4       	ldi	r24, 0x44	; 68
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:464
    ADC0_MUXPOS = ADC_MUXPOS_VDDDIV10_gc; /* ADC channel VDD * 0.1 */
     a4c:	80 93 0b 06 	sts	0x060B, r24	; 0x80060b <__TEXT_REGION_LENGTH__+0x7f060b>
     a50:	80 91 08 06 	lds	r24, 0x0608	; 0x800608 <__TEXT_REGION_LENGTH__+0x7f0608>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:465
    loop_until_bit_is_clear(ADC0_STATUS, ADC_ADCBUSY_bp);
     a54:	80 fd       	sbrc	r24, 0
     a56:	fc cf       	rjmp	.-8      	; 0xa50 <SYS::get_vdd()+0x30>
     a58:	81 e1       	ldi	r24, 0x11	; 17
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:466
    ADC0_COMMAND = ADC_MODE_SINGLE_10BIT_gc | ADC_START_IMMEDIATE_gc;
     a5a:	80 93 0a 06 	sts	0x060A, r24	; 0x80060a <__TEXT_REGION_LENGTH__+0x7f060a>
     a5e:	80 91 07 06 	lds	r24, 0x0607	; 0x800607 <__TEXT_REGION_LENGTH__+0x7f0607>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:467
    loop_until_bit_is_set(ADC0_INTFLAGS, ADC_SAMPRDY_bp);
     a62:	81 ff       	sbrs	r24, 1
     a64:	fc cf       	rjmp	.-8      	; 0xa5e <SYS::get_vdd()+0x3e>
     a66:	20 91 0e 06 	lds	r18, 0x060E	; 0x80060e <__TEXT_REGION_LENGTH__+0x7f060e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:468
    uint16_t _adc_reading = ADC0_SAMPLE;
     a6a:	30 91 0f 06 	lds	r19, 0x060F	; 0x80060f <__TEXT_REGION_LENGTH__+0x7f060f>
     a6e:	c9 01       	movw	r24, r18
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:469
    _adc_reading += (_adc_reading << 3) + _adc_reading;
     a70:	43 e0       	ldi	r20, 0x03	; 3
     a72:	88 0f       	add	r24, r24
     a74:	99 1f       	adc	r25, r25
     a76:	4a 95       	dec	r20
     a78:	e1 f7       	brne	.-8      	; 0xa72 <SYS::get_vdd()+0x52>
     a7a:	22 0f       	add	r18, r18
     a7c:	33 1f       	adc	r19, r19
     a7e:	10 92 00 06 	sts	0x0600, r1	; 0x800600 <__TEXT_REGION_LENGTH__+0x7f0600>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:470
    ADC0_CTRLA = 0;
     a82:	82 0f       	add	r24, r18
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:472
    return _adc_reading;
  }
     a84:	93 1f       	adc	r25, r19
     a86:	08 95       	ret

00000a88 <SYS::is_boundary_flash_page(unsigned long)>:
_ZN3SYS22is_boundary_flash_pageEm():
     a88:	cf 92       	push	r12
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:439
   * Flash memory boundary check
   *
   * True when a page area address different from the previous time is detected.
   * Indicates the need to erase a page in FLASH/USERROW/BOOTROW of the AVR-Dx series.
   */
  bool is_boundary_flash_page (uint32_t _dwAddr) {
     a8a:	df 92       	push	r13
     a8c:	ef 92       	push	r14
     a8e:	ff 92       	push	r15
     a90:	ab 01       	movw	r20, r22
     a92:	bc 01       	movw	r22, r24
     a94:	80 91 3b 63 	lds	r24, 0x633B	; 0x80633b <Device_Descriptor+0x2d>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:440
    uint32_t _mask = ~(((uint16_t)Device_Descriptor.UPDI.flash_page_size_msb << 8)
     a98:	28 2f       	mov	r18, r24
     a9a:	30 e0       	ldi	r19, 0x00	; 0
     a9c:	32 2f       	mov	r19, r18
     a9e:	22 27       	eor	r18, r18
     aa0:	80 91 10 63 	lds	r24, 0x6310	; 0x806310 <Device_Descriptor+0x2>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:441
                                + Device_Descriptor.UPDI.flash_page_size - 1);
     aa4:	82 0f       	add	r24, r18
     aa6:	93 2f       	mov	r25, r19
     aa8:	91 1d       	adc	r25, r1
     aaa:	91 95       	neg	r25
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:440
   *
   * True when a page area address different from the previous time is detected.
   * Indicates the need to erase a page in FLASH/USERROW/BOOTROW of the AVR-Dx series.
   */
  bool is_boundary_flash_page (uint32_t _dwAddr) {
    uint32_t _mask = ~(((uint16_t)Device_Descriptor.UPDI.flash_page_size_msb << 8)
     aac:	81 95       	neg	r24
     aae:	91 09       	sbc	r25, r1
     ab0:	b0 e0       	ldi	r27, 0x00	; 0
     ab2:	a0 e0       	ldi	r26, 0x00	; 0
     ab4:	84 23       	and	r24, r20
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:442
                                + Device_Descriptor.UPDI.flash_page_size - 1);
    uint32_t _after_page = _dwAddr & _mask;
     ab6:	95 23       	and	r25, r21
     ab8:	a6 23       	and	r26, r22
     aba:	b7 23       	and	r27, r23
     abc:	21 e0       	ldi	r18, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:443
    bool _result = _before_page != _after_page;
     abe:	c0 90 cb 60 	lds	r12, 0x60CB	; 0x8060cb <_before_page>
     ac2:	d0 90 cc 60 	lds	r13, 0x60CC	; 0x8060cc <_before_page+0x1>
     ac6:	e0 90 cd 60 	lds	r14, 0x60CD	; 0x8060cd <_before_page+0x2>
     aca:	f0 90 ce 60 	lds	r15, 0x60CE	; 0x8060ce <_before_page+0x3>
     ace:	c8 16       	cp	r12, r24
     ad0:	d9 06       	cpc	r13, r25
     ad2:	ea 06       	cpc	r14, r26
     ad4:	fb 06       	cpc	r15, r27
     ad6:	09 f4       	brne	.+2      	; 0xada <SYS::is_boundary_flash_page(unsigned long)+0x52>
     ad8:	20 e0       	ldi	r18, 0x00	; 0
     ada:	80 93 cb 60 	sts	0x60CB, r24	; 0x8060cb <_before_page>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:444
    _before_page = _after_page;
     ade:	90 93 cc 60 	sts	0x60CC, r25	; 0x8060cc <_before_page+0x1>
     ae2:	a0 93 cd 60 	sts	0x60CD, r26	; 0x8060cd <_before_page+0x2>
     ae6:	b0 93 ce 60 	sts	0x60CE, r27	; 0x8060ce <_before_page+0x3>
     aea:	82 2f       	mov	r24, r18
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:446
    return _result;
  }
     aec:	ff 90       	pop	r15
     aee:	ef 90       	pop	r14
     af0:	df 90       	pop	r13
     af2:	cf 90       	pop	r12
     af4:	08 95       	ret

00000af6 <SYS::LED_Flash()>:
_ZN3SYS9LED_FlashEv():
     af6:	80 91 a1 60 	lds	r24, 0x60A1	; 0x8060a1 <_led_mode>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:286
      _led_mode = 1;
    }
  }

  void LED_TCB1 (uint8_t _mode, uint16_t _ccmp) {
    if (_led_mode != _mode) {
     afa:	82 30       	cpi	r24, 0x02	; 2
     afc:	81 f0       	breq	.+32     	; 0xb1e <SYS::LED_Flash()+0x28>
     afe:	10 92 00 0a 	sts	0x0A00, r1	; 0x800a00 <__TEXT_REGION_LENGTH__+0x7f0a00>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:287
      TCA0_SPLIT_CTRLA = 0;
     b02:	10 92 1a 0b 	sts	0x0B1A, r1	; 0x800b1a <__TEXT_REGION_LENGTH__+0x7f0b1a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:288
      TCB1_CNTL = 0;
     b06:	89 ea       	ldi	r24, 0xA9	; 169
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:289
      TCB1_CCMP = _ccmp;
     b08:	95 e0       	ldi	r25, 0x05	; 5
     b0a:	80 93 1c 0b 	sts	0x0B1C, r24	; 0x800b1c <__TEXT_REGION_LENGTH__+0x7f0b1c>
     b0e:	90 93 1d 0b 	sts	0x0B1D, r25	; 0x800b1d <__TEXT_REGION_LENGTH__+0x7f0b1d>
     b12:	8f e0       	ldi	r24, 0x0F	; 15
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:290
      TCB1_CTRLA = TCB_ENABLE_bm | TCB_CLKSEL_EVENT_gc;
     b14:	80 93 10 0b 	sts	0x0B10, r24	; 0x800b10 <__TEXT_REGION_LENGTH__+0x7f0b10>
     b18:	82 e0       	ldi	r24, 0x02	; 2
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:291
      _led_mode = _mode;
     b1a:	80 93 a1 60 	sts	0x60A1, r24	; 0x8060a1 <_led_mode>
     b1e:	08 95       	ret

00000b20 <SYS::LED_HeartBeat()>:
_ZN3SYS13LED_HeartBeatEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:304
     * Restarting TCBn in PWM8 mode may cause the duty
     * cycle of TCBn_WO to invert. Solution unknown.
     * This function is affected.
     */
    LED_TCB1(2, TCB1_FLASH);
  }
     b20:	80 91 a1 60 	lds	r24, 0x60A1	; 0x8060a1 <_led_mode>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:276
  * LED operation switching
  */

  /* Heartbeat (waiting) */
  void LED_HeartBeat (void) {
    if (_led_mode != 1) {
     b24:	81 30       	cpi	r24, 0x01	; 1
     b26:	89 f0       	breq	.+34     	; 0xb4a <SYS::LED_HeartBeat()+0x2a>
     b28:	8f e0       	ldi	r24, 0x0F	; 15
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:277
      TCA0_SPLIT_CTRLA = TCA_SPLIT_ENABLE_bm | TCA_SPLIT_CLKSEL_DIV1024_gc;
     b2a:	80 93 00 0a 	sts	0x0A00, r24	; 0x800a00 <__TEXT_REGION_LENGTH__+0x7f0a00>
     b2e:	10 92 1a 0b 	sts	0x0B1A, r1	; 0x800b1a <__TEXT_REGION_LENGTH__+0x7f0b1a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:278
      TCB1_CNTL = 0;
     b32:	84 ec       	ldi	r24, 0xC4	; 196
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:279
      TCB1_CCMP = TCB1_HBEAT;
     b34:	92 e6       	ldi	r25, 0x62	; 98
     b36:	80 93 1c 0b 	sts	0x0B1C, r24	; 0x800b1c <__TEXT_REGION_LENGTH__+0x7f0b1c>
     b3a:	90 93 1d 0b 	sts	0x0B1D, r25	; 0x800b1d <__TEXT_REGION_LENGTH__+0x7f0b1d>
     b3e:	85 e0       	ldi	r24, 0x05	; 5
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:280
      TCB1_CTRLA = TCB_ENABLE_bm | TCB_CLKSEL_TCA0_gc;
     b40:	80 93 10 0b 	sts	0x0B10, r24	; 0x800b10 <__TEXT_REGION_LENGTH__+0x7f0b10>
     b44:	81 e0       	ldi	r24, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:281
      _led_mode = 1;
     b46:	80 93 a1 60 	sts	0x60A1, r24	; 0x8060a1 <_led_mode>
     b4a:	08 95       	ret

00000b4c <USART::change_vcp()>:
_ZN5USART10change_vcpEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:283
    }
  }
     b4c:	cf 92       	push	r12
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:144
    #endif
  }

  /*** Activates VCP operation. ***/
  /* Detailed parameters are specified in SET_LINE_ENCODING. */
  void change_vcp (void) {
     b4e:	df 92       	push	r13
     b50:	ef 92       	push	r14
     b52:	ff 92       	push	r15
     b54:	cf 93       	push	r28
     b56:	df 93       	push	r29
     b58:	00 d0       	rcall	.+0      	; 0xb5a <USART::change_vcp()+0xe>
     b5a:	00 d0       	rcall	.+0      	; 0xb5c <USART::change_vcp()+0x10>
     b5c:	cd b7       	in	r28, 0x3d	; 61
     b5e:	de b7       	in	r29, 0x3e	; 62
     b60:	20 91 a2 60 	lds	r18, 0x60A2	; 0x8060a2 <_set_line_encoding>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:146
    uint8_t _ctrlb = USART_RXEN_bm | USART_TXEN_bm | USART_ODME_bm;
    uint32_t _baud = _set_line_encoding.dwDTERate;
     b64:	30 91 a3 60 	lds	r19, 0x60A3	; 0x8060a3 <_set_line_encoding+0x1>
     b68:	40 91 a4 60 	lds	r20, 0x60A4	; 0x8060a4 <_set_line_encoding+0x2>
     b6c:	50 91 a5 60 	lds	r21, 0x60A5	; 0x8060a5 <_set_line_encoding+0x3>
     b70:	21 15       	cp	r18, r1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:148
    /* If the BAUD value is small, select double speed mode. */
    if (_baud) _baud = (((F_CPU * 8L) / _baud) + 1) >> 1;
     b72:	31 05       	cpc	r19, r1
     b74:	41 05       	cpc	r20, r1
     b76:	51 05       	cpc	r21, r1
     b78:	a1 f0       	breq	.+40     	; 0xba2 <USART::change_vcp()+0x56>
     b7a:	60 e0       	ldi	r22, 0x00	; 0
     b7c:	78 e6       	ldi	r23, 0x68	; 104
     b7e:	89 e8       	ldi	r24, 0x89	; 137
     b80:	99 e0       	ldi	r25, 0x09	; 9
     b82:	0e 94 fc 1a 	call	0x35f8	; 0x35f8 <__udivmodsi4>
     b86:	2f 5f       	subi	r18, 0xFF	; 255
     b88:	3f 4f       	sbci	r19, 0xFF	; 255
     b8a:	4f 4f       	sbci	r20, 0xFF	; 255
     b8c:	5f 4f       	sbci	r21, 0xFF	; 255
     b8e:	56 95       	lsr	r21
     b90:	47 95       	ror	r20
     b92:	37 95       	ror	r19
     b94:	27 95       	ror	r18
     b96:	a8 ec       	ldi	r26, 0xC8	; 200
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:145
  }

  /*** Activates VCP operation. ***/
  /* Detailed parameters are specified in SET_LINE_ENCODING. */
  void change_vcp (void) {
    uint8_t _ctrlb = USART_RXEN_bm | USART_TXEN_bm | USART_ODME_bm;
     b98:	20 36       	cpi	r18, 0x60	; 96
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:149
    uint32_t _baud = _set_line_encoding.dwDTERate;
    /* If the BAUD value is small, select double speed mode. */
    if (_baud) _baud = (((F_CPU * 8L) / _baud) + 1) >> 1;
    if (_baud < 96) {
     b9a:	31 05       	cpc	r19, r1
     b9c:	41 05       	cpc	r20, r1
     b9e:	51 05       	cpc	r21, r1
     ba0:	28 f4       	brcc	.+10     	; 0xbac <USART::change_vcp()+0x60>
     ba2:	22 0f       	add	r18, r18
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:150
      _baud <<= 1;
     ba4:	33 1f       	adc	r19, r19
     ba6:	44 1f       	adc	r20, r20
     ba8:	55 1f       	adc	r21, r21
     baa:	aa ec       	ldi	r26, 0xCA	; 202
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:151
      _ctrlb |= USART_RXMODE_CLK2X_gc;
     bac:	69 01       	movw	r12, r18
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:154
    }
    D1PRINTF(" BAUD=%08lX:%02X\r\n", _baud, _ctrlb);
    if (_baud < 0x10000UL && _baud >= 64) {
     bae:	7a 01       	movw	r14, r20
     bb0:	80 e4       	ldi	r24, 0x40	; 64
     bb2:	c8 1a       	sub	r12, r24
     bb4:	d1 08       	sbc	r13, r1
     bb6:	e1 08       	sbc	r14, r1
     bb8:	f1 08       	sbc	r15, r1
     bba:	80 ec       	ldi	r24, 0xC0	; 192
     bbc:	c8 16       	cp	r12, r24
     bbe:	8f ef       	ldi	r24, 0xFF	; 255
     bc0:	d8 06       	cpc	r13, r24
     bc2:	e1 04       	cpc	r14, r1
     bc4:	f1 04       	cpc	r15, r1
     bc6:	c0 f5       	brcc	.+112    	; 0xc38 <USART::change_vcp()+0xec>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:155
      uint8_t _bits = _set_line_encoding.bDataBits - 5;
     bc8:	90 91 a8 60 	lds	r25, 0x60A8	; 0x8060a8 <_set_line_encoding+0x6>
     bcc:	95 50       	subi	r25, 0x05	; 5
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:156
      uint8_t _ctrlc = (uint8_t[]){
     bce:	c0 90 2a 60 	lds	r12, 0x602A	; 0x80602a <UPDI::_set_ptr24+0x6>
     bd2:	d0 90 2b 60 	lds	r13, 0x602B	; 0x80602b <UPDI::_set_ptr24+0x7>
     bd6:	e0 90 2c 60 	lds	r14, 0x602C	; 0x80602c <UPDI::_set_ptr24+0x8>
     bda:	f0 90 2d 60 	lds	r15, 0x602D	; 0x80602d <UPDI::_set_ptr24+0x9>
     bde:	c9 82       	std	Y+1, r12	; 0x01
     be0:	da 82       	std	Y+2, r13	; 0x02
     be2:	eb 82       	std	Y+3, r14	; 0x03
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:158
        USART_PMODE_DISABLED_gc, USART_PMODE_ODD_gc, USART_PMODE_EVEN_gc, USART_PMODE_DISABLED_gc
      }[_set_line_encoding.bParityType & 3]
     be4:	fc 82       	std	Y+4, r15	; 0x04
     be6:	e0 91 a7 60 	lds	r30, 0x60A7	; 0x8060a7 <_set_line_encoding+0x5>
     bea:	e3 70       	andi	r30, 0x03	; 3
     bec:	ec 0f       	add	r30, r28
     bee:	fd 2f       	mov	r31, r29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:159
      + _set_line_encoding.bCharFormat ? USART_SBMODE_2BIT_gc : USART_SBMODE_1BIT_gc;
     bf0:	f1 1d       	adc	r31, r1
     bf2:	61 81       	ldd	r22, Z+1	; 0x01
     bf4:	80 91 a6 60 	lds	r24, 0x60A6	; 0x8060a6 <_set_line_encoding+0x4>
     bf8:	68 0f       	add	r22, r24
     bfa:	77 27       	eor	r23, r23
     bfc:	77 1f       	adc	r23, r23
     bfe:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:160
      if (_bits < 4) {
     c00:	67 2b       	or	r22, r23
     c02:	09 f0       	breq	.+2      	; 0xc06 <USART::change_vcp()+0xba>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:161
        _ctrlc += _bits; /* USART_CHSIZE_[5,6,7,8]BIT_gc */
     c04:	88 e0       	ldi	r24, 0x08	; 8
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:176
      }
      else {
        _ctrlc += USART_CHSIZE_8BIT_gc;
        #endif
      }
      ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
     c06:	94 30       	cpi	r25, 0x04	; 4
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:50
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
     c08:	30 f5       	brcc	.+76     	; 0xc56 <USART::change_vcp()+0x10a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:177
        PORTMUX_USARTROUTEA = PORTMUX_USART_VCP;
     c0a:	89 0f       	add	r24, r25
     c0c:	9f b7       	in	r25, 0x3f	; 63
__iCliRetVal():
     c0e:	f8 94       	cli
_ZN5USART10change_vcpEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:178
        USART0_STATUS = USART_DREIF_bm;
     c10:	62 e1       	ldi	r22, 0x12	; 18
     c12:	60 93 e2 05 	sts	0x05E2, r22	; 0x8005e2 <__TEXT_REGION_LENGTH__+0x7f05e2>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:179
        USART0_BAUD = (uint16_t)_baud;
     c16:	60 e2       	ldi	r22, 0x20	; 32
     c18:	60 93 04 08 	sts	0x0804, r22	; 0x800804 <__TEXT_REGION_LENGTH__+0x7f0804>
     c1c:	20 93 08 08 	sts	0x0808, r18	; 0x800808 <__TEXT_REGION_LENGTH__+0x7f0808>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:180
        USART0_CTRLC = _ctrlc;
     c20:	30 93 09 08 	sts	0x0809, r19	; 0x800809 <__TEXT_REGION_LENGTH__+0x7f0809>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:181
        USART0_CTRLA = USART_RXCIF_bm;
     c24:	80 93 07 08 	sts	0x0807, r24	; 0x800807 <__TEXT_REGION_LENGTH__+0x7f0807>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:182
        USART0_CTRLB = _ctrlb;
     c28:	80 e8       	ldi	r24, 0x80	; 128
     c2a:	80 93 05 08 	sts	0x0805, r24	; 0x800805 <__TEXT_REGION_LENGTH__+0x7f0805>
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:70
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
     c2e:	a0 93 06 08 	sts	0x0806, r26	; 0x800806 <__TEXT_REGION_LENGTH__+0x7f0806>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:186
        bit_set(GPCONF, GPCONF_VCP_bp);
      }
      D1PRINTF(" USART=VCP\r\n");
      drain();
     c32:	f1 9a       	sbi	0x1e, 1	; 30
__iRestore():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:192
    }
    else {
      /* If outside the supported range, the USART will remain in the BREAK state. */
      D1PRINTF(" VCP=FAIL\r\n");
    }
    GPCONF &= ~(GPCONF_HLD_bm | GPCONF_RIS_bm | GPCONF_FAL_bm);
     c34:	9f bf       	out	0x3f, r25	; 63
_ZN5USART10change_vcpEv():
     c36:	25 db       	rcall	.-2486   	; 0x282 <USART::drain(unsigned int) [clone .constprop.11]>
     c38:	8e b3       	in	r24, 0x1e	; 30
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:193
    if (bit_is_set(GPCONF, GPCONF_USB_bp))
     c3a:	8f 71       	andi	r24, 0x1F	; 31
     c3c:	8e bb       	out	0x1e, r24	; 30
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:197
      SYS::LED_HeartBeat();
    else
      SYS::LED_Flash();
  }
     c3e:	f0 9b       	sbis	0x1e, 0	; 30
     c40:	0c c0       	rjmp	.+24     	; 0xc5a <USART::change_vcp()+0x10e>
     c42:	24 96       	adiw	r28, 0x04	; 4
     c44:	cd bf       	out	0x3d, r28	; 61
     c46:	de bf       	out	0x3e, r29	; 62
     c48:	df 91       	pop	r29
     c4a:	cf 91       	pop	r28
     c4c:	ff 90       	pop	r15
     c4e:	ef 90       	pop	r14
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:194
      /* If outside the supported range, the USART will remain in the BREAK state. */
      D1PRINTF(" VCP=FAIL\r\n");
    }
    GPCONF &= ~(GPCONF_HLD_bm | GPCONF_RIS_bm | GPCONF_FAL_bm);
    if (bit_is_set(GPCONF, GPCONF_USB_bp))
      SYS::LED_HeartBeat();
     c50:	df 90       	pop	r13
     c52:	cf 90       	pop	r12
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:173
        usart_receiver    = &USB::vcp_receiver_9bit;
        usart_transmitter = &USB::vcp_transceiver_9bit;
        #else
      }
      else {
        _ctrlc += USART_CHSIZE_8BIT_gc;
     c54:	65 cf       	rjmp	.-310    	; 0xb20 <SYS::LED_HeartBeat()>
     c56:	8d 5f       	subi	r24, 0xFD	; 253
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:197
    GPCONF &= ~(GPCONF_HLD_bm | GPCONF_RIS_bm | GPCONF_FAL_bm);
    if (bit_is_set(GPCONF, GPCONF_USB_bp))
      SYS::LED_HeartBeat();
    else
      SYS::LED_Flash();
  }
     c58:	d9 cf       	rjmp	.-78     	; 0xc0c <USART::change_vcp()+0xc0>
     c5a:	24 96       	adiw	r28, 0x04	; 4
     c5c:	cd bf       	out	0x3d, r28	; 61
     c5e:	de bf       	out	0x3e, r29	; 62
     c60:	df 91       	pop	r29
     c62:	cf 91       	pop	r28
     c64:	ff 90       	pop	r15
     c66:	ef 90       	pop	r14
     c68:	df 90       	pop	r13
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:196
    }
    GPCONF &= ~(GPCONF_HLD_bm | GPCONF_RIS_bm | GPCONF_FAL_bm);
    if (bit_is_set(GPCONF, GPCONF_USB_bp))
      SYS::LED_HeartBeat();
    else
      SYS::LED_Flash();
     c6a:	cf 90       	pop	r12
     c6c:	44 cf       	rjmp	.-376    	; 0xaf6 <SYS::LED_Flash()>

00000c6e <USB::break_off()>:
_ZN3USB9break_offEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:365
    bit_set(GPCONF, GPCONF_BRK_bp);
  }

  void break_off (void) {
    if (bit_is_set(GPCONF, GPCONF_VCP_bp)
     && bit_is_set(GPCONF, GPCONF_BRK_bp)) {
     c6e:	f1 9b       	sbis	0x1e, 1	; 30
     c70:	04 c0       	rjmp	.+8      	; 0xc7a <USB::break_off()+0xc>
     c72:	f3 9b       	sbis	0x1e, 3	; 30
     c74:	02 c0       	rjmp	.+4      	; 0xc7a <USB::break_off()+0xc>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:366
      USART::change_vcp();
     c76:	6a df       	rcall	.-300    	; 0xb4c <USART::change_vcp()>
     c78:	f4 9a       	sbi	0x1e, 4	; 30
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:367
      bit_set(GPCONF, GPCONF_OPN_bp);
     c7a:	f3 98       	cbi	0x1e, 3	; 30
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:369
    }
    bit_clear(GPCONF, GPCONF_BRK_bp);
     c7c:	08 95       	ret

00000c7e <PDI::get_mtype_offset(unsigned char)>:
_ZN3PDI16get_mtype_offsetEh():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:370
  }
     c7e:	82 32       	cpi	r24, 0x22	; 34
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:190
  }

  // MARK: PDI NVM API

  uint32_t get_mtype_offset (uint8_t m_type) {
    if      (m_type == 0x22) return Device_Descriptor.Xmega.nvm_eeprom_offset;    /* MTYPE_EEPROM (EEPROM) */
     c80:	49 f4       	brne	.+18     	; 0xc94 <PDI::get_mtype_offset(unsigned char)+0x16>
     c82:	60 91 16 63 	lds	r22, 0x6316	; 0x806316 <Device_Descriptor+0x8>
     c86:	70 91 17 63 	lds	r23, 0x6317	; 0x806317 <Device_Descriptor+0x9>
     c8a:	80 91 18 63 	lds	r24, 0x6318	; 0x806318 <Device_Descriptor+0xa>
     c8e:	90 91 19 63 	lds	r25, 0x6319	; 0x806319 <Device_Descriptor+0xb>
     c92:	08 95       	ret
     c94:	80 3b       	cpi	r24, 0xB0	; 176
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:191
    else if (m_type == 0xB0) return Device_Descriptor.Xmega.nvm_boot_offset;      /* MTYPE_FLASH_PAGE (BOOTCODE) */
     c96:	49 f4       	brne	.+18     	; 0xcaa <PDI::get_mtype_offset(unsigned char)+0x2c>
     c98:	60 91 12 63 	lds	r22, 0x6312	; 0x806312 <Device_Descriptor+0x4>
     c9c:	70 91 13 63 	lds	r23, 0x6313	; 0x806313 <Device_Descriptor+0x5>
     ca0:	80 91 14 63 	lds	r24, 0x6314	; 0x806314 <Device_Descriptor+0x6>
     ca4:	90 91 15 63 	lds	r25, 0x6315	; 0x806315 <Device_Descriptor+0x7>
     ca8:	08 95       	ret
     caa:	81 3b       	cpi	r24, 0xB1	; 177
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:192
    else if (m_type == 0xB1) return Device_Descriptor.Xmega.nvm_eeprom_offset;    /* MTYPE_EEPROM_PAGE (EEPROM) */
     cac:	51 f3       	breq	.-44     	; 0xc82 <PDI::get_mtype_offset(unsigned char)+0x4>
     cae:	82 3b       	cpi	r24, 0xB2	; 178
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:193
    else if (m_type == 0xB2) return Device_Descriptor.Xmega.nvm_fuse_offset;      /* MTYPE_FUSE_BITS (FUSE) */
     cb0:	49 f4       	brne	.+18     	; 0xcc4 <PDI::get_mtype_offset(unsigned char)+0x46>
     cb2:	60 91 1a 63 	lds	r22, 0x631A	; 0x80631a <Device_Descriptor+0xc>
     cb6:	70 91 1b 63 	lds	r23, 0x631B	; 0x80631b <Device_Descriptor+0xd>
     cba:	80 91 1c 63 	lds	r24, 0x631C	; 0x80631c <Device_Descriptor+0xe>
     cbe:	90 91 1d 63 	lds	r25, 0x631D	; 0x80631d <Device_Descriptor+0xf>
     cc2:	08 95       	ret
     cc4:	83 3b       	cpi	r24, 0xB3	; 179
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:194
    else if (m_type == 0xB3) return Device_Descriptor.Xmega.nvm_lock_offset;      /* MTYPE_LOCK_BITS (LOCK) */
     cc6:	49 f4       	brne	.+18     	; 0xcda <PDI::get_mtype_offset(unsigned char)+0x5c>
     cc8:	60 91 1e 63 	lds	r22, 0x631E	; 0x80631e <Device_Descriptor+0x10>
     ccc:	70 91 1f 63 	lds	r23, 0x631F	; 0x80631f <Device_Descriptor+0x11>
     cd0:	80 91 20 63 	lds	r24, 0x6320	; 0x806320 <Device_Descriptor+0x12>
     cd4:	90 91 21 63 	lds	r25, 0x6321	; 0x806321 <Device_Descriptor+0x13>
     cd8:	08 95       	ret
     cda:	84 3b       	cpi	r24, 0xB4	; 180
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:195
    else if (m_type == 0xB4) return Device_Descriptor.Xmega.nvm_data_offset
     cdc:	89 f4       	brne	.+34     	; 0xd00 <PDI::get_mtype_offset(unsigned char)+0x82>
     cde:	20 91 3b 63 	lds	r18, 0x633B	; 0x80633b <Device_Descriptor+0x2d>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:196
                                  + Device_Descriptor.Xmega.mcu_base_addr;        /* MTYPE_SIGN_JTAG */
     ce2:	30 91 3c 63 	lds	r19, 0x633C	; 0x80633c <Device_Descriptor+0x2e>
     ce6:	60 91 2a 63 	lds	r22, 0x632A	; 0x80632a <Device_Descriptor+0x1c>
     cea:	70 91 2b 63 	lds	r23, 0x632B	; 0x80632b <Device_Descriptor+0x1d>
     cee:	80 91 2c 63 	lds	r24, 0x632C	; 0x80632c <Device_Descriptor+0x1e>
     cf2:	90 91 2d 63 	lds	r25, 0x632D	; 0x80632d <Device_Descriptor+0x1f>
     cf6:	62 0f       	add	r22, r18
     cf8:	73 1f       	adc	r23, r19
     cfa:	81 1d       	adc	r24, r1
     cfc:	91 1d       	adc	r25, r1
     cfe:	08 95       	ret
     d00:	80 3c       	cpi	r24, 0xC0	; 192
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:197
    else if (m_type == 0xC0) return Device_Descriptor.Xmega.nvm_app_offset;       /* MTYPE_FLASH (APPCODE) */
     d02:	49 f4       	brne	.+18     	; 0xd16 <PDI::get_mtype_offset(unsigned char)+0x98>
     d04:	60 91 0e 63 	lds	r22, 0x630E	; 0x80630e <Device_Descriptor>
     d08:	70 91 0f 63 	lds	r23, 0x630F	; 0x80630f <Device_Descriptor+0x1>
     d0c:	80 91 10 63 	lds	r24, 0x6310	; 0x806310 <Device_Descriptor+0x2>
     d10:	90 91 11 63 	lds	r25, 0x6311	; 0x806311 <Device_Descriptor+0x3>
     d14:	08 95       	ret
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:198
    else if (m_type == 0xC1) return Device_Descriptor.Xmega.nvm_boot_offset;      /* MTYPE_BOOT_FLASH (BOOTCODE) */
     d16:	81 3c       	cpi	r24, 0xC1	; 193
     d18:	09 f4       	brne	.+2      	; 0xd1c <PDI::get_mtype_offset(unsigned char)+0x9e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:199
    else if (m_type == 0xC4) return Device_Descriptor.Xmega.nvm_eeprom_offset;    /* MTYPE_EEPROM_XMEGA (EEPROM) */
     d1a:	be cf       	rjmp	.-132    	; 0xc98 <PDI::get_mtype_offset(unsigned char)+0x1a>
     d1c:	84 3c       	cpi	r24, 0xC4	; 196
     d1e:	09 f4       	brne	.+2      	; 0xd22 <PDI::get_mtype_offset(unsigned char)+0xa4>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:200
    else if (m_type == 0xC5) return Device_Descriptor.Xmega.nvm_user_sig_offset;  /* MTYPE_USERSIG (USERROW) */
     d20:	b0 cf       	rjmp	.-160    	; 0xc82 <PDI::get_mtype_offset(unsigned char)+0x4>
     d22:	85 3c       	cpi	r24, 0xC5	; 197
     d24:	49 f4       	brne	.+18     	; 0xd38 <PDI::get_mtype_offset(unsigned char)+0xba>
     d26:	60 91 22 63 	lds	r22, 0x6322	; 0x806322 <Device_Descriptor+0x14>
     d2a:	70 91 23 63 	lds	r23, 0x6323	; 0x806323 <Device_Descriptor+0x15>
     d2e:	80 91 24 63 	lds	r24, 0x6324	; 0x806324 <Device_Descriptor+0x16>
     d32:	90 91 25 63 	lds	r25, 0x6325	; 0x806325 <Device_Descriptor+0x17>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:201
    else if (m_type == 0xC6) return Device_Descriptor.Xmega.nvm_prod_sig_offset;  /* MTYPE_PRODSIG (PRODSIG) */
     d36:	08 95       	ret
     d38:	86 3c       	cpi	r24, 0xC6	; 198
     d3a:	49 f4       	brne	.+18     	; 0xd4e <PDI::get_mtype_offset(unsigned char)+0xd0>
     d3c:	60 91 26 63 	lds	r22, 0x6326	; 0x806326 <Device_Descriptor+0x18>
     d40:	70 91 27 63 	lds	r23, 0x6327	; 0x806327 <Device_Descriptor+0x19>
     d44:	80 91 28 63 	lds	r24, 0x6328	; 0x806328 <Device_Descriptor+0x1a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:202
    else                     return Device_Descriptor.Xmega.nvm_data_offset;
     d48:	90 91 29 63 	lds	r25, 0x6329	; 0x806329 <Device_Descriptor+0x1b>
     d4c:	08 95       	ret
     d4e:	60 91 2a 63 	lds	r22, 0x632A	; 0x80632a <Device_Descriptor+0x1c>
     d52:	70 91 2b 63 	lds	r23, 0x632B	; 0x80632b <Device_Descriptor+0x1d>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:77
  };

  // MARK: PDI Low level

  bool idle_clock (const size_t clock) {
    for (size_t i = 0; i < clock; i++) {
     d56:	80 91 2c 63 	lds	r24, 0x632C	; 0x80632c <Device_Descriptor+0x1e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:78
      loop_until_bit_is_set(PCLK_IN, PCLK_bp);
     d5a:	90 91 2d 63 	lds	r25, 0x632D	; 0x80632d <Device_Descriptor+0x1f>
     d5e:	08 95       	ret

00000d60 <PDI::idle_clock(unsigned int)>:
_ZN3PDI10idle_clockEj():
     d60:	30 e0       	ldi	r19, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:79
      loop_until_bit_is_clear(PCLK_IN, PCLK_bp);
     d62:	20 e0       	ldi	r18, 0x00	; 0
     d64:	40 91 08 04 	lds	r20, 0x0408	; 0x800408 <__TEXT_REGION_LENGTH__+0x7f0408>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:77
  };

  // MARK: PDI Low level

  bool idle_clock (const size_t clock) {
    for (size_t i = 0; i < clock; i++) {
     d68:	46 ff       	sbrs	r20, 6
     d6a:	fc cf       	rjmp	.-8      	; 0xd64 <PDI::idle_clock(unsigned int)+0x4>
     d6c:	40 91 08 04 	lds	r20, 0x0408	; 0x800408 <__TEXT_REGION_LENGTH__+0x7f0408>
     d70:	46 fd       	sbrc	r20, 6
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:82
      loop_until_bit_is_set(PCLK_IN, PCLK_bp);
      loop_until_bit_is_clear(PCLK_IN, PCLK_bp);
    }
    return true;
  }
     d72:	fc cf       	rjmp	.-8      	; 0xd6c <PDI::idle_clock(unsigned int)+0xc>
     d74:	2f 5f       	subi	r18, 0xFF	; 255
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:98
    }
    return true;
  }

  bool stop_txd (void) {
    if (bit_is_set(PGCONF, PGCONF_XDIR_bp)) {
     d76:	3f 4f       	sbci	r19, 0xFF	; 255
     d78:	82 17       	cp	r24, r18
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:99
      idle_clock(1);
     d7a:	93 07       	cpc	r25, r19
     d7c:	99 f7       	brne	.-26     	; 0xd64 <PDI::idle_clock(unsigned int)+0x4>
     d7e:	81 e0       	ldi	r24, 0x01	; 1
     d80:	08 95       	ret

00000d82 <PDI::stop_txd()>:
_ZN3PDI8stop_txdEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:100
      pinLogicOpen(PIN_PGM_PDAT);
     d82:	fb 9b       	sbis	0x1f, 3	; 31
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:101
      USART0_CTRLB = USART_RXEN_bm | USART_ODME_bm;
     d84:	08 c0       	rjmp	.+16     	; 0xd96 <PDI::stop_txd()+0x14>
     d86:	81 e0       	ldi	r24, 0x01	; 1
     d88:	90 e0       	ldi	r25, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:102
      bit_clear(PGCONF, PGCONF_XDIR_bp);
     d8a:	ea df       	rcall	.-44     	; 0xd60 <PDI::idle_clock(unsigned int)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:105
    }
    return true;
  }
     d8c:	04 98       	cbi	0x00, 4	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:128
    // D2PRINTF("(%02X:%02X)", RXSTAT, RXDATA);
    return RXSTAT == 0;
  }

  bool recv_byte (void) {
    return stop_txd() && recv();
     d8e:	88 e8       	ldi	r24, 0x88	; 136
     d90:	80 93 06 08 	sts	0x0806, r24	; 0x800806 <__TEXT_REGION_LENGTH__+0x7f0806>
     d94:	fb 98       	cbi	0x1f, 3	; 31
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:129
  }
     d96:	81 e0       	ldi	r24, 0x01	; 1
     d98:	08 95       	ret

00000d9a <PDI::recv_byte()>:
_ZN3PDI9recv_byteEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:87
  }

  /* To run push-pull TxD in single-wire mode with loopback, */
  /* controlling the USART becomes a bit more complicated.   */
  bool start_txd (void) {
    if (bit_is_clear(PGCONF, PGCONF_XDIR_bp)) {
     d9a:	f3 df       	rcall	.-26     	; 0xd82 <PDI::stop_txd()>
     d9c:	81 11       	cpse	r24, r1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:88
      idle_clock(1);
     d9e:	6a cb       	rjmp	.-2348   	; 0x474 <PDI::recv_byte() [clone .part.3]>
     da0:	80 e0       	ldi	r24, 0x00	; 0
     da2:	08 95       	ret

00000da4 <PDI::start_txd()>:
_ZN3PDI9start_txdEv():
     da4:	fb 99       	sbic	0x1f, 3	; 31
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:89
      digitalWriteMacro(PIN_PGM_PDAT, HIGH);
     da6:	09 c0       	rjmp	.+18     	; 0xdba <PDI::start_txd()+0x16>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:90
      pinLogicPush(PIN_PGM_PDAT);
     da8:	81 e0       	ldi	r24, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:91
      USART0_CTRLB = USART_RXEN_bm | USART_TXEN_bm;
     daa:	90 e0       	ldi	r25, 0x00	; 0
     dac:	d9 df       	rcall	.-78     	; 0xd60 <PDI::idle_clock(unsigned int)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:92
      bit_set(PGCONF, PGCONF_XDIR_bp);
     dae:	0c 9a       	sbi	0x01, 4	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:95
    }
    return true;
  }
     db0:	04 9a       	sbi	0x00, 4	; 0
     db2:	80 ec       	ldi	r24, 0xC0	; 192
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:178
  }

  bool pdibus_wait (void) {
    do {
      /* ACC STATUS check */
      idle_clock(2);
     db4:	80 93 06 08 	sts	0x0806, r24	; 0x800806 <__TEXT_REGION_LENGTH__+0x7f0806>
     db8:	fb 9a       	sbi	0x1f, 3	; 31
     dba:	81 e0       	ldi	r24, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:156
    USART0_TXDATAL = _data;
    return recv() && _data == RXDATA;
  }

  bool send_byte (const uint8_t _data) {
    return start_txd() && send(_data);
     dbc:	08 95       	ret

00000dbe <PDI::pdibus_wait()>:
_ZN3PDI11pdibus_waitEv():
     dbe:	82 e0       	ldi	r24, 0x02	; 2
     dc0:	90 e0       	ldi	r25, 0x00	; 0
     dc2:	ce df       	rcall	.-100    	; 0xd60 <PDI::idle_clock(unsigned int)>
send_byte():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:184
      if (send_byte(0x80)) {
        if (recv_byte() && bit_is_set(RXDATA, 1)) return true;
      }
      else break;
    } while (true);
    return false;
     dc4:	ef df       	rcall	.-34     	; 0xda4 <PDI::start_txd()>
     dc6:	81 11       	cpse	r24, r1
     dc8:	02 c0       	rjmp	.+4      	; 0xdce <PDI::pdibus_wait()+0x10>
_ZN3PDI11pdibus_waitEv():
     dca:	80 e0       	ldi	r24, 0x00	; 0
     dcc:	08 95       	ret
send_byte():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:179

  bool pdibus_wait (void) {
    do {
      /* ACC STATUS check */
      idle_clock(2);
      if (send_byte(0x80)) {
     dce:	80 e8       	ldi	r24, 0x80	; 128
     dd0:	d4 dd       	rcall	.-1112   	; 0x97a <PDI::send_byte(unsigned char) [clone .part.4]>
_ZN3PDI11pdibus_waitEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:180
        if (recv_byte() && bit_is_set(RXDATA, 1)) return true;
     dd2:	88 23       	and	r24, r24
     dd4:	d1 f3       	breq	.-12     	; 0xdca <PDI::pdibus_wait()+0xc>
     dd6:	e1 df       	rcall	.-62     	; 0xd9a <PDI::recv_byte()>
     dd8:	88 23       	and	r24, r24
     dda:	89 f3       	breq	.-30     	; 0xdbe <PDI::pdibus_wait()>
     ddc:	e9 9b       	sbis	0x1d, 1	; 29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:185
      }
      else break;
    } while (true);
    return false;
  }
     dde:	ef cf       	rjmp	.-34     	; 0xdbe <PDI::pdibus_wait()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:167
    };
    _CAPS32(_set_ptr[1])->dword = _dwAddr;
    return send_bytes(_set_ptr, sizeof(_set_ptr)) && send(_data);
  }

  bool send_bytes (const uint8_t* _data, size_t _len) {
     de0:	08 95       	ret

00000de2 <PDI::send_bytes(unsigned char const*, unsigned int)>:
_ZN3PDI10send_bytesEPKhj():
     de2:	ef 92       	push	r14
     de4:	ff 92       	push	r15
     de6:	0f 93       	push	r16
     de8:	1f 93       	push	r17
     dea:	cf 93       	push	r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:168
    start_txd();
     dec:	df 93       	push	r29
     dee:	7c 01       	movw	r14, r24
     df0:	8b 01       	movw	r16, r22
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:170
    do {
      if (!send(*_data++)) return false;
     df2:	d8 df       	rcall	.-80     	; 0xda4 <PDI::start_txd()>
     df4:	e7 01       	movw	r28, r14
     df6:	89 91       	ld	r24, Y+
     df8:	3e db       	rcall	.-2436   	; 0x476 <PDI::send(unsigned char)>
     dfa:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:171
    } while (--_len);
     dfc:	19 f0       	breq	.+6      	; 0xe04 <PDI::send_bytes(unsigned char const*, unsigned int)+0x22>
     dfe:	01 50       	subi	r16, 0x01	; 1
     e00:	11 09       	sbc	r17, r1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:173
    return true;
  }
     e02:	c9 f7       	brne	.-14     	; 0xdf6 <PDI::send_bytes(unsigned char const*, unsigned int)+0x14>
     e04:	df 91       	pop	r29
     e06:	cf 91       	pop	r28
     e08:	1f 91       	pop	r17
     e0a:	0f 91       	pop	r16
     e0c:	ff 90       	pop	r15
     e0e:	ef 90       	pop	r14
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:368
    if (bit_is_set(PGCONF, PGCONF_UPDI_bp)) return 1;
    return send_bytes(_leave, sizeof(_leave));
  }

  size_t enter_progmode (void) {
    if (bit_is_set(PGCONF, PGCONF_PROG_bp)) return 1;
     e10:	08 95       	ret

00000e12 <PDI::enter_progmode()>:
_ZN3PDI14enter_progmodeEv():
     e12:	f9 99       	sbic	0x1f, 1	; 31
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:371

    /* Enter NVMPROGKEY */
    if (send_bytes(nvmprog_key, sizeof(nvmprog_key)) && pdibus_wait()) {
     e14:	0e c0       	rjmp	.+28     	; 0xe32 <PDI::enter_progmode()+0x20>
     e16:	69 e0       	ldi	r22, 0x09	; 9
     e18:	70 e0       	ldi	r23, 0x00	; 0
     e1a:	83 e5       	ldi	r24, 0x53	; 83
     e1c:	90 e6       	ldi	r25, 0x60	; 96
     e1e:	e1 df       	rcall	.-62     	; 0xde2 <PDI::send_bytes(unsigned char const*, unsigned int)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:377
      bit_set(PGCONF, PGCONF_PROG_bp);
      D1PRINTF("<ST:%02X>\r\n", RXDATA);
      return 1;
    }

    return 0;
     e20:	81 11       	cpse	r24, r1
     e22:	03 c0       	rjmp	.+6      	; 0xe2a <PDI::enter_progmode()+0x18>
     e24:	90 e0       	ldi	r25, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:371

  size_t enter_progmode (void) {
    if (bit_is_set(PGCONF, PGCONF_PROG_bp)) return 1;

    /* Enter NVMPROGKEY */
    if (send_bytes(nvmprog_key, sizeof(nvmprog_key)) && pdibus_wait()) {
     e26:	80 e0       	ldi	r24, 0x00	; 0
     e28:	08 95       	ret
     e2a:	c9 df       	rcall	.-110    	; 0xdbe <PDI::pdibus_wait()>
     e2c:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:372
      bit_set(PGCONF, PGCONF_PROG_bp);
     e2e:	d1 f3       	breq	.-12     	; 0xe24 <PDI::enter_progmode()+0x12>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:368
    if (bit_is_set(PGCONF, PGCONF_UPDI_bp)) return 1;
    return send_bytes(_leave, sizeof(_leave));
  }

  size_t enter_progmode (void) {
    if (bit_is_set(PGCONF, PGCONF_PROG_bp)) return 1;
     e30:	f9 9a       	sbi	0x1f, 1	; 31
     e32:	81 e0       	ldi	r24, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:378
      D1PRINTF("<ST:%02X>\r\n", RXDATA);
      return 1;
    }

    return 0;
  }
     e34:	90 e0       	ldi	r25, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:363
  size_t disconnect (void) {
    const static uint8_t _leave[] = {
      0xC0, 0x02,       /* NVM disable */
      0xC1, 0x00        /* leave SYSRST */
    };
    if (bit_is_set(PGCONF, PGCONF_UPDI_bp)) return 1;
     e36:	08 95       	ret

00000e38 <PDI::disconnect()>:
_ZN3PDI10disconnectEv():
     e38:	f8 99       	sbic	0x1f, 0	; 31
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:364
    return send_bytes(_leave, sizeof(_leave));
     e3a:	07 c0       	rjmp	.+14     	; 0xe4a <PDI::disconnect()+0x12>
     e3c:	64 e0       	ldi	r22, 0x04	; 4
     e3e:	70 e0       	ldi	r23, 0x00	; 0
     e40:	8f e4       	ldi	r24, 0x4F	; 79
     e42:	90 e6       	ldi	r25, 0x60	; 96
     e44:	ce df       	rcall	.-100    	; 0xde2 <PDI::send_bytes(unsigned char const*, unsigned int)>
     e46:	90 e0       	ldi	r25, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:363
  size_t disconnect (void) {
    const static uint8_t _leave[] = {
      0xC0, 0x02,       /* NVM disable */
      0xC1, 0x00        /* leave SYSRST */
    };
    if (bit_is_set(PGCONF, PGCONF_UPDI_bp)) return 1;
     e48:	08 95       	ret
     e4a:	81 e0       	ldi	r24, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:365
    return send_bytes(_leave, sizeof(_leave));
  }
     e4c:	90 e0       	ldi	r25, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:213

  bool nvm_cmdex (void) {
    return send_byte(0x010001CBUL, 1);        /* 0x01CA: NVMCTRL_CTRLA */
  }

  bool nvm_wait (void) {
     e4e:	08 95       	ret

00000e50 <PDI::nvm_wait()>:
_ZN3PDI8nvm_waitEv():
     e50:	cf 92       	push	r12
     e52:	df 92       	push	r13
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:135

  bool recv_byte (uint32_t _dwAddr) {
    static uint8_t _set_ptr[] = {
      0x0C, 0, 0, 0, 0    /* LDS ADDR4 DATA1 */
    };
    _CAPS32(_set_ptr[1])->dword = _dwAddr;
     e54:	ef 92       	push	r14
     e56:	ff 92       	push	r15
recv_byte():
     e58:	8f ec       	ldi	r24, 0xCF	; 207
     e5a:	c8 2e       	mov	r12, r24
     e5c:	dd 24       	eor	r13, r13
     e5e:	d3 94       	inc	r13
     e60:	e1 2c       	mov	r14, r1
     e62:	fd 2c       	mov	r15, r13
     e64:	c0 92 06 60 	sts	0x6006, r12	; 0x806006 <PDI::recv_byte(unsigned long)::_set_ptr+0x1>
     e68:	d0 92 07 60 	sts	0x6007, r13	; 0x806007 <PDI::recv_byte(unsigned long)::_set_ptr+0x2>
     e6c:	e0 92 08 60 	sts	0x6008, r14	; 0x806008 <PDI::recv_byte(unsigned long)::_set_ptr+0x3>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:136
    return send_bytes(_set_ptr, sizeof(_set_ptr)) && recv_byte();
     e70:	f0 92 09 60 	sts	0x6009, r15	; 0x806009 <PDI::recv_byte(unsigned long)::_set_ptr+0x4>
     e74:	65 e0       	ldi	r22, 0x05	; 5
     e76:	70 e0       	ldi	r23, 0x00	; 0
     e78:	85 e0       	ldi	r24, 0x05	; 5
     e7a:	90 e6       	ldi	r25, 0x60	; 96
     e7c:	b2 df       	rcall	.-156    	; 0xde2 <PDI::send_bytes(unsigned char const*, unsigned int)>
     e7e:	81 11       	cpse	r24, r1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:214
  bool nvm_cmdex (void) {
    return send_byte(0x010001CBUL, 1);        /* 0x01CA: NVMCTRL_CTRLA */
  }

  bool nvm_wait (void) {
    do { recv_byte(0x010001CFUL); } while (RXDATA & 0xC0); /* 0x01CF: NVMCTRL_STATUS */
     e80:	8c df       	rcall	.-232    	; 0xd9a <PDI::recv_byte()>
_ZN3PDI8nvm_waitEv():
     e82:	8d b3       	in	r24, 0x1d	; 29
     e84:	80 7c       	andi	r24, 0xC0	; 192
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:216
    return true;
  }
     e86:	71 f7       	brne	.-36     	; 0xe64 <PDI::nvm_wait()+0x14>
     e88:	81 e0       	ldi	r24, 0x01	; 1
     e8a:	ff 90       	pop	r15
     e8c:	ef 90       	pop	r14
     e8e:	df 90       	pop	r13
     e90:	cf 90       	pop	r12
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:163

  bool send_byte (uint32_t _dwAddr, uint8_t _data) {
    static uint8_t _set_ptr[] = {
      0x4C, 0, 0, 0, 0    /* STS ADDR4 DATA1 */
    };
    _CAPS32(_set_ptr[1])->dword = _dwAddr;
     e92:	08 95       	ret

00000e94 <PDI::nvm_cmdex()>:
_ZN3PDI9nvm_cmdexEv():
     e94:	8b ec       	ldi	r24, 0xCB	; 203
     e96:	91 e0       	ldi	r25, 0x01	; 1
     e98:	a0 e0       	ldi	r26, 0x00	; 0
     e9a:	b1 e0       	ldi	r27, 0x01	; 1
     e9c:	80 93 01 60 	sts	0x6001, r24	; 0x806001 <__DATA_REGION_ORIGIN__+0x1>
     ea0:	90 93 02 60 	sts	0x6002, r25	; 0x806002 <__DATA_REGION_ORIGIN__+0x2>
     ea4:	a0 93 03 60 	sts	0x6003, r26	; 0x806003 <__DATA_REGION_ORIGIN__+0x3>
     ea8:	b0 93 04 60 	sts	0x6004, r27	; 0x806004 <__DATA_REGION_ORIGIN__+0x4>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:164
    return send_bytes(_set_ptr, sizeof(_set_ptr)) && send(_data);
     eac:	65 e0       	ldi	r22, 0x05	; 5
     eae:	70 e0       	ldi	r23, 0x00	; 0
     eb0:	80 e0       	ldi	r24, 0x00	; 0
     eb2:	90 e6       	ldi	r25, 0x60	; 96
     eb4:	96 df       	rcall	.-212    	; 0xde2 <PDI::send_bytes(unsigned char const*, unsigned int)>
     eb6:	88 23       	and	r24, r24
     eb8:	11 f0       	breq	.+4      	; 0xebe <PDI::nvm_cmdex()+0x2a>
     eba:	81 e0       	ldi	r24, 0x01	; 1
     ebc:	5e cd       	rjmp	.-1348   	; 0x97a <PDI::send_byte(unsigned char) [clone .part.4]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:211
    return send_byte(0x010001CAUL, _nvmcmd);  /* 0x01CA: NVMCTRL_CMD */
  }

  bool nvm_cmdex (void) {
    return send_byte(0x010001CBUL, 1);        /* 0x01CA: NVMCTRL_CTRLA */
  }
     ebe:	80 e0       	ldi	r24, 0x00	; 0
     ec0:	08 95       	ret

00000ec2 <PDI::nvm_cmd(unsigned char)>:
_ZN3PDI7nvm_cmdEh():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:205
    else if (m_type == 0xC5) return Device_Descriptor.Xmega.nvm_user_sig_offset;  /* MTYPE_USERSIG (USERROW) */
    else if (m_type == 0xC6) return Device_Descriptor.Xmega.nvm_prod_sig_offset;  /* MTYPE_PRODSIG (PRODSIG) */
    else                     return Device_Descriptor.Xmega.nvm_data_offset;
  }

  bool nvm_cmd (uint8_t _nvmcmd) {
     ec2:	cf 93       	push	r28
     ec4:	c8 2f       	mov	r28, r24
send_byte():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:163

  bool send_byte (uint32_t _dwAddr, uint8_t _data) {
    static uint8_t _set_ptr[] = {
      0x4C, 0, 0, 0, 0    /* STS ADDR4 DATA1 */
    };
    _CAPS32(_set_ptr[1])->dword = _dwAddr;
     ec6:	8a ec       	ldi	r24, 0xCA	; 202
     ec8:	91 e0       	ldi	r25, 0x01	; 1
     eca:	a0 e0       	ldi	r26, 0x00	; 0
     ecc:	b1 e0       	ldi	r27, 0x01	; 1
     ece:	80 93 01 60 	sts	0x6001, r24	; 0x806001 <__DATA_REGION_ORIGIN__+0x1>
     ed2:	90 93 02 60 	sts	0x6002, r25	; 0x806002 <__DATA_REGION_ORIGIN__+0x2>
     ed6:	a0 93 03 60 	sts	0x6003, r26	; 0x806003 <__DATA_REGION_ORIGIN__+0x3>
     eda:	b0 93 04 60 	sts	0x6004, r27	; 0x806004 <__DATA_REGION_ORIGIN__+0x4>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:164
    return send_bytes(_set_ptr, sizeof(_set_ptr)) && send(_data);
     ede:	65 e0       	ldi	r22, 0x05	; 5
     ee0:	70 e0       	ldi	r23, 0x00	; 0
     ee2:	80 e0       	ldi	r24, 0x00	; 0
     ee4:	90 e6       	ldi	r25, 0x60	; 96
     ee6:	7d df       	rcall	.-262    	; 0xde2 <PDI::send_bytes(unsigned char const*, unsigned int)>
     ee8:	88 23       	and	r24, r24
     eea:	19 f0       	breq	.+6      	; 0xef2 <PDI::nvm_cmd(unsigned char)+0x30>
     eec:	8c 2f       	mov	r24, r28
_ZN3PDI7nvm_cmdEh():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:207
    else                     return Device_Descriptor.Xmega.nvm_data_offset;
  }

  bool nvm_cmd (uint8_t _nvmcmd) {
    return send_byte(0x010001CAUL, _nvmcmd);  /* 0x01CA: NVMCTRL_CMD */
  }
     eee:	cf 91       	pop	r28
send_byte():
     ef0:	44 cd       	rjmp	.-1400   	; 0x97a <PDI::send_byte(unsigned char) [clone .part.4]>
_ZN3PDI7nvm_cmdEh():
     ef2:	80 e0       	ldi	r24, 0x00	; 0
     ef4:	cf 91       	pop	r28
     ef6:	08 95       	ret

00000ef8 <PDI::write_memory()>:
_ZN3PDI12write_memoryEv():
     ef8:	cf 92       	push	r12
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:269
      }
    }
    return _rspsize;
  }

  size_t write_memory (void) {
     efa:	df 92       	push	r13
     efc:	ef 92       	push	r14
     efe:	ff 92       	push	r15
     f00:	0f 93       	push	r16
     f02:	1f 93       	push	r17
     f04:	cf 93       	push	r28
     f06:	df 93       	push	r29
     f08:	c0 91 f7 60 	lds	r28, 0x60F7	; 0x8060f7 <packet+0x7>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:272
    uint8_t _nvm_cmd = 0, _nvm_pclr = 0, _nvm_pset = 0;
    uint8_t   m_type = packet.out.bMType;
    uint32_t _dwAddr = packet.out.dwAddr + get_mtype_offset(m_type);
     f0c:	c0 90 f8 60 	lds	r12, 0x60F8	; 0x8060f8 <packet+0x8>
     f10:	d0 90 f9 60 	lds	r13, 0x60F9	; 0x8060f9 <packet+0x9>
     f14:	e0 90 fa 60 	lds	r14, 0x60FA	; 0x8060fa <packet+0xa>
     f18:	f0 90 fb 60 	lds	r15, 0x60FB	; 0x8060fb <packet+0xb>
     f1c:	8c 2f       	mov	r24, r28
     f1e:	af de       	rcall	.-674    	; 0xc7e <PDI::get_mtype_offset(unsigned char)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:273
    size_t  _wLength = packet.out.dwLength;
     f20:	00 91 fc 60 	lds	r16, 0x60FC	; 0x8060fc <packet+0xc>
     f24:	10 91 fd 60 	lds	r17, 0x60FD	; 0x8060fd <packet+0xd>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:272
  }

  size_t write_memory (void) {
    uint8_t _nvm_cmd = 0, _nvm_pclr = 0, _nvm_pset = 0;
    uint8_t   m_type = packet.out.bMType;
    uint32_t _dwAddr = packet.out.dwAddr + get_mtype_offset(m_type);
     f28:	c6 0e       	add	r12, r22
     f2a:	d7 1e       	adc	r13, r23
     f2c:	e8 1e       	adc	r14, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:274
    size_t  _wLength = packet.out.dwLength;
    _CAPS32(_set_ptr32[1])->dword = _dwAddr;
     f2e:	f9 1e       	adc	r15, r25
     f30:	c0 92 0f 60 	sts	0x600F, r12	; 0x80600f <PDI::_set_ptr32+0x1>
     f34:	d0 92 10 60 	sts	0x6010, r13	; 0x806010 <PDI::_set_ptr32+0x2>
     f38:	e0 92 11 60 	sts	0x6011, r14	; 0x806011 <PDI::_set_ptr32+0x3>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:275
    _CAPS16(_set_repeat[1])->word = _wLength - 1;
     f3c:	f0 92 12 60 	sts	0x6012, r15	; 0x806012 <PDI::_set_ptr32+0x4>
     f40:	c8 01       	movw	r24, r16
     f42:	01 97       	sbiw	r24, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:276
    _set_repeat[3] = 0x64;  /* ST PTR++ DATA1 */
     f44:	80 93 0b 60 	sts	0x600B, r24	; 0x80600b <PDI::_set_repeat+0x1>
     f48:	90 93 0c 60 	sts	0x600C, r25	; 0x80600c <PDI::_set_repeat+0x2>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:279
    D1PRINTF(" L=%04X,A=%08lX,", _wLength, _dwAddr);
    nvm_wait();
    if (m_type == 0xC0) {                                           /* APPCODE or FLASH */
     f4c:	84 e6       	ldi	r24, 0x64	; 100
     f4e:	80 93 0d 60 	sts	0x600D, r24	; 0x80600d <PDI::_set_repeat+0x3>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:282
      _nvm_cmd = 0x25; _nvm_pclr = 0x26; _nvm_pset = 0x23;
    }
    else if (m_type == 0xB0 || m_type == 0xC1) {                    /* BOOTCODE */
     f52:	7e df       	rcall	.-260    	; 0xe50 <PDI::nvm_wait()>
     f54:	c0 3c       	cpi	r28, 0xC0	; 192
     f56:	09 f4       	brne	.+2      	; 0xf5a <PDI::write_memory()+0x62>
     f58:	3f c0       	rjmp	.+126    	; 0xfd8 <PDI::write_memory()+0xe0>
     f5a:	c0 3b       	cpi	r28, 0xB0	; 176
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:285
      _nvm_cmd = 0x2D; _nvm_pclr = 0x26; _nvm_pset = 0x23;
    }
    else if (m_type == 0x22 || m_type == 0xB1 || m_type == 0xC4) {  /* EEPROM */
     f5c:	09 f4       	brne	.+2      	; 0xf60 <PDI::write_memory()+0x68>
     f5e:	78 c0       	rjmp	.+240    	; 0x1050 <PDI::write_memory()+0x158>
     f60:	c1 3c       	cpi	r28, 0xC1	; 193
     f62:	09 f4       	brne	.+2      	; 0xf66 <PDI::write_memory()+0x6e>
     f64:	75 c0       	rjmp	.+234    	; 0x1050 <PDI::write_memory()+0x158>
     f66:	c2 32       	cpi	r28, 0x22	; 34
     f68:	09 f4       	brne	.+2      	; 0xf6c <PDI::write_memory()+0x74>
     f6a:	76 c0       	rjmp	.+236    	; 0x1058 <PDI::write_memory()+0x160>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:288
      _nvm_cmd = 0x35; _nvm_pclr = 0x36; _nvm_pset = 0x33;
    }
    else if (m_type == 0xC5) {                                      /* USERSIG */
     f6c:	c1 3b       	cpi	r28, 0xB1	; 177
     f6e:	09 f4       	brne	.+2      	; 0xf72 <PDI::write_memory()+0x7a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:292
      _nvm_cmd = 0x1A; _nvm_pclr = 0x26; _nvm_pset = 0x23;
    }
    else {
      if      (m_type == 0xB2) _nvm_cmd = 0x4C;   /* FUSE */
     f70:	73 c0       	rjmp	.+230    	; 0x1058 <PDI::write_memory()+0x160>
     f72:	c4 3c       	cpi	r28, 0xC4	; 196
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:293
      else if (m_type == 0xB3) _nvm_cmd = 0x08;   /* LOCK */
     f74:	09 f4       	brne	.+2      	; 0xf78 <PDI::write_memory()+0x80>
     f76:	70 c0       	rjmp	.+224    	; 0x1058 <PDI::write_memory()+0x160>
     f78:	c5 3c       	cpi	r28, 0xC5	; 197
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:294
      else return 0;
     f7a:	09 f4       	brne	.+2      	; 0xf7e <PDI::write_memory()+0x86>
     f7c:	71 c0       	rjmp	.+226    	; 0x1060 <PDI::write_memory()+0x168>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:292
    }
    else if (m_type == 0xC5) {                                      /* USERSIG */
      _nvm_cmd = 0x1A; _nvm_pclr = 0x26; _nvm_pset = 0x23;
    }
    else {
      if      (m_type == 0xB2) _nvm_cmd = 0x4C;   /* FUSE */
     f7e:	c2 3b       	cpi	r28, 0xB2	; 178
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:295
      else if (m_type == 0xB3) _nvm_cmd = 0x08;   /* LOCK */
      else return 0;
      return (nvm_cmd(_nvm_cmd)
     f80:	31 f0       	breq	.+12     	; 0xf8e <PDI::write_memory()+0x96>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:299
           && send_bytes(_set_ptr32, sizeof(_set_ptr32))
           && send_bytes(_set_repeat, sizeof(_set_repeat))
           && send_bytes(&packet.out.memData[0], _wLength)
           && nvm_wait());
     f82:	88 e0       	ldi	r24, 0x08	; 8
     f84:	c3 3b       	cpi	r28, 0xB3	; 179
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:314
     && send_bytes(&packet.out.memData[0], _wLength)
     && nvm_cmd(_nvm_cmd)
     && send_bytes(_set_ptr32, sizeof(_set_ptr32))
     && send(0x64)  /* ST */
     && send(0xFF)  /* dummy byte */
     && nvm_wait());
     f86:	21 f0       	breq	.+8      	; 0xf90 <PDI::write_memory()+0x98>
     f88:	90 e0       	ldi	r25, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:315
  }
     f8a:	80 e0       	ldi	r24, 0x00	; 0
     f8c:	06 c0       	rjmp	.+12     	; 0xf9a <PDI::write_memory()+0xa2>
     f8e:	8c e4       	ldi	r24, 0x4C	; 76
     f90:	98 df       	rcall	.-208    	; 0xec2 <PDI::nvm_cmd(unsigned char)>
     f92:	81 11       	cpse	r24, r1
     f94:	0b c0       	rjmp	.+22     	; 0xfac <PDI::write_memory()+0xb4>
     f96:	80 e0       	ldi	r24, 0x00	; 0
     f98:	90 e0       	ldi	r25, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:296
    else {
      if      (m_type == 0xB2) _nvm_cmd = 0x4C;   /* FUSE */
      else if (m_type == 0xB3) _nvm_cmd = 0x08;   /* LOCK */
      else return 0;
      return (nvm_cmd(_nvm_cmd)
           && send_bytes(_set_ptr32, sizeof(_set_ptr32))
     f9a:	df 91       	pop	r29
     f9c:	cf 91       	pop	r28
     f9e:	1f 91       	pop	r17
     fa0:	0f 91       	pop	r16
     fa2:	ff 90       	pop	r15
     fa4:	ef 90       	pop	r14
     fa6:	df 90       	pop	r13
     fa8:	cf 90       	pop	r12
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:297
           && send_bytes(_set_repeat, sizeof(_set_repeat))
     faa:	08 95       	ret
     fac:	65 e0       	ldi	r22, 0x05	; 5
     fae:	70 e0       	ldi	r23, 0x00	; 0
     fb0:	8e e0       	ldi	r24, 0x0E	; 14
     fb2:	90 e6       	ldi	r25, 0x60	; 96
     fb4:	16 df       	rcall	.-468    	; 0xde2 <PDI::send_bytes(unsigned char const*, unsigned int)>
     fb6:	88 23       	and	r24, r24
     fb8:	71 f3       	breq	.-36     	; 0xf96 <PDI::write_memory()+0x9e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:298
           && send_bytes(&packet.out.memData[0], _wLength)
     fba:	64 e0       	ldi	r22, 0x04	; 4
     fbc:	70 e0       	ldi	r23, 0x00	; 0
     fbe:	8a e0       	ldi	r24, 0x0A	; 10
     fc0:	90 e6       	ldi	r25, 0x60	; 96
     fc2:	0f df       	rcall	.-482    	; 0xde2 <PDI::send_bytes(unsigned char const*, unsigned int)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:313
     && send_bytes(_set_repeat, sizeof(_set_repeat))
     && send_bytes(&packet.out.memData[0], _wLength)
     && nvm_cmd(_nvm_cmd)
     && send_bytes(_set_ptr32, sizeof(_set_ptr32))
     && send(0x64)  /* ST */
     && send(0xFF)  /* dummy byte */
     fc4:	88 23       	and	r24, r24
     fc6:	39 f3       	breq	.-50     	; 0xf96 <PDI::write_memory()+0x9e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:314
     && nvm_wait());
     fc8:	b8 01       	movw	r22, r16
     fca:	81 e0       	ldi	r24, 0x01	; 1
     fcc:	91 e6       	ldi	r25, 0x61	; 97
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:280
    _CAPS16(_set_repeat[1])->word = _wLength - 1;
    _set_repeat[3] = 0x64;  /* ST PTR++ DATA1 */
    D1PRINTF(" L=%04X,A=%08lX,", _wLength, _dwAddr);
    nvm_wait();
    if (m_type == 0xC0) {                                           /* APPCODE or FLASH */
      _nvm_cmd = 0x25; _nvm_pclr = 0x26; _nvm_pset = 0x23;
     fce:	09 df       	rcall	.-494    	; 0xde2 <PDI::send_bytes(unsigned char const*, unsigned int)>
     fd0:	88 23       	and	r24, r24
     fd2:	09 f3       	breq	.-62     	; 0xf96 <PDI::write_memory()+0x9e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:303
           && send_bytes(&packet.out.memData[0], _wLength)
           && nvm_wait());
    }

    /* FLASH, BOOTCODE, APPCODE or EEPROM */
    return (nvm_cmd(_nvm_pclr)
     fd4:	3d df       	rcall	.-390    	; 0xe50 <PDI::nvm_wait()>
     fd6:	e0 cf       	rjmp	.-64     	; 0xf98 <PDI::write_memory()+0xa0>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:314
     && send_bytes(&packet.out.memData[0], _wLength)
     && nvm_cmd(_nvm_cmd)
     && send_bytes(_set_ptr32, sizeof(_set_ptr32))
     && send(0x64)  /* ST */
     && send(0xFF)  /* dummy byte */
     && nvm_wait());
     fd8:	d3 e2       	ldi	r29, 0x23	; 35
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:304
           && nvm_wait());
    }

    /* FLASH, BOOTCODE, APPCODE or EEPROM */
    return (nvm_cmd(_nvm_pclr)
     && nvm_cmdex()
     fda:	86 e2       	ldi	r24, 0x26	; 38
     fdc:	c5 e2       	ldi	r28, 0x25	; 37
     fde:	71 df       	rcall	.-286    	; 0xec2 <PDI::nvm_cmd(unsigned char)>
     fe0:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:305
     && nvm_wait()
     fe2:	c9 f2       	breq	.-78     	; 0xf96 <PDI::write_memory()+0x9e>
     fe4:	57 df       	rcall	.-338    	; 0xe94 <PDI::nvm_cmdex()>
     fe6:	88 23       	and	r24, r24
     fe8:	b1 f2       	breq	.-84     	; 0xf96 <PDI::write_memory()+0x9e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:306
     && nvm_cmd(_nvm_pset)
     fea:	32 df       	rcall	.-412    	; 0xe50 <PDI::nvm_wait()>
     fec:	88 23       	and	r24, r24
     fee:	99 f2       	breq	.-90     	; 0xf96 <PDI::write_memory()+0x9e>
     ff0:	8d 2f       	mov	r24, r29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:307
     && send_bytes(_set_ptr32, sizeof(_set_ptr32))
     ff2:	67 df       	rcall	.-306    	; 0xec2 <PDI::nvm_cmd(unsigned char)>
     ff4:	88 23       	and	r24, r24
     ff6:	79 f2       	breq	.-98     	; 0xf96 <PDI::write_memory()+0x9e>
     ff8:	65 e0       	ldi	r22, 0x05	; 5
     ffa:	70 e0       	ldi	r23, 0x00	; 0
     ffc:	8e e0       	ldi	r24, 0x0E	; 14
     ffe:	90 e6       	ldi	r25, 0x60	; 96
    1000:	f0 de       	rcall	.-544    	; 0xde2 <PDI::send_bytes(unsigned char const*, unsigned int)>
    1002:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:308
     && send_bytes(_set_repeat, sizeof(_set_repeat))
    1004:	09 f4       	brne	.+2      	; 0x1008 <PDI::write_memory()+0x110>
    1006:	c7 cf       	rjmp	.-114    	; 0xf96 <PDI::write_memory()+0x9e>
    1008:	64 e0       	ldi	r22, 0x04	; 4
    100a:	70 e0       	ldi	r23, 0x00	; 0
    100c:	8a e0       	ldi	r24, 0x0A	; 10
    100e:	90 e6       	ldi	r25, 0x60	; 96
    1010:	e8 de       	rcall	.-560    	; 0xde2 <PDI::send_bytes(unsigned char const*, unsigned int)>
    1012:	88 23       	and	r24, r24
    1014:	09 f4       	brne	.+2      	; 0x1018 <PDI::write_memory()+0x120>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:309
     && send_bytes(&packet.out.memData[0], _wLength)
    1016:	bf cf       	rjmp	.-130    	; 0xf96 <PDI::write_memory()+0x9e>
    1018:	b8 01       	movw	r22, r16
    101a:	81 e0       	ldi	r24, 0x01	; 1
    101c:	91 e6       	ldi	r25, 0x61	; 97
    101e:	e1 de       	rcall	.-574    	; 0xde2 <PDI::send_bytes(unsigned char const*, unsigned int)>
    1020:	88 23       	and	r24, r24
    1022:	09 f4       	brne	.+2      	; 0x1026 <PDI::write_memory()+0x12e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:310
     && nvm_cmd(_nvm_cmd)
    1024:	b8 cf       	rjmp	.-144    	; 0xf96 <PDI::write_memory()+0x9e>
    1026:	8c 2f       	mov	r24, r28
    1028:	4c df       	rcall	.-360    	; 0xec2 <PDI::nvm_cmd(unsigned char)>
    102a:	88 23       	and	r24, r24
    102c:	09 f4       	brne	.+2      	; 0x1030 <PDI::write_memory()+0x138>
    102e:	b3 cf       	rjmp	.-154    	; 0xf96 <PDI::write_memory()+0x9e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:311
     && send_bytes(_set_ptr32, sizeof(_set_ptr32))
    1030:	65 e0       	ldi	r22, 0x05	; 5
    1032:	70 e0       	ldi	r23, 0x00	; 0
    1034:	8e e0       	ldi	r24, 0x0E	; 14
    1036:	90 e6       	ldi	r25, 0x60	; 96
    1038:	d4 de       	rcall	.-600    	; 0xde2 <PDI::send_bytes(unsigned char const*, unsigned int)>
    103a:	88 23       	and	r24, r24
    103c:	09 f4       	brne	.+2      	; 0x1040 <PDI::write_memory()+0x148>
    103e:	ab cf       	rjmp	.-170    	; 0xf96 <PDI::write_memory()+0x9e>
    1040:	84 e6       	ldi	r24, 0x64	; 100
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:312
     && send(0x64)  /* ST */
    1042:	19 da       	rcall	.-3022   	; 0x476 <PDI::send(unsigned char)>
    1044:	88 23       	and	r24, r24
    1046:	09 f4       	brne	.+2      	; 0x104a <PDI::write_memory()+0x152>
    1048:	a6 cf       	rjmp	.-180    	; 0xf96 <PDI::write_memory()+0x9e>
    104a:	8f ef       	ldi	r24, 0xFF	; 255
    104c:	14 da       	rcall	.-3032   	; 0x476 <PDI::send(unsigned char)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:313
     && send(0xFF)  /* dummy byte */
    104e:	c0 cf       	rjmp	.-128    	; 0xfd0 <PDI::write_memory()+0xd8>
    1050:	d3 e2       	ldi	r29, 0x23	; 35
    1052:	86 e2       	ldi	r24, 0x26	; 38
    1054:	cd e2       	ldi	r28, 0x2D	; 45
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:283
    nvm_wait();
    if (m_type == 0xC0) {                                           /* APPCODE or FLASH */
      _nvm_cmd = 0x25; _nvm_pclr = 0x26; _nvm_pset = 0x23;
    }
    else if (m_type == 0xB0 || m_type == 0xC1) {                    /* BOOTCODE */
      _nvm_cmd = 0x2D; _nvm_pclr = 0x26; _nvm_pset = 0x23;
    1056:	c3 cf       	rjmp	.-122    	; 0xfde <PDI::write_memory()+0xe6>
    1058:	d3 e3       	ldi	r29, 0x33	; 51
    105a:	86 e3       	ldi	r24, 0x36	; 54
    105c:	c5 e3       	ldi	r28, 0x35	; 53
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:286
    }
    else if (m_type == 0x22 || m_type == 0xB1 || m_type == 0xC4) {  /* EEPROM */
      _nvm_cmd = 0x35; _nvm_pclr = 0x36; _nvm_pset = 0x33;
    105e:	bf cf       	rjmp	.-130    	; 0xfde <PDI::write_memory()+0xe6>
    1060:	d3 e2       	ldi	r29, 0x23	; 35
    1062:	86 e2       	ldi	r24, 0x26	; 38
    1064:	ca e1       	ldi	r28, 0x1A	; 26
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:289
    }
    else if (m_type == 0xC5) {                                      /* USERSIG */
      _nvm_cmd = 0x1A; _nvm_pclr = 0x26; _nvm_pset = 0x23;
    1066:	bb cf       	rjmp	.-138    	; 0xfde <PDI::write_memory()+0xe6>

00001068 <PDI::read_memory()>:
_ZN3PDI11read_memoryEv():
    1068:	4f 92       	push	r4
    106a:	5f 92       	push	r5
    106c:	6f 92       	push	r6
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:242
    /* Any other sections specified will be ignored, */
    /* but the command will return successful completion. */
    return 1;
  }

  size_t read_memory (void) {
    106e:	7f 92       	push	r7
    1070:	8f 92       	push	r8
    1072:	9f 92       	push	r9
    1074:	af 92       	push	r10
    1076:	bf 92       	push	r11
    1078:	cf 92       	push	r12
    107a:	df 92       	push	r13
    107c:	ef 92       	push	r14
    107e:	ff 92       	push	r15
    1080:	0f 93       	push	r16
    1082:	1f 93       	push	r17
    1084:	cf 93       	push	r28
    1086:	df 93       	push	r29
    1088:	80 90 f8 60 	lds	r8, 0x60F8	; 0x8060f8 <packet+0x8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:244
    uint8_t   m_type = packet.out.bMType;
    uint32_t _dwAddr = packet.out.dwAddr + get_mtype_offset(m_type);
    108c:	90 90 f9 60 	lds	r9, 0x60F9	; 0x8060f9 <packet+0x9>
    1090:	a0 90 fa 60 	lds	r10, 0x60FA	; 0x8060fa <packet+0xa>
    1094:	b0 90 fb 60 	lds	r11, 0x60FB	; 0x8060fb <packet+0xb>
    1098:	80 91 f7 60 	lds	r24, 0x60F7	; 0x8060f7 <packet+0x7>
    109c:	f0 dd       	rcall	.-1056   	; 0xc7e <PDI::get_mtype_offset(unsigned char)>
    109e:	2b 01       	movw	r4, r22
    10a0:	3c 01       	movw	r6, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:245
    size_t  _wLength = packet.out.dwLength;
    10a2:	c0 90 fc 60 	lds	r12, 0x60FC	; 0x8060fc <packet+0xc>
    10a6:	d0 90 fd 60 	lds	r13, 0x60FD	; 0x8060fd <packet+0xd>
    10aa:	e0 90 fe 60 	lds	r14, 0x60FE	; 0x8060fe <packet+0xe>
    10ae:	f0 90 ff 60 	lds	r15, 0x60FF	; 0x8060ff <packet+0xf>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:248
    size_t  _rspsize = 0;
    D1PRINTF(" L=%04X,A=%08lX,", _wLength, _dwAddr);
    if (!nvm_cmd(0x43)) return 0;
    10b2:	83 e4       	ldi	r24, 0x43	; 67
    10b4:	06 df       	rcall	.-500    	; 0xec2 <PDI::nvm_cmd(unsigned char)>
    10b6:	88 23       	and	r24, r24
    10b8:	09 f4       	brne	.+2      	; 0x10bc <PDI::read_memory()+0x54>
    10ba:	64 c0       	rjmp	.+200    	; 0x1184 <PDI::read_memory()+0x11c>
    10bc:	84 0c       	add	r8, r4
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:244
    return 1;
  }

  size_t read_memory (void) {
    uint8_t   m_type = packet.out.bMType;
    uint32_t _dwAddr = packet.out.dwAddr + get_mtype_offset(m_type);
    10be:	95 1c       	adc	r9, r5
    10c0:	a6 1c       	adc	r10, r6
    10c2:	b7 1c       	adc	r11, r7
    10c4:	e6 01       	movw	r28, r12
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:245
    size_t  _wLength = packet.out.dwLength;
    10c6:	c1 30       	cpi	r28, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:249
    size_t  _rspsize = 0;
    D1PRINTF(" L=%04X,A=%08lX,", _wLength, _dwAddr);
    if (!nvm_cmd(0x43)) return 0;
    if (_wLength == 1) {
    10c8:	d1 05       	cpc	r29, r1
    10ca:	51 f5       	brne	.+84     	; 0x1120 <PDI::read_memory()+0xb8>
recv_byte():
    10cc:	80 92 06 60 	sts	0x6006, r8	; 0x806006 <PDI::recv_byte(unsigned long)::_set_ptr+0x1>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:135

  bool recv_byte (uint32_t _dwAddr) {
    static uint8_t _set_ptr[] = {
      0x0C, 0, 0, 0, 0    /* LDS ADDR4 DATA1 */
    };
    _CAPS32(_set_ptr[1])->dword = _dwAddr;
    10d0:	90 92 07 60 	sts	0x6007, r9	; 0x806007 <PDI::recv_byte(unsigned long)::_set_ptr+0x2>
    10d4:	a0 92 08 60 	sts	0x6008, r10	; 0x806008 <PDI::recv_byte(unsigned long)::_set_ptr+0x3>
    10d8:	b0 92 09 60 	sts	0x6009, r11	; 0x806009 <PDI::recv_byte(unsigned long)::_set_ptr+0x4>
    10dc:	65 e0       	ldi	r22, 0x05	; 5
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:136
    return send_bytes(_set_ptr, sizeof(_set_ptr)) && recv_byte();
    10de:	70 e0       	ldi	r23, 0x00	; 0
    10e0:	85 e0       	ldi	r24, 0x05	; 5
    10e2:	90 e6       	ldi	r25, 0x60	; 96
    10e4:	7e de       	rcall	.-772    	; 0xde2 <PDI::send_bytes(unsigned char const*, unsigned int)>
    10e6:	88 23       	and	r24, r24
    10e8:	09 f4       	brne	.+2      	; 0x10ec <PDI::read_memory()+0x84>
    10ea:	4c c0       	rjmp	.+152    	; 0x1184 <PDI::read_memory()+0x11c>
    10ec:	56 de       	rcall	.-852    	; 0xd9a <PDI::recv_byte()>
    10ee:	88 23       	and	r24, r24
    10f0:	09 f4       	brne	.+2      	; 0x10f4 <PDI::read_memory()+0x8c>
    10f2:	48 c0       	rjmp	.+144    	; 0x1184 <PDI::read_memory()+0x11c>
_ZN3PDI11read_memoryEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:251
    size_t  _rspsize = 0;
    D1PRINTF(" L=%04X,A=%08lX,", _wLength, _dwAddr);
    if (!nvm_cmd(0x43)) return 0;
    if (_wLength == 1) {
      if (recv_byte(_dwAddr)) {
        packet.in.data[0] = RXDATA;
    10f4:	8d b3       	in	r24, 0x1d	; 29
    10f6:	80 93 f7 60 	sts	0x60F7, r24	; 0x8060f7 <packet+0x7>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:267
        _rspsize = 1 + _wLength;
        D2PRINTHEX(&packet.in.data[0], _wLength);
      }
    }
    return _rspsize;
  }
    10fa:	82 e0       	ldi	r24, 0x02	; 2
    10fc:	90 e0       	ldi	r25, 0x00	; 0
    10fe:	df 91       	pop	r29
    1100:	cf 91       	pop	r28
    1102:	1f 91       	pop	r17
    1104:	0f 91       	pop	r16
    1106:	ff 90       	pop	r15
    1108:	ef 90       	pop	r14
    110a:	df 90       	pop	r13
    110c:	cf 90       	pop	r12
    110e:	bf 90       	pop	r11
    1110:	af 90       	pop	r10
    1112:	9f 90       	pop	r9
    1114:	8f 90       	pop	r8
    1116:	7f 90       	pop	r7
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:256
        packet.in.data[0] = RXDATA;
        _rspsize = 1 + _wLength;
      }
    }
    else {
      _CAPS32(_set_ptr32[1])->dword = _dwAddr;
    1118:	6f 90       	pop	r6
    111a:	5f 90       	pop	r5
    111c:	4f 90       	pop	r4
    111e:	08 95       	ret
    1120:	80 92 0f 60 	sts	0x600F, r8	; 0x80600f <PDI::_set_ptr32+0x1>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:257
      _CAPS16(_set_repeat[1])->word = _wLength - 1;
    1124:	90 92 10 60 	sts	0x6010, r9	; 0x806010 <PDI::_set_ptr32+0x2>
    1128:	a0 92 11 60 	sts	0x6011, r10	; 0x806011 <PDI::_set_ptr32+0x3>
    112c:	b0 92 12 60 	sts	0x6012, r11	; 0x806012 <PDI::_set_ptr32+0x4>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:258
      _set_repeat[3] = 0x24;  /* LD PTR++ DATA1 */
    1130:	c6 01       	movw	r24, r12
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:259
      if (send_bytes(_set_ptr32, sizeof(_set_ptr32))
    1132:	01 97       	sbiw	r24, 0x01	; 1
    1134:	80 93 0b 60 	sts	0x600B, r24	; 0x80600b <PDI::_set_repeat+0x1>
    1138:	90 93 0c 60 	sts	0x600C, r25	; 0x80600c <PDI::_set_repeat+0x2>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:261
       && send_bytes(_set_repeat, sizeof(_set_repeat))
       && recv_bytes(&packet.in.data[0], _wLength)) {
    113c:	84 e2       	ldi	r24, 0x24	; 36
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:260
    else {
      _CAPS32(_set_ptr32[1])->dword = _dwAddr;
      _CAPS16(_set_repeat[1])->word = _wLength - 1;
      _set_repeat[3] = 0x24;  /* LD PTR++ DATA1 */
      if (send_bytes(_set_ptr32, sizeof(_set_ptr32))
       && send_bytes(_set_repeat, sizeof(_set_repeat))
    113e:	80 93 0d 60 	sts	0x600D, r24	; 0x80600d <PDI::_set_repeat+0x3>
    1142:	65 e0       	ldi	r22, 0x05	; 5
    1144:	70 e0       	ldi	r23, 0x00	; 0
    1146:	8e e0       	ldi	r24, 0x0E	; 14
    1148:	90 e6       	ldi	r25, 0x60	; 96
    114a:	4b de       	rcall	.-874    	; 0xde2 <PDI::send_bytes(unsigned char const*, unsigned int)>
    114c:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:140
    _CAPS32(_set_ptr[1])->dword = _dwAddr;
    return send_bytes(_set_ptr, sizeof(_set_ptr)) && recv_byte();
  }

  bool recv_bytes (uint8_t* _data, size_t _len) {
    stop_txd();
    114e:	d1 f0       	breq	.+52     	; 0x1184 <PDI::read_memory()+0x11c>
    1150:	64 e0       	ldi	r22, 0x04	; 4
    1152:	70 e0       	ldi	r23, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:144
    do {
      if (!recv()) return false;
      *_data++ = RXDATA;
    } while (--_len);
    1154:	8a e0       	ldi	r24, 0x0A	; 10
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:142
  }

  bool recv_bytes (uint8_t* _data, size_t _len) {
    stop_txd();
    do {
      if (!recv()) return false;
    1156:	90 e6       	ldi	r25, 0x60	; 96
    1158:	44 de       	rcall	.-888    	; 0xde2 <PDI::send_bytes(unsigned char const*, unsigned int)>
    115a:	88 23       	and	r24, r24
    115c:	99 f0       	breq	.+38     	; 0x1184 <PDI::read_memory()+0x11c>
recv_bytes():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:143
      *_data++ = RXDATA;
    115e:	11 de       	rcall	.-990    	; 0xd82 <PDI::stop_txd()>
    1160:	00 ef       	ldi	r16, 0xF0	; 240
    1162:	10 e6       	ldi	r17, 0x60	; 96
    1164:	c0 51       	subi	r28, 0x10	; 16
    1166:	df 49       	sbci	r29, 0x9F	; 159
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:144
    } while (--_len);
    1168:	74 d9       	rcall	.-3352   	; 0x452 <PDI::recv()>
    116a:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:262
      _CAPS16(_set_repeat[1])->word = _wLength - 1;
      _set_repeat[3] = 0x24;  /* LD PTR++ DATA1 */
      if (send_bytes(_set_ptr32, sizeof(_set_ptr32))
       && send_bytes(_set_repeat, sizeof(_set_repeat))
       && recv_bytes(&packet.in.data[0], _wLength)) {
        _rspsize = 1 + _wLength;
    116c:	59 f0       	breq	.+22     	; 0x1184 <PDI::read_memory()+0x11c>
    116e:	8d b3       	in	r24, 0x1d	; 29
    1170:	f8 01       	movw	r30, r16
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:248
    uint8_t   m_type = packet.out.bMType;
    uint32_t _dwAddr = packet.out.dwAddr + get_mtype_offset(m_type);
    size_t  _wLength = packet.out.dwLength;
    size_t  _rspsize = 0;
    D1PRINTF(" L=%04X,A=%08lX,", _wLength, _dwAddr);
    if (!nvm_cmd(0x43)) return 0;
    1172:	87 83       	std	Z+7, r24	; 0x07
    1174:	0f 5f       	subi	r16, 0xFF	; 255
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:218
  bool nvm_wait (void) {
    do { recv_byte(0x010001CFUL); } while (RXDATA & 0xC0); /* 0x01CF: NVMCTRL_STATUS */
    return true;
  }

  size_t erase_memory (void) {
    1176:	1f 4f       	sbci	r17, 0xFF	; 255
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:219
    uint8_t   e_type = packet.out.bEType;
    1178:	0c 17       	cp	r16, r28
    117a:	1d 07       	cpc	r17, r29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:221
    uint32_t _dwAddr = packet.out.dwAddr;
    _CAPS32(_set_ptr32[1])->dword = _dwAddr;
    117c:	a9 f7       	brne	.-22     	; 0x1168 <PDI::read_memory()+0x100>
_ZN3PDI11read_memoryEv():
    117e:	c6 01       	movw	r24, r12
    1180:	01 96       	adiw	r24, 0x01	; 1
    1182:	bd cf       	rjmp	.-134    	; 0x10fe <PDI::read_memory()+0x96>
    1184:	90 e0       	ldi	r25, 0x00	; 0
    1186:	80 e0       	ldi	r24, 0x00	; 0
    1188:	ba cf       	rjmp	.-140    	; 0x10fe <PDI::read_memory()+0x96>

0000118a <PDI::erase_memory()>:
_ZN3PDI12erase_memoryEv():
    118a:	cf 93       	push	r28
    118c:	c0 91 f7 60 	lds	r28, 0x60F7	; 0x8060f7 <packet+0x7>
    1190:	80 91 f8 60 	lds	r24, 0x60F8	; 0x8060f8 <packet+0x8>
    1194:	90 91 f9 60 	lds	r25, 0x60F9	; 0x8060f9 <packet+0x9>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:222
    nvm_wait();
    1198:	a0 91 fa 60 	lds	r26, 0x60FA	; 0x8060fa <packet+0xa>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:223
    if (e_type == 0x00) {
    119c:	b0 91 fb 60 	lds	r27, 0x60FB	; 0x8060fb <packet+0xb>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:225
      /* XMEGA_ERASE_CHIP */
      if (!(nvm_cmd(0x40) && nvm_cmdex() && pdibus_wait() && nvm_wait())) return 0;
    11a0:	80 93 0f 60 	sts	0x600F, r24	; 0x80600f <PDI::_set_ptr32+0x1>
    11a4:	90 93 10 60 	sts	0x6010, r25	; 0x806010 <PDI::_set_ptr32+0x2>
    11a8:	a0 93 11 60 	sts	0x6011, r26	; 0x806011 <PDI::_set_ptr32+0x3>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:240
         && nvm_wait())) return 0;
    }
    /* Any other sections specified will be ignored, */
    /* but the command will return successful completion. */
    return 1;
  }
    11ac:	b0 93 12 60 	sts	0x6012, r27	; 0x806012 <PDI::_set_ptr32+0x4>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:225
    uint32_t _dwAddr = packet.out.dwAddr;
    _CAPS32(_set_ptr32[1])->dword = _dwAddr;
    nvm_wait();
    if (e_type == 0x00) {
      /* XMEGA_ERASE_CHIP */
      if (!(nvm_cmd(0x40) && nvm_cmdex() && pdibus_wait() && nvm_wait())) return 0;
    11b0:	4f de       	rcall	.-866    	; 0xe50 <PDI::nvm_wait()>
    11b2:	c1 11       	cpse	r28, r1
    11b4:	11 c0       	rjmp	.+34     	; 0x11d8 <PDI::erase_memory()+0x4e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:234
    else if (e_type == 0x07) {
      /* XMEGA_ERASE_USERSIG */
      if (!(nvm_cmd(0x18)
         && send_bytes(_set_ptr32, sizeof(_set_ptr32))
         && send(0x64)
         && send(0xFF)
    11b6:	80 e4       	ldi	r24, 0x40	; 64
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:235
         && nvm_wait())) return 0;
    11b8:	84 de       	rcall	.-760    	; 0xec2 <PDI::nvm_cmd(unsigned char)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:225
    uint32_t _dwAddr = packet.out.dwAddr;
    _CAPS32(_set_ptr32[1])->dword = _dwAddr;
    nvm_wait();
    if (e_type == 0x00) {
      /* XMEGA_ERASE_CHIP */
      if (!(nvm_cmd(0x40) && nvm_cmdex() && pdibus_wait() && nvm_wait())) return 0;
    11ba:	81 11       	cpse	r24, r1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:239
         && send(0xFF)
         && nvm_wait())) return 0;
    }
    /* Any other sections specified will be ignored, */
    /* but the command will return successful completion. */
    return 1;
    11bc:	04 c0       	rjmp	.+8      	; 0x11c6 <PDI::erase_memory()+0x3c>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:229
      /* XMEGA_ERASE_CHIP */
      if (!(nvm_cmd(0x40) && nvm_cmdex() && pdibus_wait() && nvm_wait())) return 0;
    }
    /* Section erasure is only used with USERSIG. */
    /* Unlike READ/WRITE, the address is given as an absolute value. */
    else if (e_type == 0x07) {
    11be:	90 e0       	ldi	r25, 0x00	; 0
    11c0:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:231
      /* XMEGA_ERASE_USERSIG */
      if (!(nvm_cmd(0x18)
    11c2:	cf 91       	pop	r28
    11c4:	08 95       	ret
    11c6:	66 de       	rcall	.-820    	; 0xe94 <PDI::nvm_cmdex()>
    11c8:	88 23       	and	r24, r24
    11ca:	c9 f3       	breq	.-14     	; 0x11be <PDI::erase_memory()+0x34>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:232
         && send_bytes(_set_ptr32, sizeof(_set_ptr32))
    11cc:	f8 dd       	rcall	.-1040   	; 0xdbe <PDI::pdibus_wait()>
    11ce:	88 23       	and	r24, r24
    11d0:	b1 f3       	breq	.-20     	; 0x11be <PDI::erase_memory()+0x34>
    11d2:	3e de       	rcall	.-900    	; 0xe50 <PDI::nvm_wait()>
    11d4:	90 e0       	ldi	r25, 0x00	; 0
    11d6:	f5 cf       	rjmp	.-22     	; 0x11c2 <PDI::erase_memory()+0x38>
    11d8:	81 e0       	ldi	r24, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:233
         && send(0x64)
    11da:	90 e0       	ldi	r25, 0x00	; 0
    11dc:	c7 30       	cpi	r28, 0x07	; 7
    11de:	89 f7       	brne	.-30     	; 0x11c2 <PDI::erase_memory()+0x38>
    11e0:	88 e1       	ldi	r24, 0x18	; 24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:234
         && send(0xFF)
    11e2:	6f de       	rcall	.-802    	; 0xec2 <PDI::nvm_cmd(unsigned char)>
    11e4:	88 23       	and	r24, r24
    11e6:	59 f3       	breq	.-42     	; 0x11be <PDI::erase_memory()+0x34>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:108
    }
    return true;
  }

  bool send_break (void) {
    stop_txd();
    11e8:	65 e0       	ldi	r22, 0x05	; 5
    11ea:	70 e0       	ldi	r23, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:109
    digitalWriteMacro(PIN_PGM_PDAT, LOW);
    11ec:	8e e0       	ldi	r24, 0x0E	; 14
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:110
    pinLogicPush(PIN_PGM_PDAT);
    11ee:	90 e6       	ldi	r25, 0x60	; 96
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:111
    idle_clock(16);
    11f0:	f8 dd       	rcall	.-1040   	; 0xde2 <PDI::send_bytes(unsigned char const*, unsigned int)>
    11f2:	88 23       	and	r24, r24
    11f4:	21 f3       	breq	.-56     	; 0x11be <PDI::erase_memory()+0x34>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:112
    digitalWriteMacro(PIN_PGM_PDAT, HIGH);
    11f6:	84 e6       	ldi	r24, 0x64	; 100
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:113
    idle_clock(2);
    11f8:	3e d9       	rcall	.-3460   	; 0x476 <PDI::send(unsigned char)>
    11fa:	88 23       	and	r24, r24
    11fc:	01 f3       	breq	.-64     	; 0x11be <PDI::erase_memory()+0x34>
    11fe:	8f ef       	ldi	r24, 0xFF	; 255
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:114
    digitalWriteMacro(PIN_PGM_PDAT, LOW);
    1200:	3a d9       	rcall	.-3468   	; 0x476 <PDI::send(unsigned char)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:115
    idle_clock(16);
    1202:	e5 cf       	rjmp	.-54     	; 0x11ce <PDI::erase_memory()+0x44>

00001204 <PDI::send_break()>:
_ZN3PDI10send_breakEv():
    1204:	be dd       	rcall	.-1156   	; 0xd82 <PDI::stop_txd()>
    1206:	0c 98       	cbi	0x01, 4	; 1
    1208:	04 9a       	sbi	0x00, 4	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:116
    return start_txd();
    120a:	80 e1       	ldi	r24, 0x10	; 16
    120c:	90 e0       	ldi	r25, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:321

  // MARK: PDI Session

  size_t timeout_fallback (void) {
    /* If a timeout occurs, the communication speed will be reduced. */
    if (_xclk == 50) return 0;
    120e:	a8 dd       	rcall	.-1200   	; 0xd60 <PDI::idle_clock(unsigned int)>
    1210:	0c 9a       	sbi	0x01, 4	; 1
    1212:	82 e0       	ldi	r24, 0x02	; 2
    1214:	90 e0       	ldi	r25, 0x00	; 0
    1216:	a4 dd       	rcall	.-1208   	; 0xd60 <PDI::idle_clock(unsigned int)>
    1218:	0c 98       	cbi	0x01, 4	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:322
    _xclk -= 50;
    121a:	80 e1       	ldi	r24, 0x10	; 16
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:323
    if (_xclk < 50) _xclk = 50;
    121c:	90 e0       	ldi	r25, 0x00	; 0
    121e:	a0 dd       	rcall	.-1216   	; 0xd60 <PDI::idle_clock(unsigned int)>
    1220:	c1 cd       	rjmp	.-1150   	; 0xda4 <PDI::start_txd()>

00001222 <PDI::timeout_fallback()>:
_ZN3PDI16timeout_fallbackEv():
    1222:	80 91 47 63 	lds	r24, 0x6347	; 0x806347 <_xclk>
    1226:	90 91 48 63 	lds	r25, 0x6348	; 0x806348 <_xclk+0x1>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:324
    USART::change_pdi();
    122a:	82 33       	cpi	r24, 0x32	; 50
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:325
    return send_break();
    122c:	91 05       	cpc	r25, r1
    122e:	79 f0       	breq	.+30     	; 0x124e <PDI::timeout_fallback()+0x2c>
    1230:	c2 97       	sbiw	r24, 0x32	; 50
    1232:	82 33       	cpi	r24, 0x32	; 50
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:323

  size_t timeout_fallback (void) {
    /* If a timeout occurs, the communication speed will be reduced. */
    if (_xclk == 50) return 0;
    _xclk -= 50;
    if (_xclk < 50) _xclk = 50;
    1234:	91 05       	cpc	r25, r1
    1236:	40 f0       	brcs	.+16     	; 0x1248 <PDI::timeout_fallback()+0x26>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:321

  // MARK: PDI Session

  size_t timeout_fallback (void) {
    /* If a timeout occurs, the communication speed will be reduced. */
    if (_xclk == 50) return 0;
    1238:	80 93 47 63 	sts	0x6347, r24	; 0x806347 <_xclk>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:326
    _xclk -= 50;
    if (_xclk < 50) _xclk = 50;
    USART::change_pdi();
    return send_break();
  }
    123c:	90 93 48 63 	sts	0x6348, r25	; 0x806348 <_xclk+0x1>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:55
  constexpr auto NVM_STATUS = 0x1006;
  constexpr auto PROD_SIG   = 0x1100;
  constexpr auto PROG_START = 0x800000;

  uint8_t nvm_wait (void) {
    do { UPDI::recv_byte(NVM_STATUS); } while (RXDATA & 3);
    1240:	ba d8       	rcall	.-3724   	; 0x3b6 <USART::change_pdi()>
    1242:	e0 df       	rcall	.-64     	; 0x1204 <PDI::send_break()>
    1244:	90 e0       	ldi	r25, 0x00	; 0
    1246:	08 95       	ret
    1248:	82 e3       	ldi	r24, 0x32	; 50
    124a:	90 e0       	ldi	r25, 0x00	; 0
    124c:	f5 cf       	rjmp	.-22     	; 0x1238 <PDI::timeout_fallback()+0x16>
    124e:	90 e0       	ldi	r25, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:56
    return RXDATA;
    1250:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:57
  }
    1252:	08 95       	ret

00001254 <NVM::V3::nvm_wait()>:
_ZN3NVM2V38nvm_waitEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:73
    D2PRINTF(" NVM_V3_FLPERW=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x00)
      && UPDI::send_words_block(_dwAddr, _wLength)
      && nvm_ctrl_change(0x05)  /* NVM_V3_CMD_FLPERW */
      && (nvm_wait() & 0x73) == 0
    1254:	66 e0       	ldi	r22, 0x06	; 6
    1256:	70 e1       	ldi	r23, 0x10	; 16
    1258:	80 e0       	ldi	r24, 0x00	; 0
    125a:	90 e0       	ldi	r25, 0x00	; 0
    125c:	49 d9       	rcall	.-3438   	; 0x4f0 <UPDI::recv_byte(unsigned long)>
    125e:	8d b3       	in	r24, 0x1d	; 29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:59
  uint8_t nvm_wait (void) {
    do { UPDI::recv_byte(NVM_STATUS); } while (RXDATA & 3);
    return RXDATA;
  }

  bool nvm_ctrl_change (uint8_t _nvmcmd) {
    1260:	83 70       	andi	r24, 0x03	; 3
    1262:	c1 f7       	brne	.-16     	; 0x1254 <NVM::V3::nvm_wait()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:60
    nvm_wait();
    1264:	8d b3       	in	r24, 0x1d	; 29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:61
    if (UPDI::recv_byte(NVM_CTRL) && RXDATA == _nvmcmd) return true;
    1266:	08 95       	ret

00001268 <NVM::V3::write_eeprom(unsigned long, unsigned int) [clone .part.3]>:
_ZN3NVM2V317write_words_flashEmj.part.1():
    1268:	f5 df       	rcall	.-22     	; 0x1254 <NVM::V3::nvm_wait()>
    126a:	98 2f       	mov	r25, r24
    126c:	93 77       	andi	r25, 0x73	; 115
    126e:	81 e0       	ldi	r24, 0x01	; 1
    1270:	09 f0       	breq	.+2      	; 0x1274 <NVM::V3::write_eeprom(unsigned long, unsigned int) [clone .part.3]+0xc>
    1272:	80 e0       	ldi	r24, 0x00	; 0
    1274:	08 95       	ret

00001276 <NVM::V3::nvm_ctrl_change(unsigned char)>:
_ZN3NVM2V315nvm_ctrl_changeEh():
    1276:	cf 93       	push	r28
    1278:	c8 2f       	mov	r28, r24
    127a:	ec df       	rcall	.-40     	; 0x1254 <NVM::V3::nvm_wait()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:65
    if (!UPDI::nvm_ctrl(0x00)) return false;
    if (0 != _nvmcmd) return UPDI::nvm_ctrl(_nvmcmd);
    return true;
  }
    127c:	60 e0       	ldi	r22, 0x00	; 0
    127e:	70 e1       	ldi	r23, 0x10	; 16
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:62
  }

  bool nvm_ctrl_change (uint8_t _nvmcmd) {
    nvm_wait();
    if (UPDI::recv_byte(NVM_CTRL) && RXDATA == _nvmcmd) return true;
    if (!UPDI::nvm_ctrl(0x00)) return false;
    1280:	80 e0       	ldi	r24, 0x00	; 0
    1282:	90 e0       	ldi	r25, 0x00	; 0
    1284:	35 d9       	rcall	.-3478   	; 0x4f0 <UPDI::recv_byte(unsigned long)>
    1286:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:65

  bool nvm_ctrl_change (uint8_t _nvmcmd) {
    nvm_wait();
    if (UPDI::recv_byte(NVM_CTRL) && RXDATA == _nvmcmd) return true;
    if (!UPDI::nvm_ctrl(0x00)) return false;
    if (0 != _nvmcmd) return UPDI::nvm_ctrl(_nvmcmd);
    1288:	31 f0       	breq	.+12     	; 0x1296 <NVM::V3::nvm_ctrl_change(unsigned char)+0x20>
    128a:	8d b3       	in	r24, 0x1d	; 29
    128c:	8c 13       	cpse	r24, r28
    128e:	03 c0       	rjmp	.+6      	; 0x1296 <NVM::V3::nvm_ctrl_change(unsigned char)+0x20>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:116
      && nvm_ctrl_change(0x00)
    );
  }

  size_t prog_init (void) {
    return nvm_ctrl_change(0x00);
    1290:	81 e0       	ldi	r24, 0x01	; 1
    1292:	cf 91       	pop	r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:117
  }
    1294:	08 95       	ret
    1296:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:78
    D2PRINTF(" NVM_V4_FLPER=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x08)   /* NVM_V4_CMD_FLPER */
      && UPDI::send_byte(_dwAddr, 0xFF)
      && (nvm_wait() & 0x73) == 0
      && nvm_ctrl_change(0x00)
    1298:	a0 d9       	rcall	.-3264   	; 0x5da <UPDI::nvm_ctrl(unsigned char)>
    129a:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:98
      && (nvm_wait() & 0x73) == 0
    );
  }

  size_t prog_init (void) {
    nvm_ctrl_change(0x0F);      /* NVM_V3_CMD_FLPBCLR */
    129c:	d1 f3       	breq	.-12     	; 0x1292 <NVM::V3::nvm_ctrl_change(unsigned char)+0x1c>
    129e:	cc 23       	and	r28, r28
    12a0:	b9 f3       	breq	.-18     	; 0x1290 <NVM::V3::nvm_ctrl_change(unsigned char)+0x1a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:99
    nvm_ctrl_change(0x1F);      /* NVM_V3_CMD_EEPBCLR */
    12a2:	8c 2f       	mov	r24, r28
    12a4:	cf 91       	pop	r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:100
    return nvm_ctrl_change(0x00);
    12a6:	99 c9       	rjmp	.-3278   	; 0x5da <UPDI::nvm_ctrl(unsigned char)>

000012a8 <NVM::V4::prog_init()>:
_ZN3NVM2V49prog_initEv():
    12a8:	80 e0       	ldi	r24, 0x00	; 0
    12aa:	e5 df       	rcall	.-54     	; 0x1276 <NVM::V3::nvm_ctrl_change(unsigned char)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:101
  }
    12ac:	90 e0       	ldi	r25, 0x00	; 0
    12ae:	08 95       	ret

000012b0 <NVM::V4::write_eeprom(unsigned long, unsigned int) [clone .part.5]>:
_ZN3NVM2V416erase_flash_pageEm.part.1():
    12b0:	80 e0       	ldi	r24, 0x00	; 0
    12b2:	e1 cf       	rjmp	.-62     	; 0x1276 <NVM::V3::nvm_ctrl_change(unsigned char)>

000012b4 <NVM::V3::prog_init()>:
_ZN3NVM2V39prog_initEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:77
      && nvm_ctrl_change(0x05)  /* NVM_V3_CMD_FLPERW */
      && (nvm_wait() & 0x73) == 0
    );
  }

  bool write_bytes_flash (uint32_t _dwAddr, size_t _wLength) {
    12b4:	8f e0       	ldi	r24, 0x0F	; 15
    12b6:	df df       	rcall	.-66     	; 0x1276 <NVM::V3::nvm_ctrl_change(unsigned char)>
    12b8:	8f e1       	ldi	r24, 0x1F	; 31
    12ba:	dd df       	rcall	.-70     	; 0x1276 <NVM::V3::nvm_ctrl_change(unsigned char)>
    12bc:	80 e0       	ldi	r24, 0x00	; 0
    12be:	db df       	rcall	.-74     	; 0x1276 <NVM::V3::nvm_ctrl_change(unsigned char)>
    12c0:	90 e0       	ldi	r25, 0x00	; 0
    12c2:	08 95       	ret

000012c4 <NVM::V5::prog_init()>:
_ZN3NVM2V59prog_initEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:80
    D2PRINTF(" NVM_V3_FLPERW=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x00)
    12c4:	f7 cf       	rjmp	.-18     	; 0x12b4 <NVM::V3::prog_init()>

000012c6 <NVM::V3::write_bytes_flash(unsigned long, unsigned int)>:
_ZN3NVM2V317write_bytes_flashEmj():
    12c6:	cf 92       	push	r12
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:83
      && UPDI::send_bytes_block(_dwAddr, _wLength)
      && nvm_ctrl_change(0x05)  /* NVM_V3_CMD_FLPERW */
      && (nvm_wait() & 0x73) == 0
    12c8:	df 92       	push	r13
    12ca:	ef 92       	push	r14
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:81

  bool write_bytes_flash (uint32_t _dwAddr, size_t _wLength) {
    D2PRINTF(" NVM_V3_FLPERW=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x00)
      && UPDI::send_bytes_block(_dwAddr, _wLength)
    12cc:	ff 92       	push	r15
    12ce:	cf 93       	push	r28
    12d0:	df 93       	push	r29
    12d2:	6b 01       	movw	r12, r22
    12d4:	7c 01       	movw	r14, r24
    12d6:	ea 01       	movw	r28, r20
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:82
      && nvm_ctrl_change(0x05)  /* NVM_V3_CMD_FLPERW */
    12d8:	80 e0       	ldi	r24, 0x00	; 0
    12da:	cd df       	rcall	.-102    	; 0x1276 <NVM::V3::nvm_ctrl_change(unsigned char)>
    12dc:	88 23       	and	r24, r24
    12de:	89 f0       	breq	.+34     	; 0x1302 <NVM::V3::write_bytes_flash(unsigned long, unsigned int)+0x3c>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:85
      && (nvm_wait() & 0x73) == 0
    );
  }
    12e0:	ae 01       	movw	r20, r28
    12e2:	c7 01       	movw	r24, r14
    12e4:	b6 01       	movw	r22, r12
    12e6:	a9 d9       	rcall	.-3246   	; 0x63a <UPDI::send_bytes_block(unsigned long, unsigned int)>
    12e8:	88 23       	and	r24, r24
    12ea:	59 f0       	breq	.+22     	; 0x1302 <NVM::V3::write_bytes_flash(unsigned long, unsigned int)+0x3c>
    12ec:	85 e0       	ldi	r24, 0x05	; 5
    12ee:	c3 df       	rcall	.-122    	; 0x1276 <NVM::V3::nvm_ctrl_change(unsigned char)>
    12f0:	88 23       	and	r24, r24
    12f2:	39 f0       	breq	.+14     	; 0x1302 <NVM::V3::write_bytes_flash(unsigned long, unsigned int)+0x3c>
    12f4:	df 91       	pop	r29
    12f6:	cf 91       	pop	r28
    12f8:	ff 90       	pop	r15
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:67
    if (!UPDI::nvm_ctrl(0x00)) return false;
    if (0 != _nvmcmd) return UPDI::nvm_ctrl(_nvmcmd);
    return true;
  }

  bool write_words_flash (uint32_t _dwAddr, size_t _wLength) {
    12fa:	ef 90       	pop	r14
    12fc:	df 90       	pop	r13
    12fe:	cf 90       	pop	r12
    1300:	b3 cf       	rjmp	.-154    	; 0x1268 <NVM::V3::write_eeprom(unsigned long, unsigned int) [clone .part.3]>
    1302:	80 e0       	ldi	r24, 0x00	; 0
    1304:	df 91       	pop	r29
    1306:	cf 91       	pop	r28
    1308:	ff 90       	pop	r15
    130a:	ef 90       	pop	r14
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:70
    D2PRINTF(" NVM_V3_FLPERW=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x00)
    130c:	df 90       	pop	r13
    130e:	cf 90       	pop	r12
    1310:	08 95       	ret

00001312 <NVM::V3::write_words_flash(unsigned long, unsigned int)>:
_ZN3NVM2V317write_words_flashEmj():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:73
      && UPDI::send_words_block(_dwAddr, _wLength)
      && nvm_ctrl_change(0x05)  /* NVM_V3_CMD_FLPERW */
      && (nvm_wait() & 0x73) == 0
    1312:	cf 92       	push	r12
    1314:	df 92       	push	r13
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:71

  bool write_words_flash (uint32_t _dwAddr, size_t _wLength) {
    D2PRINTF(" NVM_V3_FLPERW=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x00)
      && UPDI::send_words_block(_dwAddr, _wLength)
    1316:	ef 92       	push	r14
    1318:	ff 92       	push	r15
    131a:	cf 93       	push	r28
    131c:	df 93       	push	r29
    131e:	6b 01       	movw	r12, r22
    1320:	7c 01       	movw	r14, r24
    1322:	ea 01       	movw	r28, r20
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:72
      && nvm_ctrl_change(0x05)  /* NVM_V3_CMD_FLPERW */
    1324:	80 e0       	ldi	r24, 0x00	; 0
    1326:	a7 df       	rcall	.-178    	; 0x1276 <NVM::V3::nvm_ctrl_change(unsigned char)>
    1328:	88 23       	and	r24, r24
    132a:	89 f0       	breq	.+34     	; 0x134e <NVM::V3::write_words_flash(unsigned long, unsigned int)+0x3c>
    132c:	ae 01       	movw	r20, r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:75
      && (nvm_wait() & 0x73) == 0
    );
  }
    132e:	c7 01       	movw	r24, r14
    1330:	b6 01       	movw	r22, r12
    1332:	f8 d8       	rcall	.-3600   	; 0x524 <UPDI::send_words_block(unsigned long, unsigned int)>
    1334:	88 23       	and	r24, r24
    1336:	59 f0       	breq	.+22     	; 0x134e <NVM::V3::write_words_flash(unsigned long, unsigned int)+0x3c>
    1338:	85 e0       	ldi	r24, 0x05	; 5
    133a:	9d df       	rcall	.-198    	; 0x1276 <NVM::V3::nvm_ctrl_change(unsigned char)>
    133c:	88 23       	and	r24, r24
    133e:	39 f0       	breq	.+14     	; 0x134e <NVM::V3::write_words_flash(unsigned long, unsigned int)+0x3c>
    1340:	df 91       	pop	r29
    1342:	cf 91       	pop	r28
    1344:	ff 90       	pop	r15
    1346:	ef 90       	pop	r14
    1348:	df 90       	pop	r13
    134a:	cf 90       	pop	r12
    134c:	8d cf       	rjmp	.-230    	; 0x1268 <NVM::V3::write_eeprom(unsigned long, unsigned int) [clone .part.3]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:72
    if (!UPDI::nvm_ctrl(0x00)) return false;
    if (0 != _nvmcmd) return UPDI::nvm_ctrl(_nvmcmd);
    return true;
  }

  bool erase_flash_page (uint32_t _dwAddr) {
    134e:	80 e0       	ldi	r24, 0x00	; 0
    1350:	df 91       	pop	r29
    1352:	cf 91       	pop	r28
    1354:	ff 90       	pop	r15
    1356:	ef 90       	pop	r14
    1358:	df 90       	pop	r13
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:75
    D2PRINTF(" NVM_V4_FLPER=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x08)   /* NVM_V4_CMD_FLPER */
    135a:	cf 90       	pop	r12
    135c:	08 95       	ret

0000135e <NVM::V4::erase_flash_page(unsigned long)>:
_ZN3NVM2V416erase_flash_pageEm():
    135e:	cf 92       	push	r12
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:78
      && UPDI::send_byte(_dwAddr, 0xFF)
      && (nvm_wait() & 0x73) == 0
      && nvm_ctrl_change(0x00)
    1360:	df 92       	push	r13
    1362:	ef 92       	push	r14
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:76

  bool erase_flash_page (uint32_t _dwAddr) {
    D2PRINTF(" NVM_V4_FLPER=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x08)   /* NVM_V4_CMD_FLPER */
      && UPDI::send_byte(_dwAddr, 0xFF)
    1364:	ff 92       	push	r15
    1366:	6b 01       	movw	r12, r22
    1368:	7c 01       	movw	r14, r24
    136a:	88 e0       	ldi	r24, 0x08	; 8
    136c:	84 df       	rcall	.-248    	; 0x1276 <NVM::V3::nvm_ctrl_change(unsigned char)>
    136e:	88 23       	and	r24, r24
    1370:	71 f0       	breq	.+28     	; 0x138e <NVM::V4::erase_flash_page(unsigned long)+0x30>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:77
      && (nvm_wait() & 0x73) == 0
    1372:	4f ef       	ldi	r20, 0xFF	; 255
    1374:	c7 01       	movw	r24, r14
    1376:	b6 01       	movw	r22, r12
    1378:	13 d9       	rcall	.-3546   	; 0x5a0 <UPDI::send_byte(unsigned long, unsigned char)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:80
      && nvm_ctrl_change(0x00)
    );
  }
    137a:	88 23       	and	r24, r24
    137c:	41 f0       	breq	.+16     	; 0x138e <NVM::V4::erase_flash_page(unsigned long)+0x30>
    137e:	6a df       	rcall	.-300    	; 0x1254 <NVM::V3::nvm_wait()>
    1380:	83 77       	andi	r24, 0x73	; 115
    1382:	29 f4       	brne	.+10     	; 0x138e <NVM::V4::erase_flash_page(unsigned long)+0x30>
    1384:	ff 90       	pop	r15
    1386:	ef 90       	pop	r14
    1388:	df 90       	pop	r13
    138a:	cf 90       	pop	r12
    138c:	91 cf       	rjmp	.-222    	; 0x12b0 <NVM::V4::write_eeprom(unsigned long, unsigned int) [clone .part.5]>
    138e:	80 e0       	ldi	r24, 0x00	; 0
    1390:	ff 90       	pop	r15
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:62
  constexpr auto NVM_STATUS = 0x1002;
  constexpr auto NVM_DATA   = 0x1006;
  constexpr auto PROD_SIG   = 0x1100;

  uint8_t nvm_wait (void) {
    do { UPDI::recv_byte(NVM_STATUS); } while (RXDATA & 3);
    1392:	ef 90       	pop	r14
    1394:	df 90       	pop	r13
    1396:	cf 90       	pop	r12
    1398:	08 95       	ret

0000139a <NVM::V0::nvm_wait()>:
_ZN3NVM2V08nvm_waitEv():
    139a:	62 e0       	ldi	r22, 0x02	; 2
    139c:	70 e1       	ldi	r23, 0x10	; 16
    139e:	80 e0       	ldi	r24, 0x00	; 0
    13a0:	90 e0       	ldi	r25, 0x00	; 0
    13a2:	a6 d8       	rcall	.-3764   	; 0x4f0 <UPDI::recv_byte(unsigned long)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:63
    return RXDATA;
    13a4:	8d b3       	in	r24, 0x1d	; 29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:64
  }
    13a6:	83 70       	andi	r24, 0x03	; 3
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:108
      && (nvm_wait() & 7) == 0
    );
  }

  size_t prog_init (void) {
    nvm_wait();
    13a8:	c1 f7       	brne	.-16     	; 0x139a <NVM::V0::nvm_wait()>
    13aa:	8d b3       	in	r24, 0x1d	; 29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:109
    UPDI::nvm_ctrl(0x04);         /* NVM_CMD_PBC */
    13ac:	08 95       	ret

000013ae <NVM::V0::prog_init()>:
_ZN3NVM2V09prog_initEv():
    13ae:	f5 df       	rcall	.-22     	; 0x139a <NVM::V0::nvm_wait()>
    13b0:	84 e0       	ldi	r24, 0x04	; 4
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:110
    nvm_wait();
    13b2:	13 d9       	rcall	.-3546   	; 0x5da <UPDI::nvm_ctrl(unsigned char)>
    13b4:	f2 df       	rcall	.-28     	; 0x139a <NVM::V0::nvm_wait()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:111
    return UPDI::nvm_ctrl(0x00);
    13b6:	80 e0       	ldi	r24, 0x00	; 0
    13b8:	10 d9       	rcall	.-3552   	; 0x5da <UPDI::nvm_ctrl(unsigned char)>
    13ba:	90 e0       	ldi	r25, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:112
  }
    13bc:	08 95       	ret

000013be <NVM::V2::nvm_ctrl_change(unsigned char)>:
_ZN3NVM2V215nvm_ctrl_changeEh():
    13be:	cf 93       	push	r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:61
  uint8_t nvm_wait (void) {
    do { UPDI::recv_byte(NVM_STATUS); } while (RXDATA & 3);
    return RXDATA;
  }

  bool nvm_ctrl_change (uint8_t _nvmcmd) {
    13c0:	c8 2f       	mov	r28, r24
    13c2:	eb df       	rcall	.-42     	; 0x139a <NVM::V0::nvm_wait()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:62
    nvm_wait();
    13c4:	60 e0       	ldi	r22, 0x00	; 0
    13c6:	70 e1       	ldi	r23, 0x10	; 16
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:63
    if (UPDI::recv_byte(NVM_CTRL) && RXDATA == _nvmcmd) return true;
    13c8:	80 e0       	ldi	r24, 0x00	; 0
    13ca:	90 e0       	ldi	r25, 0x00	; 0
    13cc:	91 d8       	rcall	.-3806   	; 0x4f0 <UPDI::recv_byte(unsigned long)>
    13ce:	88 23       	and	r24, r24
    13d0:	31 f0       	breq	.+12     	; 0x13de <NVM::V2::nvm_ctrl_change(unsigned char)+0x20>
    13d2:	8d b3       	in	r24, 0x1d	; 29
    13d4:	8c 13       	cpse	r24, r28
    13d6:	03 c0       	rjmp	.+6      	; 0x13de <NVM::V2::nvm_ctrl_change(unsigned char)+0x20>
    13d8:	81 e0       	ldi	r24, 0x01	; 1
    13da:	cf 91       	pop	r28
    13dc:	08 95       	ret
    13de:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:67
    if (!UPDI::nvm_ctrl(0x00)) return false;
    if (0 != _nvmcmd) return UPDI::nvm_ctrl(_nvmcmd);
    return true;
  }
    13e0:	fc d8       	rcall	.-3592   	; 0x5da <UPDI::nvm_ctrl(unsigned char)>
    13e2:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:64
  }

  bool nvm_ctrl_change (uint8_t _nvmcmd) {
    nvm_wait();
    if (UPDI::recv_byte(NVM_CTRL) && RXDATA == _nvmcmd) return true;
    if (!UPDI::nvm_ctrl(0x00)) return false;
    13e4:	d1 f3       	breq	.-12     	; 0x13da <NVM::V2::nvm_ctrl_change(unsigned char)+0x1c>
    13e6:	cc 23       	and	r28, r28
    13e8:	b9 f3       	breq	.-18     	; 0x13d8 <NVM::V2::nvm_ctrl_change(unsigned char)+0x1a>
    13ea:	8c 2f       	mov	r24, r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:65
    if (0 != _nvmcmd) return UPDI::nvm_ctrl(_nvmcmd);
    13ec:	cf 91       	pop	r28
    13ee:	f5 c8       	rjmp	.-3606   	; 0x5da <UPDI::nvm_ctrl(unsigned char)>

000013f0 <NVM::V2::prog_init()>:
_ZN3NVM2V29prog_initEv():
    13f0:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:67
    return true;
  }
    13f2:	e5 df       	rcall	.-54     	; 0x13be <NVM::V2::nvm_ctrl_change(unsigned char)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:65

  bool nvm_ctrl_change (uint8_t _nvmcmd) {
    nvm_wait();
    if (UPDI::recv_byte(NVM_CTRL) && RXDATA == _nvmcmd) return true;
    if (!UPDI::nvm_ctrl(0x00)) return false;
    if (0 != _nvmcmd) return UPDI::nvm_ctrl(_nvmcmd);
    13f4:	90 e0       	ldi	r25, 0x00	; 0
    13f6:	08 95       	ret

000013f8 <NVM::V2::write_eeprom(unsigned long, unsigned int) [clone .part.5]>:
_ZN3NVM2V216erase_flash_pageEm.part.1():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:113
      && nvm_ctrl_change(0x00)
    );
  }

  size_t prog_init (void) {
    return nvm_ctrl_change(0x00);
    13f8:	80 e0       	ldi	r24, 0x00	; 0
    13fa:	e1 cf       	rjmp	.-62     	; 0x13be <NVM::V2::nvm_ctrl_change(unsigned char)>

000013fc <NVM::V2::erase_flash_page(unsigned long)>:
_ZN3NVM2V216erase_flash_pageEm():
    13fc:	cf 92       	push	r12
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:114
  }
    13fe:	df 92       	push	r13
    1400:	ef 92       	push	r14
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:75
    D2PRINTF(" NVM_V2_FLPER=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x08)   /* NVM_V2_CMD_FLPER */
      && UPDI::send_byte(_dwAddr, 0xFF)
      && (nvm_wait() & 0x73) == 0
      && nvm_ctrl_change(0x00)
    1402:	ff 92       	push	r15
    1404:	6b 01       	movw	r12, r22
    1406:	7c 01       	movw	r14, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:69
    if (!UPDI::nvm_ctrl(0x00)) return false;
    if (0 != _nvmcmd) return UPDI::nvm_ctrl(_nvmcmd);
    return true;
  }

  bool erase_flash_page (uint32_t _dwAddr) {
    1408:	88 e0       	ldi	r24, 0x08	; 8
    140a:	d9 df       	rcall	.-78     	; 0x13be <NVM::V2::nvm_ctrl_change(unsigned char)>
    140c:	88 23       	and	r24, r24
    140e:	71 f0       	breq	.+28     	; 0x142c <NVM::V2::erase_flash_page(unsigned long)+0x30>
    1410:	4f ef       	ldi	r20, 0xFF	; 255
    1412:	c7 01       	movw	r24, r14
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:72
    D2PRINTF(" NVM_V2_FLPER=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x08)   /* NVM_V2_CMD_FLPER */
    1414:	b6 01       	movw	r22, r12
    1416:	c4 d8       	rcall	.-3704   	; 0x5a0 <UPDI::send_byte(unsigned long, unsigned char)>
    1418:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:75
      && UPDI::send_byte(_dwAddr, 0xFF)
      && (nvm_wait() & 0x73) == 0
      && nvm_ctrl_change(0x00)
    141a:	41 f0       	breq	.+16     	; 0x142c <NVM::V2::erase_flash_page(unsigned long)+0x30>
    141c:	be df       	rcall	.-132    	; 0x139a <NVM::V0::nvm_wait()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:73

  bool erase_flash_page (uint32_t _dwAddr) {
    D2PRINTF(" NVM_V2_FLPER=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x08)   /* NVM_V2_CMD_FLPER */
      && UPDI::send_byte(_dwAddr, 0xFF)
    141e:	83 77       	andi	r24, 0x73	; 115
    1420:	29 f4       	brne	.+10     	; 0x142c <NVM::V2::erase_flash_page(unsigned long)+0x30>
    1422:	ff 90       	pop	r15
    1424:	ef 90       	pop	r14
    1426:	df 90       	pop	r13
    1428:	cf 90       	pop	r12
    142a:	e6 cf       	rjmp	.-52     	; 0x13f8 <NVM::V2::write_eeprom(unsigned long, unsigned int) [clone .part.5]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:74
      && (nvm_wait() & 0x73) == 0
    142c:	80 e0       	ldi	r24, 0x00	; 0
    142e:	ff 90       	pop	r15
    1430:	ef 90       	pop	r14
    1432:	df 90       	pop	r13
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:77
      && nvm_ctrl_change(0x00)
    );
  }
    1434:	cf 90       	pop	r12
    1436:	08 95       	ret

00001438 <NVM::V1::write_memory()>:
_ZN3NVM2V112write_memoryEv():
    1438:	90 e0       	ldi	r25, 0x00	; 0
    143a:	80 e0       	ldi	r24, 0x00	; 0
    143c:	08 95       	ret

0000143e <NVM::V1::read_memory()>:
_ZN3NVM2V111read_memoryEv():
    143e:	90 e0       	ldi	r25, 0x00	; 0
    1440:	80 e0       	ldi	r24, 0x00	; 0
    1442:	08 95       	ret

00001444 <NVM::V1::erase_memory()>:
_ZN3NVM2V112erase_memoryEv():
    1444:	90 e0       	ldi	r25, 0x00	; 0
    1446:	80 e0       	ldi	r24, 0x00	; 0
    1448:	08 95       	ret

0000144a <USB::setup_device(bool) [clone .part.2]>:
_ZN3USB12setup_deviceEb.part.2():
    144a:	cf 93       	push	r28
    144c:	df 93       	push	r29
    144e:	c0 e0       	ldi	r28, 0x00	; 0
    1450:	dc e0       	ldi	r29, 0x0C	; 12
    1452:	18 82       	st	Y, r1
    1454:	10 92 04 0c 	sts	0x0C04, r1	; 0x800c04 <__TEXT_REGION_LENGTH__+0x7f0c04>
    1458:	80 e7       	ldi	r24, 0x70	; 112
    145a:	94 e6       	ldi	r25, 0x64	; 100
    145c:	80 93 06 0c 	sts	0x0C06, r24	; 0x800c06 <__TEXT_REGION_LENGTH__+0x7f0c06>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:236
    EP_MEM.cci_header.wIndex        = 1;    /* Interface#1 */
    EP_MEM.cci_header.wLength       = 2;
    EP_MEM.cci_wValue               = _state;
  }

  void setup_device (bool _force) {
    1460:	90 93 07 0c 	sts	0x0C07, r25	; 0x800c07 <__TEXT_REGION_LENGTH__+0x7f0c07>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:240
    if (_led_mode != 3) SYS::LED_Flash();
    USB0_ADDR = 0;
    if (USB0_CTRLA || _force) {
      USB0_CTRLA = 0;
    1464:	81 e0       	ldi	r24, 0x01	; 1
    1466:	80 93 01 0c 	sts	0x0C01, r24	; 0x800c01 <__TEXT_REGION_LENGTH__+0x7f0c01>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:241
      USB0_FIFOWP = 0;
    146a:	1e ba       	out	0x1e, r1	; 30
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:242
      USB0_EPPTR = (uint16_t)&EP_TABLE.EP;
    146c:	1f ba       	out	0x1f, r1	; 31
    146e:	1c ba       	out	0x1c, r1	; 28
    1470:	10 92 66 64 	sts	0x6466, r1	; 0x806466 <_send_break>
    1474:	10 92 67 64 	sts	0x6467, r1	; 0x806467 <_send_break+0x1>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:243
      USB0_CTRLB = USB_ATTACH_bm;
    1478:	10 92 65 64 	sts	0x6465, r1	; 0x806465 <_send_count>
    147c:	10 92 64 64 	sts	0x6464, r1	; 0x806464 <_recv_count>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:245
      GPCONF = 0;
      PGCONF = 0;
    1480:	10 92 63 64 	sts	0x6463, r1	; 0x806463 <_set_config>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:247
      RXSTAT = 0;
      _send_break = 0;
    1484:	10 92 62 64 	sts	0x6462, r1	; 0x806462 <_sof_count>
    1488:	4a e4       	ldi	r20, 0x4A	; 74
    148a:	50 e0       	ldi	r21, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:248
      _send_count = 0;
    148c:	61 ed       	ldi	r22, 0xD1	; 209
    148e:	71 e0       	ldi	r23, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:249
      _recv_count = 0;
    1490:	88 e6       	ldi	r24, 0x68	; 104
    1492:	94 e6       	ldi	r25, 0x64	; 100
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:250
      _set_config = 0;
    1494:	0e 94 df 1a 	call	0x35be	; 0x35be <memcpy_P>
set_cci_data():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:251
      _sof_count = 0;
    1498:	ea e4       	ldi	r30, 0x4A	; 74
    149a:	f3 e6       	ldi	r31, 0x63	; 99
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:252
      memcpy_P(&EP_TABLE, &ep_init, sizeof(EP_TABLE_t));
    149c:	81 ea       	ldi	r24, 0xA1	; 161
    149e:	80 87       	std	Z+8, r24	; 0x08
    14a0:	80 e2       	ldi	r24, 0x20	; 32
    14a2:	81 87       	std	Z+9, r24	; 0x09
    14a4:	12 86       	std	Z+10, r1	; 0x0a
    14a6:	13 86       	std	Z+11, r1	; 0x0b
    14a8:	81 e0       	ldi	r24, 0x01	; 1
    14aa:	90 e0       	ldi	r25, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:228
    return _size;
  }

  void set_cci_data (uint16_t _state) {
    _set_serial_state = _state;
    EP_MEM.cci_header.bmRequestType = 0xA1; /* REQTYPE_DIRECTION | REQTYPE_CLASS | RECIPIENT_INTERFACE */
    14ac:	84 87       	std	Z+12, r24	; 0x0c
    14ae:	95 87       	std	Z+13, r25	; 0x0d
    14b0:	82 e0       	ldi	r24, 0x02	; 2
    14b2:	90 e0       	ldi	r25, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:229
    EP_MEM.cci_header.bRequest      = 0x20; /* CDC_REQ_SerialState */
    14b4:	86 87       	std	Z+14, r24	; 0x0e
    14b6:	97 87       	std	Z+15, r25	; 0x0f
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:230
    EP_MEM.cci_header.wValue        = 0;
    14b8:	10 8a       	std	Z+16, r1	; 0x10
    14ba:	11 8a       	std	Z+17, r1	; 0x11
_ZN3USB12setup_deviceEb.part.2():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:231
    EP_MEM.cci_header.wIndex        = 1;    /* Interface#1 */
    14bc:	83 e8       	ldi	r24, 0x83	; 131
    14be:	88 83       	st	Y, r24
    14c0:	df 91       	pop	r29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:232
    EP_MEM.cci_header.wLength       = 2;
    14c2:	cf 91       	pop	r28
    14c4:	08 95       	ret

000014c6 <USART::disable_vcp() [clone .part.1]>:
_ZN5USART11disable_vcpEv.part.1():
    14c6:	8a e1       	ldi	r24, 0x1A	; 26
    14c8:	8a 95       	dec	r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:233
    EP_MEM.cci_wValue               = _state;
    14ca:	f1 f7       	brne	.-4      	; 0x14c8 <USART::disable_vcp() [clone .part.1]+0x2>
    14cc:	00 c0       	rjmp	.+0      	; 0x14ce <USART::disable_vcp() [clone .part.1]+0x8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:254
      _recv_count = 0;
      _set_config = 0;
      _sof_count = 0;
      memcpy_P(&EP_TABLE, &ep_init, sizeof(EP_TABLE_t));
      set_cci_data(0x00);
      USB0_CTRLA = USB_ENABLE_bm | (USB_ENDPOINTS_MAX - 1);
    14ce:	8f b7       	in	r24, 0x3f	; 63
__iCliRetVal():
    14d0:	f8 94       	cli
_ZN5USART11disable_vcpEv.part.1():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:256
    }
  }
    14d2:	10 92 06 08 	sts	0x0806, r1	; 0x800806 <__TEXT_REGION_LENGTH__+0x7f0806>
    14d6:	10 92 05 08 	sts	0x0805, r1	; 0x800805 <__TEXT_REGION_LENGTH__+0x7f0805>
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/delay_busywait.h:33
static __inline__ __attribute__((__always_inline__)) void delay_micros (uint32_t _us);
static __inline__ __attribute__((__always_inline__)) void delay_millis (uint32_t _ms);

void delay_micros (uint32_t _us) {
  if (F_CPU >= 1000000L) {
    __builtin_avr_delay_cycles((F_CPU / 1000000L) * _us);
    14da:	1c ba       	out	0x1c, r1	; 28
    14dc:	1d ba       	out	0x1d, r1	; 29
    14de:	95 e1       	ldi	r25, 0x15	; 21
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:77
  void disable_vcp (void) {
    if (USART0_CTRLB) {
      // D1PRINTF(" VCP=OFF\r\n");
      /* Allow time to move USART0_TXDATA */
      delay_micros(4);
      ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    14e0:	90 93 e2 05 	sts	0x05E2, r25	; 0x8005e2 <__TEXT_REGION_LENGTH__+0x7f05e2>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:80
        /* Simply clearing the CTRLB does not disable the USART completely.                    */
        /* This errata is not documented for the AVR-DU, but is the same as for tinyAVR-0 etc. */
        USART0_CTRLB = 0;
    14e4:	f1 98       	cbi	0x1e, 1	; 30
__iRestore():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:81
        USART0_CTRLA = 0;
    14e6:	8f bf       	out	0x3f, r24	; 63
_ZN5USART11disable_vcpEv.part.1():
    14e8:	88 e0       	ldi	r24, 0x08	; 8
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:82
        RXSTAT = 0;
    14ea:	80 93 12 04 	sts	0x0412, r24	; 0x800412 <__TEXT_REGION_LENGTH__+0x7f0412>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:84
        RXDATA = 0;
        PORTMUX_USARTROUTEA = PORTMUX_USART_NONE;
    14ee:	02 98       	cbi	0x00, 2	; 0
    14f0:	03 98       	cbi	0x00, 3	; 0
    14f2:	08 95       	ret

000014f4 <USART::setup()>:
_ZN5USART5setupEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:85
        bit_clear(GPCONF, GPCONF_VCP_bp);
    14f4:	80 91 a1 60 	lds	r24, 0x60A1	; 0x8060a1 <_led_mode>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:87
      }
      pinControlRegister(PIN_VCP_TXD) = PORT_PULLUPEN_bm;
    14f8:	84 30       	cpi	r24, 0x04	; 4
    14fa:	81 f0       	breq	.+32     	; 0x151c <USART::setup()+0x28>
    14fc:	10 92 00 0a 	sts	0x0A00, r1	; 0x800a00 <__TEXT_REGION_LENGTH__+0x7f0a00>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:89
      pinLogicOpen(PIN_VCP_TXD);  /* CONFIG_PGM_TYPE!=1 is internal shared TCLK */
      pinLogicOpen(PIN_VCP_RXD);
    1500:	10 92 1a 0b 	sts	0x0B1A, r1	; 0x800b1a <__TEXT_REGION_LENGTH__+0x7f0b1a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:286

  void LED_TCB1 (uint8_t _mode, uint16_t _ccmp) {
    if (_led_mode != _mode) {
    1504:	82 e2       	ldi	r24, 0x22	; 34
    1506:	91 e1       	ldi	r25, 0x11	; 17
    1508:	80 93 1c 0b 	sts	0x0B1C, r24	; 0x800b1c <__TEXT_REGION_LENGTH__+0x7f0b1c>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:287
      TCA0_SPLIT_CTRLA = 0;
    150c:	90 93 1d 0b 	sts	0x0B1D, r25	; 0x800b1d <__TEXT_REGION_LENGTH__+0x7f0b1d>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:288
      TCB1_CNTL = 0;
    1510:	8f e0       	ldi	r24, 0x0F	; 15
    1512:	80 93 10 0b 	sts	0x0B10, r24	; 0x800b10 <__TEXT_REGION_LENGTH__+0x7f0b10>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:289
      TCB1_CCMP = _ccmp;
    1516:	84 e0       	ldi	r24, 0x04	; 4
    1518:	80 93 a1 60 	sts	0x60A1, r24	; 0x8060a1 <_led_mode>
disable_vcp():
    151c:	80 91 06 08 	lds	r24, 0x0806	; 0x800806 <__TEXT_REGION_LENGTH__+0x7f0806>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:290
      TCB1_CTRLA = TCB_ENABLE_bm | TCB_CLKSEL_EVENT_gc;
    1520:	81 11       	cpse	r24, r1
    1522:	d1 df       	rcall	.-94     	; 0x14c6 <USART::disable_vcp() [clone .part.1]>
_ZN5USART5setupEv():
    1524:	00 98       	cbi	0x00, 0	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:291
      _led_mode = _mode;
    1526:	01 98       	cbi	0x00, 1	; 0
    1528:	02 98       	cbi	0x00, 2	; 0
    152a:	80 91 46 63 	lds	r24, 0x6346	; 0x806346 <_jtag_arch>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:73
    } while (--_delay);
  }

  /*** Stop the VCP and release the ports in use. ***/
  void disable_vcp (void) {
    if (USART0_CTRLB) {
    152e:	83 30       	cpi	r24, 0x03	; 3
    1530:	19 f4       	brne	.+6      	; 0x1538 <USART::setup()+0x44>
    1532:	04 9a       	sbi	0x00, 4	; 0
    1534:	06 98       	cbi	0x00, 6	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:30
namespace USART {

  void setup (void) {
    SYS::LED_Fast();
    disable_vcp();
    pinLogicOpen(PIN_PGM_TDAT);
    1536:	08 95       	ret
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:31
    pinLogicOpen(PIN_PGM_TRST);
    1538:	04 98       	cbi	0x00, 4	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:32
    pinLogicOpen(PIN_PGM_TCLK);
    153a:	fc cf       	rjmp	.-8      	; 0x1534 <USART::setup()+0x40>

0000153c <UPDI::sys_wait_clear(unsigned char)>:
_ZN4UPDI14sys_wait_clearEh():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:34
  #if CONFIG_PGM_TYPE == 0
    if (_jtag_arch == 3) {
    153c:	cf 93       	push	r28
    153e:	df 93       	push	r29
delay_micros():
    1540:	e2 e1       	ldi	r30, 0x12	; 18
    1542:	f1 e0       	ldi	r31, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:35
      pinLogicPush(PIN_PGM_PDAT);
    1544:	31 97       	sbiw	r30, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:40
    }
    else {
      pinLogicOpen(PIN_PGM_PDAT);
    }
    pinLogicOpen(PIN_PGM_PCLK);
    1546:	f1 f7       	brne	.-4      	; 0x1544 <UPDI::sys_wait_clear(unsigned char)+0x8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:42
  #endif
  }
    1548:	00 c0       	rjmp	.+0      	; 0x154a <UPDI::sys_wait_clear(unsigned char)+0xe>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:38
  #if CONFIG_PGM_TYPE == 0
    if (_jtag_arch == 3) {
      pinLogicPush(PIN_PGM_PDAT);
    }
    else {
      pinLogicOpen(PIN_PGM_PDAT);
    154a:	00 00       	nop
    154c:	c1 e0       	ldi	r28, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:258
      sys_status();
    } while (bit_is_clear(RXDATA, _bit));
    return true;
  }

  bool sys_wait_clear (uint8_t _bit) {
    154e:	d0 e0       	ldi	r29, 0x00	; 0
    1550:	02 c0       	rjmp	.+4      	; 0x1556 <UPDI::sys_wait_clear(unsigned char)+0x1a>
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/delay_busywait.h:33
    1552:	cc 0f       	add	r28, r28
    1554:	dd 1f       	adc	r29, r29
    1556:	8a 95       	dec	r24
    1558:	e2 f7       	brpl	.-8      	; 0x1552 <UPDI::sys_wait_clear(unsigned char)+0x16>
_ZN4UPDI14sys_wait_clearEh():
    155a:	0e 94 66 02 	call	0x4cc	; 0x4cc <UPDI::sys_status()>
    155e:	8d b3       	in	r24, 0x1d	; 29
    1560:	90 e0       	ldi	r25, 0x00	; 0
    1562:	8c 23       	and	r24, r28
    1564:	9d 23       	and	r25, r29
    1566:	89 2b       	or	r24, r25
    1568:	c1 f7       	brne	.-16     	; 0x155a <UPDI::sys_wait_clear(unsigned char)+0x1e>
    156a:	81 e0       	ldi	r24, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:261
    SYS::delay_55us();
    do {
      sys_status();
    156c:	df 91       	pop	r29
    156e:	cf 91       	pop	r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:262
    } while (bit_is_set(RXDATA, _bit));
    1570:	08 95       	ret

00001572 <UPDI::sys_wait_set(unsigned char)>:
_ZN4UPDI12sys_wait_setEh():
    1572:	cf 93       	push	r28
    1574:	df 93       	push	r29
delay_micros():
    1576:	e2 e1       	ldi	r30, 0x12	; 18
    1578:	f1 e0       	ldi	r31, 0x01	; 1
    157a:	31 97       	sbiw	r30, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:264
    return true;
  }
    157c:	f1 f7       	brne	.-4      	; 0x157a <UPDI::sys_wait_set(unsigned char)+0x8>
    157e:	00 c0       	rjmp	.+0      	; 0x1580 <UPDI::sys_wait_set(unsigned char)+0xe>
    1580:	00 00       	nop
    1582:	c1 e0       	ldi	r28, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:250
      key_status();
    } while (bit_is_set(RXDATA, _bit));
    return true;
  }

  bool sys_wait_set (uint8_t _bit) {
    1584:	d0 e0       	ldi	r29, 0x00	; 0
    1586:	02 c0       	rjmp	.+4      	; 0x158c <UPDI::sys_wait_set(unsigned char)+0x1a>
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/delay_busywait.h:33
    1588:	cc 0f       	add	r28, r28
    158a:	dd 1f       	adc	r29, r29
    158c:	8a 95       	dec	r24
    158e:	e2 f7       	brpl	.-8      	; 0x1588 <UPDI::sys_wait_set(unsigned char)+0x16>
_ZN4UPDI12sys_wait_setEh():
    1590:	0e 94 66 02 	call	0x4cc	; 0x4cc <UPDI::sys_status()>
    1594:	8d b3       	in	r24, 0x1d	; 29
    1596:	90 e0       	ldi	r25, 0x00	; 0
    1598:	8c 23       	and	r24, r28
    159a:	9d 23       	and	r25, r29
    159c:	89 2b       	or	r24, r25
    159e:	c1 f3       	breq	.-16     	; 0x1590 <UPDI::sys_wait_set(unsigned char)+0x1e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:253
    SYS::delay_55us();
    do {
      sys_status();
    15a0:	81 e0       	ldi	r24, 0x01	; 1
    15a2:	df 91       	pop	r29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:254
    } while (bit_is_clear(RXDATA, _bit));
    15a4:	cf 91       	pop	r28
    15a6:	08 95       	ret

000015a8 <UPDI::key_wait_set(unsigned char)>:
_ZN4UPDI12key_wait_setEh():
    15a8:	cf 93       	push	r28
    15aa:	df 93       	push	r29
delay_micros():
    15ac:	e2 e1       	ldi	r30, 0x12	; 18
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:256
    return true;
  }
    15ae:	f1 e0       	ldi	r31, 0x01	; 1
    15b0:	31 97       	sbiw	r30, 0x01	; 1
    15b2:	f1 f7       	brne	.-4      	; 0x15b0 <UPDI::key_wait_set(unsigned char)+0x8>
    15b4:	00 c0       	rjmp	.+0      	; 0x15b6 <UPDI::key_wait_set(unsigned char)+0xe>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:234
  bool sys_status (void) {
    const static uint8_t _sys_stat[] = {0x55, 0x8B};
    return send_bytes(_sys_stat, 2) && recv();
  }

  bool key_wait_set (uint8_t _bit) {
    15b6:	00 00       	nop
    15b8:	c1 e0       	ldi	r28, 0x01	; 1
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/delay_busywait.h:33
    15ba:	d0 e0       	ldi	r29, 0x00	; 0
    15bc:	02 c0       	rjmp	.+4      	; 0x15c2 <UPDI::key_wait_set(unsigned char)+0x1a>
    15be:	cc 0f       	add	r28, r28
    15c0:	dd 1f       	adc	r29, r29
    15c2:	8a 95       	dec	r24
    15c4:	e2 f7       	brpl	.-8      	; 0x15be <UPDI::key_wait_set(unsigned char)+0x16>
_ZN4UPDI12key_wait_setEh():
    15c6:	0e 94 6f 02 	call	0x4de	; 0x4de <UPDI::key_status()>
    15ca:	8d b3       	in	r24, 0x1d	; 29
    15cc:	90 e0       	ldi	r25, 0x00	; 0
    15ce:	8c 23       	and	r24, r28
    15d0:	9d 23       	and	r25, r29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:237
    SYS::delay_55us();
    do {
      key_status();
    15d2:	89 2b       	or	r24, r25
    15d4:	c1 f3       	breq	.-16     	; 0x15c6 <UPDI::key_wait_set(unsigned char)+0x1e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:238
    } while (bit_is_clear(RXDATA, _bit));
    15d6:	81 e0       	ldi	r24, 0x01	; 1
    15d8:	df 91       	pop	r29
    15da:	cf 91       	pop	r28
    15dc:	08 95       	ret

000015de <UPDI::set_nvmprog_key(bool)>:
_ZN4UPDI15set_nvmprog_keyEb():
    15de:	cf 93       	push	r28
    15e0:	c8 2f       	mov	r28, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:240
    return true;
  }
    15e2:	6a e0       	ldi	r22, 0x0A	; 10
    15e4:	70 e0       	ldi	r23, 0x00	; 0
    15e6:	83 e6       	ldi	r24, 0x63	; 99
    15e8:	90 e6       	ldi	r25, 0x60	; 96
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:266
      sys_status();
    } while (bit_is_set(RXDATA, _bit));
    return true;
  }

  bool set_nvmprog_key (bool _reset = true) {
    15ea:	0e 94 4c 02 	call	0x498	; 0x498 <UPDI::send_bytes(unsigned char const*, unsigned int)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:268
    D1PRINTF(" PROG_KEY=");   /* wait set NVMPROG */
    if (!send_bytes(nvmprog_key, sizeof(nvmprog_key)) || !key_wait_set(4)) return false;
    15ee:	81 11       	cpse	r24, r1
    15f0:	03 c0       	rjmp	.+6      	; 0x15f8 <UPDI::set_nvmprog_key(bool)+0x1a>
    15f2:	80 e0       	ldi	r24, 0x00	; 0
    15f4:	cf 91       	pop	r28
    15f6:	08 95       	ret
    15f8:	84 e0       	ldi	r24, 0x04	; 4
    15fa:	d6 df       	rcall	.-84     	; 0x15a8 <UPDI::key_wait_set(unsigned char)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:270
    return _reset ? sys_reset(false) : true;
  }
    15fc:	88 23       	and	r24, r24
    15fe:	c9 f3       	breq	.-14     	; 0x15f2 <UPDI::set_nvmprog_key(bool)+0x14>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:268
    return true;
  }

  bool set_nvmprog_key (bool _reset = true) {
    D1PRINTF(" PROG_KEY=");   /* wait set NVMPROG */
    if (!send_bytes(nvmprog_key, sizeof(nvmprog_key)) || !key_wait_set(4)) return false;
    1600:	cc 23       	and	r28, r28
    1602:	c1 f3       	breq	.-16     	; 0x15f4 <UPDI::set_nvmprog_key(bool)+0x16>
sys_reset():
    1604:	66 e0       	ldi	r22, 0x06	; 6
    1606:	70 e0       	ldi	r23, 0x00	; 0
    1608:	87 e9       	ldi	r24, 0x97	; 151
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:269
    return _reset ? sys_reset(false) : true;
    160a:	90 e6       	ldi	r25, 0x60	; 96
_ZN4UPDI15set_nvmprog_keyEb():
    160c:	cf 91       	pop	r28
sys_reset():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:137
    const static uint8_t _reset[] = {
      0x55, 0xC8, 0x59, /* SYSRST */
      0x55, 0xC8, 0x00, /* SYSRUN */
      0x55, 0xC3, 0x04  /* UPDIDIS */
    };
    return send_bytes(_reset, _leave ? 9 : 6);
    160e:	0c 94 4c 02 	jmp	0x498	; 0x498 <UPDI::send_bytes(unsigned char const*, unsigned int)>

00001612 <UPDI::enter_progmode()>:
_ZN4UPDI14enter_progmodeEv():
    1612:	f9 9b       	sbis	0x1f, 1	; 31
    1614:	03 c0       	rjmp	.+6      	; 0x161c <UPDI::enter_progmode()+0xa>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:270

  bool set_nvmprog_key (bool _reset = true) {
    D1PRINTF(" PROG_KEY=");   /* wait set NVMPROG */
    if (!send_bytes(nvmprog_key, sizeof(nvmprog_key)) || !key_wait_set(4)) return false;
    return _reset ? sys_reset(false) : true;
  }
    1616:	81 e0       	ldi	r24, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:137
    const static uint8_t _reset[] = {
      0x55, 0xC8, 0x59, /* SYSRST */
      0x55, 0xC8, 0x00, /* SYSRUN */
      0x55, 0xC3, 0x04  /* UPDIDIS */
    };
    return send_bytes(_reset, _leave ? 9 : 6);
    1618:	90 e0       	ldi	r25, 0x00	; 0
    161a:	08 95       	ret
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:470
  inline size_t disconnect (void) {
    return sys_reset(true);
  }

  size_t enter_progmode (void) {
    if (bit_is_set(PGCONF, PGCONF_PROG_bp)) return 1;
    161c:	81 e0       	ldi	r24, 0x01	; 1
    161e:	df df       	rcall	.-66     	; 0x15de <UPDI::set_nvmprog_key(bool)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:479

    /* Verify that the NVMPROG bit is cleared. */
    /* A locked device does not have LOCKSTATUS cleared. */
    if (key_wait_clear(4) && sys_status() && bit_is_clear(RXDATA, 0)) {
      bit_set(PGCONF, PGCONF_PROG_bp);
      (*Command_Table.prog_init)();
    1620:	88 23       	and	r24, r24
    1622:	b9 f0       	breq	.+46     	; 0x1652 <UPDI::enter_progmode()+0x40>
delay_micros():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:473

  size_t enter_progmode (void) {
    if (bit_is_set(PGCONF, PGCONF_PROG_bp)) return 1;

    /* Enter NVMPROGKEY. */
    if (!set_nvmprog_key()) return 0;
    1624:	82 e1       	ldi	r24, 0x12	; 18
    1626:	91 e0       	ldi	r25, 0x01	; 1
    1628:	01 97       	sbiw	r24, 0x01	; 1
    162a:	f1 f7       	brne	.-4      	; 0x1628 <UPDI::enter_progmode()+0x16>
    162c:	00 c0       	rjmp	.+0      	; 0x162e <UPDI::enter_progmode()+0x1c>
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/delay_busywait.h:33
    162e:	00 00       	nop
key_wait_clear():
    1630:	0e 94 6f 02 	call	0x4de	; 0x4de <UPDI::key_status()>
    1634:	ec 99       	sbic	0x1d, 4	; 29
    1636:	fc cf       	rjmp	.-8      	; 0x1630 <UPDI::enter_progmode()+0x1e>
_ZN4UPDI14enter_progmodeEv():
    1638:	0e 94 66 02 	call	0x4cc	; 0x4cc <UPDI::sys_status()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:245
  }

  bool key_wait_clear (uint8_t _bit) {
    SYS::delay_55us();
    do {
      key_status();
    163c:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:246
    } while (bit_is_set(RXDATA, _bit));
    163e:	59 f3       	breq	.-42     	; 0x1616 <UPDI::enter_progmode()+0x4>
    1640:	e8 99       	sbic	0x1d, 0	; 29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:477
    /* Enter NVMPROGKEY. */
    if (!set_nvmprog_key()) return 0;

    /* Verify that the NVMPROG bit is cleared. */
    /* A locked device does not have LOCKSTATUS cleared. */
    if (key_wait_clear(4) && sys_status() && bit_is_clear(RXDATA, 0)) {
    1642:	e9 cf       	rjmp	.-46     	; 0x1616 <UPDI::enter_progmode()+0x4>
    1644:	f9 9a       	sbi	0x1f, 1	; 31
    1646:	e0 91 3e 63 	lds	r30, 0x633E	; 0x80633e <Command_Table>
    164a:	f0 91 3f 63 	lds	r31, 0x633F	; 0x80633f <Command_Table+0x1>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:478
      bit_set(PGCONF, PGCONF_PROG_bp);
    164e:	09 95       	icall
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:479
      (*Command_Table.prog_init)();
    1650:	e2 cf       	rjmp	.-60     	; 0x1616 <UPDI::enter_progmode()+0x4>
    1652:	90 e0       	ldi	r25, 0x00	; 0
    1654:	80 e0       	ldi	r24, 0x00	; 0
    1656:	08 95       	ret

00001658 <UPDI::write_userrow()>:
_ZN4UPDI13write_userrowEv():
    1658:	cf 92       	push	r12
    165a:	df 92       	push	r13
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:473

  size_t enter_progmode (void) {
    if (bit_is_set(PGCONF, PGCONF_PROG_bp)) return 1;

    /* Enter NVMPROGKEY. */
    if (!set_nvmprog_key()) return 0;
    165c:	ef 92       	push	r14
    165e:	ff 92       	push	r15
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:485
    }
    D1PRINTF("%02X\r\n", RXDATA);

    /* In either case it returns success. */
    return 1;
  }
    1660:	cf 93       	push	r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:312
  /*
   * Use the UPDI ACC to write to the USERROW of the locked chip.
   * The write start address should match the USERROW address.
   * The write length should match the USERROW field.
   */
  bool write_userrow (void) {
    1662:	df 93       	push	r29
    1664:	f8 99       	sbic	0x1f, 0	; 31
    1666:	09 c0       	rjmp	.+18     	; 0x167a <UPDI::write_userrow()+0x22>
    1668:	c0 e0       	ldi	r28, 0x00	; 0
    166a:	8c 2f       	mov	r24, r28
    166c:	df 91       	pop	r29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:321
    uint32_t _dwAddr = packet.out.dwAddr;
    size_t  _wLength = packet.out.dwLength;
    if (bit_is_clear(PGCONF, PGCONF_UPDI_bp)
     || m_type != 0xC5
     || _wLength != Device_Descriptor.UPDI.user_sig_bytes
     || (uint16_t)_dwAddr != Device_Descriptor.UPDI.user_sig_base) return false;
    166e:	cf 91       	pop	r28
    1670:	ff 90       	pop	r15
    1672:	ef 90       	pop	r14
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:342
      sys_wait_set(3);    /* wait set PROGSTART */
      D1PRINTF(" RE_PROGSTART=%02X\r\n", RXDATA);
      return true;
    }
    else return sys_reset(false);
  }
    1674:	df 90       	pop	r13
    1676:	cf 90       	pop	r12
    1678:	08 95       	ret
    167a:	80 91 f7 60 	lds	r24, 0x60F7	; 0x8060f7 <packet+0x7>
    167e:	85 3c       	cpi	r24, 0xC5	; 197
    1680:	99 f7       	brne	.-26     	; 0x1668 <UPDI::write_userrow()+0x10>
    1682:	c0 91 26 63 	lds	r28, 0x6326	; 0x806326 <Device_Descriptor+0x18>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:319
    const static uint8_t _urowstop[] = { 0x55, 0xC7, 0x20 };  /* ASI_KEY_STATUS <= UROWWR */
    uint8_t   m_type = packet.out.bMType;
    uint32_t _dwAddr = packet.out.dwAddr;
    size_t  _wLength = packet.out.dwLength;
    if (bit_is_clear(PGCONF, PGCONF_UPDI_bp)
     || m_type != 0xC5
    1686:	d0 91 27 63 	lds	r29, 0x6327	; 0x806327 <Device_Descriptor+0x19>
    168a:	80 91 fc 60 	lds	r24, 0x60FC	; 0x8060fc <packet+0xc>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:320
     || _wLength != Device_Descriptor.UPDI.user_sig_bytes
    168e:	90 91 fd 60 	lds	r25, 0x60FD	; 0x8060fd <packet+0xd>
    1692:	c8 17       	cp	r28, r24
    1694:	d9 07       	cpc	r29, r25
    1696:	41 f7       	brne	.-48     	; 0x1668 <UPDI::write_userrow()+0x10>
    1698:	c0 90 f8 60 	lds	r12, 0x60F8	; 0x8060f8 <packet+0x8>
    169c:	d0 90 f9 60 	lds	r13, 0x60F9	; 0x8060f9 <packet+0x9>
    16a0:	e0 90 fa 60 	lds	r14, 0x60FA	; 0x8060fa <packet+0xa>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:316
   */
  bool write_userrow (void) {
    const static uint8_t _urowdone[] = { 0x55, 0xCA, 0x03 };  /* ASI_SYS_CTRLA <= UROWDONE|CLKREQ */
    const static uint8_t _urowstop[] = { 0x55, 0xC7, 0x20 };  /* ASI_KEY_STATUS <= UROWWR */
    uint8_t   m_type = packet.out.bMType;
    uint32_t _dwAddr = packet.out.dwAddr;
    16a4:	f0 90 fb 60 	lds	r15, 0x60FB	; 0x8060fb <packet+0xb>
    16a8:	80 91 30 63 	lds	r24, 0x6330	; 0x806330 <Device_Descriptor+0x22>
    16ac:	90 91 31 63 	lds	r25, 0x6331	; 0x806331 <Device_Descriptor+0x23>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:321
    size_t  _wLength = packet.out.dwLength;
    if (bit_is_clear(PGCONF, PGCONF_UPDI_bp)
     || m_type != 0xC5
     || _wLength != Device_Descriptor.UPDI.user_sig_bytes
     || (uint16_t)_dwAddr != Device_Descriptor.UPDI.user_sig_base) return false;
    16b0:	8c 15       	cp	r24, r12
    16b2:	9d 05       	cpc	r25, r13
    16b4:	c9 f6       	brne	.-78     	; 0x1668 <UPDI::write_userrow()+0x10>
    16b6:	0e 94 41 01 	call	0x282	; 0x282 <USART::drain(unsigned int) [clone .constprop.11]>
set_urowwrite_key():
    16ba:	6a e0       	ldi	r22, 0x0A	; 10
    16bc:	70 e0       	ldi	r23, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:322
    USART::drain();
    16be:	87 e7       	ldi	r24, 0x77	; 119
    16c0:	90 e6       	ldi	r25, 0x60	; 96
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:281
    return sys_reset(false);
  }

  bool set_urowwrite_key (void) {
    D1PRINTF(" UROW_KEY=");   /* wait set UROWWRITE */
    if (!send_bytes(urowwrite_key, sizeof(urowwrite_key)) || !key_wait_set(5)) return false;
    16c2:	0e 94 4c 02 	call	0x498	; 0x498 <UPDI::send_bytes(unsigned char const*, unsigned int)>
    16c6:	88 23       	and	r24, r24
    16c8:	79 f2       	breq	.-98     	; 0x1668 <UPDI::write_userrow()+0x10>
    16ca:	85 e0       	ldi	r24, 0x05	; 5
    16cc:	6d df       	rcall	.-294    	; 0x15a8 <UPDI::key_wait_set(unsigned char)>
    16ce:	88 23       	and	r24, r24
    16d0:	59 f2       	breq	.-106    	; 0x1668 <UPDI::write_userrow()+0x10>
sys_reset():
    16d2:	66 e0       	ldi	r22, 0x06	; 6
    16d4:	70 e0       	ldi	r23, 0x00	; 0
    16d6:	87 e9       	ldi	r24, 0x97	; 151
    16d8:	90 e6       	ldi	r25, 0x60	; 96
    16da:	0e 94 4c 02 	call	0x498	; 0x498 <UPDI::send_bytes(unsigned char const*, unsigned int)>
_ZN4UPDI13write_userrowEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:137
    const static uint8_t _reset[] = {
      0x55, 0xC8, 0x59, /* SYSRST */
      0x55, 0xC8, 0x00, /* SYSRUN */
      0x55, 0xC3, 0x04  /* UPDIDIS */
    };
    return send_bytes(_reset, _leave ? 9 : 6);
    16de:	88 23       	and	r24, r24
    16e0:	19 f2       	breq	.-122    	; 0x1668 <UPDI::write_userrow()+0x10>
    16e2:	82 e0       	ldi	r24, 0x02	; 2
    16e4:	46 df       	rcall	.-372    	; 0x1572 <UPDI::sys_wait_set(unsigned char)>
    16e6:	ae 01       	movw	r20, r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:325
     || _wLength != Device_Descriptor.UPDI.user_sig_bytes
     || (uint16_t)_dwAddr != Device_Descriptor.UPDI.user_sig_base) return false;
    USART::drain();
    D1PRINTF(" ENTER_UROW=%04lX:%04X\r\n", _dwAddr, _wLength);
    DFLUSH();
    if (!set_urowwrite_key()) return false;
    16e8:	c7 01       	movw	r24, r14
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:326
    sys_wait_set(2);      /* wait set UROWPROG */
    16ea:	b6 01       	movw	r22, r12
    16ec:	0e 94 92 02 	call	0x524	; 0x524 <UPDI::send_words_block(unsigned long, unsigned int)>
delay_micros():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:329
    D1PRINTF("<SYS:%02X:%d>\r\n", RXDATA, bit_is_clear(RXDATA, 2));
    DFLUSH();
    send_words_block(_dwAddr, _wLength);
    16f0:	83 ef       	ldi	r24, 0xF3	; 243
    16f2:	91 e0       	ldi	r25, 0x01	; 1
    16f4:	01 97       	sbiw	r24, 0x01	; 1
    16f6:	f1 f7       	brne	.-4      	; 0x16f4 <UPDI::write_userrow()+0x9c>
    16f8:	00 c0       	rjmp	.+0      	; 0x16fa <UPDI::write_userrow()+0xa2>
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/delay_busywait.h:33
    16fa:	00 00       	nop
_ZN4UPDI13write_userrowEv():
    16fc:	63 e0       	ldi	r22, 0x03	; 3
    16fe:	70 e0       	ldi	r23, 0x00	; 0
    1700:	84 e8       	ldi	r24, 0x84	; 132
    1702:	90 e6       	ldi	r25, 0x60	; 96
    1704:	0e 94 4c 02 	call	0x498	; 0x498 <UPDI::send_bytes(unsigned char const*, unsigned int)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:331
    SYS::delay_100us();
    send_bytes(_urowdone, 3);
    1708:	82 e0       	ldi	r24, 0x02	; 2
    170a:	18 df       	rcall	.-464    	; 0x153c <UPDI::sys_wait_clear(unsigned char)>
    170c:	63 e0       	ldi	r22, 0x03	; 3
    170e:	70 e0       	ldi	r23, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:332
    sys_wait_clear(2);    /* wait clear UROWPROG */
    1710:	81 e8       	ldi	r24, 0x81	; 129
    1712:	90 e6       	ldi	r25, 0x60	; 96
    1714:	0e 94 4c 02 	call	0x498	; 0x498 <UPDI::send_bytes(unsigned char const*, unsigned int)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:335
    D1PRINTF("<SYS:%02X:%d>\r\n", RXDATA, bit_is_clear(RXDATA, 2));
    DFLUSH();
    send_bytes(_urowstop, 3);
    1718:	f9 99       	sbic	0x1f, 1	; 31
    171a:	0c c0       	rjmp	.+24     	; 0x1734 <UPDI::write_userrow()+0xdc>
sys_reset():
    171c:	66 e0       	ldi	r22, 0x06	; 6
    171e:	70 e0       	ldi	r23, 0x00	; 0
    1720:	87 e9       	ldi	r24, 0x97	; 151
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:336
    if (bit_is_set(PGCONF, PGCONF_PROG_bp) && set_nvmprog_key()) {
    1722:	90 e6       	ldi	r25, 0x60	; 96
_ZN4UPDI13write_userrowEv():
    1724:	df 91       	pop	r29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:137
    const static uint8_t _reset[] = {
      0x55, 0xC8, 0x59, /* SYSRST */
      0x55, 0xC8, 0x00, /* SYSRUN */
      0x55, 0xC3, 0x04  /* UPDIDIS */
    };
    return send_bytes(_reset, _leave ? 9 : 6);
    1726:	cf 91       	pop	r28
    1728:	ff 90       	pop	r15
    172a:	ef 90       	pop	r14
    172c:	df 90       	pop	r13
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:342
      sys_wait_set(3);    /* wait set PROGSTART */
      D1PRINTF(" RE_PROGSTART=%02X\r\n", RXDATA);
      return true;
    }
    else return sys_reset(false);
  }
    172e:	cf 90       	pop	r12
sys_reset():
    1730:	0c 94 4c 02 	jmp	0x498	; 0x498 <UPDI::send_bytes(unsigned char const*, unsigned int)>
_ZN4UPDI13write_userrowEv():
    1734:	81 e0       	ldi	r24, 0x01	; 1
    1736:	53 df       	rcall	.-346    	; 0x15de <UPDI::set_nvmprog_key(bool)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:137
    const static uint8_t _reset[] = {
      0x55, 0xC8, 0x59, /* SYSRST */
      0x55, 0xC8, 0x00, /* SYSRUN */
      0x55, 0xC3, 0x04  /* UPDIDIS */
    };
    return send_bytes(_reset, _leave ? 9 : 6);
    1738:	c8 2f       	mov	r28, r24
    173a:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:336
    send_bytes(_urowdone, 3);
    sys_wait_clear(2);    /* wait clear UROWPROG */
    D1PRINTF("<SYS:%02X:%d>\r\n", RXDATA, bit_is_clear(RXDATA, 2));
    DFLUSH();
    send_bytes(_urowstop, 3);
    if (bit_is_set(PGCONF, PGCONF_PROG_bp) && set_nvmprog_key()) {
    173c:	79 f3       	breq	.-34     	; 0x171c <UPDI::write_userrow()+0xc4>
    173e:	83 e0       	ldi	r24, 0x03	; 3
    1740:	18 df       	rcall	.-464    	; 0x1572 <UPDI::sys_wait_set(unsigned char)>
    1742:	93 cf       	rjmp	.-218    	; 0x166a <UPDI::write_userrow()+0x12>

00001744 <NVM::V0::write_memory()>:
_ZN3NVM2V012write_memoryEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:337
      sys_wait_set(3);    /* wait set PROGSTART */
    1744:	4f 92       	push	r4
    1746:	5f 92       	push	r5
    1748:	6f 92       	push	r6
    174a:	7f 92       	push	r7
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:142
    }
    /* Page erase will not be used if received. */
    return 1;
  }

  size_t write_memory (void) {
    174c:	af 92       	push	r10
    174e:	bf 92       	push	r11
    1750:	cf 92       	push	r12
    1752:	df 92       	push	r13
    1754:	ef 92       	push	r14
    1756:	ff 92       	push	r15
    1758:	0f 93       	push	r16
    175a:	1f 93       	push	r17
    175c:	cf 93       	push	r28
    175e:	df 93       	push	r29
    1760:	00 d0       	rcall	.+0      	; 0x1762 <NVM::V0::write_memory()+0x1e>
    1762:	00 d0       	rcall	.+0      	; 0x1764 <NVM::V0::write_memory()+0x20>
    1764:	cd b7       	in	r28, 0x3d	; 61
    1766:	de b7       	in	r29, 0x3e	; 62
    1768:	f9 99       	sbic	0x1f, 1	; 31
    176a:	14 c0       	rjmp	.+40     	; 0x1794 <NVM::V0::write_memory()+0x50>
    176c:	75 df       	rcall	.-278    	; 0x1658 <UPDI::write_userrow()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:146
    uint8_t  m_type = packet.out.bMType;
    uint16_t _wAddr = packet.out.dwAddr;
    size_t _wLength = packet.out.dwLength;
    if (bit_is_clear(PGCONF, PGCONF_PROG_bp)) return UPDI::write_userrow();
    176e:	90 e0       	ldi	r25, 0x00	; 0
    1770:	24 96       	adiw	r28, 0x04	; 4
    1772:	cd bf       	out	0x3d, r28	; 61
    1774:	de bf       	out	0x3e, r29	; 62
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:166
      _wAddr += Device_Descriptor.UPDI.prog_base;
      return write_flash(_wAddr, _wLength);
    }
    else {
      /* MTYPE_SRAM */
      return UPDI::send_bytes_block(_wAddr, _wLength);
    1776:	df 91       	pop	r29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:168
    }
  }
    1778:	cf 91       	pop	r28
    177a:	1f 91       	pop	r17
    177c:	0f 91       	pop	r16
    177e:	ff 90       	pop	r15
    1780:	ef 90       	pop	r14
    1782:	df 90       	pop	r13
    1784:	cf 90       	pop	r12
    1786:	bf 90       	pop	r11
    1788:	af 90       	pop	r10
    178a:	7f 90       	pop	r7
    178c:	6f 90       	pop	r6
    178e:	5f 90       	pop	r5
    1790:	4f 90       	pop	r4
    1792:	08 95       	ret
    1794:	80 91 f7 60 	lds	r24, 0x60F7	; 0x8060f7 <packet+0x7>
    1798:	c0 90 f8 60 	lds	r12, 0x60F8	; 0x8060f8 <packet+0x8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:143
    /* Page erase will not be used if received. */
    return 1;
  }

  size_t write_memory (void) {
    uint8_t  m_type = packet.out.bMType;
    179c:	d0 90 f9 60 	lds	r13, 0x60F9	; 0x8060f9 <packet+0x9>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:144
    uint16_t _wAddr = packet.out.dwAddr;
    17a0:	e0 90 fa 60 	lds	r14, 0x60FA	; 0x8060fa <packet+0xa>
    17a4:	f0 90 fb 60 	lds	r15, 0x60FB	; 0x8060fb <packet+0xb>
    17a8:	96 01       	movw	r18, r12
    17aa:	00 91 fc 60 	lds	r16, 0x60FC	; 0x8060fc <packet+0xc>
    17ae:	10 91 fd 60 	lds	r17, 0x60FD	; 0x8060fd <packet+0xd>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:145
    size_t _wLength = packet.out.dwLength;
    17b2:	9e e4       	ldi	r25, 0x4E	; 78
    17b4:	98 0f       	add	r25, r24
    17b6:	92 30       	cpi	r25, 0x02	; 2
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:147
    if (bit_is_clear(PGCONF, PGCONF_PROG_bp)) return UPDI::write_userrow();
    if (m_type == 0xB2 || m_type == 0xB3) {
    17b8:	08 f0       	brcs	.+2      	; 0x17bc <NVM::V0::write_memory()+0x78>
    17ba:	46 c0       	rjmp	.+140    	; 0x1848 <NVM::V0::write_memory()+0x104>
    17bc:	80 ef       	ldi	r24, 0xF0	; 240
    17be:	e8 2e       	mov	r14, r24
    17c0:	80 e6       	ldi	r24, 0x60	; 96
    17c2:	f8 2e       	mov	r15, r24
write_fuse():
    17c4:	c9 01       	movw	r24, r18
    17c6:	80 5f       	subi	r24, 0xF0	; 240
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:73
      uint16_t data;  /* NVMCTRL_REG_DATA */
      uint16_t addr;  /* NVMCTRL_REG_ADDR */
    } fuses;
    for (size_t _i = 0; _i < _wLength; _i++) {
      fuses.data = packet.out.memData[_i];
      fuses.addr = _wAddr + _i;
    17c8:	90 46       	sbci	r25, 0x60	; 96
    17ca:	6c 01       	movw	r12, r24
    17cc:	c7 01       	movw	r24, r14
    17ce:	80 5f       	subi	r24, 0xF0	; 240
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:71
  bool write_fuse (uint16_t _wAddr, size_t _wLength) {
    struct fuse_packet_t {
      uint16_t data;  /* NVMCTRL_REG_DATA */
      uint16_t addr;  /* NVMCTRL_REG_ADDR */
    } fuses;
    for (size_t _i = 0; _i < _wLength; _i++) {
    17d0:	90 46       	sbci	r25, 0x60	; 96
    17d2:	80 17       	cp	r24, r16
    17d4:	91 07       	cpc	r25, r17
    17d6:	b0 f5       	brcc	.+108    	; 0x1844 <NVM::V0::write_memory()+0x100>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:72
      fuses.data = packet.out.memData[_i];
    17d8:	f7 01       	movw	r30, r14
    17da:	81 89       	ldd	r24, Z+17	; 0x11
    17dc:	90 e0       	ldi	r25, 0x00	; 0
    17de:	89 83       	std	Y+1, r24	; 0x01
    17e0:	9a 83       	std	Y+2, r25	; 0x02
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:73
      fuses.addr = _wAddr + _i;
    17e2:	c6 01       	movw	r24, r12
    17e4:	8e 0d       	add	r24, r14
    17e6:	9f 1d       	adc	r25, r15
    17e8:	8b 83       	std	Y+3, r24	; 0x03
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:75
      D2PRINTF(" NVM_V0_WFU=%04X<%02X\r\n", fuses.addr, fuses.data);
      nvm_wait();
    17ea:	9c 83       	std	Y+4, r25	; 0x04
    17ec:	d6 dd       	rcall	.-1108   	; 0x139a <NVM::V0::nvm_wait()>
    17ee:	ce 01       	movw	r24, r28
    17f0:	01 96       	adiw	r24, 0x01	; 1
    17f2:	5c 01       	movw	r10, r24
    17f4:	66 e0       	ldi	r22, 0x06	; 6
    17f6:	70 e1       	ldi	r23, 0x10	; 16
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:210
      && clear_rsd();
  }

  bool send_bytes_data (uint32_t _dwAddr, uint8_t* _data, size_t _wLength) {
    for (size_t _i = 0; _i < _wLength; _i++) {
      if (!send_byte(_dwAddr++, *_data++)) return false;
    17f8:	80 e0       	ldi	r24, 0x00	; 0
    17fa:	90 e0       	ldi	r25, 0x00	; 0
send_bytes_data():
    17fc:	f5 01       	movw	r30, r10
    17fe:	41 91       	ld	r20, Z+
    1800:	5f 01       	movw	r10, r30
    1802:	2b 01       	movw	r4, r22
    1804:	3c 01       	movw	r6, r24
    1806:	ff ef       	ldi	r31, 0xFF	; 255
    1808:	4f 1a       	sub	r4, r31
    180a:	5f 0a       	sbc	r5, r31
    180c:	6f 0a       	sbc	r6, r31
    180e:	7f 0a       	sbc	r7, r31
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:78
      if (!(UPDI::send_bytes_data(NVM_DATA, (uint8_t*)&fuses, 4)
        && UPDI::nvm_ctrl(0x07)   /* NVM_CMD_WFU */
        && (nvm_wait() & 7) == 0)) return false;
    1810:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <UPDI::send_byte(unsigned long, unsigned char)>
    1814:	81 11       	cpse	r24, r1
    1816:	02 c0       	rjmp	.+4      	; 0x181c <NVM::V0::write_memory()+0xd8>
_ZN3NVM2V012write_memoryEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:209
      && send_bytes(&packet.out.memData[0], _wLength & ~1)
      && clear_rsd();
  }

  bool send_bytes_data (uint32_t _dwAddr, uint8_t* _data, size_t _wLength) {
    for (size_t _i = 0; _i < _wLength; _i++) {
    1818:	80 e0       	ldi	r24, 0x00	; 0
    181a:	a9 cf       	rjmp	.-174    	; 0x176e <NVM::V0::write_memory()+0x2a>
    181c:	c3 01       	movw	r24, r6
    181e:	b2 01       	movw	r22, r4
send_bytes_data():
    1820:	6a 30       	cpi	r22, 0x0A	; 10
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:77
      fuses.data = packet.out.memData[_i];
      fuses.addr = _wAddr + _i;
      D2PRINTF(" NVM_V0_WFU=%04X<%02X\r\n", fuses.addr, fuses.data);
      nvm_wait();
      if (!(UPDI::send_bytes_data(NVM_DATA, (uint8_t*)&fuses, 4)
        && UPDI::nvm_ctrl(0x07)   /* NVM_CMD_WFU */
    1822:	20 e1       	ldi	r18, 0x10	; 16
    1824:	72 07       	cpc	r23, r18
    1826:	81 05       	cpc	r24, r1
    1828:	91 05       	cpc	r25, r1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:78
        && (nvm_wait() & 7) == 0)) return false;
    182a:	41 f7       	brne	.-48     	; 0x17fc <NVM::V0::write_memory()+0xb8>
write_fuse():
    182c:	87 e0       	ldi	r24, 0x07	; 7
    182e:	0e 94 ed 02 	call	0x5da	; 0x5da <UPDI::nvm_ctrl(unsigned char)>
    1832:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:76
    for (size_t _i = 0; _i < _wLength; _i++) {
      fuses.data = packet.out.memData[_i];
      fuses.addr = _wAddr + _i;
      D2PRINTF(" NVM_V0_WFU=%04X<%02X\r\n", fuses.addr, fuses.data);
      nvm_wait();
      if (!(UPDI::send_bytes_data(NVM_DATA, (uint8_t*)&fuses, 4)
    1834:	89 f3       	breq	.-30     	; 0x1818 <NVM::V0::write_memory()+0xd4>
    1836:	b1 dd       	rcall	.-1182   	; 0x139a <NVM::V0::nvm_wait()>
    1838:	9f ef       	ldi	r25, 0xFF	; 255
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:80
        && UPDI::nvm_ctrl(0x07)   /* NVM_CMD_WFU */
        && (nvm_wait() & 7) == 0)) return false;
    }
    return true;
    183a:	e9 1a       	sub	r14, r25
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:152
    if (m_type == 0xB2 || m_type == 0xB3) {
      /* MTYPE_FUSE_BITS */
      /* MTYPE_LOCK_BITS */
      return write_fuse(_wAddr, _wLength);
    }
    else if (m_type == 0x22 || m_type == 0xC4 || m_type == 0xC5) {
    183c:	f9 0a       	sbc	r15, r25
    183e:	87 70       	andi	r24, 0x07	; 7
    1840:	29 f2       	breq	.-118    	; 0x17cc <NVM::V0::write_memory()+0x88>
    1842:	ea cf       	rjmp	.-44     	; 0x1818 <NVM::V0::write_memory()+0xd4>
_ZN3NVM2V012write_memoryEv():
    1844:	81 e0       	ldi	r24, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:99
    );
  }

  bool write_eeprom (uint16_t _wAddr, size_t _wLength) {
    D2PRINTF(" NVM_V0_ERWP=%04X\r\n", _wAddr);
    nvm_wait();
    1846:	93 cf       	rjmp	.-218    	; 0x176e <NVM::V0::write_memory()+0x2a>
    1848:	82 32       	cpi	r24, 0x22	; 34
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:101
    return (
      UPDI::send_bytes_block(_wAddr, _wLength)
    184a:	21 f0       	breq	.+8      	; 0x1854 <NVM::V0::write_memory()+0x110>
    184c:	9c e3       	ldi	r25, 0x3C	; 60
    184e:	98 0f       	add	r25, r24
    1850:	92 30       	cpi	r25, 0x02	; 2
    1852:	60 f4       	brcc	.+24     	; 0x186c <NVM::V0::write_memory()+0x128>
write_eeprom():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:91
      nvm_wait();
      UPDI::nvm_ctrl(0x04);       /* NVM_CMD_PBC */
    }
    nvm_wait();
    return (
      UPDI::send_bytes_block(_wAddr, _wLength)
    1854:	a2 dd       	rcall	.-1212   	; 0x139a <NVM::V0::nvm_wait()>
    1856:	c7 01       	movw	r24, r14
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:93
      && UPDI::nvm_ctrl(0x03)     /* NVM_CMD_ERWP */
      && (nvm_wait() & 7) == 0
    1858:	b6 01       	movw	r22, r12
    185a:	88 27       	eor	r24, r24
    185c:	99 27       	eor	r25, r25
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:158
      /* MTYPE_EEPROM */
      /* MTYPE_EEPROM_XMEGA */
      /* MTYPE_USERSIG (USERROW) */
      return write_eeprom(_wAddr, _wLength);
    }
    else if (m_type == 0xB0 || m_type == 0xC0) {
    185e:	a8 01       	movw	r20, r16
write_flash():
    1860:	0e 94 1d 03 	call	0x63a	; 0x63a <UPDI::send_bytes_block(unsigned long, unsigned int)>
    1864:	81 11       	cpse	r24, r1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:161
      /* MTYPE_FLASH_PAGE (PROGMEM) */
      /* MTYPE_FLASH (alias) */
      _wAddr += Device_Descriptor.UPDI.prog_base;
    1866:	1c c0       	rjmp	.+56     	; 0x18a0 <NVM::V0::write_memory()+0x15c>
    1868:	90 e0       	ldi	r25, 0x00	; 0
    186a:	23 c0       	rjmp	.+70     	; 0x18b2 <NVM::V0::write_memory()+0x16e>
_ZN3NVM2V012write_memoryEv():
    186c:	80 3b       	cpi	r24, 0xB0	; 176
    186e:	11 f0       	breq	.+4      	; 0x1874 <NVM::V0::write_memory()+0x130>
    1870:	80 3c       	cpi	r24, 0xC0	; 192
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:85
    return true;
  }

  bool write_flash (uint16_t _wAddr, size_t _wLength) {
    D2PRINTF(" NVM_V0_ERWP=%04X\r\n", _wAddr);
    if (SYS::is_boundary_flash_page(_wAddr)) {
    1872:	09 f5       	brne	.+66     	; 0x18b6 <NVM::V0::write_memory()+0x172>
    1874:	60 91 0e 63 	lds	r22, 0x630E	; 0x80630e <Device_Descriptor>
    1878:	70 91 0f 63 	lds	r23, 0x630F	; 0x80630f <Device_Descriptor+0x1>
    187c:	c6 0e       	add	r12, r22
    187e:	d7 1e       	adc	r13, r23
write_flash():
    1880:	f1 2c       	mov	r15, r1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:86
      nvm_wait();
    1882:	e1 2c       	mov	r14, r1
    1884:	c7 01       	movw	r24, r14
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:87
      UPDI::nvm_ctrl(0x04);       /* NVM_CMD_PBC */
    1886:	b6 01       	movw	r22, r12
    1888:	ff d8       	rcall	.-3586   	; 0xa88 <SYS::is_boundary_flash_page(unsigned long)>
    188a:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:89
    }
    nvm_wait();
    188c:	21 f0       	breq	.+8      	; 0x1896 <NVM::V0::write_memory()+0x152>
    188e:	85 dd       	rcall	.-1270   	; 0x139a <NVM::V0::nvm_wait()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:91
    return (
      UPDI::send_bytes_block(_wAddr, _wLength)
    1890:	84 e0       	ldi	r24, 0x04	; 4
    1892:	0e 94 ed 02 	call	0x5da	; 0x5da <UPDI::nvm_ctrl(unsigned char)>
    1896:	81 dd       	rcall	.-1278   	; 0x139a <NVM::V0::nvm_wait()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:92
      && UPDI::nvm_ctrl(0x03)     /* NVM_CMD_ERWP */
    1898:	a8 01       	movw	r20, r16
    189a:	c7 01       	movw	r24, r14
    189c:	b6 01       	movw	r22, r12
    189e:	e0 cf       	rjmp	.-64     	; 0x1860 <NVM::V0::write_memory()+0x11c>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:93
      && (nvm_wait() & 7) == 0
    18a0:	83 e0       	ldi	r24, 0x03	; 3
    18a2:	0e 94 ed 02 	call	0x5da	; 0x5da <UPDI::nvm_ctrl(unsigned char)>
    18a6:	88 23       	and	r24, r24
    18a8:	f9 f2       	breq	.-66     	; 0x1868 <NVM::V0::write_memory()+0x124>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:162
    }
    else if (m_type == 0xB0 || m_type == 0xC0) {
      /* MTYPE_FLASH_PAGE (PROGMEM) */
      /* MTYPE_FLASH (alias) */
      _wAddr += Device_Descriptor.UPDI.prog_base;
      return write_flash(_wAddr, _wLength);
    18aa:	77 dd       	rcall	.-1298   	; 0x139a <NVM::V0::nvm_wait()>
    18ac:	87 70       	andi	r24, 0x07	; 7
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:166
    }
    else {
      /* MTYPE_SRAM */
      return UPDI::send_bytes_block(_wAddr, _wLength);
    18ae:	91 e0       	ldi	r25, 0x01	; 1
    18b0:	d9 f6       	brne	.-74     	; 0x1868 <NVM::V0::write_memory()+0x124>
_ZN3NVM2V012write_memoryEv():
    18b2:	89 2f       	mov	r24, r25
    18b4:	5c cf       	rjmp	.-328    	; 0x176e <NVM::V0::write_memory()+0x2a>
    18b6:	c7 01       	movw	r24, r14
    18b8:	b6 01       	movw	r22, r12
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:155
    /* Page erase will not be used if received. */
    /* Instead, page erase is determined by the is_boundary_flash_page function. */
    return 1;
  }

  size_t write_memory (void) {
    18ba:	88 27       	eor	r24, r24
    18bc:	99 27       	eor	r25, r25
    18be:	a8 01       	movw	r20, r16
    18c0:	0e 94 1d 03 	call	0x63a	; 0x63a <UPDI::send_bytes_block(unsigned long, unsigned int)>
    18c4:	54 cf       	rjmp	.-344    	; 0x176e <NVM::V0::write_memory()+0x2a>

000018c6 <NVM::V2::write_memory()>:
_ZN3NVM2V212write_memoryEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:159
    uint8_t   m_type = packet.out.bMType;
    uint32_t _dwAddr = packet.out.dwAddr;
    size_t  _wLength = packet.out.dwLength;
    if (bit_is_clear(PGCONF, PGCONF_PROG_bp)) return UPDI::write_userrow();
    18c6:	cf 92       	push	r12
    18c8:	df 92       	push	r13
    18ca:	ef 92       	push	r14
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:179
      _dwAddr += PROG_START;
      return write_words_flash(_dwAddr, _wLength);
    }
    else {
      /* MTYPE_SRAM */
      return UPDI::send_bytes_block(_dwAddr, _wLength);
    18cc:	ff 92       	push	r15
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:181
    }
  }
    18ce:	cf 93       	push	r28
    18d0:	df 93       	push	r29
    18d2:	f9 99       	sbic	0x1f, 1	; 31
    18d4:	09 c0       	rjmp	.+18     	; 0x18e8 <NVM::V2::write_memory()+0x22>
    18d6:	c0 de       	rcall	.-640    	; 0x1658 <UPDI::write_userrow()>
    18d8:	90 e0       	ldi	r25, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:156
    /* Instead, page erase is determined by the is_boundary_flash_page function. */
    return 1;
  }

  size_t write_memory (void) {
    uint8_t   m_type = packet.out.bMType;
    18da:	df 91       	pop	r29
    18dc:	cf 91       	pop	r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:157
    uint32_t _dwAddr = packet.out.dwAddr;
    18de:	ff 90       	pop	r15
    18e0:	ef 90       	pop	r14
    18e2:	df 90       	pop	r13
    18e4:	cf 90       	pop	r12
    18e6:	08 95       	ret
    18e8:	80 91 f7 60 	lds	r24, 0x60F7	; 0x8060f7 <packet+0x7>
    18ec:	c0 90 f8 60 	lds	r12, 0x60F8	; 0x8060f8 <packet+0x8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:158
    size_t  _wLength = packet.out.dwLength;
    18f0:	d0 90 f9 60 	lds	r13, 0x60F9	; 0x8060f9 <packet+0x9>
    18f4:	e0 90 fa 60 	lds	r14, 0x60FA	; 0x8060fa <packet+0xa>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:160
    if (bit_is_clear(PGCONF, PGCONF_PROG_bp)) return UPDI::write_userrow();
    if (m_type == 0x22 || m_type == 0xB2 || m_type == 0xB3 || m_type == 0xC4) {
    18f8:	f0 90 fb 60 	lds	r15, 0x60FB	; 0x8060fb <packet+0xb>
    18fc:	c0 91 fc 60 	lds	r28, 0x60FC	; 0x8060fc <packet+0xc>
    1900:	d0 91 fd 60 	lds	r29, 0x60FD	; 0x8060fd <packet+0xd>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:105
  }

  bool write_eeprom (uint32_t _dwAddr, size_t _wLength) {
    D2PRINTF(" NVM_V2_EEERWR=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x13)   /* NVM_V2_CMD_EEERWR */
    1904:	82 32       	cpi	r24, 0x22	; 34
    1906:	31 f0       	breq	.+12     	; 0x1914 <NVM::V2::write_memory()+0x4e>
    1908:	9e e4       	ldi	r25, 0x4E	; 78
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:108
      && UPDI::send_bytes_block_slow(_dwAddr, _wLength)
      && (nvm_wait() & 0x73) == 0
      && nvm_ctrl_change(0x00)
    190a:	98 0f       	add	r25, r24
    190c:	92 30       	cpi	r25, 0x02	; 2
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:87
    D2PRINTF(" NVM_V2_FLWR=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x02)   /* NVM_V2_CMD_FLWR */
      && UPDI::send_words_block(_dwAddr, _wLength)
      && (nvm_wait() & 0x73) == 0
      && nvm_ctrl_change(0x00)
    190e:	10 f0       	brcs	.+4      	; 0x1914 <NVM::V2::write_memory()+0x4e>
    1910:	84 3c       	cpi	r24, 0xC4	; 196
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:106

  bool write_eeprom (uint32_t _dwAddr, size_t _wLength) {
    D2PRINTF(" NVM_V2_EEERWR=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x13)   /* NVM_V2_CMD_EEERWR */
      && UPDI::send_bytes_block_slow(_dwAddr, _wLength)
    1912:	91 f4       	brne	.+36     	; 0x1938 <NVM::V2::write_memory()+0x72>
write_eeprom():
    1914:	83 e1       	ldi	r24, 0x13	; 19
    1916:	53 dd       	rcall	.-1370   	; 0x13be <NVM::V2::nvm_ctrl_change(unsigned char)>
    1918:	81 11       	cpse	r24, r1
    191a:	02 c0       	rjmp	.+4      	; 0x1920 <NVM::V2::write_memory()+0x5a>
_ZN3NVM2V212write_memoryEv():
    191c:	80 e0       	ldi	r24, 0x00	; 0
    191e:	dc cf       	rjmp	.-72     	; 0x18d8 <NVM::V2::write_memory()+0x12>
write_eeprom():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:107
      && (nvm_wait() & 0x73) == 0
    1920:	ae 01       	movw	r20, r28
    1922:	c7 01       	movw	r24, r14
    1924:	b6 01       	movw	r22, r12
    1926:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <UPDI::send_bytes_block_slow(unsigned long, unsigned int)>
    192a:	88 23       	and	r24, r24
    192c:	b9 f3       	breq	.-18     	; 0x191c <NVM::V2::write_memory()+0x56>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:167
      /* MTYPE_LOCK_BITS */
      /* MTYPE_EEPROM */
      /* MTYPE_EEPROM_XMEGA */
      return write_eeprom(_dwAddr, _wLength);
    }
    else if (m_type == 0xC0 || m_type == 0xC5) {
    192e:	35 dd       	rcall	.-1430   	; 0x139a <NVM::V0::nvm_wait()>
    1930:	83 77       	andi	r24, 0x73	; 115
    1932:	a1 f7       	brne	.-24     	; 0x191c <NVM::V2::write_memory()+0x56>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:92
      && nvm_ctrl_change(0x00)
    );
  }

  bool write_bytes_flash (uint32_t _dwAddr, size_t _wLength) {
    if (SYS::is_boundary_flash_page(_dwAddr)) erase_flash_page(_dwAddr);
    1934:	61 dd       	rcall	.-1342   	; 0x13f8 <NVM::V2::write_eeprom(unsigned long, unsigned int) [clone .part.5]>
    1936:	d0 cf       	rjmp	.-96     	; 0x18d8 <NVM::V2::write_memory()+0x12>
_ZN3NVM2V212write_memoryEv():
    1938:	80 3c       	cpi	r24, 0xC0	; 192
    193a:	11 f0       	breq	.+4      	; 0x1940 <NVM::V2::write_memory()+0x7a>
    193c:	85 3c       	cpi	r24, 0xC5	; 197
    193e:	c1 f4       	brne	.+48     	; 0x1970 <NVM::V2::write_memory()+0xaa>
write_bytes_flash():
    1940:	c7 01       	movw	r24, r14
    1942:	b6 01       	movw	r22, r12
    1944:	a1 d8       	rcall	.-3774   	; 0xa88 <SYS::is_boundary_flash_page(unsigned long)>
    1946:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:95
    D2PRINTF(" NVM_V2_FLWR=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x02)   /* NVM_V2_CMD_FLWR */
    1948:	19 f0       	breq	.+6      	; 0x1950 <NVM::V2::write_memory()+0x8a>
    194a:	c7 01       	movw	r24, r14
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:98
      && UPDI::send_bytes_block_slow(_dwAddr, _wLength)
      && (nvm_wait() & 0x73) == 0
      && nvm_ctrl_change(0x00)
    194c:	b6 01       	movw	r22, r12
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:96
  bool write_bytes_flash (uint32_t _dwAddr, size_t _wLength) {
    if (SYS::is_boundary_flash_page(_dwAddr)) erase_flash_page(_dwAddr);
    D2PRINTF(" NVM_V2_FLWR=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x02)   /* NVM_V2_CMD_FLWR */
      && UPDI::send_bytes_block_slow(_dwAddr, _wLength)
    194e:	56 dd       	rcall	.-1364   	; 0x13fc <NVM::V2::erase_flash_page(unsigned long)>
    1950:	82 e0       	ldi	r24, 0x02	; 2
    1952:	35 dd       	rcall	.-1430   	; 0x13be <NVM::V2::nvm_ctrl_change(unsigned char)>
    1954:	88 23       	and	r24, r24
    1956:	11 f3       	breq	.-60     	; 0x191c <NVM::V2::write_memory()+0x56>
    1958:	ae 01       	movw	r20, r28
    195a:	c7 01       	movw	r24, r14
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:97
      && (nvm_wait() & 0x73) == 0
    195c:	b6 01       	movw	r22, r12
    195e:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <UPDI::send_bytes_block_slow(unsigned long, unsigned int)>
    1962:	88 23       	and	r24, r24
    1964:	d9 f2       	breq	.-74     	; 0x191c <NVM::V2::write_memory()+0x56>
    1966:	19 dd       	rcall	.-1486   	; 0x139a <NVM::V0::nvm_wait()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:172
    else if (m_type == 0xC0 || m_type == 0xC5) {
      /* MTYPE_FLASH (alias) */
      /* MTYPE_USERSIG (USERROW) */
      return write_bytes_flash(_dwAddr, _wLength);
    }
    else if (m_type == 0xB0) {
    1968:	83 77       	andi	r24, 0x73	; 115
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:174
      /* MTYPE_FLASH_PAGE (PROGMEM) */
      _dwAddr += PROG_START;
    196a:	c1 f6       	brne	.-80     	; 0x191c <NVM::V2::write_memory()+0x56>
    196c:	45 dd       	rcall	.-1398   	; 0x13f8 <NVM::V2::write_eeprom(unsigned long, unsigned int) [clone .part.5]>
    196e:	b4 cf       	rjmp	.-152    	; 0x18d8 <NVM::V2::write_memory()+0x12>
_ZN3NVM2V212write_memoryEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:81
    );
  }

  bool write_words_flash (uint32_t _dwAddr, size_t _wLength) {
    if (bit_is_clear(PGCONF, PGCONF_ERSE_bp)
      && SYS::is_boundary_flash_page(_dwAddr)) erase_flash_page(_dwAddr);
    1970:	80 3b       	cpi	r24, 0xB0	; 176
    1972:	01 f5       	brne	.+64     	; 0x19b4 <NVM::V2::write_memory()+0xee>
    1974:	80 e8       	ldi	r24, 0x80	; 128
    1976:	e8 0e       	add	r14, r24
    1978:	f1 1c       	adc	r15, r1
write_words_flash():
    197a:	fa 99       	sbic	0x1f, 2	; 31
    197c:	08 c0       	rjmp	.+16     	; 0x198e <NVM::V2::write_memory()+0xc8>
    197e:	c7 01       	movw	r24, r14
    1980:	b6 01       	movw	r22, r12
    1982:	82 d8       	rcall	.-3836   	; 0xa88 <SYS::is_boundary_flash_page(unsigned long)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:84
    D2PRINTF(" NVM_V2_FLWR=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x02)   /* NVM_V2_CMD_FLWR */
    1984:	88 23       	and	r24, r24
    1986:	19 f0       	breq	.+6      	; 0x198e <NVM::V2::write_memory()+0xc8>
    1988:	c7 01       	movw	r24, r14
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:87
      && UPDI::send_words_block(_dwAddr, _wLength)
      && (nvm_wait() & 0x73) == 0
      && nvm_ctrl_change(0x00)
    198a:	b6 01       	movw	r22, r12
    198c:	37 dd       	rcall	.-1426   	; 0x13fc <NVM::V2::erase_flash_page(unsigned long)>
    198e:	82 e0       	ldi	r24, 0x02	; 2
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:85
    if (bit_is_clear(PGCONF, PGCONF_ERSE_bp)
      && SYS::is_boundary_flash_page(_dwAddr)) erase_flash_page(_dwAddr);
    D2PRINTF(" NVM_V2_FLWR=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x02)   /* NVM_V2_CMD_FLWR */
      && UPDI::send_words_block(_dwAddr, _wLength)
    1990:	16 dd       	rcall	.-1492   	; 0x13be <NVM::V2::nvm_ctrl_change(unsigned char)>
    1992:	88 23       	and	r24, r24
    1994:	09 f4       	brne	.+2      	; 0x1998 <NVM::V2::write_memory()+0xd2>
    1996:	c2 cf       	rjmp	.-124    	; 0x191c <NVM::V2::write_memory()+0x56>
    1998:	ae 01       	movw	r20, r28
    199a:	c7 01       	movw	r24, r14
    199c:	b6 01       	movw	r22, r12
    199e:	0e 94 92 02 	call	0x524	; 0x524 <UPDI::send_words_block(unsigned long, unsigned int)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:86
      && (nvm_wait() & 0x73) == 0
    19a2:	88 23       	and	r24, r24
    19a4:	09 f4       	brne	.+2      	; 0x19a8 <NVM::V2::write_memory()+0xe2>
    19a6:	ba cf       	rjmp	.-140    	; 0x191c <NVM::V2::write_memory()+0x56>
    19a8:	f8 dc       	rcall	.-1552   	; 0x139a <NVM::V0::nvm_wait()>
    19aa:	83 77       	andi	r24, 0x73	; 115
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:179
      _dwAddr += PROG_START;
      return write_words_flash(_dwAddr, _wLength);
    }
    else {
      /* MTYPE_SRAM */
      return UPDI::send_bytes_block(_dwAddr, _wLength);
    19ac:	09 f0       	breq	.+2      	; 0x19b0 <NVM::V2::write_memory()+0xea>
    19ae:	b6 cf       	rjmp	.-148    	; 0x191c <NVM::V2::write_memory()+0x56>
    19b0:	23 dd       	rcall	.-1466   	; 0x13f8 <NVM::V2::write_eeprom(unsigned long, unsigned int) [clone .part.5]>
    19b2:	92 cf       	rjmp	.-220    	; 0x18d8 <NVM::V2::write_memory()+0x12>
_ZN3NVM2V212write_memoryEv():
    19b4:	ae 01       	movw	r20, r28
    19b6:	c7 01       	movw	r24, r14
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:133
    }
    /* Page erase will not be used if received. */
    return 1;
  }

  size_t write_memory (void) {
    19b8:	b6 01       	movw	r22, r12
    19ba:	0e 94 1d 03 	call	0x63a	; 0x63a <UPDI::send_bytes_block(unsigned long, unsigned int)>
    19be:	8c cf       	rjmp	.-232    	; 0x18d8 <NVM::V2::write_memory()+0x12>

000019c0 <NVM::V3::write_memory()>:
_ZN3NVM2V312write_memoryEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:137
    uint8_t   m_type = packet.out.bMType;
    uint32_t _dwAddr = packet.out.dwAddr;
    size_t  _wLength = packet.out.dwLength;
    if (bit_is_clear(PGCONF, PGCONF_PROG_bp)) return UPDI::write_userrow();
    19c0:	cf 92       	push	r12
    19c2:	df 92       	push	r13
    19c4:	ef 92       	push	r14
    19c6:	ff 92       	push	r15
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:157
      _dwAddr += PROG_START;
      return write_words_flash(_dwAddr, _wLength);
    }
    else {
      /* MTYPE_SRAM */
      return UPDI::send_bytes_block(_dwAddr, _wLength);
    19c8:	cf 93       	push	r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:159
    }
  }
    19ca:	df 93       	push	r29
    19cc:	f9 99       	sbic	0x1f, 1	; 31
    19ce:	09 c0       	rjmp	.+18     	; 0x19e2 <NVM::V3::write_memory()+0x22>
    19d0:	43 de       	rcall	.-890    	; 0x1658 <UPDI::write_userrow()>
    19d2:	90 e0       	ldi	r25, 0x00	; 0
    19d4:	df 91       	pop	r29
    19d6:	cf 91       	pop	r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:134
    /* Page erase will not be used if received. */
    return 1;
  }

  size_t write_memory (void) {
    uint8_t   m_type = packet.out.bMType;
    19d8:	ff 90       	pop	r15
    19da:	ef 90       	pop	r14
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:135
    uint32_t _dwAddr = packet.out.dwAddr;
    19dc:	df 90       	pop	r13
    19de:	cf 90       	pop	r12
    19e0:	08 95       	ret
    19e2:	80 91 f7 60 	lds	r24, 0x60F7	; 0x8060f7 <packet+0x7>
    19e6:	c0 90 f8 60 	lds	r12, 0x60F8	; 0x8060f8 <packet+0x8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:136
    size_t  _wLength = packet.out.dwLength;
    19ea:	d0 90 f9 60 	lds	r13, 0x60F9	; 0x8060f9 <packet+0x9>
    19ee:	e0 90 fa 60 	lds	r14, 0x60FA	; 0x8060fa <packet+0xa>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:138
    if (bit_is_clear(PGCONF, PGCONF_PROG_bp)) return UPDI::write_userrow();
    if (m_type == 0x22 || m_type == 0xB2 || m_type == 0xB3 || m_type == 0xC4) {
    19f2:	f0 90 fb 60 	lds	r15, 0x60FB	; 0x8060fb <packet+0xb>
    19f6:	c0 91 fc 60 	lds	r28, 0x60FC	; 0x8060fc <packet+0xc>
    19fa:	d0 91 fd 60 	lds	r29, 0x60FD	; 0x8060fd <packet+0xd>
    19fe:	82 32       	cpi	r24, 0x22	; 34
    1a00:	31 f0       	breq	.+12     	; 0x1a0e <NVM::V3::write_memory()+0x4e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:90
  }

  bool write_eeprom (uint32_t _dwAddr, size_t _wLength) {
    D2PRINTF(" NVM_V3_EEPERW=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x10)
    1a02:	9e e4       	ldi	r25, 0x4E	; 78
    1a04:	98 0f       	add	r25, r24
    1a06:	92 30       	cpi	r25, 0x02	; 2
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:93
      && UPDI::send_bytes_block(_dwAddr, _wLength)
      && nvm_ctrl_change(0x15)  /* NVM_V3_CMD_EEPERW */
      && (nvm_wait() & 0x73) == 0
    1a08:	10 f0       	brcs	.+4      	; 0x1a0e <NVM::V3::write_memory()+0x4e>
    1a0a:	84 3c       	cpi	r24, 0xC4	; 196
    1a0c:	99 f4       	brne	.+38     	; 0x1a34 <NVM::V3::write_memory()+0x74>
write_eeprom():
    1a0e:	80 e1       	ldi	r24, 0x10	; 16
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:91

  bool write_eeprom (uint32_t _dwAddr, size_t _wLength) {
    D2PRINTF(" NVM_V3_EEPERW=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x10)
      && UPDI::send_bytes_block(_dwAddr, _wLength)
    1a10:	32 dc       	rcall	.-1948   	; 0x1276 <NVM::V3::nvm_ctrl_change(unsigned char)>
    1a12:	81 11       	cpse	r24, r1
    1a14:	02 c0       	rjmp	.+4      	; 0x1a1a <NVM::V3::write_memory()+0x5a>
_ZN3NVM2V312write_memoryEv():
    1a16:	80 e0       	ldi	r24, 0x00	; 0
    1a18:	dc cf       	rjmp	.-72     	; 0x19d2 <NVM::V3::write_memory()+0x12>
write_eeprom():
    1a1a:	ae 01       	movw	r20, r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:92
      && nvm_ctrl_change(0x15)  /* NVM_V3_CMD_EEPERW */
    1a1c:	c7 01       	movw	r24, r14
    1a1e:	b6 01       	movw	r22, r12
    1a20:	0e 94 1d 03 	call	0x63a	; 0x63a <UPDI::send_bytes_block(unsigned long, unsigned int)>
    1a24:	88 23       	and	r24, r24
    1a26:	b9 f3       	breq	.-18     	; 0x1a16 <NVM::V3::write_memory()+0x56>
    1a28:	85 e1       	ldi	r24, 0x15	; 21
    1a2a:	25 dc       	rcall	.-1974   	; 0x1276 <NVM::V3::nvm_ctrl_change(unsigned char)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:145
      /* MTYPE_LOCK_BITS */
      /* MTYPE_EEPROM */
      /* MTYPE_EEPROM_XMEGA */
      return write_eeprom(_dwAddr, _wLength);
    }
    else if (m_type == 0xC0 || m_type == 0xC5) {
    1a2c:	88 23       	and	r24, r24
    1a2e:	99 f3       	breq	.-26     	; 0x1a16 <NVM::V3::write_memory()+0x56>
    1a30:	1b dc       	rcall	.-1994   	; 0x1268 <NVM::V3::write_eeprom(unsigned long, unsigned int) [clone .part.3]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:148
      /* MTYPE_FLASH (alias) */
      /* MTYPE_USERSIG (USERROW) */
      return write_bytes_flash(_dwAddr, _wLength);
    1a32:	cf cf       	rjmp	.-98     	; 0x19d2 <NVM::V3::write_memory()+0x12>
_ZN3NVM2V312write_memoryEv():
    1a34:	80 3c       	cpi	r24, 0xC0	; 192
    1a36:	11 f0       	breq	.+4      	; 0x1a3c <NVM::V3::write_memory()+0x7c>
    1a38:	85 3c       	cpi	r24, 0xC5	; 197
    1a3a:	29 f4       	brne	.+10     	; 0x1a46 <NVM::V3::write_memory()+0x86>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:150
    }
    else if (m_type == 0xB0) {
    1a3c:	ae 01       	movw	r20, r28
    1a3e:	c7 01       	movw	r24, r14
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:152
      /* MTYPE_FLASH_PAGE (PROGMEM) */
      _dwAddr += PROG_START;
    1a40:	b6 01       	movw	r22, r12
    1a42:	41 dc       	rcall	.-1918   	; 0x12c6 <NVM::V3::write_bytes_flash(unsigned long, unsigned int)>
    1a44:	c6 cf       	rjmp	.-116    	; 0x19d2 <NVM::V3::write_memory()+0x12>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:153
      return write_words_flash(_dwAddr, _wLength);
    1a46:	80 3b       	cpi	r24, 0xB0	; 176
    1a48:	39 f4       	brne	.+14     	; 0x1a58 <NVM::V3::write_memory()+0x98>
    1a4a:	c7 01       	movw	r24, r14
    1a4c:	b6 01       	movw	r22, r12
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:157
    }
    else {
      /* MTYPE_SRAM */
      return UPDI::send_bytes_block(_dwAddr, _wLength);
    1a4e:	80 58       	subi	r24, 0x80	; 128
    1a50:	9f 4f       	sbci	r25, 0xFF	; 255
    1a52:	ae 01       	movw	r20, r28
    1a54:	5e dc       	rcall	.-1860   	; 0x1312 <NVM::V3::write_words_flash(unsigned long, unsigned int)>
    1a56:	bd cf       	rjmp	.-134    	; 0x19d2 <NVM::V3::write_memory()+0x12>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:158
    /* Page erase will not be used if received. */
    /* Instead, page erase is determined by the is_boundary_flash_page function. */
    return 1;
  }

  size_t write_memory (void) {
    1a58:	ae 01       	movw	r20, r28
    1a5a:	c7 01       	movw	r24, r14
    1a5c:	b6 01       	movw	r22, r12
    1a5e:	0e 94 1d 03 	call	0x63a	; 0x63a <UPDI::send_bytes_block(unsigned long, unsigned int)>
    1a62:	b7 cf       	rjmp	.-146    	; 0x19d2 <NVM::V3::write_memory()+0x12>

00001a64 <NVM::V4::write_memory()>:
_ZN3NVM2V412write_memoryEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:162
    uint8_t   m_type = packet.out.bMType;
    uint32_t _dwAddr = packet.out.dwAddr;
    size_t  _wLength = packet.out.dwLength;
    if (bit_is_clear(PGCONF, PGCONF_PROG_bp)) return UPDI::write_userrow();
    1a64:	cf 92       	push	r12
    1a66:	df 92       	push	r13
    1a68:	ef 92       	push	r14
    1a6a:	ff 92       	push	r15
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:182
      _dwAddr += PROG_START;
      return write_words_flash(_dwAddr, _wLength);
    }
    else {
      /* MTYPE_SRAM */
      return UPDI::send_bytes_block(_dwAddr, _wLength);
    1a6c:	cf 93       	push	r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:184
    }
  }
    1a6e:	df 93       	push	r29
    1a70:	f9 99       	sbic	0x1f, 1	; 31
    1a72:	09 c0       	rjmp	.+18     	; 0x1a86 <NVM::V4::write_memory()+0x22>
    1a74:	f1 dd       	rcall	.-1054   	; 0x1658 <UPDI::write_userrow()>
    1a76:	90 e0       	ldi	r25, 0x00	; 0
    1a78:	df 91       	pop	r29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:159
    /* Instead, page erase is determined by the is_boundary_flash_page function. */
    return 1;
  }

  size_t write_memory (void) {
    uint8_t   m_type = packet.out.bMType;
    1a7a:	cf 91       	pop	r28
    1a7c:	ff 90       	pop	r15
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:160
    uint32_t _dwAddr = packet.out.dwAddr;
    1a7e:	ef 90       	pop	r14
    1a80:	df 90       	pop	r13
    1a82:	cf 90       	pop	r12
    1a84:	08 95       	ret
    1a86:	80 91 f7 60 	lds	r24, 0x60F7	; 0x8060f7 <packet+0x7>
    1a8a:	c0 90 f8 60 	lds	r12, 0x60F8	; 0x8060f8 <packet+0x8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:161
    size_t  _wLength = packet.out.dwLength;
    1a8e:	d0 90 f9 60 	lds	r13, 0x60F9	; 0x8060f9 <packet+0x9>
    1a92:	e0 90 fa 60 	lds	r14, 0x60FA	; 0x8060fa <packet+0xa>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:163
    if (bit_is_clear(PGCONF, PGCONF_PROG_bp)) return UPDI::write_userrow();
    if (m_type == 0x22 || m_type == 0xB2 || m_type == 0xB3 || m_type == 0xC4) {
    1a96:	f0 90 fb 60 	lds	r15, 0x60FB	; 0x8060fb <packet+0xb>
    1a9a:	c0 91 fc 60 	lds	r28, 0x60FC	; 0x8060fc <packet+0xc>
    1a9e:	d0 91 fd 60 	lds	r29, 0x60FD	; 0x8060fd <packet+0xd>
    1aa2:	82 32       	cpi	r24, 0x22	; 34
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:108
  }

  bool write_eeprom (uint32_t _dwAddr, size_t _wLength) {
    D2PRINTF(" NVM_V4_EEERWR=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x13)   /* NVM_V4_CMD_EEERWR */
    1aa4:	31 f0       	breq	.+12     	; 0x1ab2 <NVM::V4::write_memory()+0x4e>
    1aa6:	9e e4       	ldi	r25, 0x4E	; 78
    1aa8:	98 0f       	add	r25, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:111
      && UPDI::send_bytes_block_slow(_dwAddr, _wLength)
      && (nvm_wait() & 0x73) == 0
      && nvm_ctrl_change(0x00)
    1aaa:	92 30       	cpi	r25, 0x02	; 2
    1aac:	10 f0       	brcs	.+4      	; 0x1ab2 <NVM::V4::write_memory()+0x4e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:90
    D2PRINTF(" NVM_V4_FLWR=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x02)   /* NVM_V4_CMD_FLWR */
      && UPDI::send_words_block(_dwAddr, _wLength)
      && (nvm_wait() & 0x73) == 0
      && nvm_ctrl_change(0x00)
    1aae:	84 3c       	cpi	r24, 0xC4	; 196
    1ab0:	91 f4       	brne	.+36     	; 0x1ad6 <NVM::V4::write_memory()+0x72>
write_eeprom():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:109

  bool write_eeprom (uint32_t _dwAddr, size_t _wLength) {
    D2PRINTF(" NVM_V4_EEERWR=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x13)   /* NVM_V4_CMD_EEERWR */
      && UPDI::send_bytes_block_slow(_dwAddr, _wLength)
    1ab2:	83 e1       	ldi	r24, 0x13	; 19
    1ab4:	e0 db       	rcall	.-2112   	; 0x1276 <NVM::V3::nvm_ctrl_change(unsigned char)>
    1ab6:	81 11       	cpse	r24, r1
    1ab8:	02 c0       	rjmp	.+4      	; 0x1abe <NVM::V4::write_memory()+0x5a>
_ZN3NVM2V412write_memoryEv():
    1aba:	80 e0       	ldi	r24, 0x00	; 0
    1abc:	dc cf       	rjmp	.-72     	; 0x1a76 <NVM::V4::write_memory()+0x12>
write_eeprom():
    1abe:	ae 01       	movw	r20, r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:110
      && (nvm_wait() & 0x73) == 0
    1ac0:	c7 01       	movw	r24, r14
    1ac2:	b6 01       	movw	r22, r12
    1ac4:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <UPDI::send_bytes_block_slow(unsigned long, unsigned int)>
    1ac8:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:170
      /* MTYPE_LOCK_BITS */
      /* MTYPE_EEPROM */
      /* MTYPE_EEPROM_XMEGA */
      return write_eeprom(_dwAddr, _wLength);
    }
    else if (m_type == 0xC0 || m_type == 0xC5) {
    1aca:	b9 f3       	breq	.-18     	; 0x1aba <NVM::V4::write_memory()+0x56>
    1acc:	c3 db       	rcall	.-2170   	; 0x1254 <NVM::V3::nvm_wait()>
    1ace:	83 77       	andi	r24, 0x73	; 115
    1ad0:	a1 f7       	brne	.-24     	; 0x1aba <NVM::V4::write_memory()+0x56>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:95
      && nvm_ctrl_change(0x00)
    );
  }

  bool write_bytes_flash (uint32_t _dwAddr, size_t _wLength) {
    if (SYS::is_boundary_flash_page(_dwAddr)) erase_flash_page(_dwAddr);
    1ad2:	ee db       	rcall	.-2084   	; 0x12b0 <NVM::V4::write_eeprom(unsigned long, unsigned int) [clone .part.5]>
    1ad4:	d0 cf       	rjmp	.-96     	; 0x1a76 <NVM::V4::write_memory()+0x12>
_ZN3NVM2V412write_memoryEv():
    1ad6:	80 3c       	cpi	r24, 0xC0	; 192
    1ad8:	11 f0       	breq	.+4      	; 0x1ade <NVM::V4::write_memory()+0x7a>
    1ada:	85 3c       	cpi	r24, 0xC5	; 197
    1adc:	c9 f4       	brne	.+50     	; 0x1b10 <NVM::V4::write_memory()+0xac>
write_bytes_flash():
    1ade:	c7 01       	movw	r24, r14
    1ae0:	b6 01       	movw	r22, r12
    1ae2:	0e 94 44 05 	call	0xa88	; 0xa88 <SYS::is_boundary_flash_page(unsigned long)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:98
    D2PRINTF(" NVM_V4_FLWR=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x02)   /* NVM_V4_CMD_FLWR */
    1ae6:	88 23       	and	r24, r24
    1ae8:	19 f0       	breq	.+6      	; 0x1af0 <NVM::V4::write_memory()+0x8c>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:101
      && UPDI::send_bytes_block_slow(_dwAddr, _wLength)
      && (nvm_wait() & 0x73) == 0
      && nvm_ctrl_change(0x00)
    1aea:	c7 01       	movw	r24, r14
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:99
  bool write_bytes_flash (uint32_t _dwAddr, size_t _wLength) {
    if (SYS::is_boundary_flash_page(_dwAddr)) erase_flash_page(_dwAddr);
    D2PRINTF(" NVM_V4_FLWR=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x02)   /* NVM_V4_CMD_FLWR */
      && UPDI::send_bytes_block_slow(_dwAddr, _wLength)
    1aec:	b6 01       	movw	r22, r12
    1aee:	37 dc       	rcall	.-1938   	; 0x135e <NVM::V4::erase_flash_page(unsigned long)>
    1af0:	82 e0       	ldi	r24, 0x02	; 2
    1af2:	c1 db       	rcall	.-2174   	; 0x1276 <NVM::V3::nvm_ctrl_change(unsigned char)>
    1af4:	88 23       	and	r24, r24
    1af6:	09 f3       	breq	.-62     	; 0x1aba <NVM::V4::write_memory()+0x56>
    1af8:	ae 01       	movw	r20, r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:100
      && (nvm_wait() & 0x73) == 0
    1afa:	c7 01       	movw	r24, r14
    1afc:	b6 01       	movw	r22, r12
    1afe:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <UPDI::send_bytes_block_slow(unsigned long, unsigned int)>
    1b02:	88 23       	and	r24, r24
    1b04:	d1 f2       	breq	.-76     	; 0x1aba <NVM::V4::write_memory()+0x56>
    1b06:	a6 db       	rcall	.-2228   	; 0x1254 <NVM::V3::nvm_wait()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:175
    else if (m_type == 0xC0 || m_type == 0xC5) {
      /* MTYPE_FLASH (alias) */
      /* MTYPE_USERSIG (USERROW, BOOTROW) */
      return write_bytes_flash(_dwAddr, _wLength);
    }
    else if (m_type == 0xB0) {
    1b08:	83 77       	andi	r24, 0x73	; 115
    1b0a:	b9 f6       	brne	.-82     	; 0x1aba <NVM::V4::write_memory()+0x56>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:177
      /* MTYPE_FLASH_PAGE (PROGMEM) */
      _dwAddr += PROG_START;
    1b0c:	d1 db       	rcall	.-2142   	; 0x12b0 <NVM::V4::write_eeprom(unsigned long, unsigned int) [clone .part.5]>
    1b0e:	b3 cf       	rjmp	.-154    	; 0x1a76 <NVM::V4::write_memory()+0x12>
_ZN3NVM2V412write_memoryEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:84
    );
  }

  bool write_words_flash (uint32_t _dwAddr, size_t _wLength) {
    if (bit_is_clear(PGCONF, PGCONF_ERSE_bp)
      && SYS::is_boundary_flash_page(_dwAddr)) erase_flash_page(_dwAddr);
    1b10:	80 3b       	cpi	r24, 0xB0	; 176
    1b12:	09 f5       	brne	.+66     	; 0x1b56 <NVM::V4::write_memory()+0xf2>
    1b14:	80 e8       	ldi	r24, 0x80	; 128
    1b16:	e8 0e       	add	r14, r24
    1b18:	f1 1c       	adc	r15, r1
write_words_flash():
    1b1a:	fa 99       	sbic	0x1f, 2	; 31
    1b1c:	09 c0       	rjmp	.+18     	; 0x1b30 <NVM::V4::write_memory()+0xcc>
    1b1e:	c7 01       	movw	r24, r14
    1b20:	b6 01       	movw	r22, r12
    1b22:	0e 94 44 05 	call	0xa88	; 0xa88 <SYS::is_boundary_flash_page(unsigned long)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:87
    D2PRINTF(" NVM_V4_FLWR=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x02)   /* NVM_V4_CMD_FLWR */
    1b26:	88 23       	and	r24, r24
    1b28:	19 f0       	breq	.+6      	; 0x1b30 <NVM::V4::write_memory()+0xcc>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:90
      && UPDI::send_words_block(_dwAddr, _wLength)
      && (nvm_wait() & 0x73) == 0
      && nvm_ctrl_change(0x00)
    1b2a:	c7 01       	movw	r24, r14
    1b2c:	b6 01       	movw	r22, r12
    1b2e:	17 dc       	rcall	.-2002   	; 0x135e <NVM::V4::erase_flash_page(unsigned long)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:88
    if (bit_is_clear(PGCONF, PGCONF_ERSE_bp)
      && SYS::is_boundary_flash_page(_dwAddr)) erase_flash_page(_dwAddr);
    D2PRINTF(" NVM_V4_FLWR=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x02)   /* NVM_V4_CMD_FLWR */
      && UPDI::send_words_block(_dwAddr, _wLength)
    1b30:	82 e0       	ldi	r24, 0x02	; 2
    1b32:	a1 db       	rcall	.-2238   	; 0x1276 <NVM::V3::nvm_ctrl_change(unsigned char)>
    1b34:	88 23       	and	r24, r24
    1b36:	09 f4       	brne	.+2      	; 0x1b3a <NVM::V4::write_memory()+0xd6>
    1b38:	c0 cf       	rjmp	.-128    	; 0x1aba <NVM::V4::write_memory()+0x56>
    1b3a:	ae 01       	movw	r20, r28
    1b3c:	c7 01       	movw	r24, r14
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:89
      && (nvm_wait() & 0x73) == 0
    1b3e:	b6 01       	movw	r22, r12
    1b40:	0e 94 92 02 	call	0x524	; 0x524 <UPDI::send_words_block(unsigned long, unsigned int)>
    1b44:	88 23       	and	r24, r24
    1b46:	09 f4       	brne	.+2      	; 0x1b4a <NVM::V4::write_memory()+0xe6>
    1b48:	b8 cf       	rjmp	.-144    	; 0x1aba <NVM::V4::write_memory()+0x56>
    1b4a:	84 db       	rcall	.-2296   	; 0x1254 <NVM::V3::nvm_wait()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:182
      _dwAddr += PROG_START;
      return write_words_flash(_dwAddr, _wLength);
    }
    else {
      /* MTYPE_SRAM */
      return UPDI::send_bytes_block(_dwAddr, _wLength);
    1b4c:	83 77       	andi	r24, 0x73	; 115
    1b4e:	09 f0       	breq	.+2      	; 0x1b52 <NVM::V4::write_memory()+0xee>
    1b50:	b4 cf       	rjmp	.-152    	; 0x1aba <NVM::V4::write_memory()+0x56>
    1b52:	ae db       	rcall	.-2212   	; 0x12b0 <NVM::V4::write_eeprom(unsigned long, unsigned int) [clone .part.5]>
    1b54:	90 cf       	rjmp	.-224    	; 0x1a76 <NVM::V4::write_memory()+0x12>
_ZN3NVM2V412write_memoryEv():
    1b56:	ae 01       	movw	r20, r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv5.cpp:136
    }
    /* Page erase will not be used if received. */
    return 1;
  }

  size_t write_memory (void) {
    1b58:	c7 01       	movw	r24, r14
    1b5a:	b6 01       	movw	r22, r12
    1b5c:	0e 94 1d 03 	call	0x63a	; 0x63a <UPDI::send_bytes_block(unsigned long, unsigned int)>
    1b60:	8a cf       	rjmp	.-236    	; 0x1a76 <NVM::V4::write_memory()+0x12>

00001b62 <NVM::V5::write_memory()>:
_ZN3NVM2V512write_memoryEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv5.cpp:140
    uint8_t   m_type = packet.out.bMType;
    uint32_t _dwAddr = packet.out.dwAddr;
    size_t  _wLength = packet.out.dwLength;
    if (bit_is_clear(PGCONF, PGCONF_PROG_bp)) return UPDI::write_userrow();
    1b62:	cf 92       	push	r12
    1b64:	df 92       	push	r13
    1b66:	ef 92       	push	r14
    1b68:	ff 92       	push	r15
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv5.cpp:160
      _dwAddr += PROG_START;
      return write_words_flash(_dwAddr, _wLength);
    }
    else {
      /* MTYPE_SRAM */
      return UPDI::send_bytes_block(_dwAddr, _wLength);
    1b6a:	cf 93       	push	r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv5.cpp:162
    }
  }
    1b6c:	df 93       	push	r29
    1b6e:	f9 99       	sbic	0x1f, 1	; 31
    1b70:	09 c0       	rjmp	.+18     	; 0x1b84 <NVM::V5::write_memory()+0x22>
    1b72:	72 dd       	rcall	.-1308   	; 0x1658 <UPDI::write_userrow()>
    1b74:	90 e0       	ldi	r25, 0x00	; 0
    1b76:	df 91       	pop	r29
    1b78:	cf 91       	pop	r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv5.cpp:137
    /* Page erase will not be used if received. */
    return 1;
  }

  size_t write_memory (void) {
    uint8_t   m_type = packet.out.bMType;
    1b7a:	ff 90       	pop	r15
    1b7c:	ef 90       	pop	r14
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv5.cpp:138
    uint32_t _dwAddr = packet.out.dwAddr;
    1b7e:	df 90       	pop	r13
    1b80:	cf 90       	pop	r12
    1b82:	08 95       	ret
    1b84:	80 91 f7 60 	lds	r24, 0x60F7	; 0x8060f7 <packet+0x7>
    1b88:	c0 90 f8 60 	lds	r12, 0x60F8	; 0x8060f8 <packet+0x8>
    1b8c:	d0 90 f9 60 	lds	r13, 0x60F9	; 0x8060f9 <packet+0x9>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv5.cpp:139
    size_t  _wLength = packet.out.dwLength;
    1b90:	e0 90 fa 60 	lds	r14, 0x60FA	; 0x8060fa <packet+0xa>
    1b94:	f0 90 fb 60 	lds	r15, 0x60FB	; 0x8060fb <packet+0xb>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv5.cpp:141
    if (bit_is_clear(PGCONF, PGCONF_PROG_bp)) return UPDI::write_userrow();
    if (m_type == 0x22 || m_type == 0xB2 || m_type == 0xB3 || m_type == 0xC4) {
    1b98:	c0 91 fc 60 	lds	r28, 0x60FC	; 0x8060fc <packet+0xc>
    1b9c:	d0 91 fd 60 	lds	r29, 0x60FD	; 0x8060fd <packet+0xd>
    1ba0:	82 32       	cpi	r24, 0x22	; 34
    1ba2:	31 f0       	breq	.+12     	; 0x1bb0 <NVM::V5::write_memory()+0x4e>
    1ba4:	9e e4       	ldi	r25, 0x4E	; 78
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv5.cpp:93
  }

  bool write_eeprom (uint32_t _dwAddr, size_t _wLength) {
    D2PRINTF(" NVM_V5_EEPERW=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x00)
    1ba6:	98 0f       	add	r25, r24
    1ba8:	92 30       	cpi	r25, 0x02	; 2
    1baa:	10 f0       	brcs	.+4      	; 0x1bb0 <NVM::V5::write_memory()+0x4e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv5.cpp:96
      && UPDI::send_bytes_block(_dwAddr, _wLength)
      && nvm_ctrl_change(0x15)  /* NVM_V5_CMD_EEPERW */
      && (nvm_wait() & 0x73) == 0
    1bac:	84 3c       	cpi	r24, 0xC4	; 196
    1bae:	99 f4       	brne	.+38     	; 0x1bd6 <NVM::V5::write_memory()+0x74>
write_eeprom():
    1bb0:	80 e0       	ldi	r24, 0x00	; 0
    1bb2:	61 db       	rcall	.-2366   	; 0x1276 <NVM::V3::nvm_ctrl_change(unsigned char)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv5.cpp:94

  bool write_eeprom (uint32_t _dwAddr, size_t _wLength) {
    D2PRINTF(" NVM_V5_EEPERW=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x00)
      && UPDI::send_bytes_block(_dwAddr, _wLength)
    1bb4:	81 11       	cpse	r24, r1
    1bb6:	02 c0       	rjmp	.+4      	; 0x1bbc <NVM::V5::write_memory()+0x5a>
_ZN3NVM2V512write_memoryEv():
    1bb8:	80 e0       	ldi	r24, 0x00	; 0
    1bba:	dc cf       	rjmp	.-72     	; 0x1b74 <NVM::V5::write_memory()+0x12>
write_eeprom():
    1bbc:	ae 01       	movw	r20, r28
    1bbe:	c7 01       	movw	r24, r14
    1bc0:	b6 01       	movw	r22, r12
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv5.cpp:95
      && nvm_ctrl_change(0x15)  /* NVM_V5_CMD_EEPERW */
    1bc2:	0e 94 1d 03 	call	0x63a	; 0x63a <UPDI::send_bytes_block(unsigned long, unsigned int)>
    1bc6:	88 23       	and	r24, r24
    1bc8:	b9 f3       	breq	.-18     	; 0x1bb8 <NVM::V5::write_memory()+0x56>
    1bca:	85 e1       	ldi	r24, 0x15	; 21
    1bcc:	54 db       	rcall	.-2392   	; 0x1276 <NVM::V3::nvm_ctrl_change(unsigned char)>
    1bce:	88 23       	and	r24, r24
    1bd0:	99 f3       	breq	.-26     	; 0x1bb8 <NVM::V5::write_memory()+0x56>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv5.cpp:148
      /* MTYPE_LOCK_BITS */
      /* MTYPE_EEPROM */
      /* MTYPE_EEPROM_XMEGA */
      return write_eeprom(_dwAddr, _wLength);
    }
    else if (m_type == 0xC0 || m_type == 0xC5) {
    1bd2:	4a db       	rcall	.-2412   	; 0x1268 <NVM::V3::write_eeprom(unsigned long, unsigned int) [clone .part.3]>
    1bd4:	cf cf       	rjmp	.-98     	; 0x1b74 <NVM::V5::write_memory()+0x12>
_ZN3NVM2V512write_memoryEv():
    1bd6:	80 3c       	cpi	r24, 0xC0	; 192
    1bd8:	11 f0       	breq	.+4      	; 0x1bde <NVM::V5::write_memory()+0x7c>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv5.cpp:151
      /* MTYPE_FLASH (alias) */
      /* MTYPE_USERSIG (USERROW, BOOTROW) */
      return write_bytes_flash(_dwAddr, _wLength);
    1bda:	85 3c       	cpi	r24, 0xC5	; 197
    1bdc:	29 f4       	brne	.+10     	; 0x1be8 <NVM::V5::write_memory()+0x86>
    1bde:	ae 01       	movw	r20, r28
    1be0:	c7 01       	movw	r24, r14
    1be2:	b6 01       	movw	r22, r12
    1be4:	70 db       	rcall	.-2336   	; 0x12c6 <NVM::V3::write_bytes_flash(unsigned long, unsigned int)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv5.cpp:153
    }
    else if (m_type == 0xB0) {
    1be6:	c6 cf       	rjmp	.-116    	; 0x1b74 <NVM::V5::write_memory()+0x12>
    1be8:	80 3b       	cpi	r24, 0xB0	; 176
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv5.cpp:155
      /* MTYPE_FLASH_PAGE (PROGMEM) */
      _dwAddr += PROG_START;
    1bea:	39 f4       	brne	.+14     	; 0x1bfa <NVM::V5::write_memory()+0x98>
    1bec:	c7 01       	movw	r24, r14
    1bee:	b6 01       	movw	r22, r12
    1bf0:	80 58       	subi	r24, 0x80	; 128
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv5.cpp:156
      return write_words_flash(_dwAddr, _wLength);
    1bf2:	9f 4f       	sbci	r25, 0xFF	; 255
    1bf4:	ae 01       	movw	r20, r28
    1bf6:	8d db       	rcall	.-2278   	; 0x1312 <NVM::V3::write_words_flash(unsigned long, unsigned int)>
    1bf8:	bd cf       	rjmp	.-134    	; 0x1b74 <NVM::V5::write_memory()+0x12>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv5.cpp:160
    }
    else {
      /* MTYPE_SRAM */
      return UPDI::send_bytes_block(_dwAddr, _wLength);
    1bfa:	ae 01       	movw	r20, r28
    1bfc:	c7 01       	movw	r24, r14
    1bfe:	b6 01       	movw	r22, r12
    1c00:	0e 94 1d 03 	call	0x63a	; 0x63a <UPDI::send_bytes_block(unsigned long, unsigned int)>
    1c04:	b7 cf       	rjmp	.-146    	; 0x1b74 <NVM::V5::write_memory()+0x12>

00001c06 <UPDI::chip_erase()>:
_ZN4UPDI10chip_eraseEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:287
    return sys_reset(false);
  }

  bool chip_erase (void) {
    D1PRINTF(" CHIP_ERASE");
    USART::drain();
    1c06:	0e 94 41 01 	call	0x282	; 0x282 <USART::drain(unsigned int) [clone .constprop.11]>
set_erase_key():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:273
    if (!send_bytes(nvmprog_key, sizeof(nvmprog_key)) || !key_wait_set(4)) return false;
    return _reset ? sys_reset(false) : true;
  }

  bool set_erase_key (void) {
    if (bit_is_clear(PGCONF, PGCONF_PROG_bp)) set_nvmprog_key(false);
    1c0a:	f9 99       	sbic	0x1f, 1	; 31
    1c0c:	02 c0       	rjmp	.+4      	; 0x1c12 <UPDI::chip_erase()+0xc>
    1c0e:	80 e0       	ldi	r24, 0x00	; 0
    1c10:	e6 dc       	rcall	.-1588   	; 0x15de <UPDI::set_nvmprog_key(bool)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:275
    D1PRINTF(" ERASE_KEY=");  /* wait set CHIPERASE */
    if (!send_bytes(erase_key, sizeof(erase_key)) || !key_wait_set(3)) return false;
    1c12:	6a e0       	ldi	r22, 0x0A	; 10
    1c14:	70 e0       	ldi	r23, 0x00	; 0
    1c16:	8d e6       	ldi	r24, 0x6D	; 109
    1c18:	90 e6       	ldi	r25, 0x60	; 96
    1c1a:	0e 94 4c 02 	call	0x498	; 0x498 <UPDI::send_bytes(unsigned char const*, unsigned int)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:304
      sys_wait_set(3);      /* wait set PROGSTART */
    }
    D1PRINTF(" PROGSTART=%02X\r\n", RXDATA);
    bit_set(PGCONF, PGCONF_ERSE_bp);
    bit_set(PGCONF, PGCONF_PROG_bp);
    return (*Command_Table.prog_init)();
    1c1e:	81 11       	cpse	r24, r1
    1c20:	02 c0       	rjmp	.+4      	; 0x1c26 <UPDI::chip_erase()+0x20>
_ZN4UPDI10chip_eraseEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:275
  }

  bool set_erase_key (void) {
    if (bit_is_clear(PGCONF, PGCONF_PROG_bp)) set_nvmprog_key(false);
    D1PRINTF(" ERASE_KEY=");  /* wait set CHIPERASE */
    if (!send_bytes(erase_key, sizeof(erase_key)) || !key_wait_set(3)) return false;
    1c22:	20 e0       	ldi	r18, 0x00	; 0
    1c24:	45 c0       	rjmp	.+138    	; 0x1cb0 <UPDI::chip_erase()+0xaa>
set_erase_key():
    1c26:	83 e0       	ldi	r24, 0x03	; 3
    1c28:	bf dc       	rcall	.-1666   	; 0x15a8 <UPDI::key_wait_set(unsigned char)>
    1c2a:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:137
    const static uint8_t _reset[] = {
      0x55, 0xC8, 0x59, /* SYSRST */
      0x55, 0xC8, 0x00, /* SYSRUN */
      0x55, 0xC3, 0x04  /* UPDIDIS */
    };
    return send_bytes(_reset, _leave ? 9 : 6);
    1c2c:	d1 f3       	breq	.-12     	; 0x1c22 <UPDI::chip_erase()+0x1c>
sys_reset():
    1c2e:	66 e0       	ldi	r22, 0x06	; 6
    1c30:	70 e0       	ldi	r23, 0x00	; 0
    1c32:	87 e9       	ldi	r24, 0x97	; 151
    1c34:	90 e6       	ldi	r25, 0x60	; 96
    1c36:	0e 94 4c 02 	call	0x498	; 0x498 <UPDI::send_bytes(unsigned char const*, unsigned int)>
_ZN4UPDI10chip_eraseEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:288
  }

  bool chip_erase (void) {
    D1PRINTF(" CHIP_ERASE");
    USART::drain();
    if (!set_erase_key()) return false;
    1c3a:	88 23       	and	r24, r24
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/delay_busywait.h:42
  }
}

void delay_millis (uint32_t _ms) {
  if (F_CPU >= 1000000L) {
    __builtin_avr_delay_cycles((F_CPU / 1000L) * _ms);
    1c3c:	91 f3       	breq	.-28     	; 0x1c22 <UPDI::chip_erase()+0x1c>
delay_millis():
    1c3e:	2f e1       	ldi	r18, 0x1F	; 31
    1c40:	81 ea       	ldi	r24, 0xA1	; 161
    1c42:	97 e0       	ldi	r25, 0x07	; 7
    1c44:	21 50       	subi	r18, 0x01	; 1
    1c46:	80 40       	sbci	r24, 0x00	; 0
    1c48:	90 40       	sbci	r25, 0x00	; 0
    1c4a:	e1 f7       	brne	.-8      	; 0x1c44 <UPDI::chip_erase()+0x3e>
    1c4c:	00 c0       	rjmp	.+0      	; 0x1c4e <UPDI::chip_erase()+0x48>
    1c4e:	00 00       	nop
    1c50:	2f e1       	ldi	r18, 0x1F	; 31
    1c52:	81 ea       	ldi	r24, 0xA1	; 161
    1c54:	97 e0       	ldi	r25, 0x07	; 7
    1c56:	21 50       	subi	r18, 0x01	; 1
    1c58:	80 40       	sbci	r24, 0x00	; 0
    1c5a:	90 40       	sbci	r25, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:292
    D1PRINTF(" WAIT");
    SYS::delay_125ms();
    SYS::delay_125ms();
    USART::drain();
    1c5c:	e1 f7       	brne	.-8      	; 0x1c56 <UPDI::chip_erase()+0x50>
    1c5e:	00 c0       	rjmp	.+0      	; 0x1c60 <UPDI::chip_erase()+0x5a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:293
    sys_wait_clear(5);      /* wait clear RSTSYS */
    1c60:	00 00       	nop
_ZN4UPDI10chip_eraseEv():
    1c62:	0e 94 41 01 	call	0x282	; 0x282 <USART::drain(unsigned int) [clone .constprop.11]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:294
    sys_wait_clear(0);      /* wait clear LOCKSTATUS */
    1c66:	85 e0       	ldi	r24, 0x05	; 5
    1c68:	69 dc       	rcall	.-1838   	; 0x153c <UPDI::sys_wait_clear(unsigned char)>
    1c6a:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/delay_busywait.h:33
static __inline__ __attribute__((__always_inline__)) void delay_micros (uint32_t _us);
static __inline__ __attribute__((__always_inline__)) void delay_millis (uint32_t _ms);

void delay_micros (uint32_t _us) {
  if (F_CPU >= 1000000L) {
    __builtin_avr_delay_cycles((F_CPU / 1000000L) * _us);
    1c6c:	67 dc       	rcall	.-1842   	; 0x153c <UPDI::sys_wait_clear(unsigned char)>
delay_micros():
    1c6e:	82 e1       	ldi	r24, 0x12	; 18
    1c70:	91 e0       	ldi	r25, 0x01	; 1
    1c72:	01 97       	sbiw	r24, 0x01	; 1
    1c74:	f1 f7       	brne	.-4      	; 0x1c72 <UPDI::chip_erase()+0x6c>
    1c76:	00 c0       	rjmp	.+0      	; 0x1c78 <UPDI::chip_erase()+0x72>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:245
  }

  bool key_wait_clear (uint8_t _bit) {
    SYS::delay_55us();
    do {
      key_status();
    1c78:	00 00       	nop
key_wait_clear():
    1c7a:	0e 94 6f 02 	call	0x4de	; 0x4de <UPDI::key_status()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:246
    } while (bit_is_set(RXDATA, _bit));
    1c7e:	eb 99       	sbic	0x1d, 3	; 29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:297
    USART::drain();
    sys_wait_clear(5);      /* wait clear RSTSYS */
    sys_wait_clear(0);      /* wait clear LOCKSTATUS */
    D1PRINTF(" <SYS:%02X>\r\n", RXDATA);
    key_wait_clear(3);      /* wait clear CHIPERASE */
    if (sys_status() && bit_is_clear(RXDATA, 3)) {
    1c80:	fc cf       	rjmp	.-8      	; 0x1c7a <UPDI::chip_erase()+0x74>
_ZN4UPDI10chip_eraseEv():
    1c82:	0e 94 66 02 	call	0x4cc	; 0x4cc <UPDI::sys_status()>
    1c86:	88 23       	and	r24, r24
    1c88:	41 f0       	breq	.+16     	; 0x1c9a <UPDI::chip_erase()+0x94>
    1c8a:	eb 99       	sbic	0x1d, 3	; 29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:298
      if (!set_nvmprog_key(true)) return false;
    1c8c:	06 c0       	rjmp	.+12     	; 0x1c9a <UPDI::chip_erase()+0x94>
    1c8e:	81 e0       	ldi	r24, 0x01	; 1
    1c90:	a6 dc       	rcall	.-1716   	; 0x15de <UPDI::set_nvmprog_key(bool)>
    1c92:	88 23       	and	r24, r24
    1c94:	31 f2       	breq	.-116    	; 0x1c22 <UPDI::chip_erase()+0x1c>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:299
      sys_wait_set(3);      /* wait set PROGSTART */
    1c96:	83 e0       	ldi	r24, 0x03	; 3
    1c98:	6c dc       	rcall	.-1832   	; 0x1572 <UPDI::sys_wait_set(unsigned char)>
    1c9a:	fa 9a       	sbi	0x1f, 2	; 31
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:302
    }
    D1PRINTF(" PROGSTART=%02X\r\n", RXDATA);
    bit_set(PGCONF, PGCONF_ERSE_bp);
    1c9c:	f9 9a       	sbi	0x1f, 1	; 31
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:303
    bit_set(PGCONF, PGCONF_PROG_bp);
    1c9e:	e0 91 3e 63 	lds	r30, 0x633E	; 0x80633e <Command_Table>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:304
    return (*Command_Table.prog_init)();
    1ca2:	f0 91 3f 63 	lds	r31, 0x633F	; 0x80633f <Command_Table+0x1>
    1ca6:	09 95       	icall
    1ca8:	21 e0       	ldi	r18, 0x01	; 1
    1caa:	89 2b       	or	r24, r25
    1cac:	09 f4       	brne	.+2      	; 0x1cb0 <UPDI::chip_erase()+0xaa>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:305
  }
    1cae:	b9 cf       	rjmp	.-142    	; 0x1c22 <UPDI::chip_erase()+0x1c>
    1cb0:	82 2f       	mov	r24, r18
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:134
    return 0;
  }

  size_t erase_memory (void) {
    uint8_t e_type = packet.out.bEType;
    if (e_type == 0x00) {
    1cb2:	08 95       	ret

00001cb4 <NVM::V0::erase_memory()>:
_ZN3NVM2V012erase_memoryEv():
    1cb4:	80 91 f7 60 	lds	r24, 0x60F7	; 0x8060f7 <packet+0x7>
    1cb8:	81 11       	cpse	r24, r1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:136
      /* XMEGA_ERASE_CHIP */
      return UPDI::chip_erase();
    1cba:	03 c0       	rjmp	.+6      	; 0x1cc2 <NVM::V0::erase_memory()+0xe>
    1cbc:	a4 df       	rcall	.-184    	; 0x1c06 <UPDI::chip_erase()>
    1cbe:	90 e0       	ldi	r25, 0x00	; 0
    1cc0:	08 95       	ret
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:139
    }
    /* Page erase will not be used if received. */
    return 1;
    1cc2:	81 e0       	ldi	r24, 0x01	; 1
    1cc4:	90 e0       	ldi	r25, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:140
  }
    1cc6:	08 95       	ret

00001cc8 <NVM::V3::erase_memory()>:
_ZN3NVM2V312erase_memoryEv():
    1cc8:	f5 cf       	rjmp	.-22     	; 0x1cb4 <NVM::V0::erase_memory()>

00001cca <NVM::V5::erase_memory()>:
_ZN3NVM2V512erase_memoryEv():
    1cca:	f4 cf       	rjmp	.-24     	; 0x1cb4 <NVM::V0::erase_memory()>

00001ccc <NVM::V2::erase_memory()>:
_ZN3NVM2V212erase_memoryEv():
    1ccc:	80 91 f7 60 	lds	r24, 0x60F7	; 0x8060f7 <packet+0x7>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:137
    }
    return 0;
  }

  size_t erase_memory (void) {
    uint8_t e_type = packet.out.bEType;
    1cd0:	81 11       	cpse	r24, r1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:138
    if (e_type == 0x00) {
    1cd2:	03 c0       	rjmp	.+6      	; 0x1cda <NVM::V2::erase_memory()+0xe>
    1cd4:	98 df       	rcall	.-208    	; 0x1c06 <UPDI::chip_erase()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:140
      /* XMEGA_ERASE_CHIP */
      return UPDI::chip_erase();
    1cd6:	90 e0       	ldi	r25, 0x00	; 0
    1cd8:	08 95       	ret
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:147
    else {
      /* NOTE: AVRDUDE<=7.3 may pass the wrong M_TYPE. */
      /* For safety, only USERROW and BOOTROW are allowed to erase pages. */
      if (e_type == 0x07) {
        /* XMEGA_ERASE_USERSIG */
        return erase_flash_page(packet.out.dwAddr);
    1cda:	87 30       	cpi	r24, 0x07	; 7
    1cdc:	51 f4       	brne	.+20     	; 0x1cf2 <NVM::V2::erase_memory()+0x26>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:145
      return UPDI::chip_erase();
    }
    else {
      /* NOTE: AVRDUDE<=7.3 may pass the wrong M_TYPE. */
      /* For safety, only USERROW and BOOTROW are allowed to erase pages. */
      if (e_type == 0x07) {
    1cde:	60 91 f8 60 	lds	r22, 0x60F8	; 0x8060f8 <packet+0x8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:147
        /* XMEGA_ERASE_USERSIG */
        return erase_flash_page(packet.out.dwAddr);
    1ce2:	70 91 f9 60 	lds	r23, 0x60F9	; 0x8060f9 <packet+0x9>
    1ce6:	80 91 fa 60 	lds	r24, 0x60FA	; 0x8060fa <packet+0xa>
    1cea:	90 91 fb 60 	lds	r25, 0x60FB	; 0x8060fb <packet+0xb>
    1cee:	86 db       	rcall	.-2292   	; 0x13fc <NVM::V2::erase_flash_page(unsigned long)>
    1cf0:	f2 cf       	rjmp	.-28     	; 0x1cd6 <NVM::V2::erase_memory()+0xa>
    1cf2:	81 e0       	ldi	r24, 0x01	; 1
    1cf4:	90 e0       	ldi	r25, 0x00	; 0
    1cf6:	08 95       	ret

00001cf8 <NVM::V4::erase_memory()>:
_ZN3NVM2V412erase_memoryEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:152
      }
    }
    /* Page erase will not be used if received. */
    /* Instead, page erase is determined by the is_boundary_flash_page function. */
    return 1;
    1cf8:	80 91 f7 60 	lds	r24, 0x60F7	; 0x8060f7 <packet+0x7>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:153
  }
    1cfc:	81 11       	cpse	r24, r1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:140
    }
    return 0;
  }

  size_t erase_memory (void) {
    uint8_t e_type = packet.out.bEType;
    1cfe:	03 c0       	rjmp	.+6      	; 0x1d06 <NVM::V4::erase_memory()+0xe>
    1d00:	82 df       	rcall	.-252    	; 0x1c06 <UPDI::chip_erase()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:141
    if (e_type == 0x00) {
    1d02:	90 e0       	ldi	r25, 0x00	; 0
    1d04:	08 95       	ret
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:143
      /* XMEGA_ERASE_CHIP */
      return UPDI::chip_erase();
    1d06:	87 30       	cpi	r24, 0x07	; 7
    1d08:	51 f4       	brne	.+20     	; 0x1d1e <NVM::V4::erase_memory()+0x26>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:150
    else {
      /* NOTE: AVRDUDE<=7.3 may pass the wrong M_TYPE. */
      /* For safety, only USERROW and BOOTROW are allowed to erase pages. */
      if (e_type == 0x07) {
        /* XMEGA_ERASE_USERSIG */
        return erase_flash_page(packet.out.dwAddr);
    1d0a:	60 91 f8 60 	lds	r22, 0x60F8	; 0x8060f8 <packet+0x8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:148
      return UPDI::chip_erase();
    }
    else {
      /* NOTE: AVRDUDE<=7.3 may pass the wrong M_TYPE. */
      /* For safety, only USERROW and BOOTROW are allowed to erase pages. */
      if (e_type == 0x07) {
    1d0e:	70 91 f9 60 	lds	r23, 0x60F9	; 0x8060f9 <packet+0x9>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:150
        /* XMEGA_ERASE_USERSIG */
        return erase_flash_page(packet.out.dwAddr);
    1d12:	80 91 fa 60 	lds	r24, 0x60FA	; 0x8060fa <packet+0xa>
    1d16:	90 91 fb 60 	lds	r25, 0x60FB	; 0x8060fb <packet+0xb>
    1d1a:	21 db       	rcall	.-2494   	; 0x135e <NVM::V4::erase_flash_page(unsigned long)>
    1d1c:	f2 cf       	rjmp	.-28     	; 0x1d02 <NVM::V4::erase_memory()+0xa>
    1d1e:	81 e0       	ldi	r24, 0x01	; 1
    1d20:	90 e0       	ldi	r25, 0x00	; 0
    1d22:	08 95       	ret

00001d24 <SYS::power_reset(bool, bool) [clone .part.2]>:
_ZN3SYS11power_resetEbb.part.2():
    1d24:	2f e1       	ldi	r18, 0x1F	; 31
    1d26:	81 ea       	ldi	r24, 0xA1	; 161
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:155
      }
    }
    /* Page erase will not be used if received. */
    /* Instead, page erase is determined by the is_boundary_flash_page function. */
    return 1;
    1d28:	97 e0       	ldi	r25, 0x07	; 7
    1d2a:	21 50       	subi	r18, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:156
  }
    1d2c:	80 40       	sbci	r24, 0x00	; 0
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/delay_busywait.h:42
  }
}

void delay_millis (uint32_t _ms) {
  if (F_CPU >= 1000000L) {
    __builtin_avr_delay_cycles((F_CPU / 1000L) * _ms);
    1d2e:	90 40       	sbci	r25, 0x00	; 0
    1d30:	e1 f7       	brne	.-8      	; 0x1d2a <SYS::power_reset(bool, bool) [clone .part.2]+0x6>
    1d32:	00 c0       	rjmp	.+0      	; 0x1d34 <SYS::power_reset(bool, bool) [clone .part.2]+0x10>
    1d34:	00 00       	nop
    1d36:	0d 98       	cbi	0x01, 5	; 1
    1d38:	80 91 12 04 	lds	r24, 0x0412	; 0x800412 <__TEXT_REGION_LENGTH__+0x7f0412>
    1d3c:	88 60       	ori	r24, 0x08	; 8
    1d3e:	80 93 12 04 	sts	0x0412, r24	; 0x800412 <__TEXT_REGION_LENGTH__+0x7f0412>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:343
    }
    if (_on) {
  #ifdef PIN_PGM_VPOWER
      delay_125ms();  /* discharge duration */
      digitalWriteMacro(PIN_PGM_VPOWER, LOW);   /* VTG on */
      pinControlRegister(PIN_VCP_TXD)  |= PORT_PULLUPEN_bm;   /* internal shared TCLK */
    1d42:	80 91 13 04 	lds	r24, 0x0413	; 0x800413 <__TEXT_REGION_LENGTH__+0x7f0413>
    1d46:	88 60       	ori	r24, 0x08	; 8
    1d48:	80 93 13 04 	sts	0x0413, r24	; 0x800413 <__TEXT_REGION_LENGTH__+0x7f0413>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:344
      pinControlRegister(PIN_VCP_RXD)  |= PORT_PULLUPEN_bm;
    1d4c:	80 91 10 04 	lds	r24, 0x0410	; 0x800410 <__TEXT_REGION_LENGTH__+0x7f0410>
    1d50:	88 60       	ori	r24, 0x08	; 8
    1d52:	80 93 10 04 	sts	0x0410, r24	; 0x800410 <__TEXT_REGION_LENGTH__+0x7f0410>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:345
      pinControlRegister(PIN_PGM_TDAT) |= PORT_PULLUPEN_bm;
    1d56:	80 91 11 04 	lds	r24, 0x0411	; 0x800411 <__TEXT_REGION_LENGTH__+0x7f0411>
    1d5a:	88 60       	ori	r24, 0x08	; 8
    1d5c:	80 93 11 04 	sts	0x0411, r24	; 0x800411 <__TEXT_REGION_LENGTH__+0x7f0411>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:346
      pinControlRegister(PIN_PGM_TRST) |= PORT_PULLUPEN_bm;
    1d60:	80 91 46 63 	lds	r24, 0x6346	; 0x806346 <_jtag_arch>
    1d64:	83 30       	cpi	r24, 0x03	; 3
    1d66:	51 f0       	breq	.+20     	; 0x1d7c <SYS::power_reset(bool, bool) [clone .part.2]+0x58>
    1d68:	80 91 14 04 	lds	r24, 0x0414	; 0x800414 <__TEXT_REGION_LENGTH__+0x7f0414>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:348
    #if CONFIG_PGM_TYPE == 0
      if (_jtag_arch != 0x03) {
    1d6c:	88 60       	ori	r24, 0x08	; 8
    1d6e:	80 93 14 04 	sts	0x0414, r24	; 0x800414 <__TEXT_REGION_LENGTH__+0x7f0414>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:349
        pinControlRegister(PIN_PGM_PDAT) |= PORT_PULLUPEN_bm;
    1d72:	80 91 16 04 	lds	r24, 0x0416	; 0x800416 <__TEXT_REGION_LENGTH__+0x7f0416>
    1d76:	88 60       	ori	r24, 0x08	; 8
    1d78:	80 93 16 04 	sts	0x0416, r24	; 0x800416 <__TEXT_REGION_LENGTH__+0x7f0416>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:350
        pinControlRegister(PIN_PGM_PCLK) |= PORT_PULLUPEN_bm;
    1d7c:	08 95       	ret

00001d7e <SYS::power_reset(bool, bool)>:
_ZN3SYS11power_resetEbb():
    1d7e:	88 23       	and	r24, r24
    1d80:	19 f1       	breq	.+70     	; 0x1dc8 <SYS::power_reset(bool, bool)+0x4a>
    1d82:	0d 9a       	sbi	0x01, 5	; 1
    1d84:	80 91 46 63 	lds	r24, 0x6346	; 0x806346 <_jtag_arch>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:321
  /*
   * Target Reset
   */

  void power_reset (bool _off, bool _on) {
    if (_off) {
    1d88:	83 30       	cpi	r24, 0x03	; 3
    1d8a:	51 f0       	breq	.+20     	; 0x1da0 <SYS::power_reset(bool, bool)+0x22>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:323
  #ifdef PIN_PGM_VPOWER
      digitalWriteMacro(PIN_PGM_VPOWER, HIGH);  /* VTG off */
    1d8c:	80 91 14 04 	lds	r24, 0x0414	; 0x800414 <__TEXT_REGION_LENGTH__+0x7f0414>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:328
      /* Temporarily disable the pullup to stop current leakage when VTG=OFF. */
      /* It would be easier to just set the pin output LOW,                   */
      /* but we do it this way because of possible conflicts.                 */
    #if CONFIG_PGM_TYPE == 0  /* HAL_CNANO */
      if (_jtag_arch != 0x03) {
    1d90:	87 7f       	andi	r24, 0xF7	; 247
    1d92:	80 93 14 04 	sts	0x0414, r24	; 0x800414 <__TEXT_REGION_LENGTH__+0x7f0414>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:329
        pinControlRegister(PIN_PGM_PDAT) &= ~PORT_PULLUPEN_bm;
    1d96:	80 91 16 04 	lds	r24, 0x0416	; 0x800416 <__TEXT_REGION_LENGTH__+0x7f0416>
    1d9a:	87 7f       	andi	r24, 0xF7	; 247
    1d9c:	80 93 16 04 	sts	0x0416, r24	; 0x800416 <__TEXT_REGION_LENGTH__+0x7f0416>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:330
        pinControlRegister(PIN_PGM_PCLK) &= ~PORT_PULLUPEN_bm;
    1da0:	80 91 11 04 	lds	r24, 0x0411	; 0x800411 <__TEXT_REGION_LENGTH__+0x7f0411>
    1da4:	87 7f       	andi	r24, 0xF7	; 247
    1da6:	80 93 11 04 	sts	0x0411, r24	; 0x800411 <__TEXT_REGION_LENGTH__+0x7f0411>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:333
      }
    #endif
      pinControlRegister(PIN_PGM_TRST) &= ~PORT_PULLUPEN_bm;
    1daa:	80 91 10 04 	lds	r24, 0x0410	; 0x800410 <__TEXT_REGION_LENGTH__+0x7f0410>
    1dae:	87 7f       	andi	r24, 0xF7	; 247
    1db0:	80 93 10 04 	sts	0x0410, r24	; 0x800410 <__TEXT_REGION_LENGTH__+0x7f0410>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:334
      pinControlRegister(PIN_PGM_TDAT) &= ~PORT_PULLUPEN_bm;
    1db4:	80 91 12 04 	lds	r24, 0x0412	; 0x800412 <__TEXT_REGION_LENGTH__+0x7f0412>
    1db8:	87 7f       	andi	r24, 0xF7	; 247
    1dba:	80 93 12 04 	sts	0x0412, r24	; 0x800412 <__TEXT_REGION_LENGTH__+0x7f0412>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:335
      pinControlRegister(PIN_VCP_TXD)  &= ~PORT_PULLUPEN_bm;  /* internal shared TCLK */
    1dbe:	80 91 13 04 	lds	r24, 0x0413	; 0x800413 <__TEXT_REGION_LENGTH__+0x7f0413>
    1dc2:	87 7f       	andi	r24, 0xF7	; 247
    1dc4:	80 93 13 04 	sts	0x0413, r24	; 0x800413 <__TEXT_REGION_LENGTH__+0x7f0413>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:336
      pinControlRegister(PIN_VCP_RXD)  &= ~PORT_PULLUPEN_bm;
    1dc8:	61 11       	cpse	r22, r1
    1dca:	ac cf       	rjmp	.-168    	; 0x1d24 <SYS::power_reset(bool, bool) [clone .part.2]>
    1dcc:	08 95       	ret

00001dce <PDI::connect()>:
_ZN3PDI7connectEv():
    1dce:	92 db       	rcall	.-2268   	; 0x14f4 <USART::setup()>
    1dd0:	0c 98       	cbi	0x01, 4	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:339
  #endif
    }
    if (_on) {
    1dd2:	04 9a       	sbi	0x00, 4	; 0
    1dd4:	06 9a       	sbi	0x00, 6	; 0
    1dd6:	61 e0       	ldi	r22, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:355
        pinControlRegister(PIN_PGM_PCLK) |= PORT_PULLUPEN_bm;
      }
    #endif
  #endif
    }
  }
    1dd8:	81 e0       	ldi	r24, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:335
      0xC2, PDI_GVAL,   /* Set GUADTIME in ASI_CTRL */
      0xC1, 0x59,       /* SYSRST */
      0x82              /* Read back ASI_CTRL */
    };

    USART::setup();
    1dda:	d1 df       	rcall	.-94     	; 0x1d7e <SYS::power_reset(bool, bool)>
    1ddc:	0c 9a       	sbi	0x01, 4	; 1
delay_micros():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:337

    digitalWriteMacro(PIN_PGM_PDAT, LOW);
    1dde:	82 e1       	ldi	r24, 0x12	; 18
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:338
    pinLogicPush(PIN_PGM_PDAT);
    1de0:	91 e0       	ldi	r25, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:339
    pinLogicPush(PIN_PGM_PCLK);
    1de2:	01 97       	sbiw	r24, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:340
    SYS::power_reset();
    1de4:	f1 f7       	brne	.-4      	; 0x1de2 <PDI::connect()+0x14>
    1de6:	00 c0       	rjmp	.+0      	; 0x1de8 <PDI::connect()+0x1a>
    1de8:	00 00       	nop
_ZN3PDI7connectEv():
    1dea:	0e 94 db 01 	call	0x3b6	; 0x3b6 <USART::change_pdi()>
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/delay_busywait.h:33
static __inline__ __attribute__((__always_inline__)) void delay_micros (uint32_t _us);
static __inline__ __attribute__((__always_inline__)) void delay_millis (uint32_t _ms);

void delay_micros (uint32_t _us) {
  if (F_CPU >= 1000000L) {
    __builtin_avr_delay_cycles((F_CPU / 1000000L) * _us);
    1dee:	80 e1       	ldi	r24, 0x10	; 16
    1df0:	90 e0       	ldi	r25, 0x00	; 0
    1df2:	0e 94 b0 06 	call	0xd60	; 0xd60 <PDI::idle_clock(unsigned int)>
    1df6:	65 e0       	ldi	r22, 0x05	; 5
    1df8:	70 e0       	ldi	r23, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:345
    digitalWriteMacro(PIN_PGM_PDAT, HIGH);
    SYS::delay_55us();

    /* Send at least a certain number of IDLE bits to PCLK within 100us after PoR. */
    USART::change_pdi();
    1dfa:	8a e4       	ldi	r24, 0x4A	; 74
    1dfc:	90 e6       	ldi	r25, 0x60	; 96
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:346
    idle_clock(16);
    1dfe:	0e 94 f1 06 	call	0xde2	; 0xde2 <PDI::send_bytes(unsigned char const*, unsigned int)>
    1e02:	81 11       	cpse	r24, r1
    1e04:	03 c0       	rjmp	.+6      	; 0x1e0c <PDI::connect()+0x3e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:348

    while (!(send_bytes(_init, sizeof(_init)) && recv_byte() && RXDATA == PDI_GVAL)) {
    1e06:	fe d9       	rcall	.-3076   	; 0x1204 <PDI::send_break()>
    1e08:	fd d9       	rcall	.-3078   	; 0x1204 <PDI::send_break()>
    1e0a:	f5 cf       	rjmp	.-22     	; 0x1df6 <PDI::connect()+0x28>
    1e0c:	0e 94 cd 06 	call	0xd9a	; 0xd9a <PDI::recv_byte()>
    1e10:	88 23       	and	r24, r24
    1e12:	c9 f3       	breq	.-14     	; 0x1e06 <PDI::connect()+0x38>
    1e14:	8d b3       	in	r24, 0x1d	; 29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:349
      send_break();
    1e16:	85 30       	cpi	r24, 0x05	; 5
    1e18:	b1 f7       	brne	.-20     	; 0x1e06 <PDI::connect()+0x38>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:350
      send_break();
    1e1a:	f8 9a       	sbi	0x1f, 0	; 31
    1e1c:	81 e0       	ldi	r24, 0x01	; 1
    1e1e:	90 e0       	ldi	r25, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:348

    /* Send at least a certain number of IDLE bits to PCLK within 100us after PoR. */
    USART::change_pdi();
    idle_clock(16);

    while (!(send_bytes(_init, sizeof(_init)) && recv_byte() && RXDATA == PDI_GVAL)) {
    1e20:	08 95       	ret

00001e22 <SYS::hvc_enable()>:
_ZN3SYS10hvc_enableEv():
    1e22:	e0 e0       	ldi	r30, 0x00	; 0
    1e24:	fa e0       	ldi	r31, 0x0A	; 10
    1e26:	10 82       	st	Z, r1
    1e28:	80 e6       	ldi	r24, 0x60	; 96
    1e2a:	80 93 01 0a 	sts	0x0A01, r24	; 0x800a01 <__TEXT_REGION_LENGTH__+0x7f0a01>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:354
      send_break();
      send_break();
    }

    D1PRINTF(" PDION;GVAL=%02X\r\n", RXDATA);
    bit_set(PGCONF, PGCONF_UPDI_bp);
    1e2e:	82 e0       	ldi	r24, 0x02	; 2
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:356
    return 1;
  }
    1e30:	80 93 2b 0a 	sts	0x0A2B, r24	; 0x800a2b <__TEXT_REGION_LENGTH__+0x7f0a2b>
    1e34:	80 93 2d 0a 	sts	0x0A2D, r24	; 0x800a2d <__TEXT_REGION_LENGTH__+0x7f0a2d>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:476
    return _adc_reading;
  }

  void hvc_enable (void) {
  #ifdef CONFIG_HVC_ENABLE
    TCA0_SPLIT_CTRLA = 0;
    1e38:	83 e0       	ldi	r24, 0x03	; 3
    1e3a:	80 93 27 0a 	sts	0x0A27, r24	; 0x800a27 <__TEXT_REGION_LENGTH__+0x7f0a27>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:477
    TCA0_SPLIT_CTRLB = TCA_SPLIT_HCMP2EN_bm | TCA_SPLIT_HCMP1EN_bm;
    1e3e:	10 92 21 0a 	sts	0x0A21, r1	; 0x800a21 <__TEXT_REGION_LENGTH__+0x7f0a21>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:478
    TCA0_SPLIT_HCMP1 = F_CPU / HVC_CLK / 2;
    1e42:	81 e0       	ldi	r24, 0x01	; 1
    1e44:	80 83       	st	Z, r24
delay_micros():
    1e46:	83 ef       	ldi	r24, 0xF3	; 243
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:479
    TCA0_SPLIT_HCMP2 = F_CPU / HVC_CLK / 2;
    1e48:	91 e0       	ldi	r25, 0x01	; 1
    1e4a:	01 97       	sbiw	r24, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:480
    TCA0_SPLIT_HPER = (F_CPU / HVC_CLK) - 1;
    1e4c:	f1 f7       	brne	.-4      	; 0x1e4a <SYS::hvc_enable()+0x28>
    1e4e:	00 c0       	rjmp	.+0      	; 0x1e50 <SYS::hvc_enable()+0x2e>
    1e50:	00 00       	nop
_ZN3SYS10hvc_enableEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:481
    TCA0_SPLIT_HCNT = 0;
    1e52:	08 95       	ret

00001e54 <TPI::connect()>:
_ZN3TPI7connectEv():
    1e54:	0f 93       	push	r16
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:482
    TCA0_SPLIT_CTRLA = TCA_SPLIT_ENABLE_bm | TCA_SPLIT_CLKSEL_DIV1_gc;
    1e56:	1f 93       	push	r17
    1e58:	cf 93       	push	r28
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/delay_busywait.h:33
    1e5a:	df 93       	push	r29
    1e5c:	00 d0       	rcall	.+0      	; 0x1e5e <TPI::connect()+0xa>
    1e5e:	cd b7       	in	r28, 0x3d	; 61
    1e60:	de b7       	in	r29, 0x3e	; 62
    1e62:	1f ba       	out	0x1f, r1	; 31
    1e64:	47 db       	rcall	.-2418   	; 0x14f4 <USART::setup()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:485
    delay_100us();
  #endif
  }
    1e66:	01 9a       	sbi	0x00, 1	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:229
    return nvm_ctrl(0x00);
  }

  // MARK: TPI Session

  size_t connect (void) {
    1e68:	61 e0       	ldi	r22, 0x01	; 1
    1e6a:	81 e0       	ldi	r24, 0x01	; 1
    1e6c:	88 df       	rcall	.-240    	; 0x1d7e <SYS::power_reset(bool, bool)>
delay_micros():
    1e6e:	83 ed       	ldi	r24, 0xD3	; 211
    1e70:	90 e3       	ldi	r25, 0x30	; 48
    1e72:	01 97       	sbiw	r24, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:230
    PGCONF = 0;
    1e74:	f1 f7       	brne	.-4      	; 0x1e72 <TPI::connect()+0x1e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:231
    USART::setup();
    1e76:	00 c0       	rjmp	.+0      	; 0x1e78 <TPI::connect()+0x24>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:233

    pinLogicPush(PIN_PGM_TRST);
    1e78:	00 00       	nop
_ZN3TPI7connectEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:234
    SYS::power_reset();
    1e7a:	80 91 0c 63 	lds	r24, 0x630C	; 0x80630c <_packet_length>
    1e7e:	90 91 0d 63 	lds	r25, 0x630D	; 0x80630d <_packet_length+0x1>
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/delay_busywait.h:33
    1e82:	07 97       	sbiw	r24, 0x07	; 7
    1e84:	20 f0       	brcs	.+8      	; 0x1e8e <TPI::connect()+0x3a>
    1e86:	80 91 f6 60 	lds	r24, 0x60F6	; 0x8060f6 <packet+0x6>
    1e8a:	81 11       	cpse	r24, r1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:240
    SYS::delay_2500us();

    /* Called with `-xhvtpi` hvtpi_support */
    /* or SW0 holding start */
  #ifdef CONFIG_HVC_ENABLE
    if ((_packet_length > 6 && packet.out.tpi.bType) || bit_is_set(GPCONF, GPCONF_HLD_bp)) {
    1e8c:	02 c0       	rjmp	.+4      	; 0x1e92 <TPI::connect()+0x3e>
    1e8e:	f5 9b       	sbis	0x1e, 5	; 30
    1e90:	04 c0       	rjmp	.+8      	; 0x1e9a <TPI::connect()+0x46>
    1e92:	01 98       	cbi	0x00, 1	; 0
    1e94:	c6 df       	rcall	.-116    	; 0x1e22 <SYS::hvc_enable()>
    1e96:	69 9a       	sbi	0x0d, 1	; 13
    1e98:	fe 9a       	sbi	0x1f, 6	; 31
delay_millis():
    1e9a:	9f e1       	ldi	r25, 0x1F	; 31
    1e9c:	e1 ea       	ldi	r30, 0xA1	; 161
    1e9e:	f7 e0       	ldi	r31, 0x07	; 7
    1ea0:	91 50       	subi	r25, 0x01	; 1
    1ea2:	e0 40       	sbci	r30, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:242
      /* External Reset : Activation High-Voltage mode */
      pinLogicOpen(PIN_PGM_TRST);
    1ea4:	f0 40       	sbci	r31, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:243
      SYS::hvc_enable();
    1ea6:	e1 f7       	brne	.-8      	; 0x1ea0 <TPI::connect()+0x4c>
    1ea8:	00 c0       	rjmp	.+0      	; 0x1eaa <TPI::connect()+0x56>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:244
      digitalWriteMacro(PIN_HVC_SELECT2, HIGH);
    1eaa:	00 00       	nop
change_tpi():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:246
      D1PRINTF("<HVEN>");
      bit_set(PGCONF, PGCONF_HVEN_bp);
    1eac:	8f b7       	in	r24, 0x3f	; 63
__iCliRetVal():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/delay_busywait.h:42
  }
}

void delay_millis (uint32_t _ms) {
  if (F_CPU >= 1000000L) {
    __builtin_avr_delay_cycles((F_CPU / 1000L) * _ms);
    1eae:	f8 94       	cli
change_tpi():
    1eb0:	90 e1       	ldi	r25, 0x10	; 16
    1eb2:	90 93 e2 05 	sts	0x05E2, r25	; 0x8005e2 <__TEXT_REGION_LENGTH__+0x7f05e2>
    1eb6:	90 e8       	ldi	r25, 0x80	; 128
    1eb8:	90 93 12 04 	sts	0x0412, r25	; 0x800412 <__TEXT_REGION_LENGTH__+0x7f0412>
    1ebc:	02 9a       	sbi	0x00, 2	; 0
    1ebe:	90 e2       	ldi	r25, 0x20	; 32
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:111
  }

  /*** Set up single-wire synchronous mode for TPI operation. ***/
  /* The VCD-TxD is repurposed to transmit the synchronous clock. */
  void change_tpi (void) {
    ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1ec0:	90 93 04 08 	sts	0x0804, r25	; 0x800804 <__TEXT_REGION_LENGTH__+0x7f0804>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:112
      PORTMUX_USARTROUTEA = PORTMUX_USART_PGM;
    1ec4:	20 e0       	ldi	r18, 0x00	; 0
    1ec6:	3a e0       	ldi	r19, 0x0A	; 10
    1ec8:	20 93 08 08 	sts	0x0808, r18	; 0x800808 <__TEXT_REGION_LENGTH__+0x7f0808>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:113
      pinControlRegister(PIN_PGM_TCLK) = PORT_INVEN_bm;
    1ecc:	30 93 09 08 	sts	0x0809, r19	; 0x800809 <__TEXT_REGION_LENGTH__+0x7f0809>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:114
      pinLogicPush(PIN_PGM_TCLK);   /* CONFIG_PGM_TYPE!=1 is internal shared VTxD */
    1ed0:	9b e6       	ldi	r25, 0x6B	; 107
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:115
      USART0_STATUS = USART_DREIF_bm;
    1ed2:	90 93 07 08 	sts	0x0807, r25	; 0x800807 <__TEXT_REGION_LENGTH__+0x7f0807>
    1ed6:	9a e0       	ldi	r25, 0x0A	; 10
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:116
      USART0_BAUD  = sync_baud_khz(TPI_CLK);
    1ed8:	90 93 05 08 	sts	0x0805, r25	; 0x800805 <__TEXT_REGION_LENGTH__+0x7f0805>
    1edc:	98 ec       	ldi	r25, 0xC8	; 200
    1ede:	90 93 06 08 	sts	0x0806, r25	; 0x800806 <__TEXT_REGION_LENGTH__+0x7f0806>
__iRestore():
    1ee2:	8f bf       	out	0x3f, r24	; 63
_ZN3TPI7connectEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:117
      USART0_CTRLC = USART_CHSIZE_8BIT_gc | USART_PMODE_EVEN_gc | USART_CMODE_SYNCHRONOUS_gc | USART_SBMODE_2BIT_gc;
    1ee4:	84 e1       	ldi	r24, 0x14	; 20
    1ee6:	90 e0       	ldi	r25, 0x00	; 0
    1ee8:	0e 94 00 05 	call	0xa00	; 0xa00 <TPI::idle_clock(unsigned int)>
set_sstcs():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:118
      USART0_CTRLA = USART_LBME_bm | USART_RS485_INT_gc;
    1eec:	82 ec       	ldi	r24, 0xC2	; 194
    1eee:	0e 94 3b 02 	call	0x476	; 0x476 <PDI::send(unsigned char)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:119
      USART0_CTRLB = USART_RXEN_bm | USART_TXEN_bm | USART_ODME_bm;
    1ef2:	81 11       	cpse	r24, r1
    1ef4:	09 c0       	rjmp	.+18     	; 0x1f08 <TPI::connect()+0xb4>
_ZN3TPI7connectEv():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:70
    1ef6:	90 e0       	ldi	r25, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:255
    /* Required rest time after PoR, 32-128 ms */
    SYS::delay_125ms();

    /*** Activate clock ***/
    USART::change_tpi();
    idle_clock(20);
    1ef8:	80 e0       	ldi	r24, 0x00	; 0
    1efa:	0f 90       	pop	r0
    1efc:	0f 90       	pop	r0
    1efe:	df 91       	pop	r29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:77
    return send(0x80 | _addr) && recv();
  }

  bool set_sstcs (const uint8_t _addr, const uint8_t _data) {
    D2PRINTF("[SSTCS:%02X:%02X]\r\n", _addr, _data);
    return send(0xC0 | _addr) && send(_data);
    1f00:	cf 91       	pop	r28
    1f02:	1f 91       	pop	r17
    1f04:	0f 91       	pop	r16
    1f06:	08 95       	ret
set_sstcs():
    1f08:	85 e0       	ldi	r24, 0x05	; 5
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:258
    /*** Activate clock ***/
    USART::change_tpi();
    idle_clock(20);

    /*** Set TPIPCR Guard Time ****/
    if (!set_sstcs(0x02, TPI_GVAL)) return 0;
    1f0a:	0e 94 bd 04 	call	0x97a	; 0x97a <PDI::send_byte(unsigned char) [clone .part.4]>
_ZN3TPI7connectEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:299
          bit_set(PGCONF, PGCONF_PROG_bp);
          return 1;
        }
      }
    } while (true);
  }
    1f0e:	88 23       	and	r24, r24
    1f10:	91 f3       	breq	.-28     	; 0x1ef6 <TPI::connect()+0xa2>
get_sldcs():
    1f12:	8f e8       	ldi	r24, 0x8F	; 143
    1f14:	0e 94 3b 02 	call	0x476	; 0x476 <PDI::send(unsigned char)>
    1f18:	88 23       	and	r24, r24
    1f1a:	d9 f3       	breq	.-10     	; 0x1f12 <TPI::connect()+0xbe>
    1f1c:	0e 94 3a 02 	call	0x474	; 0x474 <PDI::recv_byte() [clone .part.3]>
_ZN3TPI7connectEv():
    1f20:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:258
    /*** Activate clock ***/
    USART::change_tpi();
    idle_clock(20);

    /*** Set TPIPCR Guard Time ****/
    if (!set_sstcs(0x02, TPI_GVAL)) return 0;
    1f22:	b9 f3       	breq	.-18     	; 0x1f12 <TPI::connect()+0xbe>
    1f24:	8d b3       	in	r24, 0x1d	; 29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:72

  /*** TPI control and CSS area command ***/

  bool get_sldcs (const uint8_t _addr) {
    D2PRINTF("[SLDCS:%02X]\r\n", _addr);
    return send(0x80 | _addr) && recv();
    1f26:	80 38       	cpi	r24, 0x80	; 128
    1f28:	a1 f7       	brne	.-24     	; 0x1f12 <TPI::connect()+0xbe>
    1f2a:	f8 9a       	sbi	0x1f, 0	; 31
    1f2c:	03 e5       	ldi	r16, 0x53	; 83
    1f2e:	10 e6       	ldi	r17, 0x60	; 96
    1f30:	f8 01       	movw	r30, r16
    1f32:	81 91       	ld	r24, Z+
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:261

    /*** Set TPIPCR Guard Time ****/
    if (!set_sstcs(0x02, TPI_GVAL)) return 0;

    /*** Check TPIIR code : Fixed 0x80 ***/
    while (!(get_sldcs(0x0F) && (RXDATA == 0x80)));
    1f34:	8f 01       	movw	r16, r30
    1f36:	0e 94 3b 02 	call	0x476	; 0x476 <PDI::send(unsigned char)>
    1f3a:	88 23       	and	r24, r24
    1f3c:	e1 f2       	breq	.-72     	; 0x1ef6 <TPI::connect()+0xa2>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:262
    bit_set(PGCONF, PGCONF_UPDI_bp);
    1f3e:	f0 e6       	ldi	r31, 0x60	; 96
    1f40:	0c 35       	cpi	r16, 0x5C	; 92
    1f42:	1f 07       	cpc	r17, r31
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:268

    /*** Activate NVMPROG mode ***/
    do {
      D1PRINTF(" SKEY\r\n");
      for (uint8_t i = 0; i < (uint8_t)sizeof(nvmprog_key); i++) {
        if (!send(nvmprog_key[i])) return 0;
    1f44:	a9 f7       	brne	.-22     	; 0x1f30 <TPI::connect()+0xdc>
    1f46:	18 e0       	ldi	r17, 0x08	; 8
    1f48:	84 e1       	ldi	r24, 0x14	; 20
    1f4a:	90 e0       	ldi	r25, 0x00	; 0
    1f4c:	0e 94 00 05 	call	0xa00	; 0xa00 <TPI::idle_clock(unsigned int)>
get_sldcs():
    1f50:	80 e8       	ldi	r24, 0x80	; 128
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:267
    bit_set(PGCONF, PGCONF_UPDI_bp);

    /*** Activate NVMPROG mode ***/
    do {
      D1PRINTF(" SKEY\r\n");
      for (uint8_t i = 0; i < (uint8_t)sizeof(nvmprog_key); i++) {
    1f52:	0e 94 3b 02 	call	0x476	; 0x476 <PDI::send(unsigned char)>
    1f56:	81 11       	cpse	r24, r1
    1f58:	03 c0       	rjmp	.+6      	; 0x1f60 <TPI::connect()+0x10c>
    1f5a:	11 50       	subi	r17, 0x01	; 1
_ZN3TPI7connectEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:271
        if (!send(nvmprog_key[i])) return 0;
      }
      for (uint8_t _i = 0; _i < 8; _i++) {
        idle_clock(20);
    1f5c:	a9 f7       	brne	.-22     	; 0x1f48 <TPI::connect()+0xf4>
    1f5e:	e6 cf       	rjmp	.-52     	; 0x1f2c <TPI::connect()+0xd8>
get_sldcs():
    1f60:	0e 94 3a 02 	call	0x474	; 0x474 <PDI::recv_byte() [clone .part.3]>
_ZN3TPI7connectEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:72

  /*** TPI control and CSS area command ***/

  bool get_sldcs (const uint8_t _addr) {
    D2PRINTF("[SLDCS:%02X]\r\n", _addr);
    return send(0x80 | _addr) && recv();
    1f64:	88 23       	and	r24, r24
    1f66:	c9 f3       	breq	.-14     	; 0x1f5a <TPI::connect()+0x106>
    1f68:	8d b3       	in	r24, 0x1d	; 29
    1f6a:	82 30       	cpi	r24, 0x02	; 2
    1f6c:	b1 f7       	brne	.-20     	; 0x1f5a <TPI::connect()+0x106>
    1f6e:	19 82       	std	Y+1, r1	; 0x01
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:270
    do {
      D1PRINTF(" SKEY\r\n");
      for (uint8_t i = 0; i < (uint8_t)sizeof(nvmprog_key); i++) {
        if (!send(nvmprog_key[i])) return 0;
      }
      for (uint8_t _i = 0; _i < 8; _i++) {
    1f70:	1a 82       	std	Y+2, r1	; 0x02
    1f72:	81 ec       	ldi	r24, 0xC1	; 193
    1f74:	9f e3       	ldi	r25, 0x3F	; 63
    1f76:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <TPI::set_sstpr(unsigned int)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:272
        idle_clock(20);
        if (get_sldcs(0x00) && RXDATA == 0x02) {  /* get TPISR */
    1f7a:	88 23       	and	r24, r24
    1f7c:	a9 f0       	breq	.+42     	; 0x1fa8 <TPI::connect()+0x154>
    1f7e:	0e 94 e2 04 	call	0x9c4	; 0x9c4 <TPI::get_sld()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:285
          * Other is written in 1 word chunks.
          *
          * The original PICKit4 probably does the same thing,
          * since the JTAG3 protocol does not include these notifications.
          */
          uint16_t _signature = 0;
    1f82:	88 23       	and	r24, r24
    1f84:	89 f0       	breq	.+34     	; 0x1fa8 <TPI::connect()+0x154>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:286
          if (set_sstpr(0x3FC1) && get_sld()) {
    1f86:	8d b3       	in	r24, 0x1d	; 29
    1f88:	8a 83       	std	Y+2, r24	; 0x02
    1f8a:	0e 94 e2 04 	call	0x9c4	; 0x9c4 <TPI::get_sld()>
    1f8e:	88 23       	and	r24, r24
    1f90:	11 f0       	breq	.+4      	; 0x1f96 <TPI::connect()+0x142>
    1f92:	8d b3       	in	r24, 0x1d	; 29
    1f94:	89 83       	std	Y+1, r24	; 0x01
    1f96:	89 81       	ldd	r24, Y+1	; 0x01
    1f98:	9a 81       	ldd	r25, Y+2	; 0x02
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:287
            _CAPS16(_signature)->bytes[1] = RXDATA;
    1f9a:	8e 30       	cpi	r24, 0x0E	; 14
    1f9c:	22 e9       	ldi	r18, 0x92	; 146
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:288
            if (get_sld()) _CAPS16(_signature)->bytes[0] = RXDATA;
    1f9e:	92 07       	cpc	r25, r18
    1fa0:	29 f0       	breq	.+10     	; 0x1fac <TPI::connect()+0x158>
    1fa2:	8f 30       	cpi	r24, 0x0F	; 15
    1fa4:	91 49       	sbci	r25, 0x91	; 145
    1fa6:	49 f0       	breq	.+18     	; 0x1fba <TPI::connect()+0x166>
    1fa8:	82 e0       	ldi	r24, 0x02	; 2
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:290
          }
          _tpi_chunks = _signature == 0x920E ? 8  /* ATtiny40 */
    1faa:	01 c0       	rjmp	.+2      	; 0x1fae <TPI::connect()+0x15a>
    1fac:	88 e0       	ldi	r24, 0x08	; 8
    1fae:	80 93 ca 60 	sts	0x60CA, r24	; 0x8060ca <_tpi_chunks>
    1fb2:	f9 9a       	sbi	0x1f, 1	; 31
    1fb4:	81 e0       	ldi	r24, 0x01	; 1
    1fb6:	90 e0       	ldi	r25, 0x00	; 0
    1fb8:	a0 cf       	rjmp	.-192    	; 0x1efa <TPI::connect()+0xa6>
    1fba:	84 e0       	ldi	r24, 0x04	; 4
    1fbc:	f8 cf       	rjmp	.-16     	; 0x1fae <TPI::connect()+0x15a>

00001fbe <UPDI::connect()>:
_ZN4UPDI7connectEv():
    1fbe:	cf 93       	push	r28
    1fc0:	df 93       	push	r29
    1fc2:	d0 91 3d 63 	lds	r29, 0x633D	; 0x80633d <Device_Descriptor+0x2f>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:294
                      : _signature == 0x910F ? 4  /* ATtiny20 */
                      : 2;                        /* Othres   */
          D1PRINTF(" SIG>%04X:%02X\r\n", _signature, _tpi_chunks);
          bit_set(PGCONF, PGCONF_PROG_bp);
    1fc6:	80 91 0c 63 	lds	r24, 0x630C	; 0x80630c <_packet_length>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:295
          return 1;
    1fca:	90 91 0d 63 	lds	r25, 0x630D	; 0x80630d <_packet_length+0x1>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:290
          uint16_t _signature = 0;
          if (set_sstpr(0x3FC1) && get_sld()) {
            _CAPS16(_signature)->bytes[1] = RXDATA;
            if (get_sld()) _CAPS16(_signature)->bytes[0] = RXDATA;
          }
          _tpi_chunks = _signature == 0x920E ? 8  /* ATtiny40 */
    1fce:	07 97       	sbiw	r24, 0x07	; 7
    1fd0:	48 f0       	brcs	.+18     	; 0x1fe4 <UPDI::connect()+0x26>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:378
   * For UPDI communication, first set the following:
   * - Keep forced reset for wakeup
   * - Ignore communication collisions
   * - Make guard time short enough
   */
  size_t connect (void) {
    1fd2:	80 91 f7 60 	lds	r24, 0x60F7	; 0x8060f7 <packet+0x7>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:388
      0x55, 0x82        /* LDCS CTRLA */
    };
    const static uint8_t _sib256[] = {
      0x55, 0xE6        /* SIB 256bits */
    };
    uint8_t _hvvar = Device_Descriptor.UPDI.hvupdi_variant;
    1fd6:	88 23       	and	r24, r24
    1fd8:	29 f0       	breq	.+10     	; 0x1fe4 <UPDI::connect()+0x26>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:390
    bool _hven = (_packet_length >= 7 && packet.out.bMType && _jtag_hvctrl)
              || bit_is_set(GPCONF, GPCONF_HLD_bp);
    1fda:	80 91 ef 60 	lds	r24, 0x60EF	; 0x8060ef <_jtag_hvctrl>
    1fde:	c1 e0       	ldi	r28, 0x01	; 1
    1fe0:	81 11       	cpse	r24, r1
    1fe2:	04 c0       	rjmp	.+8      	; 0x1fec <UPDI::connect()+0x2e>
    1fe4:	ce b3       	in	r28, 0x1e	; 30
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:389
    };
    const static uint8_t _sib256[] = {
      0x55, 0xE6        /* SIB 256bits */
    };
    uint8_t _hvvar = Device_Descriptor.UPDI.hvupdi_variant;
    bool _hven = (_packet_length >= 7 && packet.out.bMType && _jtag_hvctrl)
    1fe6:	c5 fb       	bst	r28, 5
    1fe8:	cc 27       	eor	r28, r28
    1fea:	c0 f9       	bld	r28, 0
    1fec:	10 92 cf 60 	sts	0x60CF, r1	; 0x8060cf <_sib>
    1ff0:	8f ef       	ldi	r24, 0xFF	; 255
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:390
              || bit_is_set(GPCONF, GPCONF_HLD_bp);
    1ff2:	9f ef       	ldi	r25, 0xFF	; 255
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:389
    };
    const static uint8_t _sib256[] = {
      0x55, 0xE6        /* SIB 256bits */
    };
    uint8_t _hvvar = Device_Descriptor.UPDI.hvupdi_variant;
    bool _hven = (_packet_length >= 7 && packet.out.bMType && _jtag_hvctrl)
    1ff4:	dc 01       	movw	r26, r24
    1ff6:	80 93 cb 60 	sts	0x60CB, r24	; 0x8060cb <_before_page>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:390
              || bit_is_set(GPCONF, GPCONF_HLD_bp);
    1ffa:	90 93 cc 60 	sts	0x60CC, r25	; 0x8060cc <_before_page+0x1>
    1ffe:	a0 93 cd 60 	sts	0x60CD, r26	; 0x8060cd <_before_page+0x2>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:391
    _sib[0] = 0;
    2002:	b0 93 ce 60 	sts	0x60CE, r27	; 0x8060ce <_before_page+0x3>
setup():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:392
    _before_page = -1L;
    2006:	86 e2       	ldi	r24, 0x26	; 38
    2008:	92 e0       	ldi	r25, 0x02	; 2
    200a:	80 93 3e 63 	sts	0x633E, r24	; 0x80633e <Command_Table>
    200e:	90 93 3f 63 	sts	0x633F, r25	; 0x80633f <Command_Table+0x1>
    2012:	8f e1       	ldi	r24, 0x1F	; 31
    2014:	9a e0       	ldi	r25, 0x0A	; 10
    2016:	80 93 40 63 	sts	0x6340, r24	; 0x806340 <Command_Table+0x2>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv1.cpp:68
    // else if (m_type == 0xD3)   /* MTYPE_SIB */ /* This is in its own memory space. */
    return 0;
  }

  bool setup (void) {
    Command_Table.prog_init    = &prog_init;
    201a:	90 93 41 63 	sts	0x6341, r25	; 0x806341 <Command_Table+0x3>
    201e:	82 e2       	ldi	r24, 0x22	; 34
    2020:	9a e0       	ldi	r25, 0x0A	; 10
    2022:	80 93 42 63 	sts	0x6342, r24	; 0x806342 <Command_Table+0x4>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv1.cpp:69
    Command_Table.read_memory  = &read_memory;
    2026:	90 93 43 63 	sts	0x6343, r25	; 0x806343 <Command_Table+0x5>
    202a:	8c e1       	ldi	r24, 0x1C	; 28
    202c:	9a e0       	ldi	r25, 0x0A	; 10
    202e:	80 93 44 63 	sts	0x6344, r24	; 0x806344 <Command_Table+0x6>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv1.cpp:70
    Command_Table.erase_memory = &erase_memory;
    2032:	90 93 45 63 	sts	0x6345, r25	; 0x806345 <Command_Table+0x7>
_ZN4UPDI7connectEv():
    2036:	5e da       	rcall	.-2884   	; 0x14f4 <USART::setup()>
    2038:	08 98       	cbi	0x01, 0	; 1
    203a:	09 98       	cbi	0x01, 1	; 1
    203c:	01 9a       	sbi	0x00, 1	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv1.cpp:71
    Command_Table.write_memory = &write_memory;
    203e:	61 e0       	ldi	r22, 0x01	; 1
    2040:	81 e0       	ldi	r24, 0x01	; 1
    2042:	9d de       	rcall	.-710    	; 0x1d7e <SYS::power_reset(bool, bool)>
delay_micros():
    2044:	83 ed       	ldi	r24, 0xD3	; 211
    2046:	90 e3       	ldi	r25, 0x30	; 48
    2048:	01 97       	sbiw	r24, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:394
    NVM::V1::setup();   /* default is dummy callback */
    USART::setup();
    204a:	f1 f7       	brne	.-4      	; 0x2048 <__DATA_REGION_LENGTH__+0x48>
    204c:	00 c0       	rjmp	.+0      	; 0x204e <__DATA_REGION_LENGTH__+0x4e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:397

    /* If possible, perform a hardware reset of the device. */
    digitalWriteMacro(PIN_PGM_TDAT, LOW);
    204e:	00 00       	nop
_ZN4UPDI7connectEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:398
    digitalWriteMacro(PIN_PGM_TRST, LOW);
    2050:	01 98       	cbi	0x00, 1	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:399
    pinLogicPush(PIN_PGM_TRST);
    2052:	cc 23       	and	r28, r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:400
    SYS::power_reset();
    2054:	91 f0       	breq	.+36     	; 0x207a <__DATA_REGION_LENGTH__+0x7a>
    2056:	d1 30       	cpi	r29, 0x01	; 1
    2058:	81 f0       	breq	.+32     	; 0x207a <__DATA_REGION_LENGTH__+0x7a>
    205a:	e3 de       	rcall	.-570    	; 0x1e22 <SYS::hvc_enable()>
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/delay_busywait.h:33
static __inline__ __attribute__((__always_inline__)) void delay_micros (uint32_t _us);
static __inline__ __attribute__((__always_inline__)) void delay_millis (uint32_t _ms);

void delay_micros (uint32_t _us) {
  if (F_CPU >= 1000000L) {
    __builtin_avr_delay_cycles((F_CPU / 1000000L) * _us);
    205c:	d1 11       	cpse	r29, r1
    205e:	5d c0       	rjmp	.+186    	; 0x211a <__DATA_REGION_LENGTH__+0x11a>
    2060:	68 9a       	sbi	0x0d, 0	; 13
delay_micros():
    2062:	8f e9       	ldi	r24, 0x9F	; 159
    2064:	9f e0       	ldi	r25, 0x0F	; 15
    2066:	01 97       	sbiw	r24, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:402
    SYS::delay_2500us();
    pinLogicOpen(PIN_PGM_TRST);
    2068:	f1 f7       	brne	.-4      	; 0x2066 <__DATA_REGION_LENGTH__+0x66>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:406

    /* High-Voltage control */
    #ifdef CONFIG_HVC_ENABLE
    if (_hven && _hvvar != 1) {
    206a:	00 c0       	rjmp	.+0      	; 0x206c <__DATA_REGION_LENGTH__+0x6c>
    206c:	00 00       	nop
hvc_leave():
    206e:	10 92 01 0a 	sts	0x0A01, r1	; 0x800a01 <__TEXT_REGION_LENGTH__+0x7f0a01>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:407
      SYS::hvc_enable();
    2072:	10 92 00 0a 	sts	0x0A00, r1	; 0x800a00 <__TEXT_REGION_LENGTH__+0x7f0a00>
_ZN4UPDI7connectEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:408
      if (_hvvar == 0) {
    2076:	68 98       	cbi	0x0d, 0	; 13
    2078:	6a 98       	cbi	0x0d, 2	; 13
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:410
        D1PRINTF("<HVC:V0>");
        digitalWriteMacro(PIN_HVC_SELECT1, HIGH);
    207a:	00 9a       	sbi	0x00, 0	; 0
delay_micros():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/delay_busywait.h:33
    207c:	83 ed       	ldi	r24, 0xD3	; 211
    207e:	90 e3       	ldi	r25, 0x30	; 48
    2080:	01 97       	sbiw	r24, 0x01	; 1
    2082:	f1 f7       	brne	.-4      	; 0x2080 <__DATA_REGION_LENGTH__+0x80>
    2084:	00 c0       	rjmp	.+0      	; 0x2086 <__DATA_REGION_LENGTH__+0x86>
    2086:	00 00       	nop
_ZN4UPDI7connectEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:489

  void hvc_leave (void) {
  #ifdef CONFIG_HVC_ENABLE
    TCA0_SPLIT_CTRLB = 0;
    2088:	00 98       	cbi	0x00, 0	; 0
    208a:	10 9b       	sbis	0x02, 0	; 2
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:490
    TCA0_SPLIT_CTRLA = 0;
    208c:	fe cf       	rjmp	.-4      	; 0x208a <__DATA_REGION_LENGTH__+0x8a>
change_updi():
    208e:	cf b7       	in	r28, 0x3f	; 63
__iCliRetVal():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:419
        digitalWriteMacro(PIN_HVC_SELECT3, HIGH);
      }
      /* Most early silicon requires a pulse of 700us or more. */
      SYS::delay_800us();
      SYS::hvc_leave();
      digitalWriteMacro(PIN_HVC_SELECT1, LOW);
    2090:	f8 94       	cli
change_updi():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:420
      digitalWriteMacro(PIN_HVC_SELECT3, LOW);
    2092:	80 e1       	ldi	r24, 0x10	; 16
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:426
      /* From this point onwards, UPDI activation must be successful within 64ms. */
    }
    #endif

    /* In most cases, a 2.5 ms LOW signal is sufficient to initiate UPDI activation. */
    pinLogicPush(PIN_PGM_TDAT);
    2094:	80 93 e2 05 	sts	0x05E2, r24	; 0x8005e2 <__TEXT_REGION_LENGTH__+0x7f05e2>
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/delay_busywait.h:33
    2098:	80 e2       	ldi	r24, 0x20	; 32
    209a:	80 93 04 08 	sts	0x0804, r24	; 0x800804 <__TEXT_REGION_LENGTH__+0x7f0804>
calk_baud_khz():
    209e:	20 91 47 63 	lds	r18, 0x6347	; 0x806347 <_xclk>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:428
    SYS::delay_2500us();
    pinLogicOpen(PIN_PGM_TDAT);
    20a2:	30 91 48 63 	lds	r19, 0x6348	; 0x806348 <_xclk+0x1>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:431

    /* When UPDI is activated, it becomes a HIGH signal. */
    while (!digitalReadMacro(PIN_PGM_TDAT));
    20a6:	50 e0       	ldi	r21, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:95
    }
  }

  /*** Sets up single-wire asynchronous mode for UPDI operation. ***/
  void change_updi (void) {
    ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    20a8:	40 e0       	ldi	r20, 0x00	; 0
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:50
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    20aa:	60 e0       	ldi	r22, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:96
      PORTMUX_USARTROUTEA = PORTMUX_USART_PGM;
    20ac:	71 e7       	ldi	r23, 0x71	; 113
    20ae:	82 e0       	ldi	r24, 0x02	; 2
    20b0:	90 e0       	ldi	r25, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:97
      USART0_STATUS = USART_DREIF_bm;
    20b2:	0e 94 1e 1b 	call	0x363c	; 0x363c <__divmodsi4>
    20b6:	da 01       	movw	r26, r20
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:46
  #endif
  }

  /*** Calculate the baud rate for VCP asynchronous mode. ***/
  uint16_t calk_baud_khz (uint16_t _khz) {
    uint32_t _baud = ((F_CPU / 1000L * 8L) / _khz + 1) / 2;
    20b8:	c9 01       	movw	r24, r18
    20ba:	01 96       	adiw	r24, 0x01	; 1
    20bc:	a1 1d       	adc	r26, r1
    20be:	b1 1d       	adc	r27, r1
    20c0:	b5 95       	asr	r27
    20c2:	a7 95       	ror	r26
    20c4:	97 95       	ror	r25
    20c6:	87 95       	ror	r24
    20c8:	80 34       	cpi	r24, 0x40	; 64
    20ca:	91 05       	cpc	r25, r1
    20cc:	a1 05       	cpc	r26, r1
    20ce:	b1 05       	cpc	r27, r1
    20d0:	4c f1       	brlt	.+82     	; 0x2124 <__DATA_REGION_LENGTH__+0x124>
    20d2:	00 97       	sbiw	r24, 0x00	; 0
    20d4:	21 e0       	ldi	r18, 0x01	; 1
    20d6:	a2 07       	cpc	r26, r18
    20d8:	b1 05       	cpc	r27, r1
    20da:	20 f0       	brcs	.+8      	; 0x20e4 <__DATA_REGION_LENGTH__+0xe4>
    20dc:	8f ef       	ldi	r24, 0xFF	; 255
    20de:	9f ef       	ldi	r25, 0xFF	; 255
    20e0:	a0 e0       	ldi	r26, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:47
    if (_baud < 64) _baud = 64;
    20e2:	b0 e0       	ldi	r27, 0x00	; 0
change_updi():
    20e4:	80 93 08 08 	sts	0x0808, r24	; 0x800808 <__TEXT_REGION_LENGTH__+0x7f0808>
    20e8:	90 93 09 08 	sts	0x0809, r25	; 0x800809 <__TEXT_REGION_LENGTH__+0x7f0809>
    20ec:	8b e2       	ldi	r24, 0x2B	; 43
    20ee:	80 93 07 08 	sts	0x0807, r24	; 0x800807 <__TEXT_REGION_LENGTH__+0x7f0807>
    20f2:	8a e0       	ldi	r24, 0x0A	; 10
    20f4:	80 93 05 08 	sts	0x0805, r24	; 0x800805 <__TEXT_REGION_LENGTH__+0x7f0805>
    20f8:	88 ec       	ldi	r24, 0xC8	; 200
    20fa:	80 93 06 08 	sts	0x0806, r24	; 0x800806 <__TEXT_REGION_LENGTH__+0x7f0806>
__iRestore():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:98
  /*** Sets up single-wire asynchronous mode for UPDI operation. ***/
  void change_updi (void) {
    ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
      PORTMUX_USARTROUTEA = PORTMUX_USART_PGM;
      USART0_STATUS = USART_DREIF_bm;
      USART0_BAUD  = calk_baud_khz(_xclk);
    20fe:	cf bf       	out	0x3f, r28	; 63
_ZN4UPDI7connectEv():
    2100:	6b e0       	ldi	r22, 0x0B	; 11
    2102:	70 e0       	ldi	r23, 0x00	; 0
    2104:	8c e8       	ldi	r24, 0x8C	; 140
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:99
      USART0_CTRLC = USART_CHSIZE_8BIT_gc | USART_PMODE_EVEN_gc | USART_SBMODE_2BIT_gc;
    2106:	90 e6       	ldi	r25, 0x60	; 96
    2108:	0e 94 4c 02 	call	0x498	; 0x498 <UPDI::send_bytes(unsigned char const*, unsigned int)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:102
      /* The RS485_INT:_BV(1) attribute is undocumented but works fine.     */
      /* Without it, an additional delay is required before sending a byte. */
      USART0_CTRLA = USART_LBME_bm | USART_RS485_INT_gc;
    210c:	81 11       	cpse	r24, r1
    210e:	0f c0       	rjmp	.+30     	; 0x212e <__DATA_REGION_LENGTH__+0x12e>
    2110:	0e 94 65 04 	call	0x8ca	; 0x8ca <UPDI::send_break()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:103
      USART0_CTRLB = USART_RXEN_bm | USART_TXEN_bm | USART_ODME_bm;
    2114:	0e 94 65 04 	call	0x8ca	; 0x8ca <UPDI::send_break()>
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:70
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    2118:	f3 cf       	rjmp	.-26     	; 0x2100 <__DATA_REGION_LENGTH__+0x100>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:437
    USART::change_updi();

    /* It will send a series of commands and check the response. */
    /* If the response is invalid, it will send a BREAK character and try again. */
    /* If UPDI does not respond, a timeout occurs. */
    while (!(send_bytes(_init, sizeof(_init)) && recv() && (RXDATA == UPDI_CTRLAV))) {
    211a:	d2 30       	cpi	r29, 0x02	; 2
    211c:	09 f0       	breq	.+2      	; 0x2120 <__DATA_REGION_LENGTH__+0x120>
    211e:	a1 cf       	rjmp	.-190    	; 0x2062 <__DATA_REGION_LENGTH__+0x62>
    2120:	6a 9a       	sbi	0x0d, 2	; 13
    2122:	9f cf       	rjmp	.-194    	; 0x2062 <__DATA_REGION_LENGTH__+0x62>
    2124:	80 e4       	ldi	r24, 0x40	; 64
    2126:	90 e0       	ldi	r25, 0x00	; 0
    2128:	a0 e0       	ldi	r26, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:438
      send_break();
    212a:	b0 e0       	ldi	r27, 0x00	; 0
    212c:	db cf       	rjmp	.-74     	; 0x20e4 <__DATA_REGION_LENGTH__+0xe4>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:439
      send_break();
    212e:	0e 94 29 02 	call	0x452	; 0x452 <PDI::recv()>
    2132:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:412
      SYS::hvc_enable();
      if (_hvvar == 0) {
        D1PRINTF("<HVC:V0>");
        digitalWriteMacro(PIN_HVC_SELECT1, HIGH);
      }
      else if (_hvvar == 2) {
    2134:	69 f3       	breq	.-38     	; 0x2110 <__DATA_REGION_LENGTH__+0x110>
    2136:	8d b3       	in	r24, 0x1d	; 29
    2138:	85 31       	cpi	r24, 0x15	; 21
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:414
        D1PRINTF("<HVC:V2+>");
        digitalWriteMacro(PIN_HVC_SELECT3, HIGH);
    213a:	51 f7       	brne	.-44     	; 0x2110 <__DATA_REGION_LENGTH__+0x110>
    213c:	62 e0       	ldi	r22, 0x02	; 2
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:47
  }

  /*** Calculate the baud rate for VCP asynchronous mode. ***/
  uint16_t calk_baud_khz (uint16_t _khz) {
    uint32_t _baud = ((F_CPU / 1000L * 8L) / _khz + 1) / 2;
    if (_baud < 64) _baud = 64;
    213e:	70 e0       	ldi	r23, 0x00	; 0
    2140:	8a e8       	ldi	r24, 0x8A	; 138
    2142:	90 e6       	ldi	r25, 0x60	; 96
    2144:	0e 94 4c 02 	call	0x498	; 0x498 <UPDI::send_bytes(unsigned char const*, unsigned int)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:437
    USART::change_updi();

    /* It will send a series of commands and check the response. */
    /* If the response is invalid, it will send a BREAK character and try again. */
    /* If UPDI does not respond, a timeout occurs. */
    while (!(send_bytes(_init, sizeof(_init)) && recv() && (RXDATA == UPDI_CTRLAV))) {
    2148:	81 11       	cpse	r24, r1
    214a:	05 c0       	rjmp	.+10     	; 0x2156 <__DATA_REGION_LENGTH__+0x156>
    214c:	90 e0       	ldi	r25, 0x00	; 0
    214e:	80 e0       	ldi	r24, 0x00	; 0
    2150:	df 91       	pop	r29
    2152:	cf 91       	pop	r28
    2154:	08 95       	ret
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:444
      send_break();
    }

    /* Read the SIB from the ACC. */
    /* This can be done even on a locked device. */
    if (send_bytes(_sib256, sizeof(_sib256)) && recv_bytes(_sib, 32)) {
    2156:	60 e2       	ldi	r22, 0x20	; 32
    2158:	70 e0       	ldi	r23, 0x00	; 0
    215a:	8f ec       	ldi	r24, 0xCF	; 207
    215c:	90 e6       	ldi	r25, 0x60	; 96
    215e:	0e 94 60 03 	call	0x6c0	; 0x6c0 <UPDI::recv_bytes(unsigned char*, unsigned int)>
    2162:	88 23       	and	r24, r24
    2164:	99 f3       	breq	.-26     	; 0x214c <__DATA_REGION_LENGTH__+0x14c>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:462
        bit_set(PGCONF, PGCONF_UPDI_bp);
        return 5;
      }
    }
    D1PRINTF(" FAIL:%02X,%02X\r\n", RXSTAT, RXDATA);
    return 0;
    2166:	80 91 d9 60 	lds	r24, 0x60D9	; 0x8060d9 <_sib+0xa>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:463
  }
    216a:	85 33       	cpi	r24, 0x35	; 53
    216c:	59 f5       	brne	.+86     	; 0x21c4 <__DATA_REGION_LENGTH__+0x1c4>
setup():
    216e:	82 e6       	ldi	r24, 0x62	; 98
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:444
      send_break();
    }

    /* Read the SIB from the ACC. */
    /* This can be done even on a locked device. */
    if (send_bytes(_sib256, sizeof(_sib256)) && recv_bytes(_sib, 32)) {
    2170:	99 e0       	ldi	r25, 0x09	; 9
    2172:	80 93 3e 63 	sts	0x633E, r24	; 0x80633e <Command_Table>
    2176:	90 93 3f 63 	sts	0x633F, r25	; 0x80633f <Command_Table+0x1>
    217a:	84 e6       	ldi	r24, 0x64	; 100
    217c:	94 e0       	ldi	r25, 0x04	; 4
    217e:	80 93 40 63 	sts	0x6340, r24	; 0x806340 <Command_Table+0x2>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:448
      size_t _result = 0;
      D1PRINTF(" NVM:%02X,SIB=\"%s\"\r\n", _sib[10], _sib);
      /* Depending on the SIB, different low-level methods are executed. */
      if      (_sib[10] == '5') _result = NVM::V5::setup();
    2182:	90 93 41 63 	sts	0x6341, r25	; 0x806341 <Command_Table+0x3>
    2186:	85 e6       	ldi	r24, 0x65	; 101
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv5.cpp:165
    }
  }

  bool setup (void) {
    Command_Table.prog_init    = &prog_init;
    2188:	9e e0       	ldi	r25, 0x0E	; 14
    218a:	80 93 42 63 	sts	0x6342, r24	; 0x806342 <Command_Table+0x4>
    218e:	90 93 43 63 	sts	0x6343, r25	; 0x806343 <Command_Table+0x5>
    2192:	81 eb       	ldi	r24, 0xB1	; 177
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv5.cpp:166
    Command_Table.read_memory  = &read_memory;
    2194:	9d e0       	ldi	r25, 0x0D	; 13
    2196:	80 93 44 63 	sts	0x6344, r24	; 0x806344 <Command_Table+0x6>
    219a:	90 93 45 63 	sts	0x6345, r25	; 0x806345 <Command_Table+0x7>
_ZN4UPDI7connectEv():
    219e:	80 91 cf 60 	lds	r24, 0x60CF	; 0x8060cf <_sib>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv5.cpp:167
    Command_Table.erase_memory = &erase_memory;
    21a2:	ef ec       	ldi	r30, 0xCF	; 207
    21a4:	f0 e6       	ldi	r31, 0x60	; 96
    21a6:	80 32       	cpi	r24, 0x20	; 32
    21a8:	11 f4       	brne	.+4      	; 0x21ae <__DATA_REGION_LENGTH__+0x1ae>
    21aa:	e3 ed       	ldi	r30, 0xD3	; 211
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv5.cpp:168
    Command_Table.write_memory = &write_memory;
    21ac:	f0 e6       	ldi	r31, 0x60	; 96
    21ae:	84 e0       	ldi	r24, 0x04	; 4
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:174

  bool setup (void) {
    Command_Table.prog_init    = &prog_init;
    Command_Table.read_memory  = &read_memory;
    Command_Table.erase_memory = &erase_memory;
    Command_Table.write_memory = &write_memory;
    21b0:	a7 ef       	ldi	r26, 0xF7	; 247
    21b2:	b0 e6       	ldi	r27, 0x60	; 96
    21b4:	01 90       	ld	r0, Z+
    21b6:	0d 92       	st	X+, r0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:456
      else if (_sib[10] == '2') _result = NVM::V2::setup();
      else if (_sib[10] == '0') _result = NVM::V0::setup();
      if (_result) {
        /* If the SIB is obtained, the first 4-characters are returned. */
        /* If the 1st character is blank, the next 4-characters are returned. */
        memcpy(&packet.in.data[0], _sib[0] == ' ' ? &_sib[4] : &_sib[0], 4);
    21b8:	8a 95       	dec	r24
    21ba:	e1 f7       	brne	.-8      	; 0x21b4 <__DATA_REGION_LENGTH__+0x1b4>
    21bc:	f8 9a       	sbi	0x1f, 0	; 31
    21be:	85 e0       	ldi	r24, 0x05	; 5
    21c0:	90 e0       	ldi	r25, 0x00	; 0
    21c2:	c6 cf       	rjmp	.-116    	; 0x2150 <__DATA_REGION_LENGTH__+0x150>
    21c4:	84 33       	cpi	r24, 0x34	; 52
    21c6:	a9 f4       	brne	.+42     	; 0x21f2 <__DATA_REGION_LENGTH__+0x1f2>
setup():
    21c8:	84 e5       	ldi	r24, 0x54	; 84
    21ca:	99 e0       	ldi	r25, 0x09	; 9
    21cc:	80 93 3e 63 	sts	0x633E, r24	; 0x80633e <Command_Table>
    21d0:	90 93 3f 63 	sts	0x633F, r25	; 0x80633f <Command_Table+0x1>
    21d4:	85 e3       	ldi	r24, 0x35	; 53
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:457
        bit_set(PGCONF, PGCONF_UPDI_bp);
    21d6:	94 e0       	ldi	r25, 0x04	; 4
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:458
        return 5;
    21d8:	80 93 40 63 	sts	0x6340, r24	; 0x806340 <Command_Table+0x2>
    21dc:	90 93 41 63 	sts	0x6341, r25	; 0x806341 <Command_Table+0x3>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:449
    if (send_bytes(_sib256, sizeof(_sib256)) && recv_bytes(_sib, 32)) {
      size_t _result = 0;
      D1PRINTF(" NVM:%02X,SIB=\"%s\"\r\n", _sib[10], _sib);
      /* Depending on the SIB, different low-level methods are executed. */
      if      (_sib[10] == '5') _result = NVM::V5::setup();
      else if (_sib[10] == '4') _result = NVM::V4::setup();
    21e0:	8c e7       	ldi	r24, 0x7C	; 124
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:187
      return UPDI::send_bytes_block(_dwAddr, _wLength);
    }
  }

  bool setup (void) {
    Command_Table.prog_init    = &prog_init;
    21e2:	9e e0       	ldi	r25, 0x0E	; 14
    21e4:	80 93 42 63 	sts	0x6342, r24	; 0x806342 <Command_Table+0x4>
    21e8:	90 93 43 63 	sts	0x6343, r25	; 0x806343 <Command_Table+0x5>
    21ec:	82 e3       	ldi	r24, 0x32	; 50
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:188
    Command_Table.read_memory  = &read_memory;
    21ee:	9d e0       	ldi	r25, 0x0D	; 13
    21f0:	d2 cf       	rjmp	.-92     	; 0x2196 <__DATA_REGION_LENGTH__+0x196>
_ZN4UPDI7connectEv():
    21f2:	83 33       	cpi	r24, 0x33	; 51
    21f4:	a9 f4       	brne	.+42     	; 0x2220 <__DATA_REGION_LENGTH__+0x220>
setup():
    21f6:	8a e5       	ldi	r24, 0x5A	; 90
    21f8:	99 e0       	ldi	r25, 0x09	; 9
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:189
    Command_Table.erase_memory = &erase_memory;
    21fa:	80 93 3e 63 	sts	0x633E, r24	; 0x80633e <Command_Table>
    21fe:	90 93 3f 63 	sts	0x633F, r25	; 0x80633f <Command_Table+0x1>
    2202:	84 e3       	ldi	r24, 0x34	; 52
    2204:	94 e0       	ldi	r25, 0x04	; 4
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:190
    Command_Table.write_memory = &write_memory;
    2206:	80 93 40 63 	sts	0x6340, r24	; 0x806340 <Command_Table+0x2>
    220a:	90 93 41 63 	sts	0x6341, r25	; 0x806341 <Command_Table+0x3>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:450
      else if (_sib[10] == '3') _result = NVM::V3::setup();
    220e:	84 e6       	ldi	r24, 0x64	; 100
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:162
    }
  }

  bool setup (void) {
    Command_Table.prog_init    = &prog_init;
    2210:	9e e0       	ldi	r25, 0x0E	; 14
    2212:	80 93 42 63 	sts	0x6342, r24	; 0x806342 <Command_Table+0x4>
    2216:	90 93 43 63 	sts	0x6343, r25	; 0x806343 <Command_Table+0x5>
    221a:	80 ee       	ldi	r24, 0xE0	; 224
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:163
    Command_Table.read_memory  = &read_memory;
    221c:	9c e0       	ldi	r25, 0x0C	; 12
    221e:	bb cf       	rjmp	.-138    	; 0x2196 <__DATA_REGION_LENGTH__+0x196>
_ZN4UPDI7connectEv():
    2220:	82 33       	cpi	r24, 0x32	; 50
    2222:	a9 f4       	brne	.+42     	; 0x224e <__DATA_REGION_LENGTH__+0x24e>
setup():
    2224:	88 ef       	ldi	r24, 0xF8	; 248
    2226:	99 e0       	ldi	r25, 0x09	; 9
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:164
    Command_Table.erase_memory = &erase_memory;
    2228:	80 93 3e 63 	sts	0x633E, r24	; 0x80633e <Command_Table>
    222c:	90 93 3f 63 	sts	0x633F, r25	; 0x80633f <Command_Table+0x1>
    2230:	86 e0       	ldi	r24, 0x06	; 6
    2232:	94 e0       	ldi	r25, 0x04	; 4
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:165
    Command_Table.write_memory = &write_memory;
    2234:	80 93 40 63 	sts	0x6340, r24	; 0x806340 <Command_Table+0x2>
    2238:	90 93 41 63 	sts	0x6341, r25	; 0x806341 <Command_Table+0x3>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:451
      else if (_sib[10] == '2') _result = NVM::V2::setup();
    223c:	86 e6       	ldi	r24, 0x66	; 102
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:184
      return UPDI::send_bytes_block(_dwAddr, _wLength);
    }
  }

  bool setup (void) {
    Command_Table.prog_init    = &prog_init;
    223e:	9e e0       	ldi	r25, 0x0E	; 14
    2240:	80 93 42 63 	sts	0x6342, r24	; 0x806342 <Command_Table+0x4>
    2244:	90 93 43 63 	sts	0x6343, r25	; 0x806343 <Command_Table+0x5>
    2248:	83 e6       	ldi	r24, 0x63	; 99
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:185
    Command_Table.read_memory  = &read_memory;
    224a:	9c e0       	ldi	r25, 0x0C	; 12
    224c:	a4 cf       	rjmp	.-184    	; 0x2196 <__DATA_REGION_LENGTH__+0x196>
_ZN4UPDI7connectEv():
    224e:	80 33       	cpi	r24, 0x30	; 48
    2250:	09 f0       	breq	.+2      	; 0x2254 <__DATA_REGION_LENGTH__+0x254>
    2252:	7c cf       	rjmp	.-264    	; 0x214c <__DATA_REGION_LENGTH__+0x14c>
setup():
    2254:	87 ed       	ldi	r24, 0xD7	; 215
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:186
    Command_Table.erase_memory = &erase_memory;
    2256:	99 e0       	ldi	r25, 0x09	; 9
    2258:	80 93 3e 63 	sts	0x633E, r24	; 0x80633e <Command_Table>
    225c:	90 93 3f 63 	sts	0x633F, r25	; 0x80633f <Command_Table+0x1>
    2260:	8b ed       	ldi	r24, 0xDB	; 219
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:187
    Command_Table.write_memory = &write_memory;
    2262:	93 e0       	ldi	r25, 0x03	; 3
    2264:	80 93 40 63 	sts	0x6340, r24	; 0x806340 <Command_Table+0x2>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:452
      else if (_sib[10] == '0') _result = NVM::V0::setup();
    2268:	90 93 41 63 	sts	0x6341, r25	; 0x806341 <Command_Table+0x3>
    226c:	8a e5       	ldi	r24, 0x5A	; 90
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:171
      return UPDI::send_bytes_block(_wAddr, _wLength);
    }
  }

  bool setup (void) {
    Command_Table.prog_init    = &prog_init;
    226e:	9e e0       	ldi	r25, 0x0E	; 14
    2270:	80 93 42 63 	sts	0x6342, r24	; 0x806342 <Command_Table+0x4>
    2274:	90 93 43 63 	sts	0x6343, r25	; 0x806343 <Command_Table+0x5>
    2278:	82 ea       	ldi	r24, 0xA2	; 162
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:172
    Command_Table.read_memory  = &read_memory;
    227a:	9b e0       	ldi	r25, 0x0B	; 11
    227c:	8c cf       	rjmp	.-232    	; 0x2196 <__DATA_REGION_LENGTH__+0x196>

0000227e <TPI::write_memory()>:
_ZN3TPI12write_memoryEv():
    227e:	4f 92       	push	r4
    2280:	5f 92       	push	r5
    2282:	6f 92       	push	r6
    2284:	7f 92       	push	r7
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:173
    Command_Table.erase_memory = &erase_memory;
    2286:	8f 92       	push	r8
    2288:	9f 92       	push	r9
    228a:	af 92       	push	r10
    228c:	bf 92       	push	r11
    228e:	cf 92       	push	r12
    2290:	df 92       	push	r13
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:174
    Command_Table.write_memory = &write_memory;
    2292:	ef 92       	push	r14
    2294:	ff 92       	push	r15
    2296:	0f 93       	push	r16
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:167
      ++_cnt;
    }
    return _wLength + 1;
  }

  size_t write_memory (void) {
    2298:	1f 93       	push	r17
    229a:	cf 93       	push	r28
    229c:	df 93       	push	r29
    229e:	20 91 f6 60 	lds	r18, 0x60F6	; 0x8060f6 <packet+0x6>
bswap16():
    22a2:	c0 90 fa 60 	lds	r12, 0x60FA	; 0x8060fa <packet+0xa>
    22a6:	d0 90 fb 60 	lds	r13, 0x60FB	; 0x8060fb <packet+0xb>
    22aa:	dc 24       	eor	r13, r12
    22ac:	cd 24       	eor	r12, r13
    22ae:	dc 24       	eor	r13, r12
    22b0:	e0 90 fc 60 	lds	r14, 0x60FC	; 0x8060fc <packet+0xc>
    22b4:	f0 90 fd 60 	lds	r15, 0x60FD	; 0x8060fd <packet+0xd>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:168
    uint8_t   m_type = packet.out.tpi.read.bMType;
    22b8:	fe 24       	eor	r15, r14
    22ba:	ef 24       	eor	r14, r15
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/btools.cpp:45
//
// Byte convert
//

uint16_t bswap16 (uint16_t _word) {
  return __builtin_bswap16(_word);
    22bc:	fe 24       	eor	r15, r14
_ZN3TPI12write_memoryEv():
    22be:	40 90 ca 60 	lds	r4, 0x60CA	; 0x8060ca <_tpi_chunks>
    22c2:	64 2c       	mov	r6, r4
    22c4:	71 2c       	mov	r7, r1
    22c6:	c3 01       	movw	r24, r6
    22c8:	01 97       	sbiw	r24, 0x01	; 1
    22ca:	ce ef       	ldi	r28, 0xFE	; 254
    22cc:	d0 e6       	ldi	r29, 0x60	; 96
    22ce:	3f ef       	ldi	r19, 0xFF	; 255
    22d0:	ac 01       	movw	r20, r24
    22d2:	4c 21       	and	r20, r12
    22d4:	5d 21       	and	r21, r13
    22d6:	45 2b       	or	r20, r21
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:176
    uint8_t *_p = &packet.out.tpi.write.memData[0];
    bool _result = true;

    /* To accommodate older host programs, */
    /* the address must be aligned to the top of the page. */
    while (_dwAddr & (_tpi_chunks - 1)) {
    22d8:	79 f4       	brne	.+30     	; 0x22f8 <TPI::write_memory()+0x7a>
    22da:	3f ef       	ldi	r19, 0xFF	; 255
    22dc:	4c 01       	movw	r8, r24
    22de:	8e 20       	and	r8, r14
    22e0:	9f 20       	and	r9, r15
    22e2:	81 14       	cp	r8, r1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:171

  size_t write_memory (void) {
    uint8_t   m_type = packet.out.tpi.read.bMType;
    uint16_t _dwAddr = bswap16(_CAPS32(packet.out.tpi.write.dwAddr)->words[1]);
    size_t  _wLength = bswap16(packet.out.tpi.write.wLength);
    uint8_t *_p = &packet.out.tpi.write.memData[0];
    22e4:	91 04       	cpc	r9, r1
    22e6:	81 f0       	breq	.+32     	; 0x2308 <TPI::write_memory()+0x8a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:179
    /* To accommodate older host programs, */
    /* the address must be aligned to the top of the page. */
    while (_dwAddr & (_tpi_chunks - 1)) {
      _dwAddr--;
      _wLength++;
      *--_p = 0xFF;   /* NAND masked dummy bytes */
    22e8:	f6 01       	movw	r30, r12
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:176
    uint8_t *_p = &packet.out.tpi.write.memData[0];
    bool _result = true;

    /* To accommodate older host programs, */
    /* the address must be aligned to the top of the page. */
    while (_dwAddr & (_tpi_chunks - 1)) {
    22ea:	ee 0d       	add	r30, r14
    22ec:	ff 1d       	adc	r31, r15
    22ee:	30 83       	st	Z, r19
    22f0:	ff ef       	ldi	r31, 0xFF	; 255
    22f2:	ef 1a       	sub	r14, r31
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:182
      _dwAddr--;
      _wLength++;
      *--_p = 0xFF;   /* NAND masked dummy bytes */
    }
    while (_wLength & (_tpi_chunks - 1)) {
      *((uint8_t*)(_dwAddr + _wLength++)) = 0xFF;
    22f4:	ff 0a       	sbc	r15, r31
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:181
    while (_dwAddr & (_tpi_chunks - 1)) {
      _dwAddr--;
      _wLength++;
      *--_p = 0xFF;   /* NAND masked dummy bytes */
    }
    while (_wLength & (_tpi_chunks - 1)) {
    22f6:	f2 cf       	rjmp	.-28     	; 0x22dc <TPI::write_memory()+0x5e>
    22f8:	41 e0       	ldi	r20, 0x01	; 1
    22fa:	c4 1a       	sub	r12, r20
    22fc:	d1 08       	sbc	r13, r1
    22fe:	ef ef       	ldi	r30, 0xFF	; 255
    2300:	ee 1a       	sub	r14, r30
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:182
      *((uint8_t*)(_dwAddr + _wLength++)) = 0xFF;
    2302:	fe 0a       	sbc	r15, r30
    2304:	3a 93       	st	-Y, r19
    2306:	e4 cf       	rjmp	.-56     	; 0x22d0 <TPI::write_memory()+0x52>
    2308:	21 30       	cpi	r18, 0x01	; 1
    230a:	21 f5       	brne	.+72     	; 0x2354 <TPI::write_memory()+0xd6>
    230c:	b1 2c       	mov	r11, r1
    230e:	a1 2c       	mov	r10, r1
    2310:	86 01       	movw	r16, r12
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:177
    bool _result = true;

    /* To accommodate older host programs, */
    /* the address must be aligned to the top of the page. */
    while (_dwAddr & (_tpi_chunks - 1)) {
      _dwAddr--;
    2312:	0a 0d       	add	r16, r10
    2314:	1b 1d       	adc	r17, r11
    2316:	ae 14       	cp	r10, r14
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:178
      _wLength++;
    2318:	bf 04       	cpc	r11, r15
    231a:	08 f0       	brcs	.+2      	; 0x231e <TPI::write_memory()+0xa0>
    231c:	9d c0       	rjmp	.+314    	; 0x2458 <TPI::write_memory()+0x1da>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:179
      *--_p = 0xFF;   /* NAND masked dummy bytes */
    231e:	0e 94 ca 04 	call	0x994	; 0x994 <TPI::nvm_wait()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:189
    D2PRINTF(" FIXED_WRITE=%08X:%04X\r\n", _dwAddr, _wLength);

    /* For the flash code area, the page erase can be */
    /* omitted if the chip has already been erased.   */
    /* 0x01: XPRG_MEM_TYPE_APPL */
    if (m_type != 0x01) {
    2322:	88 23       	and	r24, r24
    2324:	81 f0       	breq	.+32     	; 0x2346 <TPI::write_memory()+0xc8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:171

  size_t write_memory (void) {
    uint8_t   m_type = packet.out.tpi.read.bMType;
    uint16_t _dwAddr = bswap16(_CAPS32(packet.out.tpi.write.dwAddr)->words[1]);
    size_t  _wLength = bswap16(packet.out.tpi.write.wLength);
    uint8_t *_p = &packet.out.tpi.write.memData[0];
    2326:	c8 01       	movw	r24, r16
    2328:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <TPI::set_sstpr(unsigned int)>
    232c:	88 23       	and	r24, r24
    232e:	59 f0       	breq	.+22     	; 0x2346 <TPI::write_memory()+0xc8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:202
        && nvm_ctrl(0x00);
      if (!_result) return 0;
    }

    /* WRITE_PAGE */
    for (size_t _i = 0; _i < _wLength; _i += _tpi_chunks) {
    2330:	8d e1       	ldi	r24, 0x1D	; 29
    2332:	0e 94 be 04 	call	0x97c	; 0x97c <TPI::nvm_ctrl(unsigned char)>
    2336:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:204
      D2PRINTF(" CODE_WRITE=%08X:%04X\r\n", _dwAddr, _tpi_chunks);
      _result &= nvm_wait()
    2338:	31 f0       	breq	.+12     	; 0x2346 <TPI::write_memory()+0xc8>
    233a:	88 81       	ld	r24, Y
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:208
              && set_sstpr(_dwAddr)
              && nvm_ctrl(0x1D)
              && set_sst(*_p++)
              && set_sst(*_p++);
    233c:	0e 94 d6 04 	call	0x9ac	; 0x9ac <TPI::set_sst(unsigned char)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:205

    /* WRITE_PAGE */
    for (size_t _i = 0; _i < _wLength; _i += _tpi_chunks) {
      D2PRINTF(" CODE_WRITE=%08X:%04X\r\n", _dwAddr, _tpi_chunks);
      _result &= nvm_wait()
              && set_sstpr(_dwAddr)
    2340:	81 11       	cpse	r24, r1
    2342:	37 c0       	rjmp	.+110    	; 0x23b2 <TPI::write_memory()+0x134>
    2344:	21 96       	adiw	r28, 0x01	; 1
    2346:	f3 e0       	ldi	r31, 0x03	; 3
    2348:	f4 15       	cp	r31, r4
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:206
              && nvm_ctrl(0x1D)
    234a:	08 f4       	brcc	.+2      	; 0x234e <TPI::write_memory()+0xd0>
    234c:	47 c0       	rjmp	.+142    	; 0x23dc <TPI::write_memory()+0x15e>
    234e:	0e 94 ca 04 	call	0x994	; 0x994 <TPI::nvm_wait()>
    2352:	1d c0       	rjmp	.+58     	; 0x238e <TPI::write_memory()+0x110>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:207
              && set_sst(*_p++)
    2354:	0e 94 ca 04 	call	0x994	; 0x994 <TPI::nvm_wait()>
    2358:	88 23       	and	r24, r24
    235a:	c9 f0       	breq	.+50     	; 0x238e <TPI::write_memory()+0x110>
    235c:	c6 01       	movw	r24, r12
    235e:	81 60       	ori	r24, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:210
              && set_sst(*_p++);
      /* The 2-word or 4-word write model requires a 12-bit wait for each word written. */
      if (_tpi_chunks >= 4) {
    2360:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <TPI::set_sstpr(unsigned int)>
    2364:	88 23       	and	r24, r24
    2366:	99 f0       	breq	.+38     	; 0x238e <TPI::write_memory()+0x110>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:220
        idle_clock(16);
        _result &= set_sst(*_p++) && set_sst(*_p++);
        idle_clock(16);
        _result &= set_sst(*_p++) && set_sst(*_p++);
      }
      _result &= nvm_wait();
    2368:	84 e1       	ldi	r24, 0x14	; 20
    236a:	0e 94 be 04 	call	0x97c	; 0x97c <TPI::nvm_ctrl(unsigned char)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:192
    /* omitted if the chip has already been erased.   */
    /* 0x01: XPRG_MEM_TYPE_APPL */
    if (m_type != 0x01) {
      /* SECTION_ERASE */
      D2PRINTF(" SECTION_ERASE=%04X>%04X\r\n", _dwAddr | 1, _CAPS16(_before_page)->word);
      _result &= nvm_wait()
    236e:	88 23       	and	r24, r24
    2370:	71 f0       	breq	.+28     	; 0x238e <TPI::write_memory()+0x110>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:197
        && set_sstpr(_dwAddr | 1)
        && nvm_ctrl(0x14)
        && set_sst(0xFF)
        && nvm_wait()
        && nvm_ctrl(0x00);
    2372:	8f ef       	ldi	r24, 0xFF	; 255
    2374:	0e 94 d6 04 	call	0x9ac	; 0x9ac <TPI::set_sst(unsigned char)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:193
    /* 0x01: XPRG_MEM_TYPE_APPL */
    if (m_type != 0x01) {
      /* SECTION_ERASE */
      D2PRINTF(" SECTION_ERASE=%04X>%04X\r\n", _dwAddr | 1, _CAPS16(_before_page)->word);
      _result &= nvm_wait()
        && set_sstpr(_dwAddr | 1)
    2378:	88 23       	and	r24, r24
    237a:	49 f0       	breq	.+18     	; 0x238e <TPI::write_memory()+0x110>
    237c:	0e 94 ca 04 	call	0x994	; 0x994 <TPI::nvm_wait()>
    2380:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:194
        && nvm_ctrl(0x14)
    2382:	29 f0       	breq	.+10     	; 0x238e <TPI::write_memory()+0x110>
    2384:	80 e0       	ldi	r24, 0x00	; 0
    2386:	0e 94 be 04 	call	0x97c	; 0x97c <TPI::nvm_ctrl(unsigned char)>
    238a:	81 11       	cpse	r24, r1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:195
        && set_sst(0xFF)
    238c:	bf cf       	rjmp	.-130    	; 0x230c <TPI::write_memory()+0x8e>
    238e:	c4 01       	movw	r24, r8
    2390:	df 91       	pop	r29
    2392:	cf 91       	pop	r28
    2394:	1f 91       	pop	r17
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:196
        && nvm_wait()
    2396:	0f 91       	pop	r16
    2398:	ff 90       	pop	r15
    239a:	ef 90       	pop	r14
    239c:	df 90       	pop	r13
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:197
        && nvm_ctrl(0x00);
    239e:	cf 90       	pop	r12
    23a0:	bf 90       	pop	r11
    23a2:	af 90       	pop	r10
    23a4:	9f 90       	pop	r9
    23a6:	8f 90       	pop	r8
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:225
      _result &= nvm_wait();
      if (!_result) return 0;
      _dwAddr += _tpi_chunks;
    }
    return nvm_ctrl(0x00);
  }
    23a8:	7f 90       	pop	r7
    23aa:	6f 90       	pop	r6
    23ac:	5f 90       	pop	r5
    23ae:	4f 90       	pop	r4
    23b0:	08 95       	ret
    23b2:	8e 01       	movw	r16, r28
    23b4:	0e 5f       	subi	r16, 0xFE	; 254
    23b6:	1f 4f       	sbci	r17, 0xFF	; 255
    23b8:	89 81       	ldd	r24, Y+1	; 0x01
    23ba:	0e 94 d6 04 	call	0x9ac	; 0x9ac <TPI::set_sst(unsigned char)>
    23be:	58 2e       	mov	r5, r24
    23c0:	43 e0       	ldi	r20, 0x03	; 3
    23c2:	e8 01       	movw	r28, r16
    23c4:	44 15       	cp	r20, r4
    23c6:	58 f0       	brcs	.+22     	; 0x23de <TPI::write_memory()+0x160>
    23c8:	0e 94 ca 04 	call	0x994	; 0x994 <TPI::nvm_wait()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:208
      D2PRINTF(" CODE_WRITE=%08X:%04X\r\n", _dwAddr, _tpi_chunks);
      _result &= nvm_wait()
              && set_sstpr(_dwAddr)
              && nvm_ctrl(0x1D)
              && set_sst(*_p++)
              && set_sst(*_p++);
    23cc:	55 20       	and	r5, r5
    23ce:	f9 f2       	breq	.-66     	; 0x238e <TPI::write_memory()+0x110>
    23d0:	88 23       	and	r24, r24
    23d2:	e9 f2       	breq	.-70     	; 0x238e <TPI::write_memory()+0x110>
    23d4:	a6 0c       	add	r10, r6
    23d6:	b7 1c       	adc	r11, r7
    23d8:	e8 01       	movw	r28, r16
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:210
      /* The 2-word or 4-word write model requires a 12-bit wait for each word written. */
      if (_tpi_chunks >= 4) {
    23da:	9a cf       	rjmp	.-204    	; 0x2310 <TPI::write_memory()+0x92>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:208
      D2PRINTF(" CODE_WRITE=%08X:%04X\r\n", _dwAddr, _tpi_chunks);
      _result &= nvm_wait()
              && set_sstpr(_dwAddr)
              && nvm_ctrl(0x1D)
              && set_sst(*_p++)
              && set_sst(*_p++);
    23dc:	51 2c       	mov	r5, r1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:210
      /* The 2-word or 4-word write model requires a 12-bit wait for each word written. */
      if (_tpi_chunks >= 4) {
    23de:	80 e1       	ldi	r24, 0x10	; 16
    23e0:	90 e0       	ldi	r25, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:220
        idle_clock(16);
        _result &= set_sst(*_p++) && set_sst(*_p++);
        idle_clock(16);
        _result &= set_sst(*_p++) && set_sst(*_p++);
      }
      _result &= nvm_wait();
    23e2:	0e 94 00 05 	call	0xa00	; 0xa00 <TPI::idle_clock(unsigned int)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:221
      if (!_result) return 0;
    23e6:	88 81       	ld	r24, Y
    23e8:	0e 94 d6 04 	call	0x9ac	; 0x9ac <TPI::set_sst(unsigned char)>
    23ec:	8e 01       	movw	r16, r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:202
        && nvm_ctrl(0x00);
      if (!_result) return 0;
    }

    /* WRITE_PAGE */
    for (size_t _i = 0; _i < _wLength; _i += _tpi_chunks) {
    23ee:	81 11       	cpse	r24, r1
    23f0:	21 c0       	rjmp	.+66     	; 0x2434 <TPI::write_memory()+0x1b6>
    23f2:	0f 5f       	subi	r16, 0xFF	; 255
    23f4:	1f 4f       	sbci	r17, 0xFF	; 255
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:210
              && set_sstpr(_dwAddr)
              && nvm_ctrl(0x1D)
              && set_sst(*_p++)
              && set_sst(*_p++);
      /* The 2-word or 4-word write model requires a 12-bit wait for each word written. */
      if (_tpi_chunks >= 4) {
    23f6:	58 22       	and	r5, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:211
        idle_clock(16);
    23f8:	88 e0       	ldi	r24, 0x08	; 8
    23fa:	48 12       	cpse	r4, r24
    23fc:	e5 cf       	rjmp	.-54     	; 0x23c8 <TPI::write_memory()+0x14a>
    23fe:	80 e1       	ldi	r24, 0x10	; 16
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:212
        _result &= set_sst(*_p++) && set_sst(*_p++);
    2400:	90 e0       	ldi	r25, 0x00	; 0
    2402:	0e 94 00 05 	call	0xa00	; 0xa00 <TPI::idle_clock(unsigned int)>
    2406:	f8 01       	movw	r30, r16
    2408:	80 81       	ld	r24, Z
    240a:	0e 94 d6 04 	call	0x9ac	; 0x9ac <TPI::set_sst(unsigned char)>
    240e:	e8 01       	movw	r28, r16
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:214
      }
      if (_tpi_chunks == 8) {
    2410:	81 11       	cpse	r24, r1
    2412:	16 c0       	rjmp	.+44     	; 0x2440 <TPI::write_memory()+0x1c2>
    2414:	21 96       	adiw	r28, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:215
        idle_clock(16);
    2416:	58 22       	and	r5, r24
    2418:	80 e1       	ldi	r24, 0x10	; 16
    241a:	90 e0       	ldi	r25, 0x00	; 0
    241c:	0e 94 00 05 	call	0xa00	; 0xa00 <TPI::idle_clock(unsigned int)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:216
        _result &= set_sst(*_p++) && set_sst(*_p++);
    2420:	88 81       	ld	r24, Y
    2422:	0e 94 d6 04 	call	0x9ac	; 0x9ac <TPI::set_sst(unsigned char)>
    2426:	8e 01       	movw	r16, r28
    2428:	81 11       	cpse	r24, r1
    242a:	10 c0       	rjmp	.+32     	; 0x244c <TPI::write_memory()+0x1ce>
    242c:	0f 5f       	subi	r16, 0xFF	; 255
    242e:	1f 4f       	sbci	r17, 0xFF	; 255
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:217
        idle_clock(16);
    2430:	58 22       	and	r5, r24
    2432:	ca cf       	rjmp	.-108    	; 0x23c8 <TPI::write_memory()+0x14a>
    2434:	0e 5f       	subi	r16, 0xFE	; 254
    2436:	1f 4f       	sbci	r17, 0xFF	; 255
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:218
        _result &= set_sst(*_p++) && set_sst(*_p++);
    2438:	89 81       	ldd	r24, Y+1	; 0x01
    243a:	0e 94 d6 04 	call	0x9ac	; 0x9ac <TPI::set_sst(unsigned char)>
    243e:	db cf       	rjmp	.-74     	; 0x23f6 <TPI::write_memory()+0x178>
    2440:	22 96       	adiw	r28, 0x02	; 2
    2442:	f8 01       	movw	r30, r16
    2444:	81 81       	ldd	r24, Z+1	; 0x01
    2446:	0e 94 d6 04 	call	0x9ac	; 0x9ac <TPI::set_sst(unsigned char)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:212
              && set_sst(*_p++)
              && set_sst(*_p++);
      /* The 2-word or 4-word write model requires a 12-bit wait for each word written. */
      if (_tpi_chunks >= 4) {
        idle_clock(16);
        _result &= set_sst(*_p++) && set_sst(*_p++);
    244a:	e5 cf       	rjmp	.-54     	; 0x2416 <TPI::write_memory()+0x198>
    244c:	0e 5f       	subi	r16, 0xFE	; 254
    244e:	1f 4f       	sbci	r17, 0xFF	; 255
    2450:	89 81       	ldd	r24, Y+1	; 0x01
    2452:	0e 94 d6 04 	call	0x9ac	; 0x9ac <TPI::set_sst(unsigned char)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:216
      }
      if (_tpi_chunks == 8) {
        idle_clock(16);
        _result &= set_sst(*_p++) && set_sst(*_p++);
    2456:	ec cf       	rjmp	.-40     	; 0x2430 <TPI::write_memory()+0x1b2>
    2458:	80 e0       	ldi	r24, 0x00	; 0
    245a:	0e 94 be 04 	call	0x97c	; 0x97c <TPI::nvm_ctrl(unsigned char)>
    245e:	88 2e       	mov	r8, r24
    2460:	91 2c       	mov	r9, r1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:218
        idle_clock(16);
        _result &= set_sst(*_p++) && set_sst(*_p++);
    2462:	95 cf       	rjmp	.-214    	; 0x238e <TPI::write_memory()+0x110>

00002464 <TPI::read_memory()>:
_ZN3TPI11read_memoryEv():
    2464:	0f 93       	push	r16
    2466:	1f 93       	push	r17
    2468:	cf 93       	push	r28
    246a:	df 93       	push	r29
bswap16():
    246c:	80 91 f9 60 	lds	r24, 0x60F9	; 0x8060f9 <packet+0x9>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:224
      }
      _result &= nvm_wait();
      if (!_result) return 0;
      _dwAddr += _tpi_chunks;
    }
    return nvm_ctrl(0x00);
    2470:	90 91 fa 60 	lds	r25, 0x60FA	; 0x8060fa <packet+0xa>
    2474:	c0 91 fb 60 	lds	r28, 0x60FB	; 0x8060fb <packet+0xb>
    2478:	d0 91 fc 60 	lds	r29, 0x60FC	; 0x8060fc <packet+0xc>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:151
        }
    }
    return 0;
  }

  size_t read_memory (void) {
    247c:	dc 27       	eor	r29, r28
    247e:	cd 27       	eor	r28, r29
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/btools.cpp:45
    2480:	dc 27       	eor	r29, r28
_ZN3TPI11read_memoryEv():
    2482:	98 27       	eor	r25, r24
    2484:	89 27       	eor	r24, r25
    2486:	98 27       	eor	r25, r24
    2488:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <TPI::set_sstpr(unsigned int)>
    248c:	00 ef       	ldi	r16, 0xF0	; 240
    248e:	10 e6       	ldi	r17, 0x60	; 96
    2490:	c8 01       	movw	r24, r16
    2492:	80 5f       	subi	r24, 0xF0	; 240
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:158
    uint16_t _dwAddr = bswap16(_CAPS32(packet.out.tpi.read.dwAddr)->words[1]);
    size_t  _wLength = bswap16(packet.out.tpi.read.wLength);
    uint8_t *_q = &packet.in.data[0];
    size_t _cnt = 0;
    D2PRINTF(" READ=%08X:%04X\r\n", _dwAddr, _wLength);
    set_sstpr(_dwAddr);
    2494:	90 46       	sbci	r25, 0x60	; 96
    2496:	8c 17       	cp	r24, r28
    2498:	9d 07       	cpc	r25, r29
    249a:	50 f4       	brcc	.+20     	; 0x24b0 <TPI::read_memory()+0x4c>
    249c:	0e 94 e2 04 	call	0x9c4	; 0x9c4 <TPI::get_sld()>
    24a0:	0f 5f       	subi	r16, 0xFF	; 255
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:159
    while (_cnt < _wLength) {
    24a2:	1f 4f       	sbci	r17, 0xFF	; 255
    24a4:	88 23       	and	r24, r24
    24a6:	59 f0       	breq	.+22     	; 0x24be <TPI::read_memory()+0x5a>
    24a8:	8d b3       	in	r24, 0x1d	; 29
    24aa:	f8 01       	movw	r30, r16
    24ac:	86 83       	std	Z+6, r24	; 0x06
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:160
      if (!get_sld()) return 0;
    24ae:	f0 cf       	rjmp	.-32     	; 0x2490 <TPI::read_memory()+0x2c>
    24b0:	ce 01       	movw	r24, r28
    24b2:	01 96       	adiw	r24, 0x01	; 1
    24b4:	df 91       	pop	r29
    24b6:	cf 91       	pop	r28
    24b8:	1f 91       	pop	r17
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:161
      *_q++ = RXDATA;
    24ba:	0f 91       	pop	r16
    24bc:	08 95       	ret
    24be:	90 e0       	ldi	r25, 0x00	; 0
    24c0:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:164
      ++_cnt;
    }
    return _wLength + 1;
    24c2:	f8 cf       	rjmp	.-16     	; 0x24b4 <TPI::read_memory()+0x50>

000024c4 <TPI::erase_memory()>:
_ZN3TPI12erase_memoryEv():
    24c4:	cf 93       	push	r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:165
  }
    24c6:	df 93       	push	r29
bswap16():
    24c8:	c0 91 f9 60 	lds	r28, 0x60F9	; 0x8060f9 <packet+0x9>
    24cc:	d0 91 fa 60 	lds	r29, 0x60FA	; 0x8060fa <packet+0xa>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:160
    uint8_t *_q = &packet.in.data[0];
    size_t _cnt = 0;
    D2PRINTF(" READ=%08X:%04X\r\n", _dwAddr, _wLength);
    set_sstpr(_dwAddr);
    while (_cnt < _wLength) {
      if (!get_sld()) return 0;
    24d0:	dc 27       	eor	r29, r28
    24d2:	cd 27       	eor	r28, r29
    24d4:	dc 27       	eor	r29, r28
_ZN3TPI12erase_memoryEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:120

  bool nvm_ctrl (const uint8_t _nvmcmd) {
    return set_sout(0x63, _nvmcmd);   /* NVMCMD_REG: IO=0x33 */
  }

  size_t erase_memory (void) {
    24d6:	80 91 f6 60 	lds	r24, 0x60F6	; 0x8060f6 <packet+0x6>
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/btools.cpp:45
    24da:	81 30       	cpi	r24, 0x01	; 1
    24dc:	e9 f4       	brne	.+58     	; 0x2518 <TPI::erase_memory()+0x54>
    24de:	0e 94 ca 04 	call	0x994	; 0x994 <TPI::nvm_wait()>
    24e2:	81 11       	cpse	r24, r1
    24e4:	05 c0       	rjmp	.+10     	; 0x24f0 <TPI::erase_memory()+0x2c>
    24e6:	90 e0       	ldi	r25, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:123
    uint8_t   m_type = packet.out.tpi.read.bMType;
    uint16_t _dwAddr = bswap16(_CAPS32(packet.out.tpi.read.dwAddr)->words[1]);
    if (m_type == 0x01) {
    24e8:	80 e0       	ldi	r24, 0x00	; 0
    24ea:	df 91       	pop	r29
    24ec:	cf 91       	pop	r28
    24ee:	08 95       	ret
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:126
      /* XPRG_ERASE_CHIP */
      D1PRINTF(" CHIP_ERASE=%04X\r\n", _dwAddr);
      if (nvm_wait()
    24f0:	ce 01       	movw	r24, r28
    24f2:	81 60       	ori	r24, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:130
        && set_sstpr(_dwAddr | 1)
        && nvm_ctrl(0x10)
        && set_sst(0xFF)
        && nvm_wait()) {
    24f4:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <TPI::set_sstpr(unsigned int)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:148
        && set_sst(0xFF)
        && nvm_wait()) {
          return 1;
        }
    }
    return 0;
    24f8:	88 23       	and	r24, r24
    24fa:	a9 f3       	breq	.-22     	; 0x24e6 <TPI::erase_memory()+0x22>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:149
  }
    24fc:	80 e1       	ldi	r24, 0x10	; 16
    24fe:	0e 94 be 04 	call	0x97c	; 0x97c <TPI::nvm_ctrl(unsigned char)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:127
    uint16_t _dwAddr = bswap16(_CAPS32(packet.out.tpi.read.dwAddr)->words[1]);
    if (m_type == 0x01) {
      /* XPRG_ERASE_CHIP */
      D1PRINTF(" CHIP_ERASE=%04X\r\n", _dwAddr);
      if (nvm_wait()
        && set_sstpr(_dwAddr | 1)
    2502:	88 23       	and	r24, r24
    2504:	81 f3       	breq	.-32     	; 0x24e6 <TPI::erase_memory()+0x22>
    2506:	8f ef       	ldi	r24, 0xFF	; 255
    2508:	0e 94 d6 04 	call	0x9ac	; 0x9ac <TPI::set_sst(unsigned char)>
    250c:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:128
        && nvm_ctrl(0x10)
    250e:	59 f3       	breq	.-42     	; 0x24e6 <TPI::erase_memory()+0x22>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:142
      /* Currently not called on AVRDUDE<=8.0. */
      /* It may be called from terminal mode.  */
      D1PRINTF(" SECTION_ERASE=%04X\r\n", _dwAddr);
      if (nvm_wait()
        && set_sstpr(_dwAddr | 1)
        && nvm_ctrl(0x14)
    2510:	0e 94 ca 04 	call	0x994	; 0x994 <TPI::nvm_wait()>
    2514:	90 e0       	ldi	r25, 0x00	; 0
    2516:	e9 cf       	rjmp	.-46     	; 0x24ea <TPI::erase_memory()+0x26>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:143
        && set_sst(0xFF)
    2518:	0e 94 ca 04 	call	0x994	; 0x994 <TPI::nvm_wait()>
    251c:	88 23       	and	r24, r24
    251e:	19 f3       	breq	.-58     	; 0x24e6 <TPI::erase_memory()+0x22>
    2520:	ce 01       	movw	r24, r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:144
        && nvm_wait()) {
    2522:	81 60       	ori	r24, 0x01	; 1
    2524:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <TPI::set_sstpr(unsigned int)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:148
          return 1;
        }
    }
    return 0;
    2528:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:140
      /* 0x02: XPRG_ERASE_APP */
      /* 0x09: XPRG_ERASE_CONFIG */
      /* Currently not called on AVRDUDE<=8.0. */
      /* It may be called from terminal mode.  */
      D1PRINTF(" SECTION_ERASE=%04X\r\n", _dwAddr);
      if (nvm_wait()
    252a:	e9 f2       	breq	.-70     	; 0x24e6 <TPI::erase_memory()+0x22>
    252c:	84 e1       	ldi	r24, 0x14	; 20
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:144
        && set_sstpr(_dwAddr | 1)
        && nvm_ctrl(0x14)
        && set_sst(0xFF)
        && nvm_wait()) {
    252e:	e7 cf       	rjmp	.-50     	; 0x24fe <TPI::erase_memory()+0x3a>

00002530 <__vector_19>:
__vector_19():
    2530:	1f 92       	push	r1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:141
      /* 0x09: XPRG_ERASE_CONFIG */
      /* Currently not called on AVRDUDE<=8.0. */
      /* It may be called from terminal mode.  */
      D1PRINTF(" SECTION_ERASE=%04X\r\n", _dwAddr);
      if (nvm_wait()
        && set_sstpr(_dwAddr | 1)
    2532:	0f 92       	push	r0
    2534:	0f b6       	in	r0, 0x3f	; 63
    2536:	0f 92       	push	r0
    2538:	11 24       	eor	r1, r1
    253a:	2f 93       	push	r18
    253c:	3f 93       	push	r19
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:142
        && nvm_ctrl(0x14)
    253e:	4f 93       	push	r20
    2540:	5f 93       	push	r21
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:248
  }

};

/*** CMSIS-DAP VCOM,VCP transceiver ***/
ISR(USART0_RXC_vect) {
    2542:	6f 93       	push	r22
    2544:	7f 93       	push	r23
    2546:	8f 93       	push	r24
    2548:	9f 93       	push	r25
    254a:	af 93       	push	r26
    254c:	bf 93       	push	r27
    254e:	cf 93       	push	r28
    2550:	ef 93       	push	r30
    2552:	ff 93       	push	r31
vcp_receiver():
    2554:	c0 91 01 08 	lds	r28, 0x0801	; 0x800801 <__TEXT_REGION_LENGTH__+0x7f0801>
    2558:	20 91 00 08 	lds	r18, 0x0800	; 0x800800 <__TEXT_REGION_LENGTH__+0x7f0800>
    255c:	8c 2f       	mov	r24, r28
    255e:	86 74       	andi	r24, 0x46	; 70
    2560:	a9 f4       	brne	.+42     	; 0x258c <__vector_19+0x5c>
write_byte():
    2562:	f2 99       	sbic	0x1e, 2	; 30
    2564:	28 c0       	rjmp	.+80     	; 0x25b6 <__vector_19+0x86>
__vector_19():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:447
  void read_drop (void) {
    if (bit_is_set(EP_CDO.STATUS, USB_BUSNAK_bp)) ep_cdo_listen();
  }

  void vcp_receiver (void) {
    uint8_t _d = USART0_RXDATAH;
    2566:	82 ee       	ldi	r24, 0xE2	; 226
    2568:	93 e6       	ldi	r25, 0x63	; 99
write_byte():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:448
    uint8_t _c = USART0_RXDATAL;
    256a:	e0 91 65 64 	lds	r30, 0x6465	; 0x806465 <_send_count>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:449
    if (!(_d & (USART_BUFOVF_bm | USART_FERR_bm | USART_PERR_bm))) {
    256e:	31 e0       	ldi	r19, 0x01	; 1
    2570:	3e 0f       	add	r19, r30
    2572:	30 93 65 64 	sts	0x6465, r19	; 0x806465 <_send_count>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:411
  // MARK: VCP

  void write_byte (const uint8_t _c) {
    /* The double buffer consists of two blocks. */
    uint8_t* _buf = bit_is_set(GPCONF, GPCONF_DBL_bp)
      ? &EP_MEM.cdi_data[64]
    2576:	e8 0f       	add	r30, r24
    2578:	f9 2f       	mov	r31, r25
    257a:	f1 1d       	adc	r31, r1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:413
      : &EP_MEM.cdi_data[0];
    _buf[_send_count++] = _c;
    257c:	20 83       	st	Z, r18
    257e:	80 91 65 64 	lds	r24, 0x6465	; 0x806465 <_send_count>
    2582:	80 34       	cpi	r24, 0x40	; 64
    2584:	d8 f4       	brcc	.+54     	; 0x25bc <__vector_19+0x8c>
    2586:	8e e1       	ldi	r24, 0x1E	; 30
    2588:	80 93 62 64 	sts	0x6462, r24	; 0x806462 <_sof_count>
vcp_receiver():
    258c:	8c b3       	in	r24, 0x1c	; 28
    258e:	c8 2b       	or	r28, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:414
    if (_send_count < 64) _sof_count = 30;
    2590:	cc bb       	out	0x1c, r28	; 28
__vector_19():
    2592:	ff 91       	pop	r31
    2594:	ef 91       	pop	r30
    2596:	cf 91       	pop	r28
    2598:	bf 91       	pop	r27
    259a:	af 91       	pop	r26
    259c:	9f 91       	pop	r25
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:452
    uint8_t _d = USART0_RXDATAH;
    uint8_t _c = USART0_RXDATAL;
    if (!(_d & (USART_BUFOVF_bm | USART_FERR_bm | USART_PERR_bm))) {
      write_byte(_c);
    }
    RXSTAT |= _d;
    259e:	8f 91       	pop	r24
    25a0:	7f 91       	pop	r23
    25a2:	6f 91       	pop	r22
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:254
#if defined(CONFIG_VCP_9BIT_SUPPORT)
  usart_receiver();
#else
  USB::vcp_receiver();
#endif
}
    25a4:	5f 91       	pop	r21
    25a6:	4f 91       	pop	r20
    25a8:	3f 91       	pop	r19
    25aa:	2f 91       	pop	r18
    25ac:	0f 90       	pop	r0
    25ae:	0f be       	out	0x3f, r0	; 63
    25b0:	0f 90       	pop	r0
    25b2:	1f 90       	pop	r1
    25b4:	18 95       	reti
    25b6:	82 e2       	ldi	r24, 0x22	; 34
    25b8:	94 e6       	ldi	r25, 0x64	; 100
    25ba:	d7 cf       	rjmp	.-82     	; 0x256a <__vector_19+0x3a>
write_byte():
    25bc:	0e 94 8f 01 	call	0x31e	; 0x31e <USB::ep_cdi_listen()>
    25c0:	e5 cf       	rjmp	.-54     	; 0x258c <__vector_19+0x5c>

000025c2 <__vector_15>:
__vector_15():
    25c2:	11 24       	eor	r1, r1
    25c4:	10 92 00 0b 	sts	0x0B00, r1	; 0x800b00 <__TEXT_REGION_LENGTH__+0x7f0b00>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:411
  // MARK: VCP

  void write_byte (const uint8_t _c) {
    /* The double buffer consists of two blocks. */
    uint8_t* _buf = bit_is_set(GPCONF, GPCONF_DBL_bp)
      ? &EP_MEM.cdi_data[64]
    25c8:	81 e0       	ldi	r24, 0x01	; 1
    25ca:	80 93 06 0b 	sts	0x0B06, r24	; 0x800b06 <__TEXT_REGION_LENGTH__+0x7f0b06>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:415
      : &EP_MEM.cdi_data[0];
    _buf[_send_count++] = _c;
    if (_send_count < 64) _sof_count = 30;
    else ep_cdi_listen();
    25ce:	62 e0       	ldi	r22, 0x02	; 2
    25d0:	70 e0       	ldi	r23, 0x00	; 0
    25d2:	83 eb       	ldi	r24, 0xB3	; 179
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:103
ISR(TCB0_INT_vect, ISR_NAKED) {
  /***
    This interrupt is a global escape due to timeout.
    There is no return to the source of the interrupt.
  ***/
  __asm__ __volatile__ ("EOR R1,R1");
    25d4:	90 e6       	ldi	r25, 0x60	; 96
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:104
  TCB0_CTRLA = 0;
    25d6:	d3 d7       	rcall	.+4006   	; 0x357e <longjmp>

000025d8 <Timeout::stop()>:
_ZN7Timeout4stopEv():
    25d8:	8f b7       	in	r24, 0x3f	; 63
__iCliRetVal():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:105
  TCB0_INTFLAGS = TCB_CAPT_bm;
    25da:	f8 94       	cli
_ZN7Timeout4stopEv():
    25dc:	10 92 00 0b 	sts	0x0B00, r1	; 0x800b00 <__TEXT_REGION_LENGTH__+0x7f0b00>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:106
  longjmp(TIMEOUT_CONTEXT, 2);
    25e0:	91 e0       	ldi	r25, 0x01	; 1
    25e2:	90 93 06 0b 	sts	0x0B06, r25	; 0x800b06 <__TEXT_REGION_LENGTH__+0x7f0b06>
__iRestore():
    25e6:	8f bf       	out	0x3f, r24	; 63
_ZN7Timeout4stopEv():
    25e8:	18 95       	reti

000025ea <Timeout::command(unsigned int (*)(), unsigned int (*)(), unsigned int)>:
_ZN7Timeout7commandEPFjvES1_j():
    25ea:	cf 93       	push	r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:53
   * Exit from the timeout block.
   * The last RETI is required.
   */
  __attribute__((used, naked, noinline))
  void stop (void) {
    ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    25ec:	df 93       	push	r29
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:50
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    25ee:	cd b7       	in	r28, 0x3d	; 61
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:54
      TCB0_CTRLA = 0;
    25f0:	de b7       	in	r29, 0x3e	; 62
    25f2:	28 97       	sbiw	r28, 0x08	; 8
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:55
      TCB0_INTFLAGS = TCB_CAPT_bm;
    25f4:	cd bf       	out	0x3d, r28	; 61
    25f6:	de bf       	out	0x3e, r29	; 62
    25f8:	8d 83       	std	Y+5, r24	; 0x05
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:70
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    25fa:	9e 83       	std	Y+6, r25	; 0x06
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:57
    }
    reti();
    25fc:	6b 83       	std	Y+3, r22	; 0x03
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:74
  /*
   * Timeout block.
   * Does not work with interrupts disabled.
   * RETI must be called after the interrupt is suspended.
   */
  size_t command (size_t (*func_p)(void), size_t (*fail_p)(void), uint16_t _ms) {
    25fe:	7c 83       	std	Y+4, r23	; 0x04
    2600:	4f 83       	std	Y+7, r20	; 0x07
    2602:	58 87       	std	Y+8, r21	; 0x08
    2604:	19 82       	std	Y+1, r1	; 0x01
    2606:	1a 82       	std	Y+2, r1	; 0x02
    2608:	89 81       	ldd	r24, Y+1	; 0x01
    260a:	9a 81       	ldd	r25, Y+2	; 0x02
    260c:	89 2b       	or	r24, r25
    260e:	01 f5       	brne	.+64     	; 0x2650 <Timeout::command(unsigned int (*)(), unsigned int (*)(), unsigned int)+0x66>
    2610:	83 eb       	ldi	r24, 0xB3	; 179
    2612:	90 e6       	ldi	r25, 0x60	; 96
    2614:	94 d7       	rcall	.+3880   	; 0x353e <setjmp>
    2616:	89 2b       	or	r24, r25
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:75
    volatile size_t _result = 0;
    2618:	19 f5       	brne	.+70     	; 0x2660 <Timeout::command(unsigned int (*)(), unsigned int (*)(), unsigned int)+0x76>
start():
    261a:	9f b7       	in	r25, 0x3f	; 63
__iCliRetVal():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:76
    while (_result == 0) {
    261c:	f8 94       	cli
start():
    261e:	10 92 0a 0b 	sts	0x0B0A, r1	; 0x800b0a <__TEXT_REGION_LENGTH__+0x7f0b0a>
    2622:	10 92 0b 0b 	sts	0x0B0B, r1	; 0x800b0b <__TEXT_REGION_LENGTH__+0x7f0b0b>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:77
      if (setjmp(TIMEOUT_CONTEXT) == 0) {
    2626:	2f 81       	ldd	r18, Y+7	; 0x07
    2628:	38 85       	ldd	r19, Y+8	; 0x08
    262a:	20 93 0c 0b 	sts	0x0B0C, r18	; 0x800b0c <__TEXT_REGION_LENGTH__+0x7f0b0c>
    262e:	30 93 0d 0b 	sts	0x0B0D, r19	; 0x800b0d <__TEXT_REGION_LENGTH__+0x7f0b0d>
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:50
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    2632:	81 e0       	ldi	r24, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:39
   * Timeout after the specified time.
   * To be precise, in 1/1024 sec units.
   */
  void start (uint16_t _ms) {
    ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
      TCB0_CNT = 0;
    2634:	80 93 05 0b 	sts	0x0B05, r24	; 0x800b05 <__TEXT_REGION_LENGTH__+0x7f0b05>
    2638:	80 93 06 0b 	sts	0x0B06, r24	; 0x800b06 <__TEXT_REGION_LENGTH__+0x7f0b06>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:40
      TCB0_CCMP = _ms;
    263c:	8f e0       	ldi	r24, 0x0F	; 15
    263e:	80 93 00 0b 	sts	0x0B00, r24	; 0x800b00 <__TEXT_REGION_LENGTH__+0x7f0b00>
__iRestore():
    2642:	9f bf       	out	0x3f, r25	; 63
_ZN7Timeout7commandEPFjvES1_j():
    2644:	ed 81       	ldd	r30, Y+5	; 0x05
    2646:	fe 81       	ldd	r31, Y+6	; 0x06
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:41
      TCB0_INTCTRL = TCB_CAPT_bm;
    2648:	09 95       	icall
    264a:	89 83       	std	Y+1, r24	; 0x01
    264c:	9a 83       	std	Y+2, r25	; 0x02
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:42
      TCB0_INTFLAGS = TCB_CAPT_bm;
    264e:	c4 df       	rcall	.-120    	; 0x25d8 <Timeout::stop()>
    2650:	89 81       	ldd	r24, Y+1	; 0x01
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:43
      TCB0_CTRLA = TCB_ENABLE_bm | TCB_CLKSEL_EVENT_gc; /* for EVSYS_USERTCB0COUNT */
    2652:	9a 81       	ldd	r25, Y+2	; 0x02
    2654:	28 96       	adiw	r28, 0x08	; 8
    2656:	cd bf       	out	0x3d, r28	; 61
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:70
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    2658:	de bf       	out	0x3e, r29	; 62
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:79
  size_t command (size_t (*func_p)(void), size_t (*fail_p)(void), uint16_t _ms) {
    volatile size_t _result = 0;
    while (_result == 0) {
      if (setjmp(TIMEOUT_CONTEXT) == 0) {
        Timeout::start(_ms);
        _result = (*func_p)();
    265a:	df 91       	pop	r29
    265c:	cf 91       	pop	r28
    265e:	08 95       	ret
    2660:	bb df       	rcall	.-138    	; 0x25d8 <Timeout::stop()>
    2662:	2b 81       	ldd	r18, Y+3	; 0x03
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:80
        Timeout::stop();
    2664:	3c 81       	ldd	r19, Y+4	; 0x04
    2666:	21 15       	cp	r18, r1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:89
      D1PRINTF("[TO]");
      if (!fail_p) break;
      wdt_reset();
      if (!(*fail_p)()) break;
    }
    return _result;
    2668:	31 05       	cpc	r19, r1
    266a:	91 f3       	breq	.-28     	; 0x2650 <Timeout::command(unsigned int (*)(), unsigned int (*)(), unsigned int)+0x66>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:90
  }
    266c:	a8 95       	wdr
    266e:	f9 01       	movw	r30, r18
    2670:	09 95       	icall
    2672:	89 2b       	or	r24, r25
    2674:	49 f6       	brne	.-110    	; 0x2608 <Timeout::command(unsigned int (*)(), unsigned int (*)(), unsigned int)+0x1e>
    2676:	ec cf       	rjmp	.-40     	; 0x2650 <Timeout::command(unsigned int (*)(), unsigned int (*)(), unsigned int)+0x66>

00002678 <__vector_6>:
__vector_6():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:83
        Timeout::start(_ms);
        _result = (*func_p)();
        Timeout::stop();
        break;
      }
      Timeout::stop();
    2678:	1f 92       	push	r1
    267a:	0f 92       	push	r0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:85
      D1PRINTF("[TO]");
      if (!fail_p) break;
    267c:	0f b6       	in	r0, 0x3f	; 63
    267e:	0f 92       	push	r0
    2680:	11 24       	eor	r1, r1
    2682:	8f 93       	push	r24
    2684:	8f ef       	ldi	r24, 0xFF	; 255
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:86
      wdt_reset();
    2686:	80 93 c7 01 	sts	0x01C7, r24	; 0x8001c7 <__TEXT_REGION_LENGTH__+0x7f01c7>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:87
      if (!(*fail_p)()) break;
    268a:	f7 9a       	sbi	0x1e, 7	; 30
    268c:	8f 91       	pop	r24
    268e:	0f 90       	pop	r0
    2690:	0f be       	out	0x3f, r0	; 63
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:524
  /* SW0 Raising Interrupt */
  vportRegister(PIN_SYS_SW0).INTFLAGS = ~0;
  bit_set(GPCONF, GPCONF_RIS_bp);
}

ISR(CCL_CCL_vect) {
    2692:	0f 90       	pop	r0
    2694:	1f 90       	pop	r1
    2696:	18 95       	reti

00002698 <__vector_24>:
__vector_24():
    2698:	1f 92       	push	r1
    269a:	0f 92       	push	r0
    269c:	0f b6       	in	r0, 0x3f	; 63
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:526
  /* SW0 Falling Intrrupt from CCL2 */
  CCL_INTFLAGS = ~0;
    269e:	0f 92       	push	r0
    26a0:	11 24       	eor	r1, r1
    26a2:	8f 93       	push	r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:527
  bit_set(GPCONF, GPCONF_FAL_bp);
    26a4:	8f ef       	ldi	r24, 0xFF	; 255
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:528
}
    26a6:	87 bb       	out	0x17, r24	; 23
    26a8:	f6 9a       	sbi	0x1e, 6	; 30
    26aa:	8f 91       	pop	r24
    26ac:	0f 90       	pop	r0
    26ae:	0f be       	out	0x3f, r0	; 63
    26b0:	0f 90       	pop	r0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:518

};

#if defined(PIN_SYS_SW0)
/* If the level is not maintained for a sufficient period of time it will not function properly. */
ISR(portIntrruptVector(PIN_SYS_SW0)) {
    26b2:	1f 90       	pop	r1
    26b4:	18 95       	reti

000026b6 <main>:
main():
    26b6:	cf 93       	push	r28
    26b8:	df 93       	push	r29
    26ba:	cd b7       	in	r28, 0x3d	; 61
    26bc:	de b7       	in	r29, 0x3e	; 62
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:520
  /* SW0 Raising Interrupt */
  vportRegister(PIN_SYS_SW0).INTFLAGS = ~0;
    26be:	25 97       	sbiw	r28, 0x05	; 5
    26c0:	cd bf       	out	0x3d, r28	; 61
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:521
  bit_set(GPCONF, GPCONF_RIS_bp);
    26c2:	de bf       	out	0x3e, r29	; 62
setup():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:522
}
    26c4:	80 e7       	ldi	r24, 0x70	; 112
    26c6:	80 b9       	out	0x00, r24	; 0
    26c8:	47 e3       	ldi	r20, 0x37	; 55
    26ca:	4c b9       	out	0x0c, r20	; 12
    26cc:	24 e0       	ldi	r18, 0x04	; 4
    26ce:	24 bb       	out	0x14, r18	; 20
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:162
    VPORTA_DIR = 0b01110000;    /* 6:PCLK 5:VPW 4:PDAT */
    VPORTD_DIR = 0b00110111;    /* 5:HVCP2 4:HVCP1 2:HVSL3 1:HVSL2 0:HVSL1 */
    VPORTF_DIR = 0b00000100;    /* 2:LED0 */

    /* Pull-Up GPIO */
    pinControlRegister(PIN_VCP_TXD)      = PORT_PULLUPEN_bm;
    26d0:	98 e0       	ldi	r25, 0x08	; 8
    26d2:	90 93 12 04 	sts	0x0412, r25	; 0x800412 <__TEXT_REGION_LENGTH__+0x7f0412>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:163
    pinControlRegister(PIN_VCP_RXD)      = PORT_PULLUPEN_bm;
    26d6:	90 93 13 04 	sts	0x0413, r25	; 0x800413 <__TEXT_REGION_LENGTH__+0x7f0413>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:164
    pinControlRegister(PIN_PGM_TDAT)     = PORT_PULLUPEN_bm;
    26da:	90 93 10 04 	sts	0x0410, r25	; 0x800410 <__TEXT_REGION_LENGTH__+0x7f0410>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:165
    pinControlRegister(PIN_PGM_TRST)     = PORT_PULLUPEN_bm;
    26de:	90 93 11 04 	sts	0x0411, r25	; 0x800411 <__TEXT_REGION_LENGTH__+0x7f0411>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:166
    pinControlRegister(PIN_PGM_PDAT)     = 0;
    26e2:	10 92 14 04 	sts	0x0414, r1	; 0x800414 <__TEXT_REGION_LENGTH__+0x7f0414>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:167
    pinControlRegister(PIN_PGM_PCLK)     = 0;
    26e6:	10 92 16 04 	sts	0x0416, r1	; 0x800416 <__TEXT_REGION_LENGTH__+0x7f0416>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:168
    pinControlRegister(PIN_SYS_SW0)      = PORT_PULLUPEN_bm | PORT_ISC_RISING_gc;
    26ea:	8a e0       	ldi	r24, 0x0A	; 10
    26ec:	80 93 b6 04 	sts	0x04B6, r24	; 0x8004b6 <__TEXT_REGION_LENGTH__+0x7f04b6>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:169
    pinControlRegister(PIN_SYS_LED0)     = PORT_INVEN_bm    | PORT_ISC_INPUT_DISABLE_gc;
    26f0:	84 e8       	ldi	r24, 0x84	; 132
    26f2:	80 93 b2 04 	sts	0x04B2, r24	; 0x8004b2 <__TEXT_REGION_LENGTH__+0x7f04b2>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:170
    pinControlRegister(PIN_HVC_CHGPUMP1) = PORT_INVEN_bm    | PORT_ISC_INPUT_DISABLE_gc;
    26f6:	80 93 74 04 	sts	0x0474, r24	; 0x800474 <__TEXT_REGION_LENGTH__+0x7f0474>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:173

    /* PORTx event generator */
    portRegister(PIN_SYS_SW0).EVGENCTRLA = pinPosition(PIN_SYS_SW0);
    26fa:	86 e0       	ldi	r24, 0x06	; 6
    26fc:	80 93 b8 04 	sts	0x04B8, r24	; 0x8004b8 <__TEXT_REGION_LENGTH__+0x7f04b8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:174
    portRegister(PIN_VCP_RXD).EVGENCTRLA = pinPosition(PIN_VCP_RXD) << 4;
    2700:	30 e3       	ldi	r19, 0x30	; 48
    2702:	30 93 18 04 	sts	0x0418, r19	; 0x800418 <__TEXT_REGION_LENGTH__+0x7f0418>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:177

    /*** Multiplexer ***/
    PORTMUX_TCAROUTEA     = PORTMUX_TCA0_PORTD_gc;          /* TCA0_WOn_ALT3 -> PORTD */
    2706:	53 e0       	ldi	r21, 0x03	; 3
    2708:	50 93 e7 05 	sts	0x05E7, r21	; 0x8005e7 <__TEXT_REGION_LENGTH__+0x7f05e7>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:178
    EVSYS_CHANNEL3        = EVSYS_CHANNEL_CCL_LUT2_gc;      /* <- LED0 */
    270c:	32 e1       	ldi	r19, 0x12	; 18
    270e:	30 93 13 02 	sts	0x0213, r19	; 0x800213 <__TEXT_REGION_LENGTH__+0x7f0213>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:179
    EVSYS_CHANNEL4        = EVSYS_CHANNEL_PORTA_EVGEN1_gc;  /* <- VRxD */
    2712:	31 e4       	ldi	r19, 0x41	; 65
    2714:	30 93 14 02 	sts	0x0214, r19	; 0x800214 <__TEXT_REGION_LENGTH__+0x7f0214>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:180
    EVSYS_CHANNEL5        = EVSYS_CHANNEL_PORTF_EVGEN0_gc;  /* <- SW0  */
    2718:	6a e4       	ldi	r22, 0x4A	; 74
    271a:	60 93 15 02 	sts	0x0215, r22	; 0x800215 <__TEXT_REGION_LENGTH__+0x7f0215>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:181
    EVSYS_USEREVSYSEVOUTF = EVSYS_USER_CHANNEL3_gc;         /* LED0 -> EVOUTF:PIN_PF2 */
    271e:	20 93 2b 02 	sts	0x022B, r18	; 0x80022b <__TEXT_REGION_LENGTH__+0x7f022b>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:182
    EVSYS_USERCCLLUT3A    = EVSYS_USER_CHANNEL4_gc;         /* <- VRxD */
    2722:	25 e0       	ldi	r18, 0x05	; 5
    2724:	20 93 26 02 	sts	0x0226, r18	; 0x800226 <__TEXT_REGION_LENGTH__+0x7f0226>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:183
    EVSYS_USERCCLLUT0A    = EVSYS_USER_CHANNEL5_gc;         /* <- SW0 */
    2728:	80 93 20 02 	sts	0x0220, r24	; 0x800220 <__TEXT_REGION_LENGTH__+0x7f0220>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:186

    /*** SW0 FALLING Interrupt generator ***/
    CCL_TRUTH0    = CCL_TRUTH_1_bm;
    272c:	22 e0       	ldi	r18, 0x02	; 2
    272e:	20 93 cb 01 	sts	0x01CB, r18	; 0x8001cb <__TEXT_REGION_LENGTH__+0x7f01cb>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:187
    CCL_LUT0CTRLB = CCL_INSEL0_EVENTA_gc;                         /* <- CH5 */
    2732:	50 93 c9 01 	sts	0x01C9, r21	; 0x8001c9 <__TEXT_REGION_LENGTH__+0x7f01c9>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:188
    CCL_LUT0CTRLA = CCL_ENABLE_bm | CCL_FILTSEL_FILTER_gc;
    2736:	51 e2       	ldi	r21, 0x21	; 33
    2738:	50 93 c8 01 	sts	0x01C8, r21	; 0x8001c8 <__TEXT_REGION_LENGTH__+0x7f01c8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:189
    CCL_INTCTRL0  = CCL_INTMODE0_FALLING_gc;
    273c:	20 93 c5 01 	sts	0x01C5, r18	; 0x8001c5 <__TEXT_REGION_LENGTH__+0x7f01c5>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:192

    /*** LED1 generator ***/
    CCL_TRUTH3    = CCL_TRUTH_0_bm       | CCL_TRUTH_1_bm | CCL_TRUTH_2_bm;
    2740:	57 e0       	ldi	r21, 0x07	; 7
    2742:	50 93 d7 01 	sts	0x01D7, r21	; 0x8001d7 <__TEXT_REGION_LENGTH__+0x7f01d7>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:193
    CCL_LUT3CTRLB = CCL_INSEL0_USART0_gc | CCL_INSEL1_EVENTA_gc;  /* <- CH4 */
    2746:	40 93 d5 01 	sts	0x01D5, r20	; 0x8001d5 <__TEXT_REGION_LENGTH__+0x7f01d5>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:194
    CCL_LUT3CTRLA = CCL_ENABLE_bm        | CCL_OUTEN_bm;          /* -> PIN_PF3 */
    274a:	30 93 d4 01 	sts	0x01D4, r19	; 0x8001d4 <__TEXT_REGION_LENGTH__+0x7f01d4>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:197

    /*** LED0 Heart-Beat generator ***/
    CCL_TRUTH2    = CCL_TRUTH_1_bm     | CCL_TRUTH_2_bm;
    274e:	80 93 d3 01 	sts	0x01D3, r24	; 0x8001d3 <__TEXT_REGION_LENGTH__+0x7f01d3>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:198
    CCL_LUT2CTRLB = CCL_INSEL0_TCA0_gc | CCL_INSEL1_TCB1_gc;
    2752:	89 ea       	ldi	r24, 0xA9	; 169
    2754:	80 93 d1 01 	sts	0x01D1, r24	; 0x8001d1 <__TEXT_REGION_LENGTH__+0x7f01d1>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:199
    CCL_LUT2CTRLA = CCL_ENABLE_bm;                                /* -> CH3 */
    2758:	81 e0       	ldi	r24, 0x01	; 1
    275a:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <__TEXT_REGION_LENGTH__+0x7f01d0>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:248

  #endif

    /*** CCL enable ***/
    /* One of the CCL's is the LED output control. */
    CCL_CTRLA = CCL_ENABLE_bm;
    275e:	80 93 c0 01 	sts	0x01C0, r24	; 0x8001c0 <__TEXT_REGION_LENGTH__+0x7f01c0>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:255
    /*** TCA0 ***/
    /* TCA0 is split into two 8-bit timers. */
    /* The lower timer controls the blinking rate of the LED. */
    /* The top timer is used as a period timer */
    /* and as the output for the charge pump.  */
    TCA0_SPLIT_CTRLD = TCA_SPLIT_SPLITM_bm;
    2762:	80 93 03 0a 	sts	0x0A03, r24	; 0x800a03 <__TEXT_REGION_LENGTH__+0x7f0a03>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:256
    TCA0_SPLIT_LPER  = TCA0_STEP - 2;
    2766:	33 ec       	ldi	r19, 0xC3	; 195
    2768:	30 93 26 0a 	sts	0x0A26, r19	; 0x800a26 <__TEXT_REGION_LENGTH__+0x7f0a26>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:257
    TCA0_SPLIT_LCMP0 = TCA0_STEP / 2;
    276c:	32 e6       	ldi	r19, 0x62	; 98
    276e:	30 93 28 0a 	sts	0x0A28, r19	; 0x800a28 <__TEXT_REGION_LENGTH__+0x7f0a28>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:264
    /*** TCB0 ***/
    /* The TCB0 timer is configured in the <timeout.cpp> module. */

    /*** TCB1 ***/
    /* TCB1 is used to control the LED blinking rate. */
    TCB1_CTRLB = TCB_ASYNC_bm | TCB_CNTMODE_PWM8_gc;
    2772:	37 e4       	ldi	r19, 0x47	; 71
    2774:	30 93 11 0b 	sts	0x0B11, r19	; 0x800b11 <__TEXT_REGION_LENGTH__+0x7f0b11>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:265
    TCB1_CCMP  = TCB1_FLASH;
    2778:	49 ea       	ldi	r20, 0xA9	; 169
    277a:	55 e0       	ldi	r21, 0x05	; 5
    277c:	40 93 1c 0b 	sts	0x0B1C, r20	; 0x800b1c <__TEXT_REGION_LENGTH__+0x7f0b1c>
    2780:	50 93 1d 0b 	sts	0x0B1D, r21	; 0x800b1d <__TEXT_REGION_LENGTH__+0x7f0b1d>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:266
    TCB1_CTRLA = TCB_ENABLE_bm | TCB_CLKSEL_EVENT_gc;
    2784:	3f e0       	ldi	r19, 0x0F	; 15
    2786:	30 93 10 0b 	sts	0x0B10, r19	; 0x800b10 <__TEXT_REGION_LENGTH__+0x7f0b10>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:25
#include "prototype.h"

namespace Timeout {

  void setup (void) {
    RTC_PITEVGENCTRLA = RTC_EVGEN0SEL_DIV32_gc | RTC_EVGEN1SEL_DIV128_gc;
    278a:	34 e6       	ldi	r19, 0x64	; 100
    278c:	30 93 56 01 	sts	0x0156, r19	; 0x800156 <__TEXT_REGION_LENGTH__+0x7f0156>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:26
    EVSYS_CHANNEL0 = EVSYS_CHANNEL_RTC_EVGEN0_gc; /* 1024Hz periodic.  */
    2790:	90 93 10 02 	sts	0x0210, r25	; 0x800210 <__TEXT_REGION_LENGTH__+0x7f0210>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:27
    EVSYS_CHANNEL1 = EVSYS_CHANNEL_RTC_EVGEN1_gc; /* 32Hz periodic.    */
    2794:	99 e0       	ldi	r25, 0x09	; 9
    2796:	90 93 11 02 	sts	0x0211, r25	; 0x800211 <__TEXT_REGION_LENGTH__+0x7f0211>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:28
    EVSYS_USERTCB0COUNT = EVSYS_USER_CHANNEL0_gc; /* TCB0_CLK = 1024Hz */
    279a:	80 93 31 02 	sts	0x0231, r24	; 0x800231 <__TEXT_REGION_LENGTH__+0x7f0231>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:29
    EVSYS_USERTCB1COUNT = EVSYS_USER_CHANNEL1_gc; /* TCB1_CLK = 32Hz   */
    279e:	20 93 33 02 	sts	0x0233, r18	; 0x800233 <__TEXT_REGION_LENGTH__+0x7f0233>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:30
    RTC_PITCTRLA = RTC_PITEN_bm;
    27a2:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <__TEXT_REGION_LENGTH__+0x7f0150>
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/main.cpp:97
  D1PRINTF("_AVR_IOXXX_H_ = " _AVR_IOXXX_H_ "\r\n");
  D1PRINTF("__AVR_ARCH__ = %d\r\n", __AVR_ARCH__);
  DFLUSH();
#endif

  USART::setup();
    27a6:	0e 94 7a 0a 	call	0x14f4	; 0x14f4 <USART::setup()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/main.cpp:99

  loop_until_bit_is_clear(WDT_STATUS, WDT_SYNCBUSY_bp);
    27aa:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <__TEXT_REGION_LENGTH__+0x7f0101>
    27ae:	80 fd       	sbrc	r24, 0
    27b0:	fc cf       	rjmp	.-8      	; 0x27aa <main+0xf4>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/main.cpp:100
  _PROTECTED_WRITE(WDT_CTRLA, WDT_PERIOD_1KCLK_gc);
    27b2:	88 ed       	ldi	r24, 0xD8	; 216
    27b4:	98 e0       	ldi	r25, 0x08	; 8
    27b6:	84 bf       	out	0x34, r24	; 52
    27b8:	90 93 00 01 	sts	0x0100, r25	; 0x800100 <__TEXT_REGION_LENGTH__+0x7f0100>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/main.cpp:104

  #if defined(PIN_SYS_SW0)
  /* Clear the dirty flag before enabling interrupts. */
  vportRegister(PIN_SYS_SW0).INTFLAGS = ~0;
    27bc:	8f ef       	ldi	r24, 0xFF	; 255
    27be:	87 bb       	out	0x17, r24	; 23
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/main.cpp:105
  CCL_INTFLAGS = ~0;
    27c0:	80 93 c7 01 	sts	0x01C7, r24	; 0x8001c7 <__TEXT_REGION_LENGTH__+0x7f01c7>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/main.cpp:107
  #endif
  interrupts();
    27c4:	78 94       	sei
delay_millis():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/delay_busywait.h:42
  }
}

void delay_millis (uint32_t _ms) {
  if (F_CPU >= 1000000L) {
    __builtin_avr_delay_cycles((F_CPU / 1000L) * _ms);
    27c6:	2f e1       	ldi	r18, 0x1F	; 31
    27c8:	41 ea       	ldi	r20, 0xA1	; 161
    27ca:	87 e0       	ldi	r24, 0x07	; 7
    27cc:	21 50       	subi	r18, 0x01	; 1
    27ce:	40 40       	sbci	r20, 0x00	; 0
    27d0:	80 40       	sbci	r24, 0x00	; 0
    27d2:	e1 f7       	brne	.-8      	; 0x27cc <main+0x116>
    27d4:	00 c0       	rjmp	.+0      	; 0x27d6 <main+0x120>
    27d6:	00 00       	nop
    27d8:	9f e1       	ldi	r25, 0x1F	; 31
    27da:	e1 ea       	ldi	r30, 0xA1	; 161
    27dc:	f7 e0       	ldi	r31, 0x07	; 7
    27de:	91 50       	subi	r25, 0x01	; 1
    27e0:	e0 40       	sbci	r30, 0x00	; 0
    27e2:	f0 40       	sbci	r31, 0x00	; 0
    27e4:	e1 f7       	brne	.-8      	; 0x27de <main+0x128>
    27e6:	00 c0       	rjmp	.+0      	; 0x27e8 <main+0x132>
    27e8:	00 00       	nop
setup_device():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:237
    EP_MEM.cci_header.wLength       = 2;
    EP_MEM.cci_wValue               = _state;
  }

  void setup_device (bool _force) {
    if (_led_mode != 3) SYS::LED_Flash();
    27ea:	80 91 a1 60 	lds	r24, 0x60A1	; 0x8060a1 <_led_mode>
    27ee:	83 30       	cpi	r24, 0x03	; 3
    27f0:	11 f0       	breq	.+4      	; 0x27f6 <main+0x140>
    27f2:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <SYS::LED_Flash()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:238
    USB0_ADDR = 0;
    27f6:	10 92 03 0c 	sts	0x0C03, r1	; 0x800c03 <__TEXT_REGION_LENGTH__+0x7f0c03>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:239
    if (USB0_CTRLA || _force) {
    27fa:	80 91 00 0c 	lds	r24, 0x0C00	; 0x800c00 <__TEXT_REGION_LENGTH__+0x7f0c00>
    27fe:	0e 94 25 0a 	call	0x144a	; 0x144a <USB::setup_device(bool) [clone .part.2]>
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/main.cpp:120
  SYS::LED_Flash();
  #endif

  /* From here on, it's an endless loop. */
  D1PRINTF("<WAITING>\r\n");
  bool _wdt = true;
    2802:	ff 24       	eor	r15, r15
    2804:	f3 94       	inc	r15
request_class():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:603
    else if (bRequest == 0x21) {  /* GET_LINE_ENCODING */
      memcpy(&EP_MEM.res_encoding, &_set_line_encoding, sizeof(LineEncoding_t));
      if (EP_MEM.res_encoding.dwDTERate == 0) {
        /* Parameters that, if incorrectly accepted,           */
        /* would result in division by zero must be corrected. */
        EP_MEM.res_encoding.dwDTERate = 9600UL;
    2806:	b0 e8       	ldi	r27, 0x80	; 128
    2808:	8b 2e       	mov	r8, r27
    280a:	b5 e2       	ldi	r27, 0x25	; 37
    280c:	9b 2e       	mov	r9, r27
    280e:	a1 2c       	mov	r10, r1
    2810:	b1 2c       	mov	r11, r1
request_standard():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:558
    }
    else if (bRequest == 0x0A) {  /* GET_INTREFACE */
      /* It seems not to be used. */
      D1PRINTF("<SI:0>\r\n");
      EP_MEM.res_data[0] = 0;
      EP_RES.CNT = 1;
    2812:	cc 24       	eor	r12, r12
    2814:	c3 94       	inc	r12
    2816:	d1 2c       	mov	r13, r1
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:171
      _pgmem = (uint8_t*)&current_descriptor;
      _size = sizeof(current_descriptor);
    }
    else if (_type == 0x06) {     /* QUALIFIER */
      _pgmem = (uint8_t*)&qualifier_descriptor;
      _size = sizeof(qualifier_descriptor);
    2818:	0a e0       	ldi	r16, 0x0A	; 10
    281a:	40 2e       	mov	r4, r16
    281c:	51 2c       	mov	r5, r1
    281e:	3e 01       	movw	r6, r28
    2820:	25 e0       	ldi	r18, 0x05	; 5
    2822:	62 0e       	add	r6, r18
    2824:	71 1c       	adc	r7, r1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/main.cpp:122
  while (true) {
    if (_wdt) wdt_reset();
    2826:	ff 20       	and	r15, r15
    2828:	19 f0       	breq	.+6      	; 0x2830 <main+0x17a>
    282a:	a8 95       	wdr
    282c:	ff 24       	eor	r15, r15
    282e:	f3 94       	inc	r15
handling_bus_events():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:665

  /*** This process is equivalent to a bus interrupt. ***/
  /* The reason for using polling is to prioritize VCP performance. */
  /* The trade-off is that power standby is not available. */
  void handling_bus_events (void) {
    uint8_t busstate = USB0_INTFLAGSA;
    2830:	10 91 0a 0c 	lds	r17, 0x0C0A	; 0x800c0a <__TEXT_REGION_LENGTH__+0x7f0c0a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:666
    USB0_INTFLAGSA = busstate;
    2834:	10 93 0a 0c 	sts	0x0C0A, r17	; 0x800c0a <__TEXT_REGION_LENGTH__+0x7f0c0a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:691
    }
    if (bit_is_set(busstate, USB_RESUME_bp)) {
      D1PRINTF("<RESUME:%04X>\r\n", USB0_ADDR);
    }
  #endif
    if (bit_is_set(busstate, USB_SOF_bp)) {
    2838:	17 ff       	sbrs	r17, 7
    283a:	14 c0       	rjmp	.+40     	; 0x2864 <main+0x1ae>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:693
      /* If there is deferred data for a block transfer, it is sent here. */
      if (_sof_count > 0 && 0 == (--_sof_count)) {
    283c:	80 91 62 64 	lds	r24, 0x6462	; 0x806462 <_sof_count>
    2840:	88 23       	and	r24, r24
    2842:	81 f0       	breq	.+32     	; 0x2864 <main+0x1ae>
    2844:	80 91 62 64 	lds	r24, 0x6462	; 0x806462 <_sof_count>
    2848:	81 50       	subi	r24, 0x01	; 1
    284a:	80 93 62 64 	sts	0x6462, r24	; 0x806462 <_sof_count>
    284e:	81 11       	cpse	r24, r1
    2850:	09 c0       	rjmp	.+18     	; 0x2864 <main+0x1ae>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:694
        if (bit_is_set(EP_CDI.STATUS, USB_BUSNAK_bp) && _send_count > 0) {
    2852:	80 91 a8 64 	lds	r24, 0x64A8	; 0x8064a8 <EP_TABLE+0x40>
    2856:	81 ff       	sbrs	r24, 1
    2858:	05 c0       	rjmp	.+10     	; 0x2864 <main+0x1ae>
    285a:	80 91 65 64 	lds	r24, 0x6465	; 0x806465 <_send_count>
    285e:	81 11       	cpse	r24, r1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:695
          ep_cdi_listen();
    2860:	0e 94 8f 01 	call	0x31e	; 0x31e <USB::ep_cdi_listen()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:700
        }
      }
    }
    if (bit_is_set(busstate, USB_SUSPEND_bp)
     || bit_is_set(busstate, USB_RESUME_bp)) {
    2864:	81 2f       	mov	r24, r17
    2866:	80 76       	andi	r24, 0x60	; 96
    2868:	49 f0       	breq	.+18     	; 0x287c <main+0x1c6>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:703
      /* This implementation does not transition to power saving mode. */
      /* This is only passed when the USB cable is unplugged. */
      if (bit_is_set(GPCONF, GPCONF_USB_bp)) {
    286a:	f0 9b       	sbis	0x1e, 0	; 30
    286c:	06 c0       	rjmp	.+12     	; 0x287a <main+0x1c4>
reboot():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:429
   * Always run it after the USB has stopped.
   */
  void reboot (void) {
    D1PRINTF("<REBOOT>\r\n");
    DFLUSH();
    _PROTECTED_WRITE(WDT_CTRLA, WDT_PERIOD_8CLK_gc);
    286e:	88 ed       	ldi	r24, 0xD8	; 216
    2870:	91 e0       	ldi	r25, 0x01	; 1
    2872:	84 bf       	out	0x34, r24	; 52
    2874:	90 93 00 01 	sts	0x0100, r25	; 0x800100 <__TEXT_REGION_LENGTH__+0x7f0100>
    2878:	ff cf       	rjmp	.-2      	; 0x2878 <main+0x1c2>
handling_bus_events():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:707
        /* System reboot */
        SYS::reboot();
      }
      bit_set(busstate, USB_RESET_bp);
    287a:	10 61       	ori	r17, 0x10	; 16
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:709
    }
    if (bit_is_set(busstate, USB_RESET_bp)) {
    287c:	14 ff       	sbrs	r17, 4
    287e:	0d c0       	rjmp	.+26     	; 0x289a <main+0x1e4>
setup_device():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:237
    EP_MEM.cci_header.wLength       = 2;
    EP_MEM.cci_wValue               = _state;
  }

  void setup_device (bool _force) {
    if (_led_mode != 3) SYS::LED_Flash();
    2880:	80 91 a1 60 	lds	r24, 0x60A1	; 0x8060a1 <_led_mode>
    2884:	83 30       	cpi	r24, 0x03	; 3
    2886:	11 f0       	breq	.+4      	; 0x288c <main+0x1d6>
    2888:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <SYS::LED_Flash()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:238
    USB0_ADDR = 0;
    288c:	10 92 03 0c 	sts	0x0C03, r1	; 0x800c03 <__TEXT_REGION_LENGTH__+0x7f0c03>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:239
    if (USB0_CTRLA || _force) {
    2890:	80 91 00 0c 	lds	r24, 0x0C00	; 0x800c00 <__TEXT_REGION_LENGTH__+0x7f0c00>
    2894:	81 11       	cpse	r24, r1
    2896:	0e 94 25 0a 	call	0x144a	; 0x144a <USB::setup_device(bool) [clone .part.2]>
is_ep_setup():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:260
    }
  }

  // MARK: Endpoint

  bool is_ep_setup (void) { return bit_is_set(EP_REQ.STATUS, USB_EPSETUP_bp); }
    289a:	80 91 70 64 	lds	r24, 0x6470	; 0x806470 <EP_TABLE+0x8>
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/main.cpp:126

    /*** USB control handling ***/
    USB::handling_bus_events();
    if (USB::is_ep_setup()) USB::handling_control_transactions();
    289e:	84 ff       	sbrs	r24, 4
    28a0:	a5 c0       	rjmp	.+330    	; 0x29ec <main+0x336>
handling_control_transactions():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:636
  /*** Accept the EP0 setup packet. ***/
  /* This process is equivalent to a endpoint interrupt. */
  /* The reason for using polling is to prioritize VCP performance. */
  void handling_control_transactions (void) {
    bool _listen = false;
    uint8_t bmRequestType = EP_MEM.req_data.bmRequestType;
    28a2:	10 91 4a 63 	lds	r17, 0x634A	; 0x80634a <EP_MEM>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:641
    D1PRINTF("RQ=%02X:%04X:%02X:%02X:%04X:%04X:%04X\r\n",
      EP_REQ.STATUS, EP_REQ.CNT, EP_MEM.req_data.bmRequestType, EP_MEM.req_data.bRequest,
      EP_MEM.req_data.wValue, EP_MEM.req_data.wIndex, EP_MEM.req_data.wLength);
    /* Accepts subsequent EP0_DATA packets as needed. */
    if (bit_is_clear(bmRequestType, 7)) ep_req_listen();
    28a6:	17 ff       	sbrs	r17, 7
    28a8:	0e 94 cf 01 	call	0x39e	; 0x39e <USB::ep_req_listen()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:642
    bmRequestType &= (3 << 5);
    28ac:	10 76       	andi	r17, 0x60	; 96
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:643
    if (bmRequestType == (0 << 5)) {
    28ae:	09 f0       	breq	.+2      	; 0x28b2 <main+0x1fc>
    28b0:	e2 c1       	rjmp	.+964    	; 0x2c76 <main+0x5c0>
request_standard():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:505
  // MARK: USB Session

  /*** USB Standard Request Enumeration. ***/
  bool request_standard (void) {
    bool _listen = true;
    uint8_t bRequest = EP_MEM.req_data.bRequest;
    28b2:	80 91 4b 63 	lds	r24, 0x634B	; 0x80634b <EP_MEM+0x1>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:506
    if (bRequest == 0x00) {       /* GET_STATUS */
    28b6:	81 11       	cpse	r24, r1
    28b8:	0f c0       	rjmp	.+30     	; 0x28d8 <main+0x222>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:507
      EP_MEM.res_data[0] = 0;
    28ba:	10 92 52 63 	sts	0x6352, r1	; 0x806352 <EP_MEM+0x8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:508
      EP_MEM.res_data[1] = 0;
    28be:	10 92 53 63 	sts	0x6353, r1	; 0x806353 <EP_MEM+0x9>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:509
      EP_RES.CNT = 2;
    28c2:	82 e0       	ldi	r24, 0x02	; 2
    28c4:	90 e0       	ldi	r25, 0x00	; 0
    28c6:	80 93 7a 64 	sts	0x647A, r24	; 0x80647a <EP_TABLE+0x12>
    28ca:	90 93 7b 64 	sts	0x647B, r25	; 0x80647b <EP_TABLE+0x13>
handling_control_transactions():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:655
    else if (bmRequestType == (2 << 5)) {
      _listen = request_vendor();
    }
  #endif
    if (_listen) {
      ep_res_listen();
    28ce:	0e 94 c3 01 	call	0x386	; 0x386 <USB::ep_res_listen()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:656
      ep_req_listen();
    28d2:	0e 94 cf 01 	call	0x39e	; 0x39e <USB::ep_req_listen()>
    28d6:	85 c0       	rjmp	.+266    	; 0x29e2 <main+0x32c>
request_standard():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:511
    if (bRequest == 0x00) {       /* GET_STATUS */
      EP_MEM.res_data[0] = 0;
      EP_MEM.res_data[1] = 0;
      EP_RES.CNT = 2;
    }
    else if (bRequest == 0x01) {  /* CLEAR_FEATURE */
    28d8:	81 30       	cpi	r24, 0x01	; 1
    28da:	c9 f4       	brne	.+50     	; 0x290e <main+0x258>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:513
      D1PRINTF(" CF=%02X:%02X\r\n", EP_MEM.req_data.wValue, EP_MEM.req_data.wIndex);
      if (0 == (uint8_t)EP_MEM.req_data.wValue) {
    28dc:	80 91 4c 63 	lds	r24, 0x634C	; 0x80634c <EP_MEM+0x2>
    28e0:	81 11       	cpse	r24, r1
    28e2:	10 c0       	rjmp	.+32     	; 0x2904 <main+0x24e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:516
        /* Expects an endpoint number to be passed in. Swaps the high and low */
        /* nibbles to make it a representation of the USB controller. */
        uint8_t _EP = USB_EP_ID_SWAP(EP_MEM.req_data.wIndex);
    28e4:	e0 91 4e 63 	lds	r30, 0x634E	; 0x80634e <EP_MEM+0x4>
    28e8:	e2 95       	swap	r30
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:517
        loop_until_bit_is_clear(USB0_INTFLAGSB, USB_RMWBUSY_bp);
    28ea:	80 91 0b 0c 	lds	r24, 0x0C0B	; 0x800c0b <__TEXT_REGION_LENGTH__+0x7f0c0b>
    28ee:	82 fd       	sbrc	r24, 2
    28f0:	fc cf       	rjmp	.-8      	; 0x28ea <main+0x234>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:518
        USB_EP_STATUS_CLR(_EP) = USB_STALLED_bm | USB_BUSNAK_bm | USB_TOGGLE_bm;
    28f2:	f0 e0       	ldi	r31, 0x00	; 0
    28f4:	f5 95       	asr	r31
    28f6:	e7 95       	ror	r30
    28f8:	f5 95       	asr	r31
    28fa:	e7 95       	ror	r30
    28fc:	e0 5c       	subi	r30, 0xC0	; 192
    28fe:	f3 4f       	sbci	r31, 0xF3	; 243
    2900:	8b e0       	ldi	r24, 0x0B	; 11
    2902:	80 83       	st	Z, r24
request_class():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:623
      /* Nothing else is used unless programmed by the application. */
      D1PRINTF(" SB=%04X\r\n", EP_MEM.req_data.wValue);
      _send_break = EP_MEM.req_data.wValue;
      if (_send_break) break_on();
      else break_off();
      EP_RES.CNT = 0;
    2904:	10 92 7a 64 	sts	0x647A, r1	; 0x80647a <EP_TABLE+0x12>
    2908:	10 92 7b 64 	sts	0x647B, r1	; 0x80647b <EP_TABLE+0x13>
    290c:	e0 cf       	rjmp	.-64     	; 0x28ce <main+0x218>
request_standard():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:522
        loop_until_bit_is_clear(USB0_INTFLAGSB, USB_RMWBUSY_bp);
        USB_EP_STATUS_CLR(_EP) = USB_STALLED_bm | USB_BUSNAK_bm | USB_TOGGLE_bm;
      }
      EP_RES.CNT = 0;
    }
    else if (bRequest == 0x04) {  /* SET_FEATURE */
    290e:	84 30       	cpi	r24, 0x04	; 4
    2910:	c9 f3       	breq	.-14     	; 0x2904 <main+0x24e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:527
      /* If used, it will be ignored. */
      D1PRINTF(" SF=%02X:%02X\r\n", EP_MEM.req_data.wValue, EP_MEM.req_data.wIndex);
      EP_RES.CNT = 0;
    }
    else if (bRequest == 0x05) {  /* SET_ADDRESS */
    2912:	85 30       	cpi	r24, 0x05	; 5
    2914:	61 f4       	brne	.+24     	; 0x292e <main+0x278>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:528
      uint8_t _addr = EP_MEM.req_data.wValue & 0x7F;
    2916:	10 91 4c 63 	lds	r17, 0x634C	; 0x80634c <EP_MEM+0x2>
    291a:	1f 77       	andi	r17, 0x7F	; 127
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:529
      ep_res_listen();
    291c:	0e 94 c3 01 	call	0x386	; 0x386 <USB::ep_res_listen()>
ep_res_pending():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:263
  // MARK: Endpoint

  bool is_ep_setup (void) { return bit_is_set(EP_REQ.STATUS, USB_EPSETUP_bp); }
  bool is_not_dap (void) { return bit_is_clear(EP_DPO.STATUS, USB_BUSNAK_bp); }
  void ep_req_pending (void) { loop_until_bit_is_set(EP_REQ.STATUS, USB_BUSNAK_bp); }
  void ep_res_pending (void) { loop_until_bit_is_set(EP_RES.STATUS, USB_BUSNAK_bp); }
    2920:	80 91 78 64 	lds	r24, 0x6478	; 0x806478 <EP_TABLE+0x10>
    2924:	81 ff       	sbrs	r24, 1
    2926:	fc cf       	rjmp	.-8      	; 0x2920 <main+0x26a>
request_standard():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:531
    }
    else if (bRequest == 0x05) {  /* SET_ADDRESS */
      uint8_t _addr = EP_MEM.req_data.wValue & 0x7F;
      ep_res_listen();
      ep_res_pending();
      USB0_ADDR = _addr;
    2928:	10 93 03 0c 	sts	0x0C03, r17	; 0x800c03 <__TEXT_REGION_LENGTH__+0x7f0c03>
    292c:	eb cf       	rjmp	.-42     	; 0x2904 <main+0x24e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:535
      D1PRINTF(" USB0_ADDR=%d\r\n", _addr);
      EP_RES.CNT = 0;
    }
    else if (bRequest == 0x06) {  /* GET_DESCRIPTOR */
    292e:	86 30       	cpi	r24, 0x06	; 6
    2930:	09 f0       	breq	.+2      	; 0x2934 <main+0x27e>
    2932:	83 c1       	rjmp	.+774    	; 0x2c3a <main+0x584>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:536
      size_t _length = EP_MEM.req_data.wLength;
    2934:	e0 90 50 63 	lds	r14, 0x6350	; 0x806350 <EP_MEM+0x6>
    2938:	30 90 51 63 	lds	r3, 0x6351	; 0x806351 <EP_MEM+0x7>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:537
      size_t _size = get_descriptor((uint8_t*)&EP_MEM.res_data, EP_MEM.req_data.wValue);
    293c:	80 91 4c 63 	lds	r24, 0x634C	; 0x80634c <EP_MEM+0x2>
    2940:	90 91 4d 63 	lds	r25, 0x634D	; 0x80634d <EP_MEM+0x3>
get_descriptor():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:156

  size_t get_descriptor (uint8_t* _buffer, uint16_t _index) {
    uint8_t* _pgmem = 0;
    size_t   _size = 0;
    uint8_t  _type = _index >> 8;
    if (_type == 0x01) {          /* DEVICE */
    2944:	91 30       	cpi	r25, 0x01	; 1
    2946:	01 f5       	brne	.+64     	; 0x2988 <main+0x2d2>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:159
      _pgmem = (uint8_t*)&device_descriptor;
      _size = sizeof(device_descriptor);
      memcpy_P(_buffer, _pgmem, _size);
    2948:	42 e1       	ldi	r20, 0x12	; 18
    294a:	50 e0       	ldi	r21, 0x00	; 0
    294c:	62 eb       	ldi	r22, 0xB2	; 178
    294e:	71 e0       	ldi	r23, 0x01	; 1
    2950:	82 e5       	ldi	r24, 0x52	; 82
    2952:	93 e6       	ldi	r25, 0x63	; 99
    2954:	34 d6       	rcall	.+3176   	; 0x35be <memcpy_P>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:160
      uint32_t _vidpid = *((uint32_t*)EEPROM_START);
    2956:	80 91 00 14 	lds	r24, 0x1400	; 0x801400 <__TEXT_REGION_LENGTH__+0x7f1400>
    295a:	90 91 01 14 	lds	r25, 0x1401	; 0x801401 <__TEXT_REGION_LENGTH__+0x7f1401>
    295e:	a0 91 02 14 	lds	r26, 0x1402	; 0x801402 <__TEXT_REGION_LENGTH__+0x7f1402>
    2962:	b0 91 03 14 	lds	r27, 0x1403	; 0x801403 <__TEXT_REGION_LENGTH__+0x7f1403>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:161
      if (_vidpid + 1) _CAPS32(_buffer[8])->dword = _vidpid;
    2966:	8f 3f       	cpi	r24, 0xFF	; 255
    2968:	4f ef       	ldi	r20, 0xFF	; 255
    296a:	94 07       	cpc	r25, r20
    296c:	a4 07       	cpc	r26, r20
    296e:	b4 07       	cpc	r27, r20
    2970:	41 f0       	breq	.+16     	; 0x2982 <main+0x2cc>
    2972:	80 93 5a 63 	sts	0x635A, r24	; 0x80635a <EP_MEM+0x10>
    2976:	90 93 5b 63 	sts	0x635B, r25	; 0x80635b <EP_MEM+0x11>
    297a:	a0 93 5c 63 	sts	0x635C, r26	; 0x80635c <EP_MEM+0x12>
    297e:	b0 93 5d 63 	sts	0x635D, r27	; 0x80635d <EP_MEM+0x13>
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:163
      D1PRINTF(" VID:PID=%04X:%04X\r\n", _CAPS16(_buffer[8])->word, _CAPS16(_buffer[10])->word);
      return _size;
    2982:	02 e1       	ldi	r16, 0x12	; 18
    2984:	10 e0       	ldi	r17, 0x00	; 0
    2986:	1e c0       	rjmp	.+60     	; 0x29c4 <main+0x30e>
get_descriptor():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:165
    }
    else if (_type == 0x02) {     /* CONFIGURATION */
    2988:	92 30       	cpi	r25, 0x02	; 2
    298a:	09 f4       	brne	.+2      	; 0x298e <main+0x2d8>
    298c:	3e c1       	rjmp	.+636    	; 0x2c0a <main+0x554>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:169
      _pgmem = (uint8_t*)&current_descriptor;
      _size = sizeof(current_descriptor);
    }
    else if (_type == 0x06) {     /* QUALIFIER */
    298e:	96 30       	cpi	r25, 0x06	; 6
    2990:	09 f4       	brne	.+2      	; 0x2994 <main+0x2de>
    2992:	44 c1       	rjmp	.+648    	; 0x2c1c <main+0x566>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:173
      _pgmem = (uint8_t*)&qualifier_descriptor;
      _size = sizeof(qualifier_descriptor);
    }
    else if (_type == 0x21) {     /* HID */
    2994:	91 32       	cpi	r25, 0x21	; 33
    2996:	09 f4       	brne	.+2      	; 0x299a <main+0x2e4>
    2998:	46 c1       	rjmp	.+652    	; 0x2c26 <main+0x570>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:177
      _pgmem = (uint8_t*)&current_descriptor + 18;
      _size = 9;
    }
    else if (_type == 0x22) {     /* REPORT */
    299a:	92 32       	cpi	r25, 0x22	; 34
    299c:	09 f4       	brne	.+2      	; 0x29a0 <main+0x2ea>
    299e:	48 c1       	rjmp	.+656    	; 0x2c30 <main+0x57a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:181
      _pgmem = (uint8_t*)&report_descriptor;
      _size = sizeof(report_descriptor);
    }
    else if (_index == 0x0300) {  /* LANGUAGE */
    29a0:	81 15       	cp	r24, r1
    29a2:	e3 e0       	ldi	r30, 0x03	; 3
    29a4:	9e 07       	cpc	r25, r30
    29a6:	09 f0       	breq	.+2      	; 0x29aa <main+0x2f4>
    29a8:	8e c0       	rjmp	.+284    	; 0x2ac6 <main+0x410>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:183
      _size = 4;
      *_buffer++ = 4;
    29aa:	84 e0       	ldi	r24, 0x04	; 4
    29ac:	80 93 52 63 	sts	0x6352, r24	; 0x806352 <EP_MEM+0x8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:184
      *_buffer++ = 3;
    29b0:	93 e0       	ldi	r25, 0x03	; 3
    29b2:	90 93 53 63 	sts	0x6353, r25	; 0x806353 <EP_MEM+0x9>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:185
      *_buffer++ = 0x09;
    29b6:	99 e0       	ldi	r25, 0x09	; 9
    29b8:	90 93 54 63 	sts	0x6354, r25	; 0x806354 <EP_MEM+0xa>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:186
      *_buffer++ = 0x04;
    29bc:	80 93 55 63 	sts	0x6355, r24	; 0x806355 <EP_MEM+0xb>
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:187
      return _size;
    29c0:	04 e0       	ldi	r16, 0x04	; 4
    29c2:	10 e0       	ldi	r17, 0x00	; 0
    29c4:	8e 2d       	mov	r24, r14
    29c6:	93 2d       	mov	r25, r3
    29c8:	08 17       	cp	r16, r24
    29ca:	19 07       	cpc	r17, r25
    29cc:	08 f4       	brcc	.+2      	; 0x29d0 <main+0x31a>
    29ce:	c8 01       	movw	r24, r16
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:214
          for (uint8_t _i = 0; _i < 4; _i++) {
            uint8_t _c = *_p++;
            *_buffer++ = btoh(_c >> 4); *_buffer++ = 0;
            *_buffer++ = btoh(_c     ); *_buffer++ = 0;
          }
          return 22;
    29d0:	98 01       	movw	r18, r16
    29d2:	8c 01       	movw	r16, r24
request_standard():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:538
      EP_RES.CNT = 0;
    }
    else if (bRequest == 0x06) {  /* GET_DESCRIPTOR */
      size_t _length = EP_MEM.req_data.wLength;
      size_t _size = get_descriptor((uint8_t*)&EP_MEM.res_data, EP_MEM.req_data.wValue);
      EP_RES.CNT = (_size > _length) ? _length : _size;
    29d4:	00 93 7a 64 	sts	0x647A, r16	; 0x80647a <EP_TABLE+0x12>
    29d8:	10 93 7b 64 	sts	0x647B, r17	; 0x80647b <EP_TABLE+0x13>
handling_control_transactions():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:654
  #ifdef _Not_being_used_STUB_
    else if (bmRequestType == (2 << 5)) {
      _listen = request_vendor();
    }
  #endif
    if (_listen) {
    29dc:	23 2b       	or	r18, r19
    29de:	09 f0       	breq	.+2      	; 0x29e2 <main+0x32c>
    29e0:	76 cf       	rjmp	.-276    	; 0x28ce <main+0x218>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:658
      ep_res_listen();
      ep_req_listen();
    }
    USB0_INTFLAGSB |= USB_EPSETUP_bp;
    29e2:	80 91 0b 0c 	lds	r24, 0x0C0B	; 0x800c0b <__TEXT_REGION_LENGTH__+0x7f0c0b>
    29e6:	84 60       	ori	r24, 0x04	; 4
    29e8:	80 93 0b 0c 	sts	0x0C0B, r24	; 0x800c0b <__TEXT_REGION_LENGTH__+0x7f0c0b>
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/main.cpp:129

    /* If SW0 was used, work here. */
    if (bit_is_clear(PGCONF, PGCONF_UPDI_bp)) {
    29ec:	f8 99       	sbic	0x1f, 0	; 31
    29ee:	1f c0       	rjmp	.+62     	; 0x2a2e <main+0x378>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/main.cpp:130
      if      (bit_is_set(GPCONF, GPCONF_FAL_bp)) SYS::reset_enter();
    29f0:	f7 9b       	sbis	0x1e, 7	; 30
    29f2:	c8 c1       	rjmp	.+912    	; 0x2d84 <main+0x6ce>
reset_enter():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:380
  /*
   * Executed when SW0 is detected as being pressed.
   * May be called multiple times due to chattering.
   */
  void reset_enter (void) {
    if (bit_is_clear(GPCONF, GPCONF_HLD_bp)) {
    29f4:	f5 99       	sbic	0x1e, 5	; 30
    29f6:	1a c0       	rjmp	.+52     	; 0x2a2c <main+0x376>
LED_TCB1():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:286
      _led_mode = 1;
    }
  }

  void LED_TCB1 (uint8_t _mode, uint16_t _ccmp) {
    if (_led_mode != _mode) {
    29f8:	80 91 a1 60 	lds	r24, 0x60A1	; 0x8060a1 <_led_mode>
    29fc:	83 30       	cpi	r24, 0x03	; 3
    29fe:	81 f0       	breq	.+32     	; 0x2a20 <main+0x36a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:287
      TCA0_SPLIT_CTRLA = 0;
    2a00:	10 92 00 0a 	sts	0x0A00, r1	; 0x800a00 <__TEXT_REGION_LENGTH__+0x7f0a00>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:288
      TCB1_CNTL = 0;
    2a04:	10 92 1a 0b 	sts	0x0B1A, r1	; 0x800b1a <__TEXT_REGION_LENGTH__+0x7f0b1a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:289
      TCB1_CCMP = _ccmp;
    2a08:	89 ea       	ldi	r24, 0xA9	; 169
    2a0a:	95 e5       	ldi	r25, 0x55	; 85
    2a0c:	80 93 1c 0b 	sts	0x0B1C, r24	; 0x800b1c <__TEXT_REGION_LENGTH__+0x7f0b1c>
    2a10:	90 93 1d 0b 	sts	0x0B1D, r25	; 0x800b1d <__TEXT_REGION_LENGTH__+0x7f0b1d>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:290
      TCB1_CTRLA = TCB_ENABLE_bm | TCB_CLKSEL_EVENT_gc;
    2a14:	8f e0       	ldi	r24, 0x0F	; 15
    2a16:	80 93 10 0b 	sts	0x0B10, r24	; 0x800b10 <__TEXT_REGION_LENGTH__+0x7f0b10>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:291
      _led_mode = _mode;
    2a1a:	83 e0       	ldi	r24, 0x03	; 3
    2a1c:	80 93 a1 60 	sts	0x60A1, r24	; 0x8060a1 <_led_mode>
reset_enter():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:382
   * May be called multiple times due to chattering.
   */
  void reset_enter (void) {
    if (bit_is_clear(GPCONF, GPCONF_HLD_bp)) {
      LED_Blink();
      pinLogicPush(PIN_PGM_TRST);
    2a20:	01 9a       	sbi	0x00, 1	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:388
      /*
      * Puts a tinyAVR-0 which does not have a reset pad into reset state.
      * This applies to all chips which have an enabled UPDI pad.
      * Does not affect chips with an active reset pad or TPI/PDI type chips.
      */
      send_bitmap(_updi_bitmap_reset, sizeof(_updi_bitmap_reset) * 8);
    2a22:	8e e2       	ldi	r24, 0x2E	; 46
    2a24:	90 e6       	ldi	r25, 0x60	; 96
    2a26:	0e 94 4e 01 	call	0x29c	; 0x29c <SYS::send_bitmap(unsigned char const*, unsigned int) [clone .constprop.10]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:391
      D1PRINTF("<RST:IN>\r\n");
      DFLUSH();
      bit_set(GPCONF, GPCONF_HLD_bp);
    2a2a:	f5 9a       	sbi	0x1e, 5	; 30
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:393
    }
    bit_clear(GPCONF, GPCONF_FAL_bp);
    2a2c:	f7 98       	cbi	0x1e, 7	; 30
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/main.cpp:135
      else if (bit_is_set(GPCONF, GPCONF_RIS_bp)) SYS::reset_leave();
    }

    /* If the USB port is not open, go back to the loop beginning. */
    if (bit_is_clear(GPCONF, GPCONF_USB_bp)) continue;
    2a2e:	f0 9b       	sbis	0x1e, 0	; 30
    2a30:	fa ce       	rjmp	.-524    	; 0x2826 <main+0x170>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/main.cpp:145
    /* character arrives every 400 clocks on a 20MHz reference. */
    /* So we avoid using interrupts here and use polling to gain speed. */
  #if defined(CONFIG_VCP_9BIT_SUPPORT)
    if (bit_is_set(GPCONF, GPCONF_VCP_bp)) usart_transmitter();
  #else
    if (bit_is_set(GPCONF, GPCONF_VCP_bp)) USB::vcp_transceiver();
    2a32:	f1 9b       	sbis	0x1e, 1	; 30
    2a34:	ed c1       	rjmp	.+986    	; 0x2e10 <main+0x75a>
vcp_transceiver():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:479
    if (bit_is_clear(GPCONF, GPCONF_BRK_bp)
  #if defined(CONFIG_VCP_CTS_ENABLE)
     && !digitalReadMacro(PIN_VCP_CTS)
  #endif
     && bit_is_set(USART0_STATUS, USART_DREIF_bp)
     && read_available()) {
    2a36:	f3 99       	sbic	0x1e, 3	; 30
    2a38:	14 c0       	rjmp	.+40     	; 0x2a62 <main+0x3ac>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:478
  void vcp_transceiver (void) {
    if (bit_is_clear(GPCONF, GPCONF_BRK_bp)
  #if defined(CONFIG_VCP_CTS_ENABLE)
     && !digitalReadMacro(PIN_VCP_CTS)
  #endif
     && bit_is_set(USART0_STATUS, USART_DREIF_bp)
    2a3a:	80 91 04 08 	lds	r24, 0x0804	; 0x800804 <__TEXT_REGION_LENGTH__+0x7f0804>
    2a3e:	85 ff       	sbrs	r24, 5
    2a40:	10 c0       	rjmp	.+32     	; 0x2a62 <main+0x3ac>
read_available():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:435
    return _c;
  }

  bool read_available (void) {
    uint8_t _s = 0;
    if (bit_is_set(EP_CDO.STATUS, USB_BUSNAK_bp) && bit_is_set(GPCONF, GPCONF_VCP_bp)) {
    2a42:	80 91 a0 64 	lds	r24, 0x64A0	; 0x8064a0 <EP_TABLE+0x38>
    2a46:	81 ff       	sbrs	r24, 1
    2a48:	0c c0       	rjmp	.+24     	; 0x2a62 <main+0x3ac>
    2a4a:	f1 9b       	sbis	0x1e, 1	; 30
    2a4c:	0a c0       	rjmp	.+20     	; 0x2a62 <main+0x3ac>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:436
      _s = EP_CDO.CNT - _recv_count;
    2a4e:	20 91 a2 64 	lds	r18, 0x64A2	; 0x8064a2 <EP_TABLE+0x3a>
    2a52:	30 91 a3 64 	lds	r19, 0x64A3	; 0x8064a3 <EP_TABLE+0x3b>
    2a56:	80 91 64 64 	lds	r24, 0x6464	; 0x806464 <_recv_count>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:437
      if (_s == 0) ep_cdo_listen();
    2a5a:	82 13       	cpse	r24, r18
    2a5c:	ba c1       	rjmp	.+884    	; 0x2dd2 <main+0x71c>
    2a5e:	0e 94 7e 01 	call	0x2fc	; 0x2fc <USB::ep_cdo_listen()>
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/main.cpp:150
  #endif
    else USB::read_drop();

    /*** If the break value is between 1 and 65534, it will count down. ***/
    if (bit_is_set(GPCONF, GPCONF_BRK_bp)) USB::cci_break_count();
    2a62:	f3 9b       	sbis	0x1e, 3	; 30
    2a64:	26 c0       	rjmp	.+76     	; 0x2ab2 <main+0x3fc>
cci_break_count():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:374
    bit_clear(GPCONF, GPCONF_BRK_bp);
  }

  void cci_break_count (void) {
    /* If the break value is between 1 and 65534, it will count down. */
    if ((_send_break + 1) > 1) {
    2a66:	80 91 66 64 	lds	r24, 0x6466	; 0x806466 <_send_break>
    2a6a:	90 91 67 64 	lds	r25, 0x6467	; 0x806467 <_send_break+0x1>
    2a6e:	9c 01       	movw	r18, r24
    2a70:	2f 5f       	subi	r18, 0xFF	; 255
    2a72:	3f 4f       	sbci	r19, 0xFF	; 255
    2a74:	22 30       	cpi	r18, 0x02	; 2
    2a76:	31 05       	cpc	r19, r1
    2a78:	e0 f0       	brcs	.+56     	; 0x2ab2 <main+0x3fc>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:375
      if (_send_break > USB_CCI_INTERVAL) {
    2a7a:	85 30       	cpi	r24, 0x05	; 5
    2a7c:	91 05       	cpc	r25, r1
    2a7e:	08 f4       	brcc	.+2      	; 0x2a82 <main+0x3cc>
    2a80:	cc c1       	rjmp	.+920    	; 0x2e1a <main+0x764>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:376
        if (bit_is_set(EP_CCI.STATUS, USB_BUSNAK_bp)) ep_cci_listen();
    2a82:	20 91 98 64 	lds	r18, 0x6498	; 0x806498 <EP_TABLE+0x30>
    2a86:	21 ff       	sbrs	r18, 1
    2a88:	14 c0       	rjmp	.+40     	; 0x2ab2 <main+0x3fc>
ep_cci_listen():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:297
    USB_EP_STATUS_CLR(USB_EP_DPO) = ~USB_TOGGLE_bm;
  }

  void ep_cci_listen (void) {
    if ((_send_break + 1) > 1 && _send_break > USB_CCI_INTERVAL) {
      _send_break -= USB_CCI_INTERVAL;
    2a8a:	04 97       	sbiw	r24, 0x04	; 4
    2a8c:	80 93 66 64 	sts	0x6466, r24	; 0x806466 <_send_break>
    2a90:	90 93 67 64 	sts	0x6467, r25	; 0x806467 <_send_break+0x1>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:299
    }
    EP_CCI.CNT = 10;
    2a94:	40 92 9a 64 	sts	0x649A, r4	; 0x80649a <EP_TABLE+0x32>
    2a98:	50 92 9b 64 	sts	0x649B, r5	; 0x80649b <EP_TABLE+0x33>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:300
    EP_CCI.MCNT = 0;
    2a9c:	10 92 9e 64 	sts	0x649E, r1	; 0x80649e <EP_TABLE+0x36>
    2aa0:	10 92 9f 64 	sts	0x649F, r1	; 0x80649f <EP_TABLE+0x37>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:301
    loop_until_bit_is_clear(USB0_INTFLAGSB, USB_RMWBUSY_bp);
    2aa4:	80 91 0b 0c 	lds	r24, 0x0C0B	; 0x800c0b <__TEXT_REGION_LENGTH__+0x7f0c0b>
    2aa8:	82 fd       	sbrc	r24, 2
    2aaa:	fc cf       	rjmp	.-8      	; 0x2aa4 <main+0x3ee>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:302
    USB_EP_STATUS_CLR(USB_EP_CCI) = ~USB_TOGGLE_bm;
    2aac:	8e ef       	ldi	r24, 0xFE	; 254
    2aae:	80 93 4a 0c 	sts	0x0C4A, r24	; 0x800c4a <__TEXT_REGION_LENGTH__+0x7f0c4a>
is_not_dap():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:261
  }

  // MARK: Endpoint

  bool is_ep_setup (void) { return bit_is_set(EP_REQ.STATUS, USB_EPSETUP_bp); }
  bool is_not_dap (void) { return bit_is_clear(EP_DPO.STATUS, USB_BUSNAK_bp); }
    2ab2:	80 91 90 64 	lds	r24, 0x6490	; 0x806490 <EP_TABLE+0x28>
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/main.cpp:153

    /*** If CMSIS-DAP is not received, return to the top. ***/
    if (USB::is_not_dap()) {
    2ab6:	81 fd       	sbrc	r24, 1
    2ab8:	b7 c1       	rjmp	.+878    	; 0x2e28 <main+0x772>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/main.cpp:155
      /* To force exit from a non-responsive terminal mode, press SW0. */
      if (bit_is_set(PGCONF, PGCONF_PROG_bp)) {
    2aba:	f9 9b       	sbis	0x1f, 1	; 31
    2abc:	b4 ce       	rjmp	.-664    	; 0x2826 <main+0x170>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/main.cpp:156
        if (bit_is_set(GPCONF, GPCONF_RIS_bp)) _wdt = false;
    2abe:	f6 99       	sbic	0x1e, 6	; 30
    2ac0:	f1 2c       	mov	r15, r1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/main.cpp:157
        bit_clear(GPCONF, GPCONF_RIS_bp);
    2ac2:	f6 98       	cbi	0x1e, 6	; 30
    2ac4:	b0 ce       	rjmp	.-672    	; 0x2826 <main+0x170>
get_descriptor():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:190
      *_buffer++ = 0x09;
      *_buffer++ = 0x04;
      return _size;
    }
    else {
      switch (_index) {
    2ac6:	82 30       	cpi	r24, 0x02	; 2
    2ac8:	f3 e0       	ldi	r31, 0x03	; 3
    2aca:	9f 07       	cpc	r25, r31
    2acc:	41 f1       	breq	.+80     	; 0x2b1e <main+0x468>
    2ace:	60 f4       	brcc	.+24     	; 0x2ae8 <main+0x432>
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:191
        case 0x0301: _pgmem = (uint8_t*)&vstring; _size = sizeof(vstring); break;
    2ad0:	04 e3       	ldi	r16, 0x34	; 52
    2ad2:	10 e0       	ldi	r17, 0x00	; 0
    2ad4:	66 ee       	ldi	r22, 0xE6	; 230
    2ad6:	70 e0       	ldi	r23, 0x00	; 0
get_descriptor():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:190
      *_buffer++ = 0x09;
      *_buffer++ = 0x04;
      return _size;
    }
    else {
      switch (_index) {
    2ad8:	81 30       	cpi	r24, 0x01	; 1
    2ada:	93 40       	sbci	r25, 0x03	; 3
    2adc:	79 f0       	breq	.+30     	; 0x2afc <main+0x446>
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:154
    { /* FRAMENUM */ }
  };

  size_t get_descriptor (uint8_t* _buffer, uint16_t _index) {
    uint8_t* _pgmem = 0;
    size_t   _size = 0;
    2ade:	10 e0       	ldi	r17, 0x00	; 0
    2ae0:	00 e0       	ldi	r16, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:153
    },
    { /* FRAMENUM */ }
  };

  size_t get_descriptor (uint8_t* _buffer, uint16_t _index) {
    uint8_t* _pgmem = 0;
    2ae2:	70 e0       	ldi	r23, 0x00	; 0
    2ae4:	60 e0       	ldi	r22, 0x00	; 0
    2ae6:	0a c0       	rjmp	.+20     	; 0x2afc <main+0x446>
get_descriptor():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:190
      *_buffer++ = 0x09;
      *_buffer++ = 0x04;
      return _size;
    }
    else {
      switch (_index) {
    2ae8:	83 30       	cpi	r24, 0x03	; 3
    2aea:	98 07       	cpc	r25, r24
    2aec:	e9 f0       	breq	.+58     	; 0x2b28 <main+0x472>
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:193
        case 0x0301: _pgmem = (uint8_t*)&vstring; _size = sizeof(vstring); break;
        case 0x0302: _pgmem = (uint8_t*)&mstring; _size = sizeof(mstring); break;
        case 0x0304: _pgmem = (uint8_t*)&istring; _size = sizeof(istring); break;
    2aee:	08 e1       	ldi	r16, 0x18	; 24
    2af0:	10 e0       	ldi	r17, 0x00	; 0
    2af2:	68 e8       	ldi	r22, 0x88	; 136
    2af4:	70 e0       	ldi	r23, 0x00	; 0
get_descriptor():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:190
      *_buffer++ = 0x09;
      *_buffer++ = 0x04;
      return _size;
    }
    else {
      switch (_index) {
    2af6:	84 30       	cpi	r24, 0x04	; 4
    2af8:	93 40       	sbci	r25, 0x03	; 3
    2afa:	89 f7       	brne	.-30     	; 0x2ade <main+0x428>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:217
            *_buffer++ = btoh(_c     ); *_buffer++ = 0;
          }
          return 22;
        }
      }
      *_buffer++ = (uint8_t)_size;
    2afc:	00 93 52 63 	sts	0x6352, r16	; 0x806352 <EP_MEM+0x8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:218
      *_buffer++ = 3;
    2b00:	83 e0       	ldi	r24, 0x03	; 3
    2b02:	80 93 53 63 	sts	0x6353, r24	; 0x806353 <EP_MEM+0x9>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:219
      if (_size) memcpy_P(_buffer, _pgmem, _size - 2);
    2b06:	a8 01       	movw	r20, r16
    2b08:	42 50       	subi	r20, 0x02	; 2
    2b0a:	51 09       	sbc	r21, r1
    2b0c:	84 e5       	ldi	r24, 0x54	; 84
    2b0e:	93 e6       	ldi	r25, 0x63	; 99
    2b10:	01 15       	cp	r16, r1
    2b12:	11 05       	cpc	r17, r1
    2b14:	09 f0       	breq	.+2      	; 0x2b18 <main+0x462>
    2b16:	80 c0       	rjmp	.+256    	; 0x2c18 <main+0x562>
    2b18:	30 e0       	ldi	r19, 0x00	; 0
    2b1a:	20 e0       	ldi	r18, 0x00	; 0
    2b1c:	5b cf       	rjmp	.-330    	; 0x29d4 <main+0x31e>
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:192
      return _size;
    }
    else {
      switch (_index) {
        case 0x0301: _pgmem = (uint8_t*)&vstring; _size = sizeof(vstring); break;
        case 0x0302: _pgmem = (uint8_t*)&mstring; _size = sizeof(mstring); break;
    2b1e:	06 e4       	ldi	r16, 0x46	; 70
    2b20:	10 e0       	ldi	r17, 0x00	; 0
    2b22:	60 ea       	ldi	r22, 0xA0	; 160
    2b24:	70 e0       	ldi	r23, 0x00	; 0
    2b26:	ea cf       	rjmp	.-44     	; 0x2afc <main+0x446>
get_descriptor():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:203
           *
           * If the 4 bytes from offset 4 of the EEPROM are anything other
           * than 0xFFFF:FFFF, use them, otherwise generate a 32-bit random
           * serial number using CRC32 from the factory information.
           */
          uint32_t _sn = ((User_EEP_t*)EEPROM_START)->dwSerialNumber;
    2b28:	40 91 04 14 	lds	r20, 0x1404	; 0x801404 <__TEXT_REGION_LENGTH__+0x7f1404>
    2b2c:	50 91 05 14 	lds	r21, 0x1405	; 0x801405 <__TEXT_REGION_LENGTH__+0x7f1405>
    2b30:	60 91 06 14 	lds	r22, 0x1406	; 0x801406 <__TEXT_REGION_LENGTH__+0x7f1406>
    2b34:	70 91 07 14 	lds	r23, 0x1407	; 0x801407 <__TEXT_REGION_LENGTH__+0x7f1407>
    2b38:	49 83       	std	Y+1, r20	; 0x01
    2b3a:	5a 83       	std	Y+2, r21	; 0x02
    2b3c:	6b 83       	std	Y+3, r22	; 0x03
    2b3e:	7c 83       	std	Y+4, r23	; 0x04
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:204
          if (!(_sn + 1)) _sn = crc32((uint8_t*)SIGNATURES_START, 32);
    2b40:	4f 3f       	cpi	r20, 0xFF	; 255
    2b42:	2f ef       	ldi	r18, 0xFF	; 255
    2b44:	52 07       	cpc	r21, r18
    2b46:	62 07       	cpc	r22, r18
    2b48:	72 07       	cpc	r23, r18
    2b4a:	59 f5       	brne	.+86     	; 0x2ba2 <main+0x4ec>
main():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/btools.cpp:210
  return _crc;
}

uint32_t crc32 (void* _data, size_t _len) {
  uint32_t _crc = ~0;
  uint8_t* _p = (uint8_t*)_data;
    2b4c:	e0 e8       	ldi	r30, 0x80	; 128
    2b4e:	f0 e1       	ldi	r31, 0x10	; 16
crc32():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/btools.cpp:211
  while (_len--) _crc = _crc32_update(_crc, *_p++);
    2b50:	8f 01       	movw	r16, r30
    2b52:	0f 5f       	subi	r16, 0xFF	; 255
    2b54:	1f 4f       	sbci	r17, 0xFF	; 255
_crc32_update():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/btools.cpp:201
}

/* x32 + x26 + x23 + x22 + x16 + x12 + x11 + x10 + x8 + x7 + x5 + x4 + x2 + x + 1 */
/* (0xEDB88320 rev) init -1 */
uint32_t _crc32_update (uint32_t _crc, uint8_t _data) {
  _crc ^= _data;
    2b56:	20 81       	ld	r18, Z
    2b58:	42 27       	eor	r20, r18
    2b5a:	28 e0       	ldi	r18, 0x08	; 8
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/btools.cpp:203
  for (uint8_t j = 0; j < 8; j++) {
    _crc = (_crc >> 1) ^ (0xEDB88320UL & -(_crc & 1));
    2b5c:	db 01       	movw	r26, r22
    2b5e:	ca 01       	movw	r24, r20
    2b60:	b6 95       	lsr	r27
    2b62:	a7 95       	ror	r26
    2b64:	97 95       	ror	r25
    2b66:	87 95       	ror	r24
    2b68:	41 70       	andi	r20, 0x01	; 1
    2b6a:	55 27       	eor	r21, r21
    2b6c:	66 27       	eor	r22, r22
    2b6e:	77 27       	eor	r23, r23
    2b70:	70 95       	com	r23
    2b72:	60 95       	com	r22
    2b74:	50 95       	com	r21
    2b76:	41 95       	neg	r20
    2b78:	5f 4f       	sbci	r21, 0xFF	; 255
    2b7a:	6f 4f       	sbci	r22, 0xFF	; 255
    2b7c:	7f 4f       	sbci	r23, 0xFF	; 255
    2b7e:	40 72       	andi	r20, 0x20	; 32
    2b80:	53 78       	andi	r21, 0x83	; 131
    2b82:	68 7b       	andi	r22, 0xB8	; 184
    2b84:	7d 7e       	andi	r23, 0xED	; 237
    2b86:	48 27       	eor	r20, r24
    2b88:	59 27       	eor	r21, r25
    2b8a:	6a 27       	eor	r22, r26
    2b8c:	7b 27       	eor	r23, r27
    2b8e:	21 50       	subi	r18, 0x01	; 1
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/btools.cpp:202

/* x32 + x26 + x23 + x22 + x16 + x12 + x11 + x10 + x8 + x7 + x5 + x4 + x2 + x + 1 */
/* (0xEDB88320 rev) init -1 */
uint32_t _crc32_update (uint32_t _crc, uint8_t _data) {
  _crc ^= _data;
  for (uint8_t j = 0; j < 8; j++) {
    2b90:	29 f7       	brne	.-54     	; 0x2b5c <main+0x4a6>
    2b92:	f8 01       	movw	r30, r16
crc32():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/btools.cpp:211
}

uint32_t crc32 (void* _data, size_t _len) {
  uint32_t _crc = ~0;
  uint8_t* _p = (uint8_t*)_data;
  while (_len--) _crc = _crc32_update(_crc, *_p++);
    2b94:	00 3a       	cpi	r16, 0xA0	; 160
    2b96:	10 41       	sbci	r17, 0x10	; 16
    2b98:	d9 f6       	brne	.-74     	; 0x2b50 <main+0x49a>
get_descriptor():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:204
    2b9a:	49 83       	std	Y+1, r20	; 0x01
    2b9c:	5a 83       	std	Y+2, r21	; 0x02
    2b9e:	6b 83       	std	Y+3, r22	; 0x03
    2ba0:	7c 83       	std	Y+4, r23	; 0x04
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:206
          uint8_t* _p = (uint8_t*)&_sn;
          *_buffer++ = 22;  *_buffer++ = 3;
    2ba2:	86 e1       	ldi	r24, 0x16	; 22
    2ba4:	80 93 52 63 	sts	0x6352, r24	; 0x806352 <EP_MEM+0x8>
    2ba8:	83 e0       	ldi	r24, 0x03	; 3
    2baa:	80 93 53 63 	sts	0x6353, r24	; 0x806353 <EP_MEM+0x9>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:207
          *_buffer++ = 'M'; *_buffer++ = 0;
    2bae:	8d e4       	ldi	r24, 0x4D	; 77
    2bb0:	80 93 54 63 	sts	0x6354, r24	; 0x806354 <EP_MEM+0xa>
    2bb4:	10 92 55 63 	sts	0x6355, r1	; 0x806355 <EP_MEM+0xb>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:208
          *_buffer++ = 'X'; *_buffer++ = 0;
    2bb8:	88 e5       	ldi	r24, 0x58	; 88
    2bba:	80 93 56 63 	sts	0x6356, r24	; 0x806356 <EP_MEM+0xc>
    2bbe:	10 92 57 63 	sts	0x6357, r1	; 0x806357 <EP_MEM+0xd>
    2bc2:	e8 e5       	ldi	r30, 0x58	; 88
    2bc4:	f3 e6       	ldi	r31, 0x63	; 99
    2bc6:	de 01       	movw	r26, r28
    2bc8:	11 96       	adiw	r26, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:210
          for (uint8_t _i = 0; _i < 4; _i++) {
            uint8_t _c = *_p++;
    2bca:	8d 91       	ld	r24, X+
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:211
            *_buffer++ = btoh(_c >> 4); *_buffer++ = 0;
    2bcc:	28 2f       	mov	r18, r24
    2bce:	30 e0       	ldi	r19, 0x00	; 0
    2bd0:	44 e0       	ldi	r20, 0x04	; 4
    2bd2:	35 95       	asr	r19
    2bd4:	27 95       	ror	r18
    2bd6:	4a 95       	dec	r20
    2bd8:	e1 f7       	brne	.-8      	; 0x2bd2 <main+0x51c>
btoh():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/btools.cpp:69
    _p++; _r--;
  }
}

char btoh (uint8_t _x) {
  _x = (_x & 15) + '0';
    2bda:	90 e3       	ldi	r25, 0x30	; 48
    2bdc:	92 0f       	add	r25, r18
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/btools.cpp:70
  if (_x > '9') _x += 7;
    2bde:	9a 33       	cpi	r25, 0x3A	; 58
    2be0:	10 f0       	brcs	.+4      	; 0x2be6 <main+0x530>
    2be2:	97 e3       	ldi	r25, 0x37	; 55
    2be4:	92 0f       	add	r25, r18
get_descriptor():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:211
    2be6:	90 83       	st	Z, r25
    2be8:	11 82       	std	Z+1, r1	; 0x01
btoh():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/btools.cpp:69
    _p++; _r--;
  }
}

char btoh (uint8_t _x) {
  _x = (_x & 15) + '0';
    2bea:	8f 70       	andi	r24, 0x0F	; 15
    2bec:	90 e3       	ldi	r25, 0x30	; 48
    2bee:	98 0f       	add	r25, r24
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/btools.cpp:70
  if (_x > '9') _x += 7;
    2bf0:	9a 33       	cpi	r25, 0x3A	; 58
    2bf2:	10 f0       	brcs	.+4      	; 0x2bf8 <main+0x542>
    2bf4:	97 e3       	ldi	r25, 0x37	; 55
    2bf6:	98 0f       	add	r25, r24
get_descriptor():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:212
            *_buffer++ = btoh(_c     ); *_buffer++ = 0;
    2bf8:	92 83       	std	Z+2, r25	; 0x02
    2bfa:	13 82       	std	Z+3, r1	; 0x03
    2bfc:	34 96       	adiw	r30, 0x04	; 4
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:209
          if (!(_sn + 1)) _sn = crc32((uint8_t*)SIGNATURES_START, 32);
          uint8_t* _p = (uint8_t*)&_sn;
          *_buffer++ = 22;  *_buffer++ = 3;
          *_buffer++ = 'M'; *_buffer++ = 0;
          *_buffer++ = 'X'; *_buffer++ = 0;
          for (uint8_t _i = 0; _i < 4; _i++) {
    2bfe:	6a 16       	cp	r6, r26
    2c00:	7b 06       	cpc	r7, r27
    2c02:	19 f7       	brne	.-58     	; 0x2bca <main+0x514>
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:214
            uint8_t _c = *_p++;
            *_buffer++ = btoh(_c >> 4); *_buffer++ = 0;
            *_buffer++ = btoh(_c     ); *_buffer++ = 0;
          }
          return 22;
    2c04:	06 e1       	ldi	r16, 0x16	; 22
    2c06:	10 e0       	ldi	r17, 0x00	; 0
    2c08:	dd ce       	rjmp	.-582    	; 0x29c4 <main+0x30e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:167
      D1PRINTF(" VID:PID=%04X:%04X\r\n", _CAPS16(_buffer[8])->word, _CAPS16(_buffer[10])->word);
      return _size;
    }
    else if (_type == 0x02) {     /* CONFIGURATION */
      _pgmem = (uint8_t*)&current_descriptor;
      _size = sizeof(current_descriptor);
    2c0a:	0b e6       	ldi	r16, 0x6B	; 107
    2c0c:	10 e0       	ldi	r17, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:166
      if (_vidpid + 1) _CAPS32(_buffer[8])->dword = _vidpid;
      D1PRINTF(" VID:PID=%04X:%04X\r\n", _CAPS16(_buffer[8])->word, _CAPS16(_buffer[10])->word);
      return _size;
    }
    else if (_type == 0x02) {     /* CONFIGURATION */
      _pgmem = (uint8_t*)&current_descriptor;
    2c0e:	6d e3       	ldi	r22, 0x3D	; 61
    2c10:	71 e0       	ldi	r23, 0x01	; 1
get_descriptor():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:222
      *_buffer++ = (uint8_t)_size;
      *_buffer++ = 3;
      if (_size) memcpy_P(_buffer, _pgmem, _size - 2);
      return _size;
    }
    if (_size) memcpy_P(_buffer, _pgmem, _size);
    2c12:	a8 01       	movw	r20, r16
    2c14:	82 e5       	ldi	r24, 0x52	; 82
    2c16:	93 e6       	ldi	r25, 0x63	; 99
    2c18:	d2 d4       	rcall	.+2468   	; 0x35be <memcpy_P>
    2c1a:	d4 ce       	rjmp	.-600    	; 0x29c4 <main+0x30e>
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:171
      _pgmem = (uint8_t*)&current_descriptor;
      _size = sizeof(current_descriptor);
    }
    else if (_type == 0x06) {     /* QUALIFIER */
      _pgmem = (uint8_t*)&qualifier_descriptor;
      _size = sizeof(qualifier_descriptor);
    2c1c:	0a e0       	ldi	r16, 0x0A	; 10
    2c1e:	10 e0       	ldi	r17, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:170
    else if (_type == 0x02) {     /* CONFIGURATION */
      _pgmem = (uint8_t*)&current_descriptor;
      _size = sizeof(current_descriptor);
    }
    else if (_type == 0x06) {     /* QUALIFIER */
      _pgmem = (uint8_t*)&qualifier_descriptor;
    2c20:	68 ea       	ldi	r22, 0xA8	; 168
    2c22:	71 e0       	ldi	r23, 0x01	; 1
    2c24:	f6 cf       	rjmp	.-20     	; 0x2c12 <main+0x55c>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:175
      _size = sizeof(qualifier_descriptor);
    }
    else if (_type == 0x21) {     /* HID */
      _pgmem = (uint8_t*)&current_descriptor + 18;
      _size = 9;
    2c26:	09 e0       	ldi	r16, 0x09	; 9
    2c28:	10 e0       	ldi	r17, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:174
    else if (_type == 0x06) {     /* QUALIFIER */
      _pgmem = (uint8_t*)&qualifier_descriptor;
      _size = sizeof(qualifier_descriptor);
    }
    else if (_type == 0x21) {     /* HID */
      _pgmem = (uint8_t*)&current_descriptor + 18;
    2c2a:	6f e4       	ldi	r22, 0x4F	; 79
    2c2c:	71 e0       	ldi	r23, 0x01	; 1
    2c2e:	f1 cf       	rjmp	.-30     	; 0x2c12 <main+0x55c>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:179
      _size = 9;
    }
    else if (_type == 0x22) {     /* REPORT */
      _pgmem = (uint8_t*)&report_descriptor;
      _size = sizeof(report_descriptor);
    2c30:	03 e2       	ldi	r16, 0x23	; 35
    2c32:	10 e0       	ldi	r17, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:178
    else if (_type == 0x21) {     /* HID */
      _pgmem = (uint8_t*)&current_descriptor + 18;
      _size = 9;
    }
    else if (_type == 0x22) {     /* REPORT */
      _pgmem = (uint8_t*)&report_descriptor;
    2c34:	6a e1       	ldi	r22, 0x1A	; 26
    2c36:	71 e0       	ldi	r23, 0x01	; 1
    2c38:	ec cf       	rjmp	.-40     	; 0x2c12 <main+0x55c>
request_standard():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:541
      size_t _length = EP_MEM.req_data.wLength;
      size_t _size = get_descriptor((uint8_t*)&EP_MEM.res_data, EP_MEM.req_data.wValue);
      EP_RES.CNT = (_size > _length) ? _length : _size;
      _listen = !!_size;
    }
    else if (bRequest == 0x08) {  /* GET_CONFIGURATION */
    2c3a:	88 30       	cpi	r24, 0x08	; 8
    2c3c:	49 f4       	brne	.+18     	; 0x2c50 <main+0x59a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:542
      EP_MEM.res_data[0] = _set_config;
    2c3e:	80 91 63 64 	lds	r24, 0x6463	; 0x806463 <_set_config>
    2c42:	80 93 52 63 	sts	0x6352, r24	; 0x806352 <EP_MEM+0x8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:558
    }
    else if (bRequest == 0x0A) {  /* GET_INTREFACE */
      /* It seems not to be used. */
      D1PRINTF("<SI:0>\r\n");
      EP_MEM.res_data[0] = 0;
      EP_RES.CNT = 1;
    2c46:	c0 92 7a 64 	sts	0x647A, r12	; 0x80647a <EP_TABLE+0x12>
    2c4a:	d0 92 7b 64 	sts	0x647B, r13	; 0x80647b <EP_TABLE+0x13>
    2c4e:	3f ce       	rjmp	.-898    	; 0x28ce <main+0x218>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:546
    else if (bRequest == 0x08) {  /* GET_CONFIGURATION */
      EP_MEM.res_data[0] = _set_config;
      D1PRINTF("<GC:%02X>\r\n", _set_config);
      EP_RES.CNT = 1;
    }
    else if (bRequest == 0x09) {  /* SET_CONFIGURATION */
    2c50:	89 30       	cpi	r24, 0x09	; 9
    2c52:	41 f4       	brne	.+16     	; 0x2c64 <main+0x5ae>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:548
      /* Once the USB connection is fully initiated, it will go through here. */
      _set_config = (uint8_t)EP_MEM.req_data.wValue;
    2c54:	80 91 4c 63 	lds	r24, 0x634C	; 0x80634c <EP_MEM+0x2>
    2c58:	80 93 63 64 	sts	0x6463, r24	; 0x806463 <_set_config>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:549
      bit_set(GPCONF, GPCONF_USB_bp);
    2c5c:	f0 9a       	sbi	0x1e, 0	; 30
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:550
      SYS::LED_HeartBeat();
    2c5e:	0e 94 90 05 	call	0xb20	; 0xb20 <SYS::LED_HeartBeat()>
    2c62:	50 ce       	rjmp	.-864    	; 0x2904 <main+0x24e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:554
      D1PRINTF("<SC:%02X>\r\n", _set_config);
      EP_RES.CNT = 0;
    }
    else if (bRequest == 0x0A) {  /* GET_INTREFACE */
    2c64:	8a 30       	cpi	r24, 0x0A	; 10
    2c66:	19 f4       	brne	.+6      	; 0x2c6e <main+0x5b8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:557
      /* It seems not to be used. */
      D1PRINTF("<SI:0>\r\n");
      EP_MEM.res_data[0] = 0;
    2c68:	10 92 52 63 	sts	0x6352, r1	; 0x806352 <EP_MEM+0x8>
    2c6c:	ec cf       	rjmp	.-40     	; 0x2c46 <main+0x590>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:560
      EP_RES.CNT = 1;
    }
    else if (bRequest == 0x0B) {  /* SET_INTREFACE */
    2c6e:	8b 30       	cpi	r24, 0x0B	; 11
    2c70:	09 f0       	breq	.+2      	; 0x2c74 <main+0x5be>
    2c72:	b7 ce       	rjmp	.-658    	; 0x29e2 <main+0x32c>
    2c74:	47 ce       	rjmp	.-882    	; 0x2904 <main+0x24e>
handling_control_transactions():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:646
    if (bit_is_clear(bmRequestType, 7)) ep_req_listen();
    bmRequestType &= (3 << 5);
    if (bmRequestType == (0 << 5)) {
      _listen = request_standard();
    }
    else if (bmRequestType == (1 << 5)) {
    2c76:	10 32       	cpi	r17, 0x20	; 32
    2c78:	09 f0       	breq	.+2      	; 0x2c7c <main+0x5c6>
    2c7a:	b3 ce       	rjmp	.-666    	; 0x29e2 <main+0x32c>
request_class():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:574
  }

  /*** CDC-ACM request processing. ***/
  bool request_class (void) {
    bool _listen = true;
    uint8_t bRequest = EP_MEM.req_data.bRequest;
    2c7c:	80 91 4b 63 	lds	r24, 0x634B	; 0x80634b <EP_MEM+0x1>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:575
    if (bRequest == 0x0A) {       /* SET_IDLE */
    2c80:	8a 30       	cpi	r24, 0x0A	; 10
    2c82:	09 f4       	brne	.+2      	; 0x2c86 <main+0x5d0>
    2c84:	3f ce       	rjmp	.-898    	; 0x2904 <main+0x24e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:581
      /* This is a HID Compliance Class Request. */
      /* It is called but not used. */
      D1PRINTF(" IDL=%02X\r\n", (uint8_t)EP_MEM.req_data.wValue);
      EP_RES.CNT = 0;
    }
    else if (bRequest == 0x20) {  /* SET_LINE_ENCODING */
    2c86:	80 32       	cpi	r24, 0x20	; 32
    2c88:	39 f5       	brne	.+78     	; 0x2cd8 <main+0x622>
ep_req_pending():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:262

  // MARK: Endpoint

  bool is_ep_setup (void) { return bit_is_set(EP_REQ.STATUS, USB_EPSETUP_bp); }
  bool is_not_dap (void) { return bit_is_clear(EP_DPO.STATUS, USB_BUSNAK_bp); }
  void ep_req_pending (void) { loop_until_bit_is_set(EP_REQ.STATUS, USB_BUSNAK_bp); }
    2c8a:	80 91 70 64 	lds	r24, 0x6470	; 0x806470 <EP_TABLE+0x8>
    2c8e:	81 ff       	sbrs	r24, 1
    2c90:	fc cf       	rjmp	.-8      	; 0x2c8a <main+0x5d4>
set_line_encoding():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:201
      SYS::LED_Flash();
  }

  void set_line_encoding (LineEncoding_t* _buff) {
    /* The USART will not change unless a different setting is given. */
    if (0 == memcmp(&_set_line_encoding, _buff, sizeof(LineEncoding_t))) return;
    2c92:	47 e0       	ldi	r20, 0x07	; 7
    2c94:	50 e0       	ldi	r21, 0x00	; 0
    2c96:	62 e5       	ldi	r22, 0x52	; 82
    2c98:	73 e6       	ldi	r23, 0x63	; 99
    2c9a:	82 ea       	ldi	r24, 0xA2	; 162
    2c9c:	90 e6       	ldi	r25, 0x60	; 96
    2c9e:	ea d4       	rcall	.+2516   	; 0x3674 <memcmp>
    2ca0:	89 2b       	or	r24, r25
    2ca2:	91 f0       	breq	.+36     	; 0x2cc8 <main+0x612>
read_drop():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:443
    }
    return _s != 0;
  }

  void read_drop (void) {
    if (bit_is_set(EP_CDO.STATUS, USB_BUSNAK_bp)) ep_cdo_listen();
    2ca4:	80 91 a0 64 	lds	r24, 0x64A0	; 0x8064a0 <EP_TABLE+0x38>
    2ca8:	81 fd       	sbrc	r24, 1
    2caa:	0e 94 7e 01 	call	0x2fc	; 0x2fc <USB::ep_cdo_listen()>
set_line_encoding():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:203
    USB::read_drop();
    USART::setup();
    2cae:	0e 94 7a 0a 	call	0x14f4	; 0x14f4 <USART::setup()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:204
    memcpy(&_set_line_encoding, _buff, sizeof(LineEncoding_t));
    2cb2:	87 e0       	ldi	r24, 0x07	; 7
    2cb4:	e2 e5       	ldi	r30, 0x52	; 82
    2cb6:	f3 e6       	ldi	r31, 0x63	; 99
    2cb8:	a2 ea       	ldi	r26, 0xA2	; 162
    2cba:	b0 e6       	ldi	r27, 0x60	; 96
    2cbc:	01 90       	ld	r0, Z+
    2cbe:	0d 92       	st	X+, r0
    2cc0:	8a 95       	dec	r24
    2cc2:	e1 f7       	brne	.-8      	; 0x2cbc <main+0x606>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:205
    change_vcp();
    2cc4:	0e 94 a6 05 	call	0xb4c	; 0xb4c <USART::change_vcp()>
request_class():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:592
      /* it's probably best to do nothing.        */
      ep_req_pending();
      USART::set_line_encoding(&EP_MEM.res_encoding);
      D1PRINTF(" SLE=");
      D1PRINTHEX(&_set_line_encoding, sizeof(LineEncoding_t));
      bit_set(GPCONF, GPCONF_OPN_bp);
    2cc8:	f4 9a       	sbi	0x1e, 4	; 30
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:593
      _send_count = 0;
    2cca:	10 92 65 64 	sts	0x6465, r1	; 0x806465 <_send_count>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:594
      _recv_count = 0;
    2cce:	10 92 64 64 	sts	0x6464, r1	; 0x806464 <_recv_count>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:595
      _sof_count = 0;
    2cd2:	10 92 62 64 	sts	0x6462, r1	; 0x806462 <_sof_count>
    2cd6:	16 ce       	rjmp	.-980    	; 0x2904 <main+0x24e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:598
      EP_RES.CNT = 0;
    }
    else if (bRequest == 0x21) {  /* GET_LINE_ENCODING */
    2cd8:	81 32       	cpi	r24, 0x21	; 33
    2cda:	39 f5       	brne	.+78     	; 0x2d2a <main+0x674>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:599
      memcpy(&EP_MEM.res_encoding, &_set_line_encoding, sizeof(LineEncoding_t));
    2cdc:	87 e0       	ldi	r24, 0x07	; 7
    2cde:	e2 ea       	ldi	r30, 0xA2	; 162
    2ce0:	f0 e6       	ldi	r31, 0x60	; 96
    2ce2:	a2 e5       	ldi	r26, 0x52	; 82
    2ce4:	b3 e6       	ldi	r27, 0x63	; 99
    2ce6:	01 90       	ld	r0, Z+
    2ce8:	0d 92       	st	X+, r0
    2cea:	8a 95       	dec	r24
    2cec:	e1 f7       	brne	.-8      	; 0x2ce6 <main+0x630>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:600
      if (EP_MEM.res_encoding.dwDTERate == 0) {
    2cee:	80 91 52 63 	lds	r24, 0x6352	; 0x806352 <EP_MEM+0x8>
    2cf2:	90 91 53 63 	lds	r25, 0x6353	; 0x806353 <EP_MEM+0x9>
    2cf6:	a0 91 54 63 	lds	r26, 0x6354	; 0x806354 <EP_MEM+0xa>
    2cfa:	b0 91 55 63 	lds	r27, 0x6355	; 0x806355 <EP_MEM+0xb>
    2cfe:	89 2b       	or	r24, r25
    2d00:	8a 2b       	or	r24, r26
    2d02:	8b 2b       	or	r24, r27
    2d04:	59 f4       	brne	.+22     	; 0x2d1c <main+0x666>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:603
        /* Parameters that, if incorrectly accepted,           */
        /* would result in division by zero must be corrected. */
        EP_MEM.res_encoding.dwDTERate = 9600UL;
    2d06:	80 92 52 63 	sts	0x6352, r8	; 0x806352 <EP_MEM+0x8>
    2d0a:	90 92 53 63 	sts	0x6353, r9	; 0x806353 <EP_MEM+0x9>
    2d0e:	a0 92 54 63 	sts	0x6354, r10	; 0x806354 <EP_MEM+0xa>
    2d12:	b0 92 55 63 	sts	0x6355, r11	; 0x806355 <EP_MEM+0xb>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:604
        EP_MEM.res_encoding.bDataBits = 8;
    2d16:	88 e0       	ldi	r24, 0x08	; 8
    2d18:	80 93 58 63 	sts	0x6358, r24	; 0x806358 <EP_MEM+0xe>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:608
      }
      D1PRINTF(" GLE=");
      D1PRINTHEX(&EP_MEM.res_encoding, sizeof(LineEncoding_t));
      EP_RES.CNT = sizeof(LineEncoding_t);
    2d1c:	e7 e0       	ldi	r30, 0x07	; 7
    2d1e:	f0 e0       	ldi	r31, 0x00	; 0
    2d20:	e0 93 7a 64 	sts	0x647A, r30	; 0x80647a <EP_TABLE+0x12>
    2d24:	f0 93 7b 64 	sts	0x647B, r31	; 0x80647b <EP_TABLE+0x13>
    2d28:	d2 cd       	rjmp	.-1116   	; 0x28ce <main+0x218>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:610
    }
    else if (bRequest == 0x22) {  /* SET_LINE_STATE */
    2d2a:	82 32       	cpi	r24, 0x22	; 34
    2d2c:	69 f4       	brne	.+26     	; 0x2d48 <main+0x692>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:613
      /* This includes the DTR and RTS settings. */
      D1PRINTF(" SLS=%02X\r\n", (uint8_t)EP_MEM.req_data.wValue);
      USART::set_line_state((uint8_t)EP_MEM.req_data.wValue);
    2d2e:	80 91 4c 63 	lds	r24, 0x634C	; 0x80634c <EP_MEM+0x2>
set_line_state():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:232
      digitalWriteMacro(PIN_VCP_RTS, HIGH);
  #endif

  #if defined(CONFIG_VCP_DTR_RESET)
    /* If DTR is set, the device will reboot assuming the host has opened the port. */
    if (!_set_line_state.bStateDTR && bit_is_set(_line_state, 0)) {
    2d32:	90 91 a0 60 	lds	r25, 0x60A0	; 0x8060a0 <__data_end>
    2d36:	90 fd       	sbrc	r25, 0
    2d38:	04 c0       	rjmp	.+8      	; 0x2d42 <main+0x68c>
    2d3a:	80 ff       	sbrs	r24, 0
    2d3c:	02 c0       	rjmp	.+4      	; 0x2d42 <main+0x68c>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:233
      bit_set(GPCONF, GPCONF_FAL_bp);
    2d3e:	f7 9a       	sbi	0x1e, 7	; 30
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:234
      bit_set(GPCONF, GPCONF_RIS_bp);
    2d40:	f6 9a       	sbi	0x1e, 6	; 30
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:238
    }
  #endif

    _set_line_state.bValue = _line_state;
    2d42:	80 93 a0 60 	sts	0x60A0, r24	; 0x8060a0 <__data_end>
    2d46:	de cd       	rjmp	.-1092   	; 0x2904 <main+0x24e>
request_class():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:616
      EP_RES.CNT = 0;
    }
    else if (bRequest == 0x23) {  /* SET_SEND_BREAK */
    2d48:	83 32       	cpi	r24, 0x23	; 35
    2d4a:	09 f0       	breq	.+2      	; 0x2d4e <main+0x698>
    2d4c:	4a ce       	rjmp	.-876    	; 0x29e2 <main+0x32c>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:620
      /* When the host application closes the port, it may send a BREAK=0. */
      /* Nothing else is used unless programmed by the application. */
      D1PRINTF(" SB=%04X\r\n", EP_MEM.req_data.wValue);
      _send_break = EP_MEM.req_data.wValue;
    2d4e:	80 91 4c 63 	lds	r24, 0x634C	; 0x80634c <EP_MEM+0x2>
    2d52:	90 91 4d 63 	lds	r25, 0x634D	; 0x80634d <EP_MEM+0x3>
    2d56:	80 93 66 64 	sts	0x6466, r24	; 0x806466 <_send_break>
    2d5a:	90 93 67 64 	sts	0x6467, r25	; 0x806467 <_send_break+0x1>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:621
      if (_send_break) break_on();
    2d5e:	89 2b       	or	r24, r25
    2d60:	71 f0       	breq	.+28     	; 0x2d7e <main+0x6c8>
break_on():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:350
    ep_dpo_listen();  /* continue transaction */
  }

  void break_on (void) {
    if (bit_is_set(GPCONF, GPCONF_VCP_bp)
     && bit_is_clear(GPCONF, GPCONF_BRK_bp)) {
    2d62:	f1 9b       	sbis	0x1e, 1	; 30
    2d64:	0a c0       	rjmp	.+20     	; 0x2d7a <main+0x6c4>
    2d66:	f3 99       	sbic	0x1e, 3	; 30
    2d68:	08 c0       	rjmp	.+16     	; 0x2d7a <main+0x6c4>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:352
      /* SET_SEND_BREAK is called when the port is closed successfully. */
      bit_clear(GPCONF, GPCONF_OPN_bp);
    2d6a:	f4 98       	cbi	0x1e, 4	; 30
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:353
      _sof_count = 0;
    2d6c:	10 92 62 64 	sts	0x6462, r1	; 0x806462 <_sof_count>
disable_vcp():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:73
    } while (--_delay);
  }

  /*** Stop the VCP and release the ports in use. ***/
  void disable_vcp (void) {
    if (USART0_CTRLB) {
    2d70:	80 91 06 08 	lds	r24, 0x0806	; 0x800806 <__TEXT_REGION_LENGTH__+0x7f0806>
    2d74:	81 11       	cpse	r24, r1
    2d76:	0e 94 63 0a 	call	0x14c6	; 0x14c6 <USART::disable_vcp() [clone .part.1]>
break_on():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:360
  #ifdef CONFIG_VCP_TXD_ODM
      /* During Break, VCP-TxD is pulled LOW. */
      pinModeMacro(PIN_VCP_TXD, OUTPUT);
  #endif
    }
    bit_set(GPCONF, GPCONF_BRK_bp);
    2d7a:	f3 9a       	sbi	0x1e, 3	; 30
    2d7c:	c3 cd       	rjmp	.-1146   	; 0x2904 <main+0x24e>
request_class():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:622
      /* When the host application closes the port, it may send a BREAK=0. */
      /* Nothing else is used unless programmed by the application. */
      D1PRINTF(" SB=%04X\r\n", EP_MEM.req_data.wValue);
      _send_break = EP_MEM.req_data.wValue;
      if (_send_break) break_on();
      else break_off();
    2d7e:	0e 94 37 06 	call	0xc6e	; 0xc6e <USB::break_off()>
    2d82:	c0 cd       	rjmp	.-1152   	; 0x2904 <main+0x24e>
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/main.cpp:131
    if (USB::is_ep_setup()) USB::handling_control_transactions();

    /* If SW0 was used, work here. */
    if (bit_is_clear(PGCONF, PGCONF_UPDI_bp)) {
      if      (bit_is_set(GPCONF, GPCONF_FAL_bp)) SYS::reset_enter();
      else if (bit_is_set(GPCONF, GPCONF_RIS_bp)) SYS::reset_leave();
    2d84:	f6 9b       	sbis	0x1e, 6	; 30
    2d86:	53 ce       	rjmp	.-858    	; 0x2a2e <main+0x378>
reset_leave():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:402
   * This will be executed when SW0 is released.
   * If the VCP is operating, it will return to normal operation,
   * but if the USB is stopped, it will reboot at the end.
   */
  void reset_leave (void) {
    if (bit_is_set(GPCONF, GPCONF_HLD_bp)) {
    2d88:	f5 9b       	sbis	0x1e, 5	; 30
    2d8a:	12 c0       	rjmp	.+36     	; 0x2db0 <main+0x6fa>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:403
      send_bitmap(_updi_bitmap_leave, sizeof(_updi_bitmap_leave) * 8);
    2d8c:	8c e3       	ldi	r24, 0x3C	; 60
    2d8e:	90 e6       	ldi	r25, 0x60	; 96
    2d90:	0e 94 4e 01 	call	0x29c	; 0x29c <SYS::send_bitmap(unsigned char const*, unsigned int) [clone .constprop.10]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:404
      pinLogicOpen(PIN_PGM_TRST);
    2d94:	01 98       	cbi	0x00, 1	; 0
delay_millis():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/delay_busywait.h:42
    2d96:	ff e1       	ldi	r31, 0x1F	; 31
    2d98:	21 ea       	ldi	r18, 0xA1	; 161
    2d9a:	47 e0       	ldi	r20, 0x07	; 7
    2d9c:	f1 50       	subi	r31, 0x01	; 1
    2d9e:	20 40       	sbci	r18, 0x00	; 0
    2da0:	40 40       	sbci	r20, 0x00	; 0
    2da2:	e1 f7       	brne	.-8      	; 0x2d9c <main+0x6e6>
    2da4:	00 c0       	rjmp	.+0      	; 0x2da6 <main+0x6f0>
    2da6:	00 00       	nop
reset_leave():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:411
      /* A delay of 64ms or more between when the bootloader starts and when RxD opens. */
      delay_125ms();
  #endif
      D1PRINTF("<RST:OUT>\r\n");
      DFLUSH();
      if (bit_is_set(GPCONF, GPCONF_USB_bp))
    2da8:	f0 9b       	sbis	0x1e, 0	; 30
    2daa:	06 c0       	rjmp	.+12     	; 0x2db8 <main+0x702>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:412
        LED_HeartBeat();  /* The USB is ready. */
    2dac:	0e 94 90 05 	call	0xb20	; 0xb20 <SYS::LED_HeartBeat()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:418
      else if (!USB0_ADDR)
        reboot();         /* USB disconnected, System reboot. */
      else
        LED_Flash();      /* USB is not yet enabled. */
    }
    GPCONF &= ~(GPCONF_HLD_bm | GPCONF_RIS_bm | GPCONF_FAL_bm);
    2db0:	8e b3       	in	r24, 0x1e	; 30
    2db2:	8f 71       	andi	r24, 0x1F	; 31
    2db4:	8e bb       	out	0x1e, r24	; 30
    2db6:	3b ce       	rjmp	.-906    	; 0x2a2e <main+0x378>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:413
  #endif
      D1PRINTF("<RST:OUT>\r\n");
      DFLUSH();
      if (bit_is_set(GPCONF, GPCONF_USB_bp))
        LED_HeartBeat();  /* The USB is ready. */
      else if (!USB0_ADDR)
    2db8:	80 91 03 0c 	lds	r24, 0x0C03	; 0x800c03 <__TEXT_REGION_LENGTH__+0x7f0c03>
    2dbc:	81 11       	cpse	r24, r1
    2dbe:	06 c0       	rjmp	.+12     	; 0x2dcc <main+0x716>
reboot():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:429
   * Always run it after the USB has stopped.
   */
  void reboot (void) {
    D1PRINTF("<REBOOT>\r\n");
    DFLUSH();
    _PROTECTED_WRITE(WDT_CTRLA, WDT_PERIOD_8CLK_gc);
    2dc0:	88 ed       	ldi	r24, 0xD8	; 216
    2dc2:	91 e0       	ldi	r25, 0x01	; 1
    2dc4:	84 bf       	out	0x34, r24	; 52
    2dc6:	90 93 00 01 	sts	0x0100, r25	; 0x800100 <__TEXT_REGION_LENGTH__+0x7f0100>
    2dca:	ff cf       	rjmp	.-2      	; 0x2dca <main+0x714>
reset_leave():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:416
      if (bit_is_set(GPCONF, GPCONF_USB_bp))
        LED_HeartBeat();  /* The USB is ready. */
      else if (!USB0_ADDR)
        reboot();         /* USB disconnected, System reboot. */
      else
        LED_Flash();      /* USB is not yet enabled. */
    2dcc:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <SYS::LED_Flash()>
    2dd0:	ef cf       	rjmp	.-34     	; 0x2db0 <main+0x6fa>
read_byte():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:420
    else ep_cdi_listen();
  }

  uint8_t read_byte (void) {
    uint8_t _c = 0;
    if (EP_CDO.CNT != _recv_count) {
    2dd2:	40 91 a2 64 	lds	r20, 0x64A2	; 0x8064a2 <EP_TABLE+0x3a>
    2dd6:	50 91 a3 64 	lds	r21, 0x64A3	; 0x8064a3 <EP_TABLE+0x3b>
    2dda:	28 2f       	mov	r18, r24
    2ddc:	30 e0       	ldi	r19, 0x00	; 0
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:419
    if (_send_count < 64) _sof_count = 30;
    else ep_cdi_listen();
  }

  uint8_t read_byte (void) {
    uint8_t _c = 0;
    2dde:	10 e0       	ldi	r17, 0x00	; 0
read_byte():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:420
    if (EP_CDO.CNT != _recv_count) {
    2de0:	42 17       	cp	r20, r18
    2de2:	53 07       	cpc	r21, r19
    2de4:	39 f0       	breq	.+14     	; 0x2df4 <main+0x73e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:427
      if (_recv_count == 0) {
        D2PRINTF(" VO=%02X:", EP_CDO.CNT);
        D2PRINTHEX(&EP_MEM.cdo_data, EP_CDO.CNT);
      }
  #endif
      _c = EP_MEM.cdo_data[_recv_count++];
    2de6:	8f 5f       	subi	r24, 0xFF	; 255
    2de8:	80 93 64 64 	sts	0x6464, r24	; 0x806464 <_recv_count>
    2dec:	2e 55       	subi	r18, 0x5E	; 94
    2dee:	3c 49       	sbci	r19, 0x9C	; 156
    2df0:	f9 01       	movw	r30, r18
    2df2:	10 81       	ld	r17, Z
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:429
    }
    if (EP_CDO.CNT == _recv_count) ep_cdo_listen();
    2df4:	80 91 a2 64 	lds	r24, 0x64A2	; 0x8064a2 <EP_TABLE+0x3a>
    2df8:	90 91 a3 64 	lds	r25, 0x64A3	; 0x8064a3 <EP_TABLE+0x3b>
    2dfc:	20 91 64 64 	lds	r18, 0x6464	; 0x806464 <_recv_count>
    2e00:	28 17       	cp	r18, r24
    2e02:	19 06       	cpc	r1, r25
    2e04:	11 f4       	brne	.+4      	; 0x2e0a <main+0x754>
    2e06:	0e 94 7e 01 	call	0x2fc	; 0x2fc <USB::ep_cdo_listen()>
vcp_transceiver():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:480
  #if defined(CONFIG_VCP_CTS_ENABLE)
     && !digitalReadMacro(PIN_VCP_CTS)
  #endif
     && bit_is_set(USART0_STATUS, USART_DREIF_bp)
     && read_available()) {
      USART0_TXDATAL = read_byte();
    2e0a:	10 93 02 08 	sts	0x0802, r17	; 0x800802 <__TEXT_REGION_LENGTH__+0x7f0802>
    2e0e:	29 ce       	rjmp	.-942    	; 0x2a62 <main+0x3ac>
read_drop():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:443
    }
    return _s != 0;
  }

  void read_drop (void) {
    if (bit_is_set(EP_CDO.STATUS, USB_BUSNAK_bp)) ep_cdo_listen();
    2e10:	80 91 a0 64 	lds	r24, 0x64A0	; 0x8064a0 <EP_TABLE+0x38>
    2e14:	81 ff       	sbrs	r24, 1
    2e16:	25 ce       	rjmp	.-950    	; 0x2a62 <main+0x3ac>
    2e18:	22 ce       	rjmp	.-956    	; 0x2a5e <main+0x3a8>
cci_break_count():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:379
    if ((_send_break + 1) > 1) {
      if (_send_break > USB_CCI_INTERVAL) {
        if (bit_is_set(EP_CCI.STATUS, USB_BUSNAK_bp)) ep_cci_listen();
      }
      else {
        _send_break = 0;
    2e1a:	10 92 66 64 	sts	0x6466, r1	; 0x806466 <_send_break>
    2e1e:	10 92 67 64 	sts	0x6467, r1	; 0x806467 <_send_break+0x1>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:380
        break_off();
    2e22:	0e 94 37 06 	call	0xc6e	; 0xc6e <USB::break_off()>
    2e26:	45 ce       	rjmp	.-886    	; 0x2ab2 <main+0x3fc>
dap_command_check():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:52
   * Command numbers 0x80 and above are vendor extensions, EDBG Payload uses 0x80 and x81.
   * Additionally, 0x82 is reserved for device event notification.
   */
  bool dap_command_check (void) {
    bool _result = false;
    uint8_t _cmd = EP_MEM.dap_data[0];
    2e28:	90 91 62 63 	lds	r25, 0x6362	; 0x806362 <EP_MEM+0x18>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:53
    uint8_t _sub = EP_MEM.dap_data[1];
    2e2c:	80 91 63 63 	lds	r24, 0x6363	; 0x806363 <EP_MEM+0x19>
ep_dpi_pending():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:264

  bool is_ep_setup (void) { return bit_is_set(EP_REQ.STATUS, USB_EPSETUP_bp); }
  bool is_not_dap (void) { return bit_is_clear(EP_DPO.STATUS, USB_BUSNAK_bp); }
  void ep_req_pending (void) { loop_until_bit_is_set(EP_REQ.STATUS, USB_BUSNAK_bp); }
  void ep_res_pending (void) { loop_until_bit_is_set(EP_RES.STATUS, USB_BUSNAK_bp); }
  void ep_dpi_pending (void) { loop_until_bit_is_set(EP_DPI.STATUS, USB_BUSNAK_bp); }
    2e30:	20 91 88 64 	lds	r18, 0x6488	; 0x806488 <EP_TABLE+0x20>
    2e34:	21 ff       	sbrs	r18, 1
    2e36:	fc cf       	rjmp	.-8      	; 0x2e30 <main+0x77a>
dap_command_check():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:65
     * and the data is sent and received with a fixed length of 64 bytes,
     * determined by the value specified in the HID Report.
     * A maximum of 15 chunks is possible,
     * resulting in a maximum payload length of 900 bytes.
     */
    if (_cmd == 0x80) {             /* DAP_EDBG_VENDOR_AVR_CMD */
    2e38:	90 38       	cpi	r25, 0x80	; 128
    2e3a:	09 f0       	breq	.+2      	; 0x2e3e <main+0x788>
    2e3c:	79 c0       	rjmp	.+242    	; 0x2f30 <main+0x87a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:66
      uint8_t _endf = _sub & 0x0F;
    2e3e:	f8 2f       	mov	r31, r24
    2e40:	ff 70       	andi	r31, 0x0F	; 15
    2e42:	fd 83       	std	Y+5, r31	; 0x05
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:67
      uint8_t _frag = _sub >> 4;
    2e44:	90 e0       	ldi	r25, 0x00	; 0
    2e46:	24 e0       	ldi	r18, 0x04	; 4
    2e48:	95 95       	asr	r25
    2e4a:	87 95       	ror	r24
    2e4c:	2a 95       	dec	r18
    2e4e:	e1 f7       	brne	.-8      	; 0x2e48 <main+0x792>
    2e50:	28 2e       	mov	r2, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:68
      uint8_t _size = EP_MEM.dap_data[3];
    2e52:	e0 90 65 63 	lds	r14, 0x6365	; 0x806365 <EP_MEM+0x1b>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:69
      size_t  _ofst = (_frag - 1) * 60;
    2e56:	01 97       	sbiw	r24, 0x01	; 1
    2e58:	2c e3       	ldi	r18, 0x3C	; 60
    2e5a:	28 9f       	mul	r18, r24
    2e5c:	80 01       	movw	r16, r0
    2e5e:	29 9f       	mul	r18, r25
    2e60:	10 0d       	add	r17, r0
    2e62:	11 24       	eor	r1, r1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:70
      if (_endf >= 10) {
    2e64:	fa 30       	cpi	r31, 0x0A	; 10
    2e66:	20 f0       	brcs	.+8      	; 0x2e70 <main+0x7ba>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:73
        /* Only a maximum of 540 bytes : 9 fragment records is accepted. */
        D1PRINTF("<EDBG_FAIL>\r\n");
        EP_MEM.dap_data[1] = 0x00;  /* EDBG_RSP_FAIL */
    2e68:	10 92 63 63 	sts	0x6363, r1	; 0x806363 <EP_MEM+0x19>
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:51
  /*
   * Command numbers 0x80 and above are vendor extensions, EDBG Payload uses 0x80 and x81.
   * Additionally, 0x82 is reserved for device event notification.
   */
  bool dap_command_check (void) {
    bool _result = false;
    2e6c:	00 e0       	ldi	r16, 0x00	; 0
    2e6e:	26 c0       	rjmp	.+76     	; 0x2ebc <main+0x806>
dap_command_check():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:77
        D1PRINTF("<EDBG_FAIL>\r\n");
        EP_MEM.dap_data[1] = 0x00;  /* EDBG_RSP_FAIL */
      }
      else {
        /* Detect the first chunk. */
        if (_frag == 1) _packet_chunks = 0;
    2e70:	21 e0       	ldi	r18, 0x01	; 1
    2e72:	22 12       	cpse	r2, r18
    2e74:	02 c0       	rjmp	.+4      	; 0x2e7a <main+0x7c4>
    2e76:	10 92 aa 60 	sts	0x60AA, r1	; 0x8060aa <_packet_chunks>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:78
        ++_packet_chunks;
    2e7a:	80 91 aa 60 	lds	r24, 0x60AA	; 0x8060aa <_packet_chunks>
    2e7e:	33 24       	eor	r3, r3
    2e80:	33 94       	inc	r3
    2e82:	38 0e       	add	r3, r24
    2e84:	30 92 aa 60 	sts	0x60AA, r3	; 0x8060aa <_packet_chunks>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:79
        memcpy(&packet.rawData[_ofst], &EP_MEM.dap_data[4], _size);
    2e88:	f1 2c       	mov	r15, r1
    2e8a:	a7 01       	movw	r20, r14
    2e8c:	66 e6       	ldi	r22, 0x66	; 102
    2e8e:	73 e6       	ldi	r23, 0x63	; 99
    2e90:	c8 01       	movw	r24, r16
    2e92:	80 51       	subi	r24, 0x10	; 16
    2e94:	9f 49       	sbci	r25, 0x9F	; 159
    2e96:	fb d3       	rcall	.+2038   	; 0x368e <memcpy>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:80
        EP_MEM.dap_data[1] = 0x01;  /* EDBG_RSP_OK */
    2e98:	81 e0       	ldi	r24, 0x01	; 1
    2e9a:	80 93 63 63 	sts	0x6363, r24	; 0x806363 <EP_MEM+0x19>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:82
        D3PRINTHEX(&EP_MEM.dap_data, _size + 4);
        if (_endf == _frag) {       /* end of defragment */
    2e9e:	4d 81       	ldd	r20, Y+5	; 0x05
    2ea0:	42 11       	cpse	r20, r2
    2ea2:	e4 cf       	rjmp	.-56     	; 0x2e6c <main+0x7b6>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:83
          _packet_length = _ofst + _size;
    2ea4:	0e 0d       	add	r16, r14
    2ea6:	1f 1d       	adc	r17, r15
    2ea8:	00 93 0c 63 	sts	0x630C, r16	; 0x80630c <_packet_length>
    2eac:	10 93 0d 63 	sts	0x630D, r17	; 0x80630d <_packet_length+0x1>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:86
          D2PRINTF(" SQ=%03X:%03X<", packet.out.sequence, _packet_length);
          D2PRINTHEX(&packet, _packet_length);
          if (_packet_chunks == _endf) {
    2eb0:	8d 81       	ldd	r24, Y+5	; 0x05
    2eb2:	83 11       	cpse	r24, r3
    2eb4:	d9 cf       	rjmp	.-78     	; 0x2e68 <main+0x7b2>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:89
            /* True if an EDBG Payload is received. */
            D2PRINTF("<EDBG_OK>\r\n");
            _packet_endfrag = 0;
    2eb6:	10 92 b1 60 	sts	0x60B1, r1	; 0x8060b1 <_packet_endfrag>
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:90
            _result = true;
    2eba:	01 e0       	ldi	r16, 0x01	; 1
ep_dpi_listen():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:283
    loop_until_bit_is_clear(USB0_INTFLAGSB, USB_RMWBUSY_bp);
    USB_EP_STATUS_CLR(USB_EP_RES) = ~USB_TOGGLE_bm;
  }

  void ep_dpi_listen (void) {
    EP_DPI.CNT = 64;
    2ebc:	80 e4       	ldi	r24, 0x40	; 64
    2ebe:	90 e0       	ldi	r25, 0x00	; 0
    2ec0:	80 93 8a 64 	sts	0x648A, r24	; 0x80648a <EP_TABLE+0x22>
    2ec4:	90 93 8b 64 	sts	0x648B, r25	; 0x80648b <EP_TABLE+0x23>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:284
    EP_DPI.MCNT = 0;
    2ec8:	10 92 8e 64 	sts	0x648E, r1	; 0x80648e <EP_TABLE+0x26>
    2ecc:	10 92 8f 64 	sts	0x648F, r1	; 0x80648f <EP_TABLE+0x27>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:285
    loop_until_bit_is_clear(USB0_INTFLAGSB, USB_RMWBUSY_bp);
    2ed0:	80 91 0b 0c 	lds	r24, 0x0C0B	; 0x800c0b <__TEXT_REGION_LENGTH__+0x7f0c0b>
    2ed4:	82 fd       	sbrc	r24, 2
    2ed6:	fc cf       	rjmp	.-8      	; 0x2ed0 <main+0x81a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:286
    USB_EP_STATUS_CLR(USB_EP_DPI) = ~USB_TOGGLE_bm;
    2ed8:	8e ef       	ldi	r24, 0xFE	; 254
    2eda:	80 93 46 0c 	sts	0x0C46, r24	; 0x800c46 <__TEXT_REGION_LENGTH__+0x7f0c46>
ep_dpo_listen():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:290
  }

  void ep_dpo_listen (void) {
    EP_DPO.CNT = 0;
    2ede:	10 92 92 64 	sts	0x6492, r1	; 0x806492 <EP_TABLE+0x2a>
    2ee2:	10 92 93 64 	sts	0x6493, r1	; 0x806493 <EP_TABLE+0x2b>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:291
    loop_until_bit_is_clear(USB0_INTFLAGSB, USB_RMWBUSY_bp);
    2ee6:	80 91 0b 0c 	lds	r24, 0x0C0B	; 0x800c0b <__TEXT_REGION_LENGTH__+0x7f0c0b>
    2eea:	82 fd       	sbrc	r24, 2
    2eec:	fc cf       	rjmp	.-8      	; 0x2ee6 <main+0x830>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:292
    USB_EP_STATUS_CLR(USB_EP_DPO) = ~USB_TOGGLE_bm;
    2eee:	8e ef       	ldi	r24, 0xFE	; 254
    2ef0:	80 93 48 0c 	sts	0x0C48, r24	; 0x800c48 <__TEXT_REGION_LENGTH__+0x7f0c48>
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/main.cpp:165
      continue;
    }
    _wdt = true;

    /*** CMSIS-DAP and JTAG3 packet receiver ***/
    if (JTAG::dap_command_check()) JTAG::jtag_scope_branch();
    2ef4:	00 23       	and	r16, r16
    2ef6:	09 f4       	brne	.+2      	; 0x2efa <main+0x844>
    2ef8:	98 cc       	rjmp	.-1744   	; 0x282a <main+0x174>
jtag_scope_branch():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:402

  /* Processing branches depending on the scope specifier. */
  /* Currently, four types of scope are known: */
  void jtag_scope_branch (void) {
    size_t _rspsize = 0;
    uint8_t _scope  = packet.out.scope;
    2efa:	90 91 f4 60 	lds	r25, 0x60F4	; 0x8060f4 <packet+0x4>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:410
      _packet_length,
      _scope,
      packet.out.cmd,
      packet.out.section,
      packet.out.index);
    if      (_scope == 0x01) _rspsize = jtag_scope_general();       /* SCOPE_GENERAL */
    2efe:	91 30       	cpi	r25, 0x01	; 1
    2f00:	09 f0       	breq	.+2      	; 0x2f04 <main+0x84e>
    2f02:	ab c0       	rjmp	.+342    	; 0x305a <main+0x9a4>
jtag_scope_general():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:175
  }

  /*** Only a subset of JTAGICE3 commands are implemented. ***/
  size_t jtag_scope_general (void) {
    size_t  _rspsize = 0;
    uint8_t _cmd     = packet.out.cmd;
    2f04:	20 91 f5 60 	lds	r18, 0x60F5	; 0x8060f5 <packet+0x5>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:176
    uint8_t _section = packet.out.section;
    2f08:	30 91 f7 60 	lds	r19, 0x60F7	; 0x8060f7 <packet+0x7>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:177
    uint8_t _index   = packet.out.index;
    2f0c:	60 91 f8 60 	lds	r22, 0x60F8	; 0x8060f8 <packet+0x8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:178
    uint8_t _length  = packet.out.length;
    2f10:	00 91 f9 60 	lds	r16, 0x60F9	; 0x8060f9 <packet+0x9>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:179
    if (_cmd == 0x02) {             /* CMD3_GET_PARAMETER */
    2f14:	22 30       	cpi	r18, 0x02	; 2
    2f16:	09 f0       	breq	.+2      	; 0x2f1a <main+0x864>
    2f18:	85 c0       	rjmp	.+266    	; 0x3024 <main+0x96e>
    2f1a:	10 e0       	ldi	r17, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:181
      D1PRINTF(" GEN_GET_PARAM=%02X:%02X:%02X\r\n", _section, _index, _length);
      if (_section == 0) {          /* SET_GET_CTXT_CONFIG */
    2f1c:	31 11       	cpse	r19, r1
    2f1e:	67 c0       	rjmp	.+206    	; 0x2fee <main+0x938>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:183
        /* _index == 0-5 */
        memcpy_P(&packet.in.data[0], &jtag_version[_index], _length);
    2f20:	70 e0       	ldi	r23, 0x00	; 0
    2f22:	64 53       	subi	r22, 0x34	; 52
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:195
          packet.in.wValue = _vtarget;
        }
        else {                      /* PARM3_ANALOG_XXXX */
          /* Called with PowerDebugger HAS_VTARG_ADJ */
          D1PRINTF(" PHYSICAL=%02X:%02X\r\n", _index, _length);
          memcpy_P(&packet.in.data[0], &jtag_physical[_index & 7], _length);
    2f24:	7e 4f       	sbci	r23, 0xFE	; 254
    2f26:	a8 01       	movw	r20, r16
    2f28:	87 ef       	ldi	r24, 0xF7	; 247
    2f2a:	90 e6       	ldi	r25, 0x60	; 96
    2f2c:	48 d3       	rcall	.+1680   	; 0x35be <memcpy_P>
    2f2e:	6c c0       	rjmp	.+216    	; 0x3008 <main+0x952>
dap_command_check():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:100
            EP_MEM.dap_data[1] = 0x00;  /* EDBG_RSP_FAIL */
          }
        }
      }
    }
    else if (_cmd == 0x81) {        /* DAP_EDBG_VENDOR_AVR_RSP */
    2f30:	91 38       	cpi	r25, 0x81	; 129
    2f32:	a9 f5       	brne	.+106    	; 0x2f9e <main+0x8e8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:101
      EP_MEM.dap_data[2] = 0;       /* Always zero */
    2f34:	10 92 64 63 	sts	0x6364, r1	; 0x806364 <EP_MEM+0x1a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:102
      if (_packet_endfrag == 0) {
    2f38:	90 91 b1 60 	lds	r25, 0x60B1	; 0x8060b1 <_packet_endfrag>
    2f3c:	91 11       	cpse	r25, r1
    2f3e:	05 c0       	rjmp	.+10     	; 0x2f4a <main+0x894>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:104
        D1PRINTF("<EDBG_EMPTY>\r\n");
        EP_MEM.dap_data[1] = 0;
    2f40:	10 92 63 63 	sts	0x6363, r1	; 0x806363 <EP_MEM+0x19>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:124
      if (_sub == 0xFF              /* DAP_INFO_PACKET_SIZE      */
       || _sub == 0xFB              /* UART Receive Buffer Size  */
       || _sub == 0xFC) {           /* UART Transmit Buffer Size */
        EP_MEM.dap_data[1] = 0x02;  /* length=2 */
        EP_MEM.dap_data[2] = 0x40;  /* MaxPacketSize = 64 */
        EP_MEM.dap_data[3] = 0x00;
    2f44:	10 92 65 63 	sts	0x6365, r1	; 0x806365 <EP_MEM+0x1b>
    2f48:	91 cf       	rjmp	.-222    	; 0x2e6c <main+0x7b6>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:108
        D1PRINTF("<EDBG_EMPTY>\r\n");
        EP_MEM.dap_data[1] = 0;
        EP_MEM.dap_data[3] = 0;
      }
      else {
        memcpy(&EP_MEM.dap_data[4], &packet.in.token + (_packet_fragment * 60), 60);
    2f4a:	80 91 b2 60 	lds	r24, 0x60B2	; 0x8060b2 <_packet_fragment>
    2f4e:	2c e3       	ldi	r18, 0x3C	; 60
    2f50:	82 9f       	mul	r24, r18
    2f52:	f0 01       	movw	r30, r0
    2f54:	11 24       	eor	r1, r1
    2f56:	ef 50       	subi	r30, 0x0F	; 15
    2f58:	ff 49       	sbci	r31, 0x9F	; 159
    2f5a:	a6 e6       	ldi	r26, 0x66	; 102
    2f5c:	b3 e6       	ldi	r27, 0x63	; 99
    2f5e:	01 90       	ld	r0, Z+
    2f60:	0d 92       	st	X+, r0
    2f62:	2a 95       	dec	r18
    2f64:	e1 f7       	brne	.-8      	; 0x2f5e <main+0x8a8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:109
        EP_MEM.dap_data[1] = ((++_packet_fragment) << 4) | _packet_endfrag;
    2f66:	8f 5f       	subi	r24, 0xFF	; 255
    2f68:	80 93 b2 60 	sts	0x60B2, r24	; 0x8060b2 <_packet_fragment>
    2f6c:	e0 e1       	ldi	r30, 0x10	; 16
    2f6e:	8e 9f       	mul	r24, r30
    2f70:	90 01       	movw	r18, r0
    2f72:	11 24       	eor	r1, r1
    2f74:	29 2b       	or	r18, r25
    2f76:	20 93 63 63 	sts	0x6363, r18	; 0x806363 <EP_MEM+0x19>
    2f7a:	20 91 0c 63 	lds	r18, 0x630C	; 0x80630c <_packet_length>
    2f7e:	30 91 0d 63 	lds	r19, 0x630D	; 0x80630d <_packet_length+0x1>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:110
        EP_MEM.dap_data[3] = _packet_fragment == _packet_endfrag ? _packet_length : 60;
    2f82:	98 17       	cp	r25, r24
    2f84:	51 f0       	breq	.+20     	; 0x2f9a <main+0x8e4>
    2f86:	8c e3       	ldi	r24, 0x3C	; 60
    2f88:	80 93 65 63 	sts	0x6365, r24	; 0x806365 <EP_MEM+0x1b>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:111
        _packet_length -= 60;
    2f8c:	2c 53       	subi	r18, 0x3C	; 60
    2f8e:	31 09       	sbc	r19, r1
    2f90:	20 93 0c 63 	sts	0x630C, r18	; 0x80630c <_packet_length>
    2f94:	30 93 0d 63 	sts	0x630D, r19	; 0x80630d <_packet_length+0x1>
    2f98:	69 cf       	rjmp	.-302    	; 0x2e6c <main+0x7b6>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:110
        EP_MEM.dap_data[3] = 0;
      }
      else {
        memcpy(&EP_MEM.dap_data[4], &packet.in.token + (_packet_fragment * 60), 60);
        EP_MEM.dap_data[1] = ((++_packet_fragment) << 4) | _packet_endfrag;
        EP_MEM.dap_data[3] = _packet_fragment == _packet_endfrag ? _packet_length : 60;
    2f9a:	82 2f       	mov	r24, r18
    2f9c:	f5 cf       	rjmp	.-22     	; 0x2f88 <main+0x8d2>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:118
        D3PRINTHEX(&EP_MEM.dap_data, EP_MEM.dap_data[3] + 4);
      }
    }

    /*** DAP Standard ***/
    else if (_cmd == 0x00) {        /* DAP_CMD_INFO */
    2f9e:	91 11       	cpse	r25, r1
    2fa0:	1a c0       	rjmp	.+52     	; 0x2fd6 <main+0x920>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:119
      if (_sub == 0xFF              /* DAP_INFO_PACKET_SIZE      */
    2fa2:	8f 3f       	cpi	r24, 0xFF	; 255
    2fa4:	21 f0       	breq	.+8      	; 0x2fae <main+0x8f8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:120
       || _sub == 0xFB              /* UART Receive Buffer Size  */
    2fa6:	95 e0       	ldi	r25, 0x05	; 5
    2fa8:	98 0f       	add	r25, r24
    2faa:	92 30       	cpi	r25, 0x02	; 2
    2fac:	38 f4       	brcc	.+14     	; 0x2fbc <main+0x906>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:122
       || _sub == 0xFC) {           /* UART Transmit Buffer Size */
        EP_MEM.dap_data[1] = 0x02;  /* length=2 */
    2fae:	82 e0       	ldi	r24, 0x02	; 2
    2fb0:	80 93 63 63 	sts	0x6363, r24	; 0x806363 <EP_MEM+0x19>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:123
        EP_MEM.dap_data[2] = 0x40;  /* MaxPacketSize = 64 */
    2fb4:	80 e4       	ldi	r24, 0x40	; 64
    2fb6:	80 93 64 63 	sts	0x6364, r24	; 0x806364 <EP_MEM+0x1a>
    2fba:	c4 cf       	rjmp	.-120    	; 0x2f44 <main+0x88e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:128
        EP_MEM.dap_data[3] = 0x00;
        D3PRINTF(" PI=");
        D3PRINTHEX(&EP_MEM.dap_data, 4);
      }
      else if (_sub == 0xF1) {      /* DAP_INFO_Capabilities */
    2fbc:	81 3f       	cpi	r24, 0xF1	; 241
    2fbe:	09 f0       	breq	.+2      	; 0x2fc2 <main+0x90c>
    2fc0:	55 cf       	rjmp	.-342    	; 0x2e6c <main+0x7b6>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:129
        EP_MEM.dap_data[1] = 0x02;  /* length=2 */
    2fc2:	82 e0       	ldi	r24, 0x02	; 2
    2fc4:	80 93 63 63 	sts	0x6363, r24	; 0x806363 <EP_MEM+0x19>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:130
        EP_MEM.dap_data[2] = 0x80;  /* 7:UART Communication Port */
    2fc8:	80 e8       	ldi	r24, 0x80	; 128
    2fca:	80 93 64 63 	sts	0x6364, r24	; 0x806364 <EP_MEM+0x1a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:131
        EP_MEM.dap_data[3] = 0x01;  /* 1:USB COM Port */
    2fce:	81 e0       	ldi	r24, 0x01	; 1
    2fd0:	80 93 65 63 	sts	0x6365, r24	; 0x806365 <EP_MEM+0x1b>
    2fd4:	4b cf       	rjmp	.-362    	; 0x2e6c <main+0x7b6>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:136
        D3PRINTF(" PI=");
        D3PRINTHEX(&EP_MEM.dap_data, 4);
      }
    }
    else if (_cmd == 0x02) {        /* DAP_CMD_CONNECT */
    2fd6:	92 30       	cpi	r25, 0x02	; 2
    2fd8:	09 f4       	brne	.+2      	; 0x2fdc <main+0x926>
    2fda:	48 cf       	rjmp	.-368    	; 0x2e6c <main+0x7b6>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:142
      /* EP_MEM.dap_data[1] == CONN_TYPE */
      /* Here, the response is returned without processing. */
      D3PRINTF(" PI=");
      D3PRINTHEX(&EP_MEM.dap_data, 2);
    }
    else if (_cmd == 0x01           /* DAP_CMD_HOSTSTATUS */
    2fdc:	91 30       	cpi	r25, 0x01	; 1
    2fde:	19 f4       	brne	.+6      	; 0x2fe6 <main+0x930>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:143
          && _sub == 0x00) {        /* DAP_LED_CONNECT */
    2fe0:	81 11       	cpse	r24, r1
    2fe2:	42 cf       	rjmp	.-380    	; 0x2e68 <main+0x7b2>
    2fe4:	43 cf       	rjmp	.-378    	; 0x2e6c <main+0x7b6>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:149
      /* EP_MEM.dap_data[2] == LED_ON/OFF */
      /* Here, the response is returned without processing. */
      D3PRINTF(" PI=");
      D3PRINTHEX(&EP_MEM.dap_data, 3);
    }
    else if (_cmd == 0x03) {        /* DAP_CMD_DISCONNECT */
    2fe6:	93 30       	cpi	r25, 0x03	; 3
    2fe8:	09 f0       	breq	.+2      	; 0x2fec <main+0x936>
    2fea:	3e cf       	rjmp	.-388    	; 0x2e68 <main+0x7b2>
    2fec:	3f cf       	rjmp	.-386    	; 0x2e6c <main+0x7b6>
jtag_scope_general():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:187
        /* _index == 0-5 */
        memcpy_P(&packet.in.data[0], &jtag_version[_index], _length);
        D1PRINTF(" VESRION=");
        D1PRINTHEX(&packet.in.data[0], _length);
      }
      else if (_section == 1) {     /* SET_GET_CTXT_PHYSICAL */
    2fee:	31 30       	cpi	r19, 0x01	; 1
    2ff0:	59 f4       	brne	.+22     	; 0x3008 <main+0x952>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:188
        if (_index == 0 || _index == 0x20) {  /* PARM3_VTARGET */
    2ff2:	86 2f       	mov	r24, r22
    2ff4:	8f 7d       	andi	r24, 0xDF	; 223
    2ff6:	89 f4       	brne	.+34     	; 0x301a <main+0x964>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:190
          /* Called with `-xvtarget` HAS_VTARG_READ */
          packet.in.wValue = _vtarget;
    2ff8:	80 91 ae 60 	lds	r24, 0x60AE	; 0x8060ae <_vtarget>
    2ffc:	90 91 af 60 	lds	r25, 0x60AF	; 0x8060af <_vtarget+0x1>
    3000:	80 93 f7 60 	sts	0x60F7, r24	; 0x8060f7 <packet+0x7>
    3004:	90 93 f8 60 	sts	0x60F8, r25	; 0x8060f8 <packet+0x8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:198
          /* Called with PowerDebugger HAS_VTARG_ADJ */
          D1PRINTF(" PHYSICAL=%02X:%02X\r\n", _index, _length);
          memcpy_P(&packet.in.data[0], &jtag_physical[_index & 7], _length);
        }
      }
      packet.in.res = 0x184;        /* RSP3_DATA */
    3008:	84 e8       	ldi	r24, 0x84	; 132
    300a:	91 e0       	ldi	r25, 0x01	; 1
    300c:	80 93 f5 60 	sts	0x60F5, r24	; 0x8060f5 <packet+0x5>
    3010:	90 93 f6 60 	sts	0x60F6, r25	; 0x8060f6 <packet+0x6>
jtag_scope_edbg():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:256
          D1PRINTF(" TARGET_POWER=%02X\r\n", _jtag_vpow);
          packet.in.data[0] = _jtag_vpow;
        }
      }
      packet.in.res = 0x184;        /* RSP3_DATA */
      _rspsize = _length + 1;
    3014:	0f 5f       	subi	r16, 0xFF	; 255
    3016:	1f 4f       	sbci	r17, 0xFF	; 255
    3018:	b7 c0       	rjmp	.+366    	; 0x3188 <main+0xad2>
jtag_scope_general():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:195
          packet.in.wValue = _vtarget;
        }
        else {                      /* PARM3_ANALOG_XXXX */
          /* Called with PowerDebugger HAS_VTARG_ADJ */
          D1PRINTF(" PHYSICAL=%02X:%02X\r\n", _index, _length);
          memcpy_P(&packet.in.data[0], &jtag_physical[_index & 7], _length);
    301a:	67 70       	andi	r22, 0x07	; 7
    301c:	70 e0       	ldi	r23, 0x00	; 0
    301e:	6c 53       	subi	r22, 0x3C	; 60
    3020:	7e 4f       	sbci	r23, 0xFE	; 254
    3022:	81 cf       	rjmp	.-254    	; 0x2f26 <main+0x870>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:201
        }
      }
      packet.in.res = 0x184;        /* RSP3_DATA */
      _rspsize = _length + 1;
    }
    else if (_cmd == 0x10) {        /* CMD3_SIGN_ON */
    3024:	20 31       	cpi	r18, 0x10	; 16
    3026:	a1 f4       	brne	.+40     	; 0x3050 <main+0x99a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:203
      D1PRINTF(" GEN_SIGN_ON\r\n");
      PGCONF = 0;
    3028:	1f ba       	out	0x1f, r1	; 31
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:204
      _jtag_hvctrl = 0;
    302a:	10 92 ef 60 	sts	0x60EF, r1	; 0x8060ef <_jtag_hvctrl>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:206
      _jtag_unlock = 0;   /* This is not used. */
      _jtag_arch = 0;
    302e:	10 92 46 63 	sts	0x6346, r1	; 0x806346 <_jtag_arch>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:207
      _jtag_vpow = 1;
    3032:	90 93 b0 60 	sts	0x60B0, r25	; 0x8060b0 <_jtag_vpow>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:208
      _vtarget = SYS::get_vdd();
    3036:	0e 94 10 05 	call	0xa20	; 0xa20 <SYS::get_vdd()>
    303a:	80 93 ae 60 	sts	0x60AE, r24	; 0x8060ae <_vtarget>
    303e:	90 93 af 60 	sts	0x60AF, r25	; 0x8060af <_vtarget+0x1>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:214
      D1PRINTF(" VTARGET=%d\r\n", _vtarget);
      packet.in.res = 0x80;         /* RSP3_OK */
    }
    else if (_cmd == 0x11) {        /* CMD3_SIGN_OFF */
      D1PRINTF(" GEN_SIGN_OFF\r\n");
      packet.in.res = 0x80;         /* RSP3_OK */
    3042:	80 e8       	ldi	r24, 0x80	; 128
    3044:	90 e0       	ldi	r25, 0x00	; 0
jtag_scope_avr_core():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:394
  #endif
  #ifdef CONFIG_PGM_PDI_ENABLE
    else if (_jtag_arch == 0x03) _rspsize = PDI::jtag_scope_xmega();    /* XMEGA support */
  #endif
    else if (_jtag_arch == 0x05) _rspsize = UPDI::jtag_scope_updi();    /* UPDI support */
    else packet.in.res = 0xA0;      /* RSP3_FAILED */
    3046:	80 93 f5 60 	sts	0x60F5, r24	; 0x8060f5 <packet+0x5>
    304a:	90 93 f6 60 	sts	0x60F6, r25	; 0x8060f6 <packet+0x6>
    304e:	02 c0       	rjmp	.+4      	; 0x3054 <main+0x99e>
jtag_scope_general():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:212
      _jtag_vpow = 1;
      _vtarget = SYS::get_vdd();
      D1PRINTF(" VTARGET=%d\r\n", _vtarget);
      packet.in.res = 0x80;         /* RSP3_OK */
    }
    else if (_cmd == 0x11) {        /* CMD3_SIGN_OFF */
    3050:	21 31       	cpi	r18, 0x11	; 17
    3052:	b9 f3       	breq	.-18     	; 0x3042 <main+0x98c>
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:174
    D2PRINTHEX(&packet.in.token, _packet_length);
  }

  /*** Only a subset of JTAGICE3 commands are implemented. ***/
  size_t jtag_scope_general (void) {
    size_t  _rspsize = 0;
    3054:	10 e0       	ldi	r17, 0x00	; 0
    3056:	00 e0       	ldi	r16, 0x00	; 0
    3058:	97 c0       	rjmp	.+302    	; 0x3188 <main+0xad2>
jtag_scope_branch():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:416
  #ifdef _Not_yet_implemented_stub_
    else if (_scope == 0x00) _rspsize = jtag_scope_info();          /* SCOPE_INFO */ /* Not used with EDBG/CMSIS-DAP type */
    else if (_scope == 0x11) _rspsize = ISP::jtag_scope_isp();      /* SCOPE_AVR_ISP */
    else if (_scope == 0x13) _rspsize = AVR32::jtag_scope_avr32();  /* SCOPE_AVR32 */
  #endif
    else if (_scope == 0x12) _rspsize = jtag_scope_avr_core();      /* SCOPE_AVR */
    305a:	92 31       	cpi	r25, 0x12	; 18
    305c:	09 f0       	breq	.+2      	; 0x3060 <main+0x9aa>
    305e:	c6 c1       	rjmp	.+908    	; 0x33ec <main+0xd36>
jtag_scope_avr_core():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:264
  }

  /* The AVR scope is further branched by the ARCH designator. */
  size_t jtag_scope_avr_core (void) {
    size_t  _rspsize = 0;
    uint8_t _cmd     = packet.out.cmd;
    3060:	90 91 f5 60 	lds	r25, 0x60F5	; 0x8060f5 <packet+0x5>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:265
    uint8_t _section = packet.out.section;
    3064:	20 91 f7 60 	lds	r18, 0x60F7	; 0x8060f7 <packet+0x7>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:266
    uint8_t _index   = packet.out.index;
    3068:	30 91 f8 60 	lds	r19, 0x60F8	; 0x8060f8 <packet+0x8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:267
    uint8_t _length  = packet.out.length;
    306c:	40 91 f9 60 	lds	r20, 0x60F9	; 0x8060f9 <packet+0x9>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:268
    if (_cmd == 0x01) {             /* CMD3_SET_PARAMETER */
    3070:	91 30       	cpi	r25, 0x01	; 1
    3072:	09 f0       	breq	.+2      	; 0x3076 <main+0x9c0>
    3074:	4c c0       	rjmp	.+152    	; 0x310e <main+0xa58>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:269
      uint16_t _data = packet.out.wValue & 0xFF;
    3076:	60 91 fa 60 	lds	r22, 0x60FA	; 0x8060fa <packet+0xa>
    307a:	70 91 fb 60 	lds	r23, 0x60FB	; 0x8060fb <packet+0xb>
    307e:	cb 01       	movw	r24, r22
    3080:	99 27       	eor	r25, r25
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:271
      D1PRINTF(" AVR_SET_PARAM=%02X:%02X:%02X:%02X\r\n", _section, _index, _length, _data);
      if (_section == 0) {          /* SET_GET_CTXT_CONFIG */
    3082:	21 11       	cpse	r18, r1
    3084:	17 c0       	rjmp	.+46     	; 0x30b4 <main+0x9fe>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:272
        if (_index == 0) {          /* PARM3_ARCH */
    3086:	31 11       	cpse	r19, r1
    3088:	dc cf       	rjmp	.-72     	; 0x3042 <main+0x98c>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:274
          D1PRINTF(" ARCH=%02X\r\n", _data);
          _jtag_arch = _data;       /* 5:UPDI 3:PDI */
    308a:	60 93 46 63 	sts	0x6346, r22	; 0x806346 <_jtag_arch>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:275
          if (_jtag_arch == 3) {
    308e:	63 30       	cpi	r22, 0x03	; 3
    3090:	09 f4       	brne	.+2      	; 0x3094 <main+0x9de>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:277
            #ifdef PIN_PGM_PDAT
            openDrainWriteMacro(PIN_PGM_PDAT, LOW);
    3092:	04 9a       	sbi	0x00, 4	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:280
            #endif
          }
          _xclk = _data == 5 ? UPDI_CLK : PDI_CLK;
    3094:	05 97       	sbiw	r24, 0x05	; 5
    3096:	59 f4       	brne	.+22     	; 0x30ae <main+0x9f8>
main():
    3098:	81 ee       	ldi	r24, 0xE1	; 225
    309a:	90 e0       	ldi	r25, 0x00	; 0
jtag_scope_avr_core():
    309c:	80 93 47 63 	sts	0x6347, r24	; 0x806347 <_xclk>
    30a0:	90 93 48 63 	sts	0x6348, r25	; 0x806348 <_xclk+0x1>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:281
          _xclk_bak = _xclk;
    30a4:	80 93 ac 60 	sts	0x60AC, r24	; 0x8060ac <_xclk_bak>
    30a8:	90 93 ad 60 	sts	0x60AD, r25	; 0x8060ad <_xclk_bak+0x1>
    30ac:	ca cf       	rjmp	.-108    	; 0x3042 <main+0x98c>
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:280
          if (_jtag_arch == 3) {
            #ifdef PIN_PGM_PDAT
            openDrainWriteMacro(PIN_PGM_PDAT, LOW);
            #endif
          }
          _xclk = _data == 5 ? UPDI_CLK : PDI_CLK;
    30ae:	84 ef       	ldi	r24, 0xF4	; 244
    30b0:	91 e0       	ldi	r25, 0x01	; 1
    30b2:	f4 cf       	rjmp	.-24     	; 0x309c <main+0x9e6>
jtag_scope_avr_core():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:289
        else if (_index == 1) {     /* PARM3_SESS_PURPOSE */
          D1PRINTF(" SESS_PURPOSE=%02X\r\n", _data);
          _jtag_sess = _data;
        }
      }
      else if (_section == 1) {     /* SET_GET_CTXT_PHYSICAL */
    30b4:	21 30       	cpi	r18, 0x01	; 1
    30b6:	b1 f4       	brne	.+44     	; 0x30e4 <main+0xa2e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:290
        if (_index == 0) {          /* PARM3_CONNECTION */
    30b8:	31 11       	cpse	r19, r1
    30ba:	03 c0       	rjmp	.+6      	; 0x30c2 <main+0xa0c>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:292
          D1PRINTF(" CONNECTION=%02X\r\n", _data);
          _jtag_conn = _data;       /* 8:PARM3_CONN_UPDI */
    30bc:	60 93 ab 60 	sts	0x60AB, r22	; 0x8060ab <_jtag_conn>
    30c0:	c0 cf       	rjmp	.-128    	; 0x3042 <main+0x98c>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:294
        }
        else if (_index == 0x31) {  /* PARM3_CLK_XMEGA_PDI */
    30c2:	31 33       	cpi	r19, 0x31	; 49
    30c4:	09 f0       	breq	.+2      	; 0x30c8 <main+0xa12>
    30c6:	bd cf       	rjmp	.-134    	; 0x3042 <main+0x98c>
    30c8:	88 32       	cpi	r24, 0x28	; 40
    30ca:	91 05       	cpc	r25, r1
    30cc:	10 f4       	brcc	.+4      	; 0x30d2 <main+0xa1c>
    30ce:	88 e2       	ldi	r24, 0x28	; 40
    30d0:	90 e0       	ldi	r25, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:301
          /* XCLK Range Limitation : LSB=kHz */
          if (_data < 40) _data = 40;
  #if defined(DEBUG)
          if (_xclk != _data) D1PRINTF(" FIX_XCLK=%d\r\n", _xclk);
  #endif
          _xclk = _xclk_bak = _data;
    30d2:	80 93 ac 60 	sts	0x60AC, r24	; 0x8060ac <_xclk_bak>
    30d6:	90 93 ad 60 	sts	0x60AD, r25	; 0x8060ad <_xclk_bak+0x1>
    30da:	80 93 47 63 	sts	0x6347, r24	; 0x806347 <_xclk>
    30de:	90 93 48 63 	sts	0x6348, r25	; 0x806348 <_xclk+0x1>
    30e2:	af cf       	rjmp	.-162    	; 0x3042 <main+0x98c>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:304
        }
      }
      else if (_section == 2) {     /* SET_GET_CTXT_DEVICE */
    30e4:	22 30       	cpi	r18, 0x02	; 2
    30e6:	51 f4       	brne	.+20     	; 0x30fc <main+0xa46>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:305
        if (_index == 0) {          /* PARM3_DEVICEDESC */
    30e8:	31 11       	cpse	r19, r1
    30ea:	ab cf       	rjmp	.-170    	; 0x3042 <main+0x98c>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:307
          D1PRINTF(" DEVICEDESC=%X\r\n", _length);
          memcpy(&Device_Descriptor, &packet.out.setData[0], _length & 63);
    30ec:	4f 73       	andi	r20, 0x3F	; 63
    30ee:	50 e0       	ldi	r21, 0x00	; 0
    30f0:	6a ef       	ldi	r22, 0xFA	; 250
    30f2:	70 e6       	ldi	r23, 0x60	; 96
    30f4:	8e e0       	ldi	r24, 0x0E	; 14
    30f6:	93 e6       	ldi	r25, 0x63	; 99
    30f8:	ca d2       	rcall	.+1428   	; 0x368e <memcpy>
    30fa:	a3 cf       	rjmp	.-186    	; 0x3042 <main+0x98c>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:347
          }
          /* STUB: And other descriptors. */
  #endif
        }
      }
      else if (_section == 3) {     /* SET_GET_CTXT_OPTIONS */
    30fc:	23 30       	cpi	r18, 0x03	; 3
    30fe:	09 f0       	breq	.+2      	; 0x3102 <main+0xa4c>
    3100:	a0 cf       	rjmp	.-192    	; 0x3042 <main+0x98c>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:348
        if (_index == 6) {          /* PARM3_OPT_12V_UPDI_ENABLE */
    3102:	36 30       	cpi	r19, 0x06	; 6
    3104:	09 f0       	breq	.+2      	; 0x3108 <main+0xa52>
    3106:	9d cf       	rjmp	.-198    	; 0x3042 <main+0x98c>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:351
          /* Called with `-xhvupdi` hvupdi_support */
          D1PRINTF(" HVCTRLEN=%02X\r\n", _data);
          _jtag_hvctrl = _data;     /* 1:ENABLE */
    3108:	60 93 ef 60 	sts	0x60EF, r22	; 0x8060ef <_jtag_hvctrl>
    310c:	9a cf       	rjmp	.-204    	; 0x3042 <main+0x98c>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:363
          _jtag_unlock = _data;     /* 1:ENABLE */
        }
      }
      packet.in.res = 0x80;         /* RSP3_OK */
    }
    else if (_cmd == 0x02) {        /* CMD3_GET_PARAMETER */
    310e:	92 30       	cpi	r25, 0x02	; 2
    3110:	19 f5       	brne	.+70     	; 0x3158 <main+0xaa2>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:365
      D1PRINTF(" AVR_GET_PARAMETER=%02X:%02X:%02X\r\n", _section, _index, _length);
      if (_section == 0) {          /* SET_GET_CTXT_CONFIG */
    3112:	21 11       	cpse	r18, r1
    3114:	0d c0       	rjmp	.+26     	; 0x3130 <main+0xa7a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:368
        if (_index == 0) {          /* PARM3_ARCH */
          D1PRINTF(" ARCH=%02X\r\n", _jtag_arch);
          packet.in.data[0] = _jtag_arch;
    3116:	80 91 46 63 	lds	r24, 0x6346	; 0x806346 <_jtag_arch>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:366
      packet.in.res = 0x80;         /* RSP3_OK */
    }
    else if (_cmd == 0x02) {        /* CMD3_GET_PARAMETER */
      D1PRINTF(" AVR_GET_PARAMETER=%02X:%02X:%02X\r\n", _section, _index, _length);
      if (_section == 0) {          /* SET_GET_CTXT_CONFIG */
        if (_index == 0) {          /* PARM3_ARCH */
    311a:	33 23       	and	r19, r19
    311c:	79 f0       	breq	.+30     	; 0x313c <main+0xa86>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:383
          /* `-B <num>khz` : "khz" units are required. */
          D1PRINTF(" XCLK=%d\r\n", _xclk);
          packet.in.wValue = _xclk;
        }
      }
      packet.in.res = 0x184;        /* RSP3_DATA */
    311e:	84 e8       	ldi	r24, 0x84	; 132
    3120:	91 e0       	ldi	r25, 0x01	; 1
    3122:	80 93 f5 60 	sts	0x60F5, r24	; 0x8060f5 <packet+0x5>
    3126:	90 93 f6 60 	sts	0x60F6, r25	; 0x8060f6 <packet+0x6>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:384
      _rspsize = _length + 1;
    312a:	04 2f       	mov	r16, r20
jtag_scope_edbg():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:256
          D1PRINTF(" TARGET_POWER=%02X\r\n", _jtag_vpow);
          packet.in.data[0] = _jtag_vpow;
        }
      }
      packet.in.res = 0x184;        /* RSP3_DATA */
      _rspsize = _length + 1;
    312c:	10 e0       	ldi	r17, 0x00	; 0
    312e:	72 cf       	rjmp	.-284    	; 0x3014 <main+0x95e>
jtag_scope_avr_core():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:371
        if (_index == 0) {          /* PARM3_ARCH */
          D1PRINTF(" ARCH=%02X\r\n", _jtag_arch);
          packet.in.data[0] = _jtag_arch;
        }
      }
      else if (_section == 1) {     /* SET_GET_CTXT_PHYSICAL */
    3130:	21 30       	cpi	r18, 0x01	; 1
    3132:	a9 f7       	brne	.-22     	; 0x311e <main+0xa68>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:372
        if (_index == 0) {          /* PARM3_CONNECTION */
    3134:	31 11       	cpse	r19, r1
    3136:	05 c0       	rjmp	.+10     	; 0x3142 <main+0xa8c>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:375
          /* This is a stub that is called but not used. */
          D1PRINTF(" CONNECTION=%02X\r\n", _jtag_conn);
          packet.in.data[0] = _jtag_conn;
    3138:	80 91 ab 60 	lds	r24, 0x60AB	; 0x8060ab <_jtag_conn>
    313c:	80 93 f7 60 	sts	0x60F7, r24	; 0x8060f7 <packet+0x7>
    3140:	ee cf       	rjmp	.-36     	; 0x311e <main+0xa68>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:377
        }
        else if (_index == 0x31) {  /* PARM3_CLK_XMEGA_PDI */
    3142:	31 33       	cpi	r19, 0x31	; 49
    3144:	61 f7       	brne	.-40     	; 0x311e <main+0xa68>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:380
          /* `-B <num>khz` : "khz" units are required. */
          D1PRINTF(" XCLK=%d\r\n", _xclk);
          packet.in.wValue = _xclk;
    3146:	80 91 47 63 	lds	r24, 0x6347	; 0x806347 <_xclk>
    314a:	90 91 48 63 	lds	r25, 0x6348	; 0x806348 <_xclk+0x1>
    314e:	80 93 f7 60 	sts	0x60F7, r24	; 0x8060f7 <packet+0x7>
    3152:	90 93 f8 60 	sts	0x60F8, r25	; 0x8060f8 <packet+0x8>
    3156:	e3 cf       	rjmp	.-58     	; 0x311e <main+0xa68>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:391
  #ifdef _Not_yet_implemented_stub_
    else if (_jtag_arch == 0x01) _rspsize = DWI::jtag_scope_tiny();     /* dWire? */
    else if (_jtag_arch == 0x02) _rspsize = ISP::jtag_scope_mega();     /* MEGA */
  #endif
  #ifdef CONFIG_PGM_PDI_ENABLE
    else if (_jtag_arch == 0x03) _rspsize = PDI::jtag_scope_xmega();    /* XMEGA support */
    3158:	80 91 46 63 	lds	r24, 0x6346	; 0x806346 <_jtag_arch>
    315c:	83 30       	cpi	r24, 0x03	; 3
    315e:	09 f0       	breq	.+2      	; 0x3162 <main+0xaac>
    3160:	95 c0       	rjmp	.+298    	; 0x328c <main+0xbd6>
jtag_scope_xmega():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:383
  }

  size_t jtag_scope_xmega (void) {
    size_t _rspsize = 0;
    uint8_t _cmd = packet.out.cmd;
    if (_cmd == 0x10) {             /* CMD3_SIGN_ON */
    3162:	90 31       	cpi	r25, 0x10	; 16
    3164:	51 f5       	brne	.+84     	; 0x31ba <main+0xb04>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:385
      D1PRINTF(" PDI_SIGN_ON=EXT:%02X\r\n", packet.out.bMType);
      _rspsize = Timeout::command(&connect);
    3166:	40 e2       	ldi	r20, 0x20	; 32
    3168:	53 e0       	ldi	r21, 0x03	; 3
    316a:	70 e0       	ldi	r23, 0x00	; 0
    316c:	60 e0       	ldi	r22, 0x00	; 0
    316e:	87 ee       	ldi	r24, 0xE7	; 231
    3170:	9e e0       	ldi	r25, 0x0E	; 14
    3172:	3b da       	rcall	.-2954   	; 0x25ea <Timeout::command(unsigned int (*)(), unsigned int (*)(), unsigned int)>
    3174:	8c 01       	movw	r16, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:386
      packet.in.res = _rspsize ? 0x84 : 0xA0; /* RSP3_DATA : RSP3_FAILED */
    3176:	89 2b       	or	r24, r25
    3178:	09 f4       	brne	.+2      	; 0x317c <main+0xac6>
    317a:	7b c0       	rjmp	.+246    	; 0x3272 <main+0xbbc>
jtag_scope_updi():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:498
    if (_cmd == 0x10) {             /* CMD3_SIGN_ON */
      D1PRINTF(" UPDI_SIGN_ON=EXT:%02X\r\n", packet.out.bMType);
      _xclk = _xclk_bak;
      while (!(_rspsize = Timeout::command(&connect, nullptr, 150))) _xclk -= 25;
      /* If it fails here, it is expected to try again, giving it a chance at HV control. */
      packet.in.res = _rspsize ? 0x84 : 0xA0; /* RSP3_DATA : RSP3_FAILED */
    317c:	84 e8       	ldi	r24, 0x84	; 132
    317e:	90 e0       	ldi	r25, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:559
    else if (_cmd == 0x23) {        /* CMD3_WRITE_MEMORY */
      D1PRINTF(" UPDI_WRITE=%02X:%06lX:%04X\r\n", packet.out.bMType,
        packet.out.dwAddr, (size_t)packet.out.dwLength);
      _rspsize = Timeout::command(Command_Table.write_memory, &timeout_fallback);
    }
    packet.in.res = _rspsize ? 0x80 : 0xA0;     /* RSP3_OK : RSP3_FAILED */
    3180:	80 93 f5 60 	sts	0x60F5, r24	; 0x8060f5 <packet+0x5>
    3184:	90 93 f6 60 	sts	0x60F6, r25	; 0x8060f6 <packet+0x6>
complete_jtag_transactions():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:163
    return _result; /* True if an EDBG Payload is received. */
  }

  /*** Prepare for EDBG payload request from device to host ***/
  void complete_jtag_transactions (size_t _length) {
    _packet_length = _length + 6; /* TOKEN + SEQ[2] + EOT + PAD */
    3188:	98 01       	movw	r18, r16
    318a:	2a 5f       	subi	r18, 0xFA	; 250
    318c:	3f 4f       	sbci	r19, 0xFF	; 255
    318e:	20 93 0c 63 	sts	0x630C, r18	; 0x80630c <_packet_length>
    3192:	30 93 0d 63 	sts	0x630D, r19	; 0x80630d <_packet_length+0x1>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:164
    _packet_fragment = 0;
    3196:	10 92 b2 60 	sts	0x60B2, r1	; 0x8060b2 <_packet_fragment>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:165
    _packet_endfrag = (_length + 65) / 60;  /* 1 to 15 */
    319a:	c8 01       	movw	r24, r16
    319c:	8f 5b       	subi	r24, 0xBF	; 191
    319e:	9f 4f       	sbci	r25, 0xFF	; 255
    31a0:	6c e3       	ldi	r22, 0x3C	; 60
    31a2:	70 e0       	ldi	r23, 0x00	; 0
    31a4:	15 d2       	rcall	.+1066   	; 0x35d0 <__udivmodhi4>
    31a6:	60 93 b1 60 	sts	0x60B1, r22	; 0x8060b1 <_packet_endfrag>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:166
    packet.in.token = 0x0E;                 /* TOKEN */
    31aa:	8e e0       	ldi	r24, 0x0E	; 14
    31ac:	80 93 f1 60 	sts	0x60F1, r24	; 0x8060f1 <packet+0x1>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:167
    packet.rawData[_packet_length] = 0;     /* EOT */
    31b0:	20 51       	subi	r18, 0x10	; 16
    31b2:	3f 49       	sbci	r19, 0x9F	; 159
    31b4:	f9 01       	movw	r30, r18
    31b6:	10 82       	st	Z, r1
    31b8:	38 cb       	rjmp	.-2448   	; 0x282a <main+0x174>
jtag_scope_xmega():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:389
      return _rspsize;
    }
    else if (_cmd == 0x11) {        /* CMD3_SIGN_OFF */
    31ba:	91 31       	cpi	r25, 0x11	; 17
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:392
      D1PRINTF(" PDI_SIGN_OFF\r\n");
      /* If UPDI control has failed, RSP3_OK is always returned. */
      _rspsize = Timeout::command(&disconnect);
    31bc:	59 f5       	brne	.+86     	; 0x3214 <main+0xb5e>
    31be:	40 e2       	ldi	r20, 0x20	; 32
    31c0:	53 e0       	ldi	r21, 0x03	; 3
    31c2:	70 e0       	ldi	r23, 0x00	; 0
    31c4:	60 e0       	ldi	r22, 0x00	; 0
    31c6:	8c e1       	ldi	r24, 0x1C	; 28
    31c8:	97 e0       	ldi	r25, 0x07	; 7
    31ca:	0f da       	rcall	.-3042   	; 0x25ea <Timeout::command(unsigned int (*)(), unsigned int (*)(), unsigned int)>
    31cc:	8c 01       	movw	r16, r24
delay_micros():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/delay_busywait.h:33
static __inline__ __attribute__((__always_inline__)) void delay_micros (uint32_t _us);
static __inline__ __attribute__((__always_inline__)) void delay_millis (uint32_t _ms);

void delay_micros (uint32_t _us) {
  if (F_CPU >= 1000000L) {
    __builtin_avr_delay_cycles((F_CPU / 1000000L) * _us);
    31ce:	83 ef       	ldi	r24, 0xF3	; 243
    31d0:	91 e0       	ldi	r25, 0x01	; 1
    31d2:	01 97       	sbiw	r24, 0x01	; 1
    31d4:	f1 f7       	brne	.-4      	; 0x31d2 <main+0xb1c>
    31d6:	00 c0       	rjmp	.+0      	; 0x31d8 <main+0xb22>
    31d8:	00 00       	nop
jtag_scope_xmega():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:394
      SYS::delay_100us();
      USART::setup();
    31da:	0e 94 7a 0a 	call	0x14f4	; 0x14f4 <USART::setup()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:395
      pinLogicOpen(PIN_PGM_PDAT);
    31de:	04 98       	cbi	0x00, 4	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:396
      pinControlRegister(PIN_PGM_PCLK) = 0;
    31e0:	10 92 16 04 	sts	0x0416, r1	; 0x800416 <__TEXT_REGION_LENGTH__+0x7f0416>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:397
      digitalWriteMacro(PIN_PGM_PCLK, LOW);
    31e4:	0e 98       	cbi	0x01, 6	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:398
      pinLogicPush(PIN_PGM_PCLK);
    31e6:	06 9a       	sbi	0x00, 6	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:399
      if (bit_is_set(PGCONF, PGCONF_PROG_bp)) {
    31e8:	f9 9b       	sbis	0x1f, 1	; 31
    31ea:	0a c0       	rjmp	.+20     	; 0x3200 <main+0xb4a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:400
        SYS::power_reset();
    31ec:	61 e0       	ldi	r22, 0x01	; 1
    31ee:	81 e0       	ldi	r24, 0x01	; 1
    31f0:	0e 94 bf 0e 	call	0x1d7e	; 0x1d7e <SYS::power_reset(bool, bool)>
delay_micros():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/delay_busywait.h:33
    31f4:	e3 ed       	ldi	r30, 0xD3	; 211
    31f6:	f0 e3       	ldi	r31, 0x30	; 48
    31f8:	31 97       	sbiw	r30, 0x01	; 1
    31fa:	f1 f7       	brne	.-4      	; 0x31f8 <main+0xb42>
    31fc:	00 c0       	rjmp	.+0      	; 0x31fe <main+0xb48>
    31fe:	00 00       	nop
jtag_scope_xmega():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:403
        SYS::delay_2500us();
      }
      pinLogicOpen(PIN_PGM_PCLK);
    3200:	06 98       	cbi	0x00, 6	; 0
jtag_scope_updi():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:511
      USART::setup();
      pinLogicPush(PIN_PGM_TRST);
      SYS::power_reset();
      SYS::delay_2500us();
      pinLogicOpen(PIN_PGM_TRST);
      PGCONF = 0;
    3202:	1f ba       	out	0x1f, r1	; 31
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:512
      USART::change_vcp();
    3204:	0e 94 a6 05 	call	0xb4c	; 0xb4c <USART::change_vcp()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:559
    else if (_cmd == 0x23) {        /* CMD3_WRITE_MEMORY */
      D1PRINTF(" UPDI_WRITE=%02X:%06lX:%04X\r\n", packet.out.bMType,
        packet.out.dwAddr, (size_t)packet.out.dwLength);
      _rspsize = Timeout::command(Command_Table.write_memory, &timeout_fallback);
    }
    packet.in.res = _rspsize ? 0x80 : 0xA0;     /* RSP3_OK : RSP3_FAILED */
    3208:	01 15       	cp	r16, r1
    320a:	11 05       	cpc	r17, r1
    320c:	91 f1       	breq	.+100    	; 0x3272 <main+0xbbc>
main():
    320e:	80 e8       	ldi	r24, 0x80	; 128
    3210:	90 e0       	ldi	r25, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:407
      PGCONF = 0;
      USART::change_vcp();
    }
    else if (_cmd == 0x15) {        /* CMD3_ENTER_PROGMODE */
    3212:	b6 cf       	rjmp	.-148    	; 0x3180 <main+0xaca>
jtag_scope_xmega():
    3214:	95 31       	cpi	r25, 0x15	; 21
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:410
      D1PRINTF(" PDI_ENTER_PROG\r\n");
      /* On failure, RSP3_OK is returned if a PDI connection is available. */
      _rspsize = Timeout::command(&enter_progmode, &timeout_fallback) || bit_is_set(PGCONF, PGCONF_UPDI_bp);
    3216:	69 f4       	brne	.+26     	; 0x3232 <main+0xb7c>
    3218:	40 e2       	ldi	r20, 0x20	; 32
    321a:	53 e0       	ldi	r21, 0x03	; 3
    321c:	61 e1       	ldi	r22, 0x11	; 17
    321e:	79 e0       	ldi	r23, 0x09	; 9
    3220:	89 e0       	ldi	r24, 0x09	; 9
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:518
    }
    else if (_cmd == 0x15) {        /* CMD3_ENTER_PROGMODE */
      D1PRINTF(" UPDI_ENTER_PROG\r\n");
      /* On failure, RSP3_OK is returned if a UPDI connection is available. */
      /* Locked devices are given the opportunity to write to USERROW and erase the chip. */
      _rspsize = Timeout::command(&enter_progmode, &timeout_fallback, 400)
    3222:	97 e0       	ldi	r25, 0x07	; 7
jtag_scope_updi():
    3224:	e2 d9       	rcall	.-3132   	; 0x25ea <Timeout::command(unsigned int (*)(), unsigned int (*)(), unsigned int)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:519
              || bit_is_set(PGCONF, PGCONF_UPDI_bp);
    3226:	89 2b       	or	r24, r25
    3228:	11 f4       	brne	.+4      	; 0x322e <main+0xb78>
    322a:	0f b3       	in	r16, 0x1f	; 31
    322c:	01 70       	andi	r16, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:518
    }
    else if (_cmd == 0x15) {        /* CMD3_ENTER_PROGMODE */
      D1PRINTF(" UPDI_ENTER_PROG\r\n");
      /* On failure, RSP3_OK is returned if a UPDI connection is available. */
      /* Locked devices are given the opportunity to write to USERROW and erase the chip. */
      _rspsize = Timeout::command(&enter_progmode, &timeout_fallback, 400)
    322e:	10 e0       	ldi	r17, 0x00	; 0
    3230:	eb cf       	rjmp	.-42     	; 0x3208 <main+0xb52>
jtag_scope_xmega():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:412
    }
    else if (_cmd == 0x16) {        /* CMD3_LEAVE_PROGMODE */
    3232:	96 31       	cpi	r25, 0x16	; 22
    3234:	09 f4       	brne	.+2      	; 0x3238 <main+0xb82>
    3236:	d1 c0       	rjmp	.+418    	; 0x33da <main+0xd24>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:418
      D1PRINTF(" PDI_LEAVE_PROG\r\n");
      /* There is nothing to do. */
      /* The actual termination process is delayed until CMD3_SIGN_OFF. */
      _rspsize = 1;
    }
    else if (bit_is_clear(PGCONF, PGCONF_PROG_bp)) { /* empty */ }
    3238:	f9 9b       	sbis	0x1f, 1	; 31
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:419
    else if (_cmd == 0x20) {        /* CMD3_ERASE_MEMORY */
    323a:	d2 c0       	rjmp	.+420    	; 0x33e0 <main+0xd2a>
    323c:	90 32       	cpi	r25, 0x20	; 32
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:422
      D1PRINTF(" PDI_ERASE=%02X:%08lX\r\n",
        packet.out.bEType, packet.out.dwPageAddr);
      _rspsize = Timeout::command(&erase_memory, &timeout_fallback);
    323e:	49 f4       	brne	.+18     	; 0x3252 <main+0xb9c>
    3240:	40 e2       	ldi	r20, 0x20	; 32
    3242:	53 e0       	ldi	r21, 0x03	; 3
    3244:	61 e1       	ldi	r22, 0x11	; 17
    3246:	79 e0       	ldi	r23, 0x09	; 9
    3248:	85 ec       	ldi	r24, 0xC5	; 197
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:557
      return _rspsize;
    }
    else if (_cmd == 0x23) {        /* CMD3_WRITE_MEMORY */
      D1PRINTF(" UPDI_WRITE=%02X:%06lX:%04X\r\n", packet.out.bMType,
        packet.out.dwAddr, (size_t)packet.out.dwLength);
      _rspsize = Timeout::command(Command_Table.write_memory, &timeout_fallback);
    324a:	98 e0       	ldi	r25, 0x08	; 8
jtag_scope_updi():
    324c:	ce d9       	rcall	.-3172   	; 0x25ea <Timeout::command(unsigned int (*)(), unsigned int (*)(), unsigned int)>
    324e:	8c 01       	movw	r16, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:424
    }
    else if (_cmd == 0x21) {        /* CMD3_READ_MEMORY */
    3250:	db cf       	rjmp	.-74     	; 0x3208 <main+0xb52>
jtag_scope_xmega():
    3252:	91 32       	cpi	r25, 0x21	; 33
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:427
      D1PRINTF(" PDI_READ=%02X:%08lX:%04X\r\n", packet.out.bMType,
        packet.out.dwAddr, (size_t)packet.out.dwLength);
      _rspsize = Timeout::command(&read_memory, &timeout_fallback);
    3254:	89 f4       	brne	.+34     	; 0x3278 <main+0xbc2>
    3256:	40 e2       	ldi	r20, 0x20	; 32
    3258:	53 e0       	ldi	r21, 0x03	; 3
    325a:	61 e1       	ldi	r22, 0x11	; 17
    325c:	79 e0       	ldi	r23, 0x09	; 9
    325e:	84 e3       	ldi	r24, 0x34	; 52
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:545
        /* The SIB request occurs before ENTER_PROGMODE. */
        memcpy(&packet.in.data[(uint8_t)packet.out.dwAddr & 31], &_sib, ((_wLength - 1) & 31) + 1);
        _rspsize = _wLength + 1;
      }
      else if (bit_is_set(PGCONF, PGCONF_PROG_bp)) {
        _rspsize = Timeout::command(Command_Table.read_memory, &timeout_fallback, 400);
    3260:	98 e0       	ldi	r25, 0x08	; 8
jtag_scope_updi():
    3262:	c3 d9       	rcall	.-3194   	; 0x25ea <Timeout::command(unsigned int (*)(), unsigned int (*)(), unsigned int)>
    3264:	8c 01       	movw	r16, r24
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:551
      }
      /* If not in PROGMODE, respond with a dummy. */
      /* A dummy SIG will be returned for locked devices. */
      /* This will prevent AVRDUDE from displaying annoying errors. */
      else _rspsize = read_dummy();
      packet.in.res = _rspsize ? 0x184 : 0xA0;  /* RSP3_DATA : RSP3_FAILED */
    3266:	84 e8       	ldi	r24, 0x84	; 132
    3268:	91 e0       	ldi	r25, 0x01	; 1
jtag_scope_updi():
    326a:	01 15       	cp	r16, r1
    326c:	11 05       	cpc	r17, r1
    326e:	09 f0       	breq	.+2      	; 0x3272 <main+0xbbc>
    3270:	87 cf       	rjmp	.-242    	; 0x3180 <main+0xaca>
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:559
    else if (_cmd == 0x23) {        /* CMD3_WRITE_MEMORY */
      D1PRINTF(" UPDI_WRITE=%02X:%06lX:%04X\r\n", packet.out.bMType,
        packet.out.dwAddr, (size_t)packet.out.dwLength);
      _rspsize = Timeout::command(Command_Table.write_memory, &timeout_fallback);
    }
    packet.in.res = _rspsize ? 0x80 : 0xA0;     /* RSP3_OK : RSP3_FAILED */
    3272:	80 ea       	ldi	r24, 0xA0	; 160
    3274:	90 e0       	ldi	r25, 0x00	; 0
    3276:	84 cf       	rjmp	.-248    	; 0x3180 <main+0xaca>
jtag_scope_xmega():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:431
      packet.in.res = _rspsize ? 0x184 : 0xA0;  /* RSP3_DATA : RSP3_FAILED */
      return _rspsize;
    }
    else if (_cmd == 0x23) {        /* CMD3_WRITE_MEMORY */
    3278:	93 32       	cpi	r25, 0x23	; 35
    327a:	09 f0       	breq	.+2      	; 0x327e <main+0xbc8>
    327c:	b1 c0       	rjmp	.+354    	; 0x33e0 <main+0xd2a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:434
      D1PRINTF(" PDI_WRITE=%02X:%08lX:%04X\r\n", packet.out.bMType,
        packet.out.dwAddr, (size_t)packet.out.dwLength);
      _rspsize = Timeout::command(&write_memory, &timeout_fallback);
    327e:	40 e2       	ldi	r20, 0x20	; 32
    3280:	53 e0       	ldi	r21, 0x03	; 3
    3282:	61 e1       	ldi	r22, 0x11	; 17
    3284:	79 e0       	ldi	r23, 0x09	; 9
    3286:	8c e7       	ldi	r24, 0x7C	; 124
    3288:	97 e0       	ldi	r25, 0x07	; 7
    328a:	e0 cf       	rjmp	.-64     	; 0x324c <main+0xb96>
jtag_scope_avr_core():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:393
    else if (_jtag_arch == 0x02) _rspsize = ISP::jtag_scope_mega();     /* MEGA */
  #endif
  #ifdef CONFIG_PGM_PDI_ENABLE
    else if (_jtag_arch == 0x03) _rspsize = PDI::jtag_scope_xmega();    /* XMEGA support */
  #endif
    else if (_jtag_arch == 0x05) _rspsize = UPDI::jtag_scope_updi();    /* UPDI support */
    328c:	85 30       	cpi	r24, 0x05	; 5
    328e:	09 f0       	breq	.+2      	; 0x3292 <main+0xbdc>
    3290:	aa c0       	rjmp	.+340    	; 0x33e6 <main+0xd30>
jtag_scope_updi():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:493

  /* ARCH=UPDI scope Provides functionality. */
  size_t jtag_scope_updi (void) {
    size_t _rspsize = 0;
    uint8_t _cmd = packet.out.cmd;
    if (_cmd == 0x10) {             /* CMD3_SIGN_ON */
    3292:	90 31       	cpi	r25, 0x10	; 16
    3294:	c9 f4       	brne	.+50     	; 0x32c8 <main+0xc12>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:495
      D1PRINTF(" UPDI_SIGN_ON=EXT:%02X\r\n", packet.out.bMType);
      _xclk = _xclk_bak;
    3296:	80 91 ac 60 	lds	r24, 0x60AC	; 0x8060ac <_xclk_bak>
    329a:	90 91 ad 60 	lds	r25, 0x60AD	; 0x8060ad <_xclk_bak+0x1>
    329e:	80 93 47 63 	sts	0x6347, r24	; 0x806347 <_xclk>
    32a2:	90 93 48 63 	sts	0x6348, r25	; 0x806348 <_xclk+0x1>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:496
      while (!(_rspsize = Timeout::command(&connect, nullptr, 150))) _xclk -= 25;
    32a6:	46 e9       	ldi	r20, 0x96	; 150
    32a8:	50 e0       	ldi	r21, 0x00	; 0
    32aa:	70 e0       	ldi	r23, 0x00	; 0
    32ac:	60 e0       	ldi	r22, 0x00	; 0
    32ae:	8f ed       	ldi	r24, 0xDF	; 223
    32b0:	9f e0       	ldi	r25, 0x0F	; 15
    32b2:	9b d9       	rcall	.-3274   	; 0x25ea <Timeout::command(unsigned int (*)(), unsigned int (*)(), unsigned int)>
    32b4:	8c 01       	movw	r16, r24
    32b6:	89 2b       	or	r24, r25
    32b8:	09 f0       	breq	.+2      	; 0x32bc <main+0xc06>
    32ba:	60 cf       	rjmp	.-320    	; 0x317c <main+0xac6>
    32bc:	80 91 47 63 	lds	r24, 0x6347	; 0x806347 <_xclk>
    32c0:	90 91 48 63 	lds	r25, 0x6348	; 0x806348 <_xclk+0x1>
    32c4:	49 97       	sbiw	r24, 0x19	; 25
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:501
      /* If it fails here, it is expected to try again, giving it a chance at HV control. */
      packet.in.res = _rspsize ? 0x84 : 0xA0; /* RSP3_DATA : RSP3_FAILED */
      return _rspsize;
    }
    else if (_cmd == 0x11) {        /* CMD3_SIGN_OFF */
    32c6:	eb cf       	rjmp	.-42     	; 0x329e <main+0xbe8>
    32c8:	91 31       	cpi	r25, 0x11	; 17
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:504
      D1PRINTF(" UPDI_SIGN_OFF\r\n");
      /* If UPDI control has failed, RSP3_OK is always returned. */
      _rspsize = bit_is_set(PGCONF, PGCONF_UPDI_bp) ? Timeout::command(&disconnect) : 1;
    32ca:	11 f5       	brne	.+68     	; 0x3310 <main+0xc5a>
    32cc:	f8 9b       	sbis	0x1f, 0	; 31
    32ce:	1d c0       	rjmp	.+58     	; 0x330a <main+0xc54>
    32d0:	40 e2       	ldi	r20, 0x20	; 32
    32d2:	53 e0       	ldi	r21, 0x03	; 3
    32d4:	70 e0       	ldi	r23, 0x00	; 0
    32d6:	60 e0       	ldi	r22, 0x00	; 0
    32d8:	8f e5       	ldi	r24, 0x5F	; 95
    32da:	92 e0       	ldi	r25, 0x02	; 2
    32dc:	86 d9       	rcall	.-3316   	; 0x25ea <Timeout::command(unsigned int (*)(), unsigned int (*)(), unsigned int)>
    32de:	8c 01       	movw	r16, r24
delay_micros():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/delay_busywait.h:33
    32e0:	83 ef       	ldi	r24, 0xF3	; 243
    32e2:	91 e0       	ldi	r25, 0x01	; 1
    32e4:	01 97       	sbiw	r24, 0x01	; 1
    32e6:	f1 f7       	brne	.-4      	; 0x32e4 <main+0xc2e>
    32e8:	00 c0       	rjmp	.+0      	; 0x32ea <main+0xc34>
    32ea:	00 00       	nop
jtag_scope_updi():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:506
      SYS::delay_100us();
      USART::setup();
    32ec:	0e 94 7a 0a 	call	0x14f4	; 0x14f4 <USART::setup()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:507
      pinLogicPush(PIN_PGM_TRST);
    32f0:	01 9a       	sbi	0x00, 1	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:508
      SYS::power_reset();
    32f2:	61 e0       	ldi	r22, 0x01	; 1
    32f4:	81 e0       	ldi	r24, 0x01	; 1
    32f6:	0e 94 bf 0e 	call	0x1d7e	; 0x1d7e <SYS::power_reset(bool, bool)>
delay_micros():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/delay_busywait.h:33
    32fa:	e3 ed       	ldi	r30, 0xD3	; 211
    32fc:	f0 e3       	ldi	r31, 0x30	; 48
    32fe:	31 97       	sbiw	r30, 0x01	; 1
    3300:	f1 f7       	brne	.-4      	; 0x32fe <main+0xc48>
    3302:	00 c0       	rjmp	.+0      	; 0x3304 <main+0xc4e>
    3304:	00 00       	nop
jtag_scope_updi():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:510
      SYS::delay_2500us();
      pinLogicOpen(PIN_PGM_TRST);
    3306:	01 98       	cbi	0x00, 1	; 0
    3308:	7c cf       	rjmp	.-264    	; 0x3202 <main+0xb4c>
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:504
      return _rspsize;
    }
    else if (_cmd == 0x11) {        /* CMD3_SIGN_OFF */
      D1PRINTF(" UPDI_SIGN_OFF\r\n");
      /* If UPDI control has failed, RSP3_OK is always returned. */
      _rspsize = bit_is_set(PGCONF, PGCONF_UPDI_bp) ? Timeout::command(&disconnect) : 1;
    330a:	01 e0       	ldi	r16, 0x01	; 1
    330c:	10 e0       	ldi	r17, 0x00	; 0
    330e:	e8 cf       	rjmp	.-48     	; 0x32e0 <main+0xc2a>
jtag_scope_updi():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:514
      SYS::delay_2500us();
      pinLogicOpen(PIN_PGM_TRST);
      PGCONF = 0;
      USART::change_vcp();
    }
    else if (_cmd == 0x15) {        /* CMD3_ENTER_PROGMODE */
    3310:	95 31       	cpi	r25, 0x15	; 21
    3312:	39 f4       	brne	.+14     	; 0x3322 <main+0xc6c>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:518
      D1PRINTF(" UPDI_ENTER_PROG\r\n");
      /* On failure, RSP3_OK is returned if a UPDI connection is available. */
      /* Locked devices are given the opportunity to write to USERROW and erase the chip. */
      _rspsize = Timeout::command(&enter_progmode, &timeout_fallback, 400)
    3314:	40 e9       	ldi	r20, 0x90	; 144
    3316:	51 e0       	ldi	r21, 0x01	; 1
    3318:	65 ea       	ldi	r22, 0xA5	; 165
    331a:	74 e0       	ldi	r23, 0x04	; 4
    331c:	89 e0       	ldi	r24, 0x09	; 9
    331e:	9b e0       	ldi	r25, 0x0B	; 11
    3320:	81 cf       	rjmp	.-254    	; 0x3224 <main+0xb6e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:521
              || bit_is_set(PGCONF, PGCONF_UPDI_bp);
    }
    else if (_cmd == 0x16) {        /* CMD3_LEAVE_PROGMODE */
    3322:	96 31       	cpi	r25, 0x16	; 22
    3324:	09 f4       	brne	.+2      	; 0x3328 <main+0xc72>
    3326:	59 c0       	rjmp	.+178    	; 0x33da <main+0xd24>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:528
      D1PRINTF(" LAST_XCLK=%d\r\n", _xclk);
      /* There is nothing to do. */
      /* The actual termination process is delayed until CMD3_SIGN_OFF. */
      _rspsize = 1;
    }
    else if (_cmd == 0x20) {        /* CMD3_ERASE_MEMORY */
    3328:	90 32       	cpi	r25, 0x20	; 32
    332a:	49 f4       	brne	.+18     	; 0x333e <main+0xc88>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:531
      D1PRINTF(" UPDI_ERASE=%02X:%06lX\r\n",
        packet.out.bEType, packet.out.dwPageAddr);
      _rspsize = Timeout::command(Command_Table.erase_memory, &timeout_fallback);
    332c:	40 e2       	ldi	r20, 0x20	; 32
    332e:	53 e0       	ldi	r21, 0x03	; 3
    3330:	65 ea       	ldi	r22, 0xA5	; 165
    3332:	74 e0       	ldi	r23, 0x04	; 4
    3334:	80 91 42 63 	lds	r24, 0x6342	; 0x806342 <Command_Table+0x4>
    3338:	90 91 43 63 	lds	r25, 0x6343	; 0x806343 <Command_Table+0x5>
    333c:	87 cf       	rjmp	.-242    	; 0x324c <main+0xb96>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:533
    }
    else if (bit_is_clear(PGCONF, PGCONF_UPDI_bp)) { /* empty */ }
    333e:	f8 9b       	sbis	0x1f, 0	; 31
    3340:	4f c0       	rjmp	.+158    	; 0x33e0 <main+0xd2a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:534
    else if (_cmd == 0x21) {        /* CMD3_READ_MEMORY */
    3342:	91 32       	cpi	r25, 0x21	; 33
    3344:	09 f0       	breq	.+2      	; 0x3348 <main+0xc92>
    3346:	3e c0       	rjmp	.+124    	; 0x33c4 <main+0xd0e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:538
      D1PRINTF(" UPDI_READ=%02X:%06lX:%04X\r\n", packet.out.bMType,
        packet.out.dwAddr, (size_t)packet.out.dwLength);
      uint8_t m_type = packet.out.bMType;
      size_t _wLength = packet.out.dwLength;
    3348:	00 91 fc 60 	lds	r16, 0x60FC	; 0x8060fc <packet+0xc>
    334c:	10 91 fd 60 	lds	r17, 0x60FD	; 0x8060fd <packet+0xd>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:539
      if (m_type == 0xD3) {         /* MTYPE_SIB */
    3350:	23 3d       	cpi	r18, 0xD3	; 211
    3352:	99 f4       	brne	.+38     	; 0x337a <main+0xcc4>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:541
        /* The SIB request occurs before ENTER_PROGMODE. */
        memcpy(&packet.in.data[(uint8_t)packet.out.dwAddr & 31], &_sib, ((_wLength - 1) & 31) + 1);
    3354:	80 91 f8 60 	lds	r24, 0x60F8	; 0x8060f8 <packet+0x8>
    3358:	8f 71       	andi	r24, 0x1F	; 31
    335a:	90 e0       	ldi	r25, 0x00	; 0
    335c:	a8 01       	movw	r20, r16
    335e:	41 50       	subi	r20, 0x01	; 1
    3360:	51 09       	sbc	r21, r1
    3362:	4f 71       	andi	r20, 0x1F	; 31
    3364:	55 27       	eor	r21, r21
    3366:	4f 5f       	subi	r20, 0xFF	; 255
    3368:	5f 4f       	sbci	r21, 0xFF	; 255
    336a:	6f ec       	ldi	r22, 0xCF	; 207
    336c:	70 e6       	ldi	r23, 0x60	; 96
    336e:	89 50       	subi	r24, 0x09	; 9
    3370:	9f 49       	sbci	r25, 0x9F	; 159
    3372:	8d d1       	rcall	.+794    	; 0x368e <memcpy>
read_dummy():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:358
      packet.in.data[0] = 0x1E;
      packet.in.data[1] = _sib[0] == ' ' ? 'A' : _sib[0];
      packet.in.data[2] = _sib[10];
    }
    else memset(&packet.in.data[0], 0xFF, _wLength);
    return _wLength + 1;
    3374:	0f 5f       	subi	r16, 0xFF	; 255
    3376:	1f 4f       	sbci	r17, 0xFF	; 255
    3378:	76 cf       	rjmp	.-276    	; 0x3266 <main+0xbb0>
jtag_scope_updi():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:544
      if (m_type == 0xD3) {         /* MTYPE_SIB */
        /* The SIB request occurs before ENTER_PROGMODE. */
        memcpy(&packet.in.data[(uint8_t)packet.out.dwAddr & 31], &_sib, ((_wLength - 1) & 31) + 1);
        _rspsize = _wLength + 1;
      }
      else if (bit_is_set(PGCONF, PGCONF_PROG_bp)) {
    337a:	f9 9b       	sbis	0x1f, 1	; 31
    337c:	09 c0       	rjmp	.+18     	; 0x3390 <main+0xcda>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:545
        _rspsize = Timeout::command(Command_Table.read_memory, &timeout_fallback, 400);
    337e:	40 e9       	ldi	r20, 0x90	; 144
    3380:	51 e0       	ldi	r21, 0x01	; 1
    3382:	65 ea       	ldi	r22, 0xA5	; 165
    3384:	74 e0       	ldi	r23, 0x04	; 4
    3386:	80 91 40 63 	lds	r24, 0x6340	; 0x806340 <Command_Table+0x2>
    338a:	90 91 41 63 	lds	r25, 0x6341	; 0x806341 <Command_Table+0x3>
    338e:	69 cf       	rjmp	.-302    	; 0x3262 <main+0xbac>
read_dummy():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:350
   * Read dummy memory if necessary.
   */
  size_t read_dummy (void) {
    uint8_t  m_type = packet.out.bMType;
    size_t _wLength = packet.out.dwLength;
    if (m_type == 0xB4 && _sib[0]) {
    3390:	24 3b       	cpi	r18, 0xB4	; 180
    3392:	89 f4       	brne	.+34     	; 0x33b6 <main+0xd00>
    3394:	80 91 cf 60 	lds	r24, 0x60CF	; 0x8060cf <_sib>
    3398:	88 23       	and	r24, r24
    339a:	69 f0       	breq	.+26     	; 0x33b6 <main+0xd00>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:353
      /* The SIGNATURE of a locked device cannot be read.            */
      /* But, the SIB can be read, so a Dummy SIGNATURE is returned. */
      packet.in.data[0] = 0x1E;
    339c:	9e e1       	ldi	r25, 0x1E	; 30
    339e:	90 93 f7 60 	sts	0x60F7, r25	; 0x8060f7 <packet+0x7>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:354
      packet.in.data[1] = _sib[0] == ' ' ? 'A' : _sib[0];
    33a2:	80 32       	cpi	r24, 0x20	; 32
    33a4:	09 f4       	brne	.+2      	; 0x33a8 <main+0xcf2>
main():
    33a6:	81 e4       	ldi	r24, 0x41	; 65
read_dummy():
    33a8:	80 93 f8 60 	sts	0x60F8, r24	; 0x8060f8 <packet+0x8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:355
      packet.in.data[2] = _sib[10];
    33ac:	80 91 d9 60 	lds	r24, 0x60D9	; 0x8060d9 <_sib+0xa>
    33b0:	80 93 f9 60 	sts	0x60F9, r24	; 0x8060f9 <packet+0x9>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:357
    }
    else memset(&packet.in.data[0], 0xFF, _wLength);
    33b4:	df cf       	rjmp	.-66     	; 0x3374 <main+0xcbe>
    33b6:	a8 01       	movw	r20, r16
    33b8:	6f ef       	ldi	r22, 0xFF	; 255
    33ba:	70 e0       	ldi	r23, 0x00	; 0
    33bc:	87 ef       	ldi	r24, 0xF7	; 247
    33be:	90 e6       	ldi	r25, 0x60	; 96
    33c0:	6f d1       	rcall	.+734    	; 0x36a0 <memset>
    33c2:	d8 cf       	rjmp	.-80     	; 0x3374 <main+0xcbe>
jtag_scope_updi():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:554
      /* This will prevent AVRDUDE from displaying annoying errors. */
      else _rspsize = read_dummy();
      packet.in.res = _rspsize ? 0x184 : 0xA0;  /* RSP3_DATA : RSP3_FAILED */
      return _rspsize;
    }
    else if (_cmd == 0x23) {        /* CMD3_WRITE_MEMORY */
    33c4:	93 32       	cpi	r25, 0x23	; 35
    33c6:	61 f4       	brne	.+24     	; 0x33e0 <main+0xd2a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:557
      D1PRINTF(" UPDI_WRITE=%02X:%06lX:%04X\r\n", packet.out.bMType,
        packet.out.dwAddr, (size_t)packet.out.dwLength);
      _rspsize = Timeout::command(Command_Table.write_memory, &timeout_fallback);
    33c8:	40 e2       	ldi	r20, 0x20	; 32
    33ca:	53 e0       	ldi	r21, 0x03	; 3
    33cc:	65 ea       	ldi	r22, 0xA5	; 165
    33ce:	74 e0       	ldi	r23, 0x04	; 4
    33d0:	80 91 44 63 	lds	r24, 0x6344	; 0x806344 <Command_Table+0x6>
    33d4:	90 91 45 63 	lds	r25, 0x6345	; 0x806345 <Command_Table+0x7>
    33d8:	39 cf       	rjmp	.-398    	; 0x324c <main+0xb96>
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:526
    else if (_cmd == 0x16) {        /* CMD3_LEAVE_PROGMODE */
      D1PRINTF(" UPDI_LEAVE_PROG\r\n");
      D1PRINTF(" LAST_XCLK=%d\r\n", _xclk);
      /* There is nothing to do. */
      /* The actual termination process is delayed until CMD3_SIGN_OFF. */
      _rspsize = 1;
    33da:	01 e0       	ldi	r16, 0x01	; 1
    33dc:	10 e0       	ldi	r17, 0x00	; 0
    33de:	17 cf       	rjmp	.-466    	; 0x320e <main+0xb58>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:491

  // MARK: JTAG SCOPE

  /* ARCH=UPDI scope Provides functionality. */
  size_t jtag_scope_updi (void) {
    size_t _rspsize = 0;
    33e0:	10 e0       	ldi	r17, 0x00	; 0
    33e2:	00 e0       	ldi	r16, 0x00	; 0
    33e4:	46 cf       	rjmp	.-372    	; 0x3272 <main+0xbbc>
jtag_scope_avr_core():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:394
    else packet.in.res = 0xA0;      /* RSP3_FAILED */
    33e6:	80 ea       	ldi	r24, 0xA0	; 160
    33e8:	90 e0       	ldi	r25, 0x00	; 0
    33ea:	2d ce       	rjmp	.-934    	; 0x3046 <main+0x990>
jtag_scope_branch():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:417
    else if (_scope == 0x00) _rspsize = jtag_scope_info();          /* SCOPE_INFO */ /* Not used with EDBG/CMSIS-DAP type */
    else if (_scope == 0x11) _rspsize = ISP::jtag_scope_isp();      /* SCOPE_AVR_ISP */
    else if (_scope == 0x13) _rspsize = AVR32::jtag_scope_avr32();  /* SCOPE_AVR32 */
  #endif
    else if (_scope == 0x12) _rspsize = jtag_scope_avr_core();      /* SCOPE_AVR */
    else if (_scope == 0x14) _rspsize = TPI::jtag_scope_tpi();      /* SCOPE_AVR_TPI */
    33ec:	94 31       	cpi	r25, 0x14	; 20
    33ee:	09 f0       	breq	.+2      	; 0x33f2 <main+0xd3c>
    33f0:	72 c0       	rjmp	.+228    	; 0x34d6 <main+0xe20>
jtag_scope_tpi():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:330
   * It doesn't seem to be implemented in the "mEDBG".
   * which means it will start immediately with XPRG_CMD_ENTER_PROGMODE.
   */
  size_t jtag_scope_tpi (void) {
    size_t _rspsize = 0;  /* Make final adjustments. */
    uint8_t _cmd    = packet.out.cmd;
    33f2:	80 91 f5 60 	lds	r24, 0x60F5	; 0x8060f5 <packet+0x5>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:331
    if (_cmd == 0x01) {             /* XPRG_CMD_ENTER_PROGMODE */
    33f6:	81 30       	cpi	r24, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:333
      D1PRINTF(" TPI_ENTER_PROGMODE\r\n");
      _vtarget = SYS::get_vdd();
    33f8:	b9 f4       	brne	.+46     	; 0x3428 <main+0xd72>
    33fa:	0e 94 10 05 	call	0xa20	; 0xa20 <SYS::get_vdd()>
    33fe:	80 93 ae 60 	sts	0x60AE, r24	; 0x8060ae <_vtarget>
    3402:	90 93 af 60 	sts	0x60AF, r25	; 0x8060af <_vtarget+0x1>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:335
      D1PRINTF(" VTARGET=%d\r\n", _vtarget);
      _jtag_arch = 0;
    3406:	10 92 46 63 	sts	0x6346, r1	; 0x806346 <_jtag_arch>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:336
      _rspsize = Timeout::command(&connect);
    340a:	40 e2       	ldi	r20, 0x20	; 32
    340c:	53 e0       	ldi	r21, 0x03	; 3
    340e:	70 e0       	ldi	r23, 0x00	; 0
    3410:	60 e0       	ldi	r22, 0x00	; 0
    3412:	8a e2       	ldi	r24, 0x2A	; 42
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:385
    else if (_cmd == 0x03) {        /* XPRG_CMD_ERASE */
      D1PRINTF(" TPI_ERASE=%02X:%08lX\r\n",
        packet.out.tpi.read.bMType,
        bswap32(packet.out.tpi.read.dwAddr)
      );
      _rspsize = Timeout::command(&erase_memory);
    3414:	9f e0       	ldi	r25, 0x0F	; 15
    3416:	e9 d8       	rcall	.-3630   	; 0x25ea <Timeout::command(unsigned int (*)(), unsigned int (*)(), unsigned int)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:395
        bswap32(packet.out.tpi.write.dwAddr),
        bswap16(packet.out.tpi.write.wLength)
      );
      _rspsize = Timeout::command(&write_memory);
    }
    packet.in.tpi_res = _rspsize ? 0x00 : 0x01; /* XPRG_ERR_OK : XPRG_ERR_FAILED */
    3418:	21 e0       	ldi	r18, 0x01	; 1
    341a:	00 97       	sbiw	r24, 0x00	; 0
    341c:	09 f0       	breq	.+2      	; 0x3420 <main+0xd6a>
    341e:	20 e0       	ldi	r18, 0x00	; 0
    3420:	20 93 f6 60 	sts	0x60F6, r18	; 0x8060f6 <packet+0x6>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:399
    D1PRINTF(" <RES:%02X>\r\n", _rspsize);

    /* Adds padding to XPRG responses to adjust the length of the payload. */
    return ++_rspsize;
    3424:	8c 01       	movw	r16, r24
    3426:	f6 cd       	rjmp	.-1044   	; 0x3014 <main+0x95e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:338
      _vtarget = SYS::get_vdd();
      D1PRINTF(" VTARGET=%d\r\n", _vtarget);
      _jtag_arch = 0;
      _rspsize = Timeout::command(&connect);
    }
    else if (_cmd == 0x02) {        /* XPRG_CMD_LEAVE_PROGMODE */
    3428:	82 30       	cpi	r24, 0x02	; 2
    342a:	51 f5       	brne	.+84     	; 0x3480 <main+0xdca>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:340
      D1PRINTF(" TPI_LEAVE_PROGMODE\r\n");
      _rspsize = bit_is_set(PGCONF, PGCONF_UPDI_bp) ? disconnect() : 1;
    342c:	f8 9b       	sbis	0x1f, 0	; 31
    342e:	14 c0       	rjmp	.+40     	; 0x3458 <main+0xda2>
set_sstcs():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:77
    return send(0x80 | _addr) && recv();
  }

  bool set_sstcs (const uint8_t _addr, const uint8_t _data) {
    D2PRINTF("[SSTCS:%02X:%02X]\r\n", _addr, _data);
    return send(0xC0 | _addr) && send(_data);
    3430:	80 ec       	ldi	r24, 0xC0	; 192
    3432:	0e 94 3b 02 	call	0x476	; 0x476 <PDI::send(unsigned char)>
    3436:	88 23       	and	r24, r24
    3438:	19 f0       	breq	.+6      	; 0x3440 <main+0xd8a>
    343a:	80 e0       	ldi	r24, 0x00	; 0
    343c:	0e 94 bd 04 	call	0x97a	; 0x97a <PDI::send_byte(unsigned char) [clone .part.4]>
disconnect():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:305

  size_t disconnect (void) {
    /*** leave RESET (normal programing) ***/
    set_sstcs(0x00, 0x00);
    /* Send the NVM exit command, wait a short while and release RESET. */
    idle_clock(28);
    3440:	8c e1       	ldi	r24, 0x1C	; 28
    3442:	90 e0       	ldi	r25, 0x00	; 0
    3444:	0e 94 00 05 	call	0xa00	; 0xa00 <TPI::idle_clock(unsigned int)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:307
  #ifdef CONFIG_HVC_ENABLE
    if (bit_is_set(PGCONF, PGCONF_HVEN_bp)) {
    3448:	fe 9b       	sbis	0x1f, 6	; 31
    344a:	06 c0       	rjmp	.+12     	; 0x3458 <main+0xda2>
hvc_leave():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:489
  #endif
  }

  void hvc_leave (void) {
  #ifdef CONFIG_HVC_ENABLE
    TCA0_SPLIT_CTRLB = 0;
    344c:	10 92 01 0a 	sts	0x0A01, r1	; 0x800a01 <__TEXT_REGION_LENGTH__+0x7f0a01>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:490
    TCA0_SPLIT_CTRLA = 0;
    3450:	10 92 00 0a 	sts	0x0A00, r1	; 0x800a00 <__TEXT_REGION_LENGTH__+0x7f0a00>
disconnect():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:309
      SYS::hvc_leave();
      digitalWriteMacro(PIN_HVC_SELECT2, LOW);
    3454:	69 98       	cbi	0x0d, 1	; 13
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:310
      bit_clear(PGCONF, PGCONF_HVEN_bp);
    3456:	fe 98       	cbi	0x1f, 6	; 31
jtag_scope_tpi():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:341
      _rspsize = Timeout::command(&connect);
    }
    else if (_cmd == 0x02) {        /* XPRG_CMD_LEAVE_PROGMODE */
      D1PRINTF(" TPI_LEAVE_PROGMODE\r\n");
      _rspsize = bit_is_set(PGCONF, PGCONF_UPDI_bp) ? disconnect() : 1;
      pinLogicOpen(PIN_PGM_TCLK);
    3458:	02 98       	cbi	0x00, 2	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:342
      pinLogicOpen(PIN_PGM_TRST);
    345a:	01 98       	cbi	0x00, 1	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:343
      SYS::power_reset();
    345c:	61 e0       	ldi	r22, 0x01	; 1
    345e:	81 e0       	ldi	r24, 0x01	; 1
    3460:	0e 94 bf 0e 	call	0x1d7e	; 0x1d7e <SYS::power_reset(bool, bool)>
delay_micros():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/delay_busywait.h:33
    3464:	83 ed       	ldi	r24, 0xD3	; 211
    3466:	90 e3       	ldi	r25, 0x30	; 48
    3468:	01 97       	sbiw	r24, 0x01	; 1
    346a:	f1 f7       	brne	.-4      	; 0x3468 <main+0xdb2>
    346c:	00 c0       	rjmp	.+0      	; 0x346e <main+0xdb8>
    346e:	00 00       	nop
jtag_scope_tpi():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:345
      SYS::delay_2500us();
      PGCONF = 0;
    3470:	1f ba       	out	0x1f, r1	; 31
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:346
      USART::setup();
    3472:	0e 94 7a 0a 	call	0x14f4	; 0x14f4 <USART::setup()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:347
      USART::change_vcp();
    3476:	0e 94 a6 05 	call	0xb4c	; 0xb4c <USART::change_vcp()>
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:365
      else if (_bType == 0x04) {    /* XPRG_PARAM_NVMCSR_ADDR */
        _bValue = ((_bValue & 0xF0) << 1) + (_bValue & 0x0F);
        _tpi_csr_addr = _bValue;    /* XPRG_TPI_NVMCSR_ADDRESS */
      }
  #endif
      _rspsize = 1;
    347a:	81 e0       	ldi	r24, 0x01	; 1
    347c:	90 e0       	ldi	r25, 0x00	; 0
    347e:	cc cf       	rjmp	.-104    	; 0x3418 <main+0xd62>
jtag_scope_tpi():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:349
      SYS::delay_2500us();
      PGCONF = 0;
      USART::setup();
      USART::change_vcp();
    }
    else if (_cmd == 0x07) {        /* XPRG_CMD_SET_PARAM */
    3480:	87 30       	cpi	r24, 0x07	; 7
    3482:	d9 f3       	breq	.-10     	; 0x347a <main+0xdc4>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:367
        _tpi_csr_addr = _bValue;    /* XPRG_TPI_NVMCSR_ADDRESS */
      }
  #endif
      _rspsize = 1;
    }
    else if (_cmd == 0x06) {        /* XPRG_CMD_CRC */
    3484:	86 30       	cpi	r24, 0x06	; 6
    3486:	21 f1       	breq	.+72     	; 0x34d0 <main+0xe1a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:370
      D1PRINTF(" TPI_CRC\r\n");     /* not used (Fail) */
    }
    else if (bit_is_clear(PGCONF, PGCONF_UPDI_bp)) { /* empty */ }
    3488:	f8 9b       	sbis	0x1f, 0	; 31
    348a:	22 c0       	rjmp	.+68     	; 0x34d0 <main+0xe1a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:371
    else if (_cmd == 0x05) {        /* XPRG_CMD_READ_MEM */
    348c:	85 30       	cpi	r24, 0x05	; 5
    348e:	39 f4       	brne	.+14     	; 0x349e <main+0xde8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:377
      D1PRINTF(" TPI_READ=%02X:%08lX:%04X\r\n",
        packet.out.tpi.read.bMType,
        bswap32(packet.out.tpi.read.dwAddr),
        bswap16(packet.out.tpi.read.wLength)
      );
      _rspsize = Timeout::command(&read_memory);
    3490:	40 e2       	ldi	r20, 0x20	; 32
    3492:	53 e0       	ldi	r21, 0x03	; 3
    3494:	70 e0       	ldi	r23, 0x00	; 0
    3496:	60 e0       	ldi	r22, 0x00	; 0
    3498:	82 e3       	ldi	r24, 0x32	; 50
    349a:	92 e1       	ldi	r25, 0x12	; 18
    349c:	bc cf       	rjmp	.-136    	; 0x3416 <main+0xd60>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:379
    }
    else if (_vtarget < 4500)     { /* empty */ }
    349e:	20 91 ae 60 	lds	r18, 0x60AE	; 0x8060ae <_vtarget>
    34a2:	30 91 af 60 	lds	r19, 0x60AF	; 0x8060af <_vtarget+0x1>
    34a6:	24 39       	cpi	r18, 0x94	; 148
    34a8:	31 41       	sbci	r19, 0x11	; 17
    34aa:	90 f0       	brcs	.+36     	; 0x34d0 <main+0xe1a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:380
    else if (_cmd == 0x03) {        /* XPRG_CMD_ERASE */
    34ac:	83 30       	cpi	r24, 0x03	; 3
    34ae:	39 f4       	brne	.+14     	; 0x34be <main+0xe08>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:385
      D1PRINTF(" TPI_ERASE=%02X:%08lX\r\n",
        packet.out.tpi.read.bMType,
        bswap32(packet.out.tpi.read.dwAddr)
      );
      _rspsize = Timeout::command(&erase_memory);
    34b0:	40 e2       	ldi	r20, 0x20	; 32
    34b2:	53 e0       	ldi	r21, 0x03	; 3
    34b4:	70 e0       	ldi	r23, 0x00	; 0
    34b6:	60 e0       	ldi	r22, 0x00	; 0
    34b8:	82 e6       	ldi	r24, 0x62	; 98
    34ba:	92 e1       	ldi	r25, 0x12	; 18
    34bc:	ac cf       	rjmp	.-168    	; 0x3416 <main+0xd60>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:387
    }
    else if (_cmd == 0x04) {        /* XPRG_CMD_WRITE_MEM */
    34be:	84 30       	cpi	r24, 0x04	; 4
    34c0:	39 f4       	brne	.+14     	; 0x34d0 <main+0xe1a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:393
      D1PRINTF(" TPI_WRITE=%02X:%08lX:%04X\r\n",
        packet.out.tpi.write.bMType,
        bswap32(packet.out.tpi.write.dwAddr),
        bswap16(packet.out.tpi.write.wLength)
      );
      _rspsize = Timeout::command(&write_memory);
    34c2:	40 e2       	ldi	r20, 0x20	; 32
    34c4:	53 e0       	ldi	r21, 0x03	; 3
    34c6:	70 e0       	ldi	r23, 0x00	; 0
    34c8:	60 e0       	ldi	r22, 0x00	; 0
    34ca:	8f e3       	ldi	r24, 0x3F	; 63
    34cc:	91 e1       	ldi	r25, 0x11	; 17
    34ce:	a3 cf       	rjmp	.-186    	; 0x3416 <main+0xd60>
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:329
   * When this scope is used, CMD3_SIGN_ON will not be called,
   * It doesn't seem to be implemented in the "mEDBG".
   * which means it will start immediately with XPRG_CMD_ENTER_PROGMODE.
   */
  size_t jtag_scope_tpi (void) {
    size_t _rspsize = 0;  /* Make final adjustments. */
    34d0:	90 e0       	ldi	r25, 0x00	; 0
    34d2:	80 e0       	ldi	r24, 0x00	; 0
    34d4:	a1 cf       	rjmp	.-190    	; 0x3418 <main+0xd62>
jtag_scope_branch():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:418
    else if (_scope == 0x20) _rspsize = jtag_scope_edbg();          /* SCOPE_EDBG */
    34d6:	90 32       	cpi	r25, 0x20	; 32
    34d8:	09 f0       	breq	.+2      	; 0x34dc <main+0xe26>
    34da:	bc cd       	rjmp	.-1160   	; 0x3054 <main+0x99e>
jtag_scope_edbg():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:226

  /*** The EDBG scope provides access to the writer's hardware specifications. ***/
  /* There is no impact on operation if it is not called at all. */
  size_t jtag_scope_edbg (void) {
    size_t  _rspsize = 0;
    uint8_t _cmd     = packet.out.cmd;
    34dc:	20 91 f5 60 	lds	r18, 0x60F5	; 0x8060f5 <packet+0x5>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:227
    uint8_t _section = packet.out.section;
    34e0:	90 91 f7 60 	lds	r25, 0x60F7	; 0x8060f7 <packet+0x7>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:228
    uint8_t _index   = packet.out.index;
    34e4:	80 91 f8 60 	lds	r24, 0x60F8	; 0x8060f8 <packet+0x8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:229
    uint8_t _length  = packet.out.length;
    34e8:	00 91 f9 60 	lds	r16, 0x60F9	; 0x8060f9 <packet+0x9>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:230
    if (_cmd == 0x01) {             /* CMD3_SET_PARAMETER */
    34ec:	21 30       	cpi	r18, 0x01	; 1
    34ee:	a9 f4       	brne	.+42     	; 0x351a <main+0xe64>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:231
      uint16_t _data = packet.out.wValue;
    34f0:	00 91 fa 60 	lds	r16, 0x60FA	; 0x8060fa <packet+0xa>
    34f4:	10 91 fb 60 	lds	r17, 0x60FB	; 0x8060fb <packet+0xb>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:233
      D1PRINTF(" AVR_SET_PARAM=%02X:%02X:%02X:%02X\r\n", _section, _index, _length, _data);
      if (_section == 0) {          /* SET_GET_CTXT_CONFIG */
    34f8:	91 11       	cpse	r25, r1
    34fa:	a3 cd       	rjmp	.-1210   	; 0x3042 <main+0x98c>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:234
        if (_index == 0x10) {       /* EDBG_CONTROL_TARGET_POWER */
    34fc:	80 31       	cpi	r24, 0x10	; 16
    34fe:	09 f0       	breq	.+2      	; 0x3502 <main+0xe4c>
    3500:	a0 cd       	rjmp	.-1216   	; 0x3042 <main+0x98c>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:237
          /* Called with `-xvtarget_switch=0,1` HAS_VTARG_SWITCH */
          D1PRINTF(" TARGET_POWER=%02X\r\n", _data);
          _jtag_vpow = _data;       /* 0,1 */
    3502:	00 93 b0 60 	sts	0x60B0, r16	; 0x8060b0 <_jtag_vpow>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:239
  #if defined(PIN_PGM_VPOWER)
          SYS::power_reset(true, false);              /* VPW off */
    3506:	60 e0       	ldi	r22, 0x00	; 0
    3508:	81 e0       	ldi	r24, 0x01	; 1
    350a:	0e 94 bf 0e 	call	0x1d7e	; 0x1d7e <SYS::power_reset(bool, bool)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:240
          if (_data) SYS::power_reset(false, true);   /* VPW on  */
    350e:	01 2b       	or	r16, r17
    3510:	09 f4       	brne	.+2      	; 0x3514 <main+0xe5e>
    3512:	97 cd       	rjmp	.-1234   	; 0x3042 <main+0x98c>
power_reset():
    3514:	0e 94 92 0e 	call	0x1d24	; 0x1d24 <SYS::power_reset(bool, bool) [clone .part.2]>
    3518:	94 cd       	rjmp	.-1240   	; 0x3042 <main+0x98c>
jtag_scope_edbg():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:246
  #endif
        }
      }
      packet.in.res = 0x80;         /* RSP3_OK */
    }
    else if (_cmd == 0x02) {        /* CMD3_GET_PARAMETER */
    351a:	22 30       	cpi	r18, 0x02	; 2
    351c:	09 f0       	breq	.+2      	; 0x3520 <main+0xe6a>
    351e:	9a cd       	rjmp	.-1228   	; 0x3054 <main+0x99e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:248
      D1PRINTF(" AVR_GET_PARAM=%02X:%02X:%02X\r\n", _section, _index, _length);
      if (_section == 0) {          /* SET_GET_CTXT_CONFIG */
    3520:	91 11       	cpse	r25, r1
    3522:	06 c0       	rjmp	.+12     	; 0x3530 <main+0xe7a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:249
        if (_index == 0x10) {       /* EDBG_CONTROL_TARGET_POWER */
    3524:	80 31       	cpi	r24, 0x10	; 16
    3526:	21 f4       	brne	.+8      	; 0x3530 <main+0xe7a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:252
          /* Called with `-xvtarget_switch` HAS_VTARG_SWITCH */
          D1PRINTF(" TARGET_POWER=%02X\r\n", _jtag_vpow);
          packet.in.data[0] = _jtag_vpow;
    3528:	80 91 b0 60 	lds	r24, 0x60B0	; 0x8060b0 <_jtag_vpow>
    352c:	80 93 f7 60 	sts	0x60F7, r24	; 0x8060f7 <packet+0x7>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:255
        }
      }
      packet.in.res = 0x184;        /* RSP3_DATA */
    3530:	84 e8       	ldi	r24, 0x84	; 132
    3532:	91 e0       	ldi	r25, 0x01	; 1
    3534:	80 93 f5 60 	sts	0x60F5, r24	; 0x8060f5 <packet+0x5>
    3538:	90 93 f6 60 	sts	0x60F6, r25	; 0x8060f6 <packet+0x6>
    353c:	f7 cd       	rjmp	.-1042   	; 0x312c <main+0xa76>

0000353e <setjmp>:
setjmp():
    353e:	dc 01       	movw	r26, r24
    3540:	2d 92       	st	X+, r2
    3542:	3d 92       	st	X+, r3
    3544:	4d 92       	st	X+, r4
    3546:	5d 92       	st	X+, r5
    3548:	6d 92       	st	X+, r6
    354a:	7d 92       	st	X+, r7
    354c:	8d 92       	st	X+, r8
    354e:	9d 92       	st	X+, r9
    3550:	ad 92       	st	X+, r10
    3552:	bd 92       	st	X+, r11
    3554:	cd 92       	st	X+, r12
    3556:	dd 92       	st	X+, r13
    3558:	ed 92       	st	X+, r14
    355a:	fd 92       	st	X+, r15
    355c:	0d 93       	st	X+, r16
    355e:	1d 93       	st	X+, r17
    3560:	cd 93       	st	X+, r28
    3562:	dd 93       	st	X+, r29
    3564:	ff 91       	pop	r31
    3566:	ef 91       	pop	r30
    3568:	8d b7       	in	r24, 0x3d	; 61
    356a:	8d 93       	st	X+, r24
    356c:	8e b7       	in	r24, 0x3e	; 62
    356e:	8d 93       	st	X+, r24
    3570:	8f b7       	in	r24, 0x3f	; 63
    3572:	8d 93       	st	X+, r24
    3574:	ed 93       	st	X+, r30
    3576:	fd 93       	st	X+, r31
    3578:	88 27       	eor	r24, r24
    357a:	99 27       	eor	r25, r25
    357c:	09 94       	ijmp

0000357e <longjmp>:
longjmp():
    357e:	dc 01       	movw	r26, r24
    3580:	cb 01       	movw	r24, r22
    3582:	81 30       	cpi	r24, 0x01	; 1
    3584:	91 05       	cpc	r25, r1
    3586:	81 1d       	adc	r24, r1
    3588:	2d 90       	ld	r2, X+
    358a:	3d 90       	ld	r3, X+
    358c:	4d 90       	ld	r4, X+
    358e:	5d 90       	ld	r5, X+
    3590:	6d 90       	ld	r6, X+
    3592:	7d 90       	ld	r7, X+
    3594:	8d 90       	ld	r8, X+
    3596:	9d 90       	ld	r9, X+
    3598:	ad 90       	ld	r10, X+
    359a:	bd 90       	ld	r11, X+
    359c:	cd 90       	ld	r12, X+
    359e:	dd 90       	ld	r13, X+
    35a0:	ed 90       	ld	r14, X+
    35a2:	fd 90       	ld	r15, X+
    35a4:	0d 91       	ld	r16, X+
    35a6:	1d 91       	ld	r17, X+
    35a8:	cd 91       	ld	r28, X+
    35aa:	dd 91       	ld	r29, X+
    35ac:	ed 91       	ld	r30, X+
    35ae:	fd 91       	ld	r31, X+
    35b0:	0d 90       	ld	r0, X+
    35b2:	0f be       	out	0x3f, r0	; 63
    35b4:	ed bf       	out	0x3d, r30	; 61
    35b6:	fe bf       	out	0x3e, r31	; 62
    35b8:	ed 91       	ld	r30, X+
    35ba:	fd 91       	ld	r31, X+
    35bc:	09 94       	ijmp

000035be <memcpy_P>:
memcpy_P():
    35be:	fb 01       	movw	r30, r22
    35c0:	dc 01       	movw	r26, r24
    35c2:	02 c0       	rjmp	.+4      	; 0x35c8 <memcpy_P+0xa>
    35c4:	05 90       	lpm	r0, Z+
    35c6:	0d 92       	st	X+, r0
    35c8:	41 50       	subi	r20, 0x01	; 1
    35ca:	50 40       	sbci	r21, 0x00	; 0
    35cc:	d8 f7       	brcc	.-10     	; 0x35c4 <memcpy_P+0x6>
    35ce:	08 95       	ret

000035d0 <__udivmodhi4>:
__udivmodhi4():
    35d0:	aa 1b       	sub	r26, r26
    35d2:	bb 1b       	sub	r27, r27
    35d4:	51 e1       	ldi	r21, 0x11	; 17
    35d6:	07 c0       	rjmp	.+14     	; 0x35e6 <__udivmodhi4_ep>

000035d8 <__udivmodhi4_loop>:
    35d8:	aa 1f       	adc	r26, r26
    35da:	bb 1f       	adc	r27, r27
    35dc:	a6 17       	cp	r26, r22
    35de:	b7 07       	cpc	r27, r23
    35e0:	10 f0       	brcs	.+4      	; 0x35e6 <__udivmodhi4_ep>
    35e2:	a6 1b       	sub	r26, r22
    35e4:	b7 0b       	sbc	r27, r23

000035e6 <__udivmodhi4_ep>:
    35e6:	88 1f       	adc	r24, r24
    35e8:	99 1f       	adc	r25, r25
    35ea:	5a 95       	dec	r21
    35ec:	a9 f7       	brne	.-22     	; 0x35d8 <__udivmodhi4_loop>
    35ee:	80 95       	com	r24
    35f0:	90 95       	com	r25
    35f2:	bc 01       	movw	r22, r24
    35f4:	cd 01       	movw	r24, r26
    35f6:	08 95       	ret

000035f8 <__udivmodsi4>:
__udivmodsi4():
    35f8:	a1 e2       	ldi	r26, 0x21	; 33
    35fa:	1a 2e       	mov	r1, r26
    35fc:	aa 1b       	sub	r26, r26
    35fe:	bb 1b       	sub	r27, r27
    3600:	fd 01       	movw	r30, r26
    3602:	0d c0       	rjmp	.+26     	; 0x361e <__udivmodsi4_ep>

00003604 <__udivmodsi4_loop>:
    3604:	aa 1f       	adc	r26, r26
    3606:	bb 1f       	adc	r27, r27
    3608:	ee 1f       	adc	r30, r30
    360a:	ff 1f       	adc	r31, r31
    360c:	a2 17       	cp	r26, r18
    360e:	b3 07       	cpc	r27, r19
    3610:	e4 07       	cpc	r30, r20
    3612:	f5 07       	cpc	r31, r21
    3614:	20 f0       	brcs	.+8      	; 0x361e <__udivmodsi4_ep>
    3616:	a2 1b       	sub	r26, r18
    3618:	b3 0b       	sbc	r27, r19
    361a:	e4 0b       	sbc	r30, r20
    361c:	f5 0b       	sbc	r31, r21

0000361e <__udivmodsi4_ep>:
    361e:	66 1f       	adc	r22, r22
    3620:	77 1f       	adc	r23, r23
    3622:	88 1f       	adc	r24, r24
    3624:	99 1f       	adc	r25, r25
    3626:	1a 94       	dec	r1
    3628:	69 f7       	brne	.-38     	; 0x3604 <__udivmodsi4_loop>
    362a:	60 95       	com	r22
    362c:	70 95       	com	r23
    362e:	80 95       	com	r24
    3630:	90 95       	com	r25
    3632:	9b 01       	movw	r18, r22
    3634:	ac 01       	movw	r20, r24
    3636:	bd 01       	movw	r22, r26
    3638:	cf 01       	movw	r24, r30
    363a:	08 95       	ret

0000363c <__divmodsi4>:
__divmodsi4():
    363c:	05 2e       	mov	r0, r21
    363e:	97 fb       	bst	r25, 7
    3640:	16 f4       	brtc	.+4      	; 0x3646 <__divmodsi4+0xa>
    3642:	00 94       	com	r0
    3644:	0f d0       	rcall	.+30     	; 0x3664 <__negsi2>
    3646:	57 fd       	sbrc	r21, 7
    3648:	05 d0       	rcall	.+10     	; 0x3654 <__divmodsi4_neg2>
    364a:	d6 df       	rcall	.-84     	; 0x35f8 <__udivmodsi4>
    364c:	07 fc       	sbrc	r0, 7
    364e:	02 d0       	rcall	.+4      	; 0x3654 <__divmodsi4_neg2>
    3650:	46 f4       	brtc	.+16     	; 0x3662 <__divmodsi4_exit>
    3652:	08 c0       	rjmp	.+16     	; 0x3664 <__negsi2>

00003654 <__divmodsi4_neg2>:
    3654:	50 95       	com	r21
    3656:	40 95       	com	r20
    3658:	30 95       	com	r19
    365a:	21 95       	neg	r18
    365c:	3f 4f       	sbci	r19, 0xFF	; 255
    365e:	4f 4f       	sbci	r20, 0xFF	; 255
    3660:	5f 4f       	sbci	r21, 0xFF	; 255

00003662 <__divmodsi4_exit>:
    3662:	08 95       	ret

00003664 <__negsi2>:
__negsi2():
    3664:	90 95       	com	r25
    3666:	80 95       	com	r24
    3668:	70 95       	com	r23
    366a:	61 95       	neg	r22
    366c:	7f 4f       	sbci	r23, 0xFF	; 255
    366e:	8f 4f       	sbci	r24, 0xFF	; 255
    3670:	9f 4f       	sbci	r25, 0xFF	; 255
    3672:	08 95       	ret

00003674 <memcmp>:
memcmp():
    3674:	fb 01       	movw	r30, r22
    3676:	dc 01       	movw	r26, r24
    3678:	04 c0       	rjmp	.+8      	; 0x3682 <memcmp+0xe>
    367a:	8d 91       	ld	r24, X+
    367c:	01 90       	ld	r0, Z+
    367e:	80 19       	sub	r24, r0
    3680:	21 f4       	brne	.+8      	; 0x368a <memcmp+0x16>
    3682:	41 50       	subi	r20, 0x01	; 1
    3684:	50 40       	sbci	r21, 0x00	; 0
    3686:	c8 f7       	brcc	.-14     	; 0x367a <memcmp+0x6>
    3688:	88 1b       	sub	r24, r24
    368a:	99 0b       	sbc	r25, r25
    368c:	08 95       	ret

0000368e <memcpy>:
memcpy():
    368e:	fb 01       	movw	r30, r22
    3690:	dc 01       	movw	r26, r24
    3692:	02 c0       	rjmp	.+4      	; 0x3698 <memcpy+0xa>
    3694:	01 90       	ld	r0, Z+
    3696:	0d 92       	st	X+, r0
    3698:	41 50       	subi	r20, 0x01	; 1
    369a:	50 40       	sbci	r21, 0x00	; 0
    369c:	d8 f7       	brcc	.-10     	; 0x3694 <memcpy+0x6>
    369e:	08 95       	ret

000036a0 <memset>:
memset():
    36a0:	dc 01       	movw	r26, r24
    36a2:	01 c0       	rjmp	.+2      	; 0x36a6 <memset+0x6>
    36a4:	6d 93       	st	X+, r22
    36a6:	41 50       	subi	r20, 0x01	; 1
    36a8:	50 40       	sbci	r21, 0x00	; 0
    36aa:	e0 f7       	brcc	.-8      	; 0x36a4 <memset+0x4>
    36ac:	08 95       	ret

000036ae <_exit>:
exit():
    36ae:	f8 94       	cli

000036b0 <__stop_program>:
__stop_program():
    36b0:	ff cf       	rjmp	.-2      	; 0x36b0 <__stop_program>

Disassembly of section .nvmem:

00003752 <.nvmem>:
	...

Disassembly of section .eeprom:

00810000 <_EEP>:
  810000:	ff ff ff ff ff ff ff ff                             ........

Disassembly of section .fuse:

00820000 <__fuse>:
  820000:	00 00 00 00 00 d1 08 00 00 00 03 00                 ............
