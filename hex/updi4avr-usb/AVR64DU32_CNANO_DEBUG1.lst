
build/AVR64DU32_CNANO_DEBUG1.ino.elf:     file format elf32-avr


Disassembly of section .data:

00806000 <__data_start>:
__data_start():
  806000:	4c 00       	.word	0x004c	; ????
  806002:	00 00       	nop
	...

00806005 <PDI::recv_byte(unsigned long)::_set_ptr>:
  806005:	0c 00 00 00 00                                      .....

0080600a <PDI::_set_repeat>:
  80600a:	a1 00 00 00                                         ....

0080600e <PDI::_set_ptr32>:
  80600e:	6b 00 00 00 00                                      k....

00806013 <UPDI::recv_byte(unsigned long)::_set_ptr>:
  806013:	55 08 00 00 00 00                                   U.....

00806019 <UPDI::send_byte(unsigned long, unsigned char)::_set_ptr>:
  806019:	55 48 00 00 00 00                                   UH....

0080601f <UPDI::_set_repeat>:
  80601f:	55 a0 00 55 04                                      U..U.

00806024 <UPDI::_set_ptr24>:
  806024:	55 6a 00 00 00 00 00 30 20 00                       Uj.....0 .

0080602e <SYS::_updi_bitmap_reset>:
  80602e:	00 00 00 00 ff ff 7f 55 7e c8 7f 59 fe ff           .......U~..Y..

0080603c <SYS::_updi_bitmap_leave>:
  80603c:	7f 55 7e c8 7f 00 fe 7f 55 7e c3 7e 04 ff           .U~.....U~.~..

0080604a <PDI::connect()::_init>:
  80604a:	c2 05 c1 59 82                                      ...Y.

0080604f <PDI::disconnect()::_leave>:
  80604f:	c0 02 c1 00                                         ....

00806053 <PDI::nvmprog_key>:
  806053:	e0 ff 88 d8 cd 45 ab 89 12                          .....E...

0080605c <UPDI::set_rsd()::_set_rsd>:
  80605c:	55 c2 1d                                            U..

0080605f <UPDI::key_status()::_key_stat>:
  80605f:	55 87                                               U.

00806061 <UPDI::sys_status()::_sys_stat>:
  806061:	55 8b                                               U.

00806063 <UPDI::nvmprog_key>:
  806063:	55 e0 20 67 6f 72 50 4d 56 4e                       U. gorPMVN

0080606d <UPDI::erase_key>:
  80606d:	55 e0 65 73 61 72 45 4d 56 4e                       U.esarEMVN

00806077 <UPDI::urowwrite_key>:
  806077:	55 e0 65 74 26 73 55 4d 56 4e                       U.et&sUMVN

00806081 <UPDI::write_userrow()::_urowstop>:
  806081:	55 c7 20                                            U. 

00806084 <UPDI::write_userrow()::_urowdone>:
  806084:	55 ca 03                                            U..

00806087 <UPDI::clear_rsd()::_clear_rsd>:
  806087:	55 c2 15                                            U..

0080608a <UPDI::connect()::_sib256>:
  80608a:	55 e6                                               U.

0080608c <UPDI::connect()::_init>:
  80608c:	55 c8 59 55 c3 08 55 c2 15 55 82                    U.YU..U..U.

00806097 <UPDI::sys_reset(bool)::_reset>:
  806097:	55 c8 59 55 c8 00 55 c3 04                          U.YU..U..

008060a0 <vtable for HarfUART_Class>:
  8060a0:	00 00 00 00 53 05 0d 0a 00 00                       ....S.....

Disassembly of section .text:

00000000 <__vectors>:
__vectors():
../../../../crt1/gcrt1.S:61
       0:	cb c4       	rjmp	.+2454   	; 0x998 <__ctors_end>
       2:	00 00       	nop
../../../../crt1/gcrt1.S:67
       4:	06 c5       	rjmp	.+2572   	; 0xa12 <__bad_interrupt>
       6:	00 00       	nop
../../../../crt1/gcrt1.S:68
       8:	04 c5       	rjmp	.+2568   	; 0xa12 <__bad_interrupt>
       a:	00 00       	nop
../../../../crt1/gcrt1.S:69
       c:	02 c5       	rjmp	.+2564   	; 0xa12 <__bad_interrupt>
       e:	00 00       	nop
../../../../crt1/gcrt1.S:70
      10:	00 c5       	rjmp	.+2560   	; 0xa12 <__bad_interrupt>
      12:	00 00       	nop
../../../../crt1/gcrt1.S:71
      14:	fe c4       	rjmp	.+2556   	; 0xa12 <__bad_interrupt>
      16:	00 00       	nop
../../../../crt1/gcrt1.S:72
      18:	0c 94 1f 1a 	jmp	0x343e	; 0x343e <__vector_6>
../../../../crt1/gcrt1.S:73
      1c:	fa c4       	rjmp	.+2548   	; 0xa12 <__bad_interrupt>
      1e:	00 00       	nop
../../../../crt1/gcrt1.S:74
      20:	f8 c4       	rjmp	.+2544   	; 0xa12 <__bad_interrupt>
      22:	00 00       	nop
../../../../crt1/gcrt1.S:75
      24:	f6 c4       	rjmp	.+2540   	; 0xa12 <__bad_interrupt>
      26:	00 00       	nop
../../../../crt1/gcrt1.S:76
      28:	f4 c4       	rjmp	.+2536   	; 0xa12 <__bad_interrupt>
      2a:	00 00       	nop
../../../../crt1/gcrt1.S:77
      2c:	f2 c4       	rjmp	.+2532   	; 0xa12 <__bad_interrupt>
      2e:	00 00       	nop
../../../../crt1/gcrt1.S:78
      30:	f0 c4       	rjmp	.+2528   	; 0xa12 <__bad_interrupt>
      32:	00 00       	nop
../../../../crt1/gcrt1.S:79
      34:	ee c4       	rjmp	.+2524   	; 0xa12 <__bad_interrupt>
      36:	00 00       	nop
../../../../crt1/gcrt1.S:80
      38:	ec c4       	rjmp	.+2520   	; 0xa12 <__bad_interrupt>
      3a:	00 00       	nop
../../../../crt1/gcrt1.S:81
      3c:	0c 94 b3 19 	jmp	0x3366	; 0x3366 <__vector_15>
../../../../crt1/gcrt1.S:82
      40:	e8 c4       	rjmp	.+2512   	; 0xa12 <__bad_interrupt>
      42:	00 00       	nop
../../../../crt1/gcrt1.S:83
      44:	e6 c4       	rjmp	.+2508   	; 0xa12 <__bad_interrupt>
      46:	00 00       	nop
../../../../crt1/gcrt1.S:84
      48:	e4 c4       	rjmp	.+2504   	; 0xa12 <__bad_interrupt>
      4a:	00 00       	nop
../../../../crt1/gcrt1.S:85
      4c:	0c 94 6a 19 	jmp	0x32d4	; 0x32d4 <__vector_19>
../../../../crt1/gcrt1.S:86
      50:	e0 c4       	rjmp	.+2496   	; 0xa12 <__bad_interrupt>
      52:	00 00       	nop
../../../../crt1/gcrt1.S:87
      54:	de c4       	rjmp	.+2492   	; 0xa12 <__bad_interrupt>
      56:	00 00       	nop
../../../../crt1/gcrt1.S:88
      58:	dc c4       	rjmp	.+2488   	; 0xa12 <__bad_interrupt>
      5a:	00 00       	nop
../../../../crt1/gcrt1.S:89
      5c:	da c4       	rjmp	.+2484   	; 0xa12 <__bad_interrupt>
      5e:	00 00       	nop
../../../../crt1/gcrt1.S:90
      60:	0c 94 2f 1a 	jmp	0x345e	; 0x345e <__vector_24>
../../../../crt1/gcrt1.S:91
      64:	d6 c4       	rjmp	.+2476   	; 0xa12 <__bad_interrupt>
      66:	00 00       	nop
../../../../crt1/gcrt1.S:92
      68:	d4 c4       	rjmp	.+2472   	; 0xa12 <__bad_interrupt>
      6a:	00 00       	nop
../../../../crt1/gcrt1.S:93
      6c:	d2 c4       	rjmp	.+2468   	; 0xa12 <__bad_interrupt>
      6e:	00 00       	nop
../../../../crt1/gcrt1.S:94
      70:	d0 c4       	rjmp	.+2464   	; 0xa12 <__bad_interrupt>
      72:	00 00       	nop
../../../../crt1/gcrt1.S:95
      74:	ce c4       	rjmp	.+2460   	; 0xa12 <__bad_interrupt>
      76:	00 00       	nop
../../../../crt1/gcrt1.S:96
      78:	cc c4       	rjmp	.+2456   	; 0xa12 <__bad_interrupt>
      7a:	00 00       	nop
../../../../crt1/gcrt1.S:97
      7c:	ca c4       	rjmp	.+2452   	; 0xa12 <__bad_interrupt>
      7e:	00 00       	nop
../../../../crt1/gcrt1.S:98
      80:	c8 c4       	rjmp	.+2448   	; 0xa12 <__bad_interrupt>
      82:	00 00       	nop
../../../../crt1/gcrt1.S:99
      84:	c6 c4       	rjmp	.+2444   	; 0xa12 <__bad_interrupt>
	...

00000088 <__trampolines_end>:
__trampolines_start():
      88:	43 00       	.word	0x0043	; ????
      8a:	44 00       	.word	0x0044	; ????
      8c:	43 00       	.word	0x0043	; ????
      8e:	2d 00       	.word	0x002d	; ????
      90:	41 00       	.word	0x0041	; ????
      92:	43 00       	.word	0x0043	; ????
      94:	4d 00       	.word	0x004d	; ????
      96:	2f 00       	.word	0x002f	; ????
      98:	56 00       	.word	0x0056	; ????
      9a:	43 00       	.word	0x0043	; ????
      9c:	50 00       	.word	0x0050	; ????
	...

000000a0 <USB::mstring>:
      a0:	55 00 50 00 44 00 49 00 34 00 41 00 56 00 52 00     U.P.D.I.4.A.V.R.
      b0:	2d 00 55 00 53 00 42 00 3a 00 41 00 56 00 52 00     -.U.S.B.:.A.V.R.
      c0:	2d 00 44 00 55 00 3a 00 45 00 44 00 42 00 47 00     -.D.U.:.E.D.B.G.
      d0:	2f 00 43 00 4d 00 53 00 49 00 53 00 2d 00 44 00     /.C.M.S.I.S.-.D.
      e0:	41 00 50 00 00 00                                   A.P...

000000e6 <USB::vstring>:
      e6:	4d 00 75 00 6c 00 74 00 69 00 58 00 2e 00 6a 00     M.u.l.t.i.X...j.
      f6:	70 00 20 00 4f 00 53 00 53 00 57 00 2f 00 4f 00     p. .O.S.S.W./.O.
     106:	53 00 48 00 57 00 20 00 50 00 72 00 6f 00 64 00     S.H.W. .P.r.o.d.
     116:	2e 00 00 00                                         ....

0000011a <USB::report_descriptor>:
     11a:	06 00 ff 09 01 a1 01 15 00 26 ff 00 75 08 96 40     .........&..u..@
     12a:	00 09 01 81 02 96 40 00 09 01 91 02 95 04 09 01     ......@.........
     13a:	b1 02 c0                                            ...

0000013d <USB::current_descriptor>:
     13d:	09 02 6b 00 03 01 00 80 32 09 04 00 00 02 03 00     ..k.....2.......
     14d:	00 00 09 21 11 01 00 01 22 23 00 07 05 02 03 40     ...!...."#.....@
     15d:	00 01 07 05 81 03 40 00 01 08 0b 01 02 02 02 01     ......@.........
     16d:	04 09 04 01 00 01 02 02 01 00 05 24 00 10 01 04     ...........$....
     17d:	24 02 06 05 24 06 01 02 05 24 01 03 02 07 05 82     $...$....$......
     18d:	03 10 00 04 09 04 02 00 02 0a 00 00 00 07 05 03     ................
     19d:	02 40 00 00 07 05 83 02 40 00 00                    .@......@..

000001a8 <USB::qualifier_descriptor>:
     1a8:	0a 06 00 02 ef 02 01 40 00 00                       .......@..

000001b2 <USB::get_descriptor(unsigned char*, unsigned int)::__c>:
     1b2:	20 56 49 44 3a 50 49 44 3d 25 30 34 58 3a 25 30      VID:PID=%04X:%0
     1c2:	34 58 0d 0a 00                                      4X...

000001c7 <USB::device_descriptor>:
     1c7:	12 01 00 02 ef 02 01 40 d8 04 15 0b 00 01 01 02     .......@........
     1d7:	03 01                                               ..

000001d9 <USB::request_standard()::__c>:
     1d9:	3c 47 49 3a 25 30 32 58 3e 0d 0a 00                 <GI:%02X>...

000001e5 <USB::request_standard()::__c>:
     1e5:	3c 53 49 3a 30 3e 0d 0a 00                          <SI:0>...

000001ee <USB::request_standard()::__c>:
     1ee:	3c 53 43 3a 25 30 32 58 3e 0d 0a 00                 <SC:%02X>...

000001fa <USB::request_standard()::__c>:
     1fa:	3c 47 43 3a 25 30 32 58 3e 0d 0a 00                 <GC:%02X>...

00000206 <USB::request_standard()::__c>:
     206:	20 55 53 42 30 5f 41 44 44 52 3d 25 64 0d 0a 00      USB0_ADDR=%d...

00000216 <USB::request_standard()::__c>:
     216:	20 53 46 3d 25 30 32 58 3a 25 30 32 58 0d 0a 00      SF=%02X:%02X...

00000226 <USB::request_standard()::__c>:
     226:	20 43 46 3d 25 30 32 58 3a 25 30 32 58 0d 0a 00      CF=%02X:%02X...

00000236 <USB::request_class()::__c>:
     236:	20 53 42 3d 25 30 34 58 0d 0a 00                     SB=%04X...

00000241 <USB::request_class()::__c>:
     241:	20 53 4c 53 3d 25 30 32 58 0d 0a 00                  SLS=%02X...

0000024d <USB::request_class()::__c>:
     24d:	20 47 4c 45 3d 00                                    GLE=.

00000253 <USB::request_class()::__c>:
     253:	20 53 4c 45 3d 00                                    SLE=.

00000259 <USB::request_class()::__c>:
     259:	20 49 44 4c 3d 25 30 32 58 0d 0a 00                  IDL=%02X...

00000265 <USB::handling_control_transactions()::__c>:
     265:	52 51 3d 25 30 32 58 3a 25 30 34 58 3a 25 30 32     RQ=%02X:%04X:%02
     275:	58 3a 25 30 32 58 3a 25 30 34 58 3a 25 30 34 58     X:%02X:%04X:%04X
     285:	3a 25 30 34 58 0d 0a 00                             :%04X...

0000028d <SYS::reset_enter()::__c>:
     28d:	3c 52 53 54 3a 49 4e 3e 0d 0a 00                    <RST:IN>...

00000298 <SYS::reset_leave()::__c>:
     298:	3c 52 53 54 3a 4f 55 54 3e 0d 0a 00                 <RST:OUT>...

000002a4 <JTAG::dap_command_check()::__c>:
     2a4:	3c 45 44 42 47 5f 45 4d 50 54 59 3e 0d 0a 00        <EDBG_EMPTY>...

000002b3 <JTAG::dap_command_check()::__c>:
     2b3:	3c 45 44 42 47 5f 46 41 49 4c 3e 0d 0a 00           <EDBG_FAIL>...

000002c1 <JTAG::dap_command_check()::__c>:
     2c1:	3c 45 44 42 47 5f 46 41 49 4c 3e 0d 0a 00           <EDBG_FAIL>...

000002cf <JTAG::jtag_scope_general()::__c>:
     2cf:	20 47 45 4e 3d 25 30 32 58 3a 25 30 32 58 3a 25      GEN=%02X:%02X:%
     2df:	30 32 58 0d 0a 00                                   02X...

000002e5 <JTAG::jtag_scope_general()::__c>:
     2e5:	20 47 45 4e 5f 53 49 47 4e 5f 4f 46 46 0d 0a 00      GEN_SIGN_OFF...

000002f5 <JTAG::jtag_scope_general()::__c>:
     2f5:	20 56 54 41 52 47 45 54 3d 25 64 0d 0a 00            VTARGET=%d...

00000303 <JTAG::jtag_scope_general()::__c>:
     303:	20 47 45 4e 5f 53 49 47 4e 5f 4f 4e 0d 0a 00         GEN_SIGN_ON...

00000312 <JTAG::jtag_physical>:
     312:	90 28 00 18 38 00 00 00                             .(..8...

0000031a <JTAG::jtag_scope_general()::__c>:
     31a:	20 50 48 59 53 49 43 41 4c 3d 25 30 32 58 3a 25      PHYSICAL=%02X:%
     32a:	30 32 58 0d 0a 00                                   02X...

00000330 <JTAG::jtag_scope_general()::__c>:
     330:	20 56 45 53 52 49 4f 4e 3d 00                        VESRION=.

0000033a <JTAG::jtag_version>:
     33a:	00 01 21 2e 00                                      ..!..

0000033f <JTAG::jtag_scope_general()::__c>:
     33f:	20 47 45 4e 5f 47 45 54 5f 50 41 52 41 4d 3d 25      GEN_GET_PARAM=%
     34f:	30 32 58 3a 25 30 32 58 3a 25 30 32 58 0d 0a 00     02X:%02X:%02X...

0000035f <PDI::jtag_scope_xmega()::__c>:
     35f:	20 50 44 49 5f 57 52 49 54 45 3d 25 30 32 58 3a      PDI_WRITE=%02X:
     36f:	25 30 38 6c 58 3a 25 30 34 58 0d 0a 00              %08lX:%04X...

0000037c <PDI::jtag_scope_xmega()::__c>:
     37c:	20 50 44 49 5f 52 45 41 44 3d 25 30 32 58 3a 25      PDI_READ=%02X:%
     38c:	30 38 6c 58 3a 25 30 34 58 0d 0a 00                 08lX:%04X...

00000398 <PDI::jtag_scope_xmega()::__c>:
     398:	20 50 44 49 5f 45 52 41 53 45 3d 25 30 32 58 3a      PDI_ERASE=%02X:
     3a8:	25 30 38 6c 58 0d 0a 00                             %08lX...

000003b0 <PDI::jtag_scope_xmega()::__c>:
     3b0:	20 50 44 49 5f 4c 45 41 56 45 5f 50 52 4f 47 0d      PDI_LEAVE_PROG.
     3c0:	0a 00                                               ..

000003c2 <PDI::jtag_scope_xmega()::__c>:
     3c2:	20 50 44 49 5f 45 4e 54 45 52 5f 50 52 4f 47 0d      PDI_ENTER_PROG.
     3d2:	0a 00                                               ..

000003d4 <PDI::jtag_scope_xmega()::__c>:
     3d4:	20 50 44 49 5f 53 49 47 4e 5f 4f 46 46 0d 0a 00      PDI_SIGN_OFF...

000003e4 <PDI::jtag_scope_xmega()::__c>:
     3e4:	20 50 44 49 5f 53 49 47 4e 5f 4f 4e 3d 45 58 54      PDI_SIGN_ON=EXT
     3f4:	3a 25 30 32 58 0d 0a 00                             :%02X...

000003fc <UPDI::jtag_scope_updi()::__c>:
     3fc:	20 55 50 44 49 5f 57 52 49 54 45 3d 25 30 32 58      UPDI_WRITE=%02X
     40c:	3a 25 30 36 6c 58 3a 25 30 34 58 0d 0a 00           :%06lX:%04X...

0000041a <UPDI::jtag_scope_updi()::__c>:
     41a:	20 55 50 44 49 5f 52 45 41 44 3d 25 30 32 58 3a      UPDI_READ=%02X:
     42a:	25 30 36 6c 58 3a 25 30 34 58 0d 0a 00              %06lX:%04X...

00000437 <UPDI::jtag_scope_updi()::__c>:
     437:	20 55 50 44 49 5f 45 52 41 53 45 3d 25 30 32 58      UPDI_ERASE=%02X
     447:	3a 25 30 36 6c 58 0d 0a 00                          :%06lX...

00000450 <UPDI::jtag_scope_updi()::__c>:
     450:	20 4c 41 53 54 5f 58 43 4c 4b 3d 25 64 0d 0a 00      LAST_XCLK=%d...

00000460 <UPDI::jtag_scope_updi()::__c>:
     460:	20 55 50 44 49 5f 4c 45 41 56 45 5f 50 52 4f 47      UPDI_LEAVE_PROG
     470:	0d 0a 00                                            ...

00000473 <UPDI::jtag_scope_updi()::__c>:
     473:	20 55 50 44 49 5f 45 4e 54 45 52 5f 50 52 4f 47      UPDI_ENTER_PROG
     483:	0d 0a 00                                            ...

00000486 <UPDI::jtag_scope_updi()::__c>:
     486:	20 55 50 44 49 5f 53 49 47 4e 5f 4f 46 46 0d 0a      UPDI_SIGN_OFF..
	...

00000497 <UPDI::jtag_scope_updi()::__c>:
     497:	20 55 50 44 49 5f 53 49 47 4e 5f 4f 4e 3d 45 58      UPDI_SIGN_ON=EX
     4a7:	54 3a 25 30 32 58 0d 0a 00                          T:%02X...

000004b0 <_ZZN4JTAG19jtag_scope_avr_coreEvE3__c__11_>:
     4b0:	20 58 43 4c 4b 3d 25 64 0d 0a 00                     XCLK=%d...

000004bb <_ZZN4JTAG19jtag_scope_avr_coreEvE3__c__10_>:
     4bb:	20 43 4f 4e 4e 45 43 54 49 4f 4e 3d 25 30 32 58      CONNECTION=%02X
     4cb:	0d 0a 00                                            ...

000004ce <JTAG::jtag_scope_avr_core()::__c>:
     4ce:	20 41 52 43 48 3d 25 30 32 58 0d 0a 00               ARCH=%02X...

000004db <JTAG::jtag_scope_avr_core()::__c>:
     4db:	20 41 56 52 5f 47 45 54 5f 50 41 52 41 4d 45 54      AVR_GET_PARAMET
     4eb:	45 52 3d 25 30 32 58 3a 25 30 32 58 3a 25 30 32     ER=%02X:%02X:%02
     4fb:	58 0d 0a 00                                         X...

000004ff <JTAG::jtag_scope_avr_core()::__c>:
     4ff:	20 55 4e 4c 4f 43 4b 45 4e 3d 25 30 32 58 0d 0a      UNLOCKEN=%02X..
	...

00000510 <JTAG::jtag_scope_avr_core()::__c>:
     510:	20 48 56 43 54 52 4c 45 4e 3d 25 30 32 58 0d 0a      HVCTRLEN=%02X..
	...

00000521 <JTAG::jtag_scope_avr_core()::__c>:
     521:	20 44 45 56 49 43 45 44 45 53 43 3d 25 58 0d 0a      DEVICEDESC=%X..
	...

00000532 <JTAG::jtag_scope_avr_core()::__c>:
     532:	20 46 49 58 5f 58 43 4c 4b 3d 25 64 0d 0a 00         FIX_XCLK=%d...

00000541 <JTAG::jtag_scope_avr_core()::__c>:
     541:	20 43 4f 4e 4e 45 43 54 49 4f 4e 3d 25 30 32 58      CONNECTION=%02X
     551:	0d 0a 00                                            ...

00000554 <JTAG::jtag_scope_avr_core()::__c>:
     554:	20 53 45 53 53 5f 50 55 52 50 4f 53 45 3d 25 30      SESS_PURPOSE=%0
     564:	32 58 0d 0a 00                                      2X...

00000569 <JTAG::jtag_scope_avr_core()::__c>:
     569:	20 58 43 4c 4b 3d 25 64 0d 0a 00                     XCLK=%d...

00000574 <JTAG::jtag_scope_avr_core()::__c>:
     574:	20 41 52 43 48 3d 25 30 32 58 0d 0a 00               ARCH=%02X...

00000581 <JTAG::jtag_scope_avr_core()::__c>:
     581:	20 41 56 52 5f 53 45 54 5f 50 41 52 41 4d 3d 25      AVR_SET_PARAM=%
     591:	30 32 58 3a 25 30 32 58 3a 25 30 32 58 3a 25 30     02X:%02X:%02X:%0
     5a1:	34 58 0d 0a 00                                      4X...

000005a6 <TPI::disconnect()::__c>:
     5a6:	3c 48 56 43 3a 4f 46 46 3e 0d 0a 00                 <HVC:OFF>...

000005b2 <TPI::jtag_scope_tpi()::__c>:
     5b2:	20 3c 52 45 53 3a 25 30 32 58 3e 0d 0a 00            <RES:%02X>...

000005c0 <TPI::jtag_scope_tpi()::__c>:
     5c0:	20 54 50 49 5f 57 52 49 54 45 3d 25 30 32 58 3a      TPI_WRITE=%02X:
     5d0:	25 30 38 6c 58 3a 25 30 34 58 0d 0a 00              %08lX:%04X...

000005dd <TPI::jtag_scope_tpi()::__c>:
     5dd:	20 54 50 49 5f 45 52 41 53 45 3d 25 30 32 58 3a      TPI_ERASE=%02X:
     5ed:	25 30 38 6c 58 0d 0a 00                             %08lX...

000005f5 <TPI::jtag_scope_tpi()::__c>:
     5f5:	20 54 50 49 5f 52 45 41 44 3d 25 30 32 58 3a 25      TPI_READ=%02X:%
     605:	30 38 6c 58 3a 25 30 34 58 0d 0a 00                 08lX:%04X...

00000611 <TPI::jtag_scope_tpi()::__c>:
     611:	20 54 50 49 5f 43 52 43 0d 0a 00                     TPI_CRC...

0000061c <TPI::jtag_scope_tpi()::__c>:
     61c:	20 54 50 49 5f 4c 45 41 56 45 5f 50 52 4f 47 4d      TPI_LEAVE_PROGM
     62c:	4f 44 45 0d 0a 00                                   ODE...

00000632 <TPI::jtag_scope_tpi()::__c>:
     632:	20 56 54 41 52 47 45 54 3d 25 64 0d 0a 00            VTARGET=%d...

00000640 <TPI::jtag_scope_tpi()::__c>:
     640:	20 54 50 49 5f 45 4e 54 45 52 5f 50 52 4f 47 4d      TPI_ENTER_PROGM
     650:	4f 44 45 0d 0a 00                                   ODE...

00000656 <JTAG::jtag_scope_edbg()::__c>:
     656:	20 54 41 52 47 45 54 5f 50 4f 57 45 52 3d 25 30      TARGET_POWER=%0
     666:	32 58 0d 0a 00                                      2X...

0000066b <JTAG::jtag_scope_edbg()::__c>:
     66b:	20 41 56 52 5f 47 45 54 5f 50 41 52 41 4d 3d 25      AVR_GET_PARAM=%
     67b:	30 32 58 3a 25 30 32 58 3a 25 30 32 58 0d 0a 00     02X:%02X:%02X...

0000068b <JTAG::jtag_scope_edbg()::__c>:
     68b:	20 54 41 52 47 45 54 5f 50 4f 57 45 52 3d 25 30      TARGET_POWER=%0
     69b:	32 58 0d 0a 00                                      2X...

000006a0 <JTAG::jtag_scope_edbg()::__c>:
     6a0:	20 41 56 52 5f 53 45 54 5f 50 41 52 41 4d 3d 25      AVR_SET_PARAM=%
     6b0:	30 32 58 3a 25 30 32 58 3a 25 30 32 58 3a 25 30     02X:%02X:%02X:%0
     6c0:	32 58 0d 0a 00                                      2X...

000006c5 <JTAG::jtag_scope_branch()::__c>:
     6c5:	53 51 3d 25 64 3a 25 64 3e 53 43 4f 50 45 3d 25     SQ=%d:%d>SCOPE=%
     6d5:	30 32 58 2c 43 3d 25 30 32 58 2c 53 3d 25 30 32     02X,C=%02X,S=%02
     6e5:	58 2c 4c 3d 25 30 32 58 0d 0a 00                    X,L=%02X...

000006f0 <main::__c>:
     6f0:	3c 57 41 49 54 49 4e 47 3e 0d 0a 00                 <WAITING>...

000006fc <main::__c>:
     6fc:	5f 5f 41 56 52 5f 41 52 43 48 5f 5f 20 3d 20 25     __AVR_ARCH__ = %
     70c:	64 0d 0a 00                                         d...

00000710 <main::__c>:
     710:	5f 41 56 52 5f 49 4f 58 58 58 5f 48 5f 20 3d 20     _AVR_IOXXX_H_ = 
     720:	69 6f 61 76 72 36 34 64 75 33 32 2e 68 0d 0a 00     ioavr64du32.h...

00000730 <main::__c>:
     730:	46 5f 43 50 55 20 3d 20 25 6c 64 0d 0a 00           F_CPU = %ld...

0000073e <main::__c>:
     73e:	0a 3c 73 74 61 72 74 75 70 3e 0d 0a 00              .<startup>...

0000074b <PDI::read_memory()::__c>:
     74b:	20 4c 3d 25 30 34 58 2c 41 3d 25 30 38 6c 58 2c      L=%04X,A=%08lX,
	...

0000075c <PDI::write_memory()::__c>:
     75c:	20 4c 3d 25 30 34 58 2c 41 3d 25 30 38 6c 58 2c      L=%04X,A=%08lX,
	...

0000076d <PDI::connect()::__c>:
     76d:	20 50 44 49 4f 4e 3b 47 56 41 4c 3d 25 30 32 58      PDION;GVAL=%02X
     77d:	0d 0a 00                                            ...

00000780 <PDI::enter_progmode()::__c>:
     780:	3c 53 54 3a 25 30 32 58 3e 0d 0a 00                 <ST:%02X>...

0000078c <SYS::reboot()::__c>:
     78c:	3c 52 45 42 4f 4f 54 3e 0d 0a 00                    <REBOOT>...

00000797 <Timeout::command(unsigned int (*)(), unsigned int (*)(), unsigned int)::__c>:
     797:	5b 54 4f 5d 00                                      [TO].

0000079c <TPI::erase_memory()::__c>:
     79c:	20 53 45 43 54 49 4f 4e 5f 45 52 41 53 45 3d 25      SECTION_ERASE=%
     7ac:	30 34 58 0d 0a 00                                   04X...

000007b2 <TPI::erase_memory()::__c>:
     7b2:	20 43 48 49 50 5f 45 52 41 53 45 3d 25 30 34 58      CHIP_ERASE=%04X
     7c2:	0d 0a 00                                            ...

000007c5 <USART::change_tpi()::__c>:
     7c5:	20 55 53 41 52 54 3d 54 50 49 20 42 41 55 44 3d      USART=TPI BAUD=
     7d5:	25 30 34 58 0d 0a 00                                %04X...

000007dc <TPI::connect()::__c>:
     7dc:	20 53 49 47 3e 25 30 34 58 3a 25 30 32 58 0d 0a      SIG>%04X:%02X..
	...

000007ed <TPI::connect()::__c>:
     7ed:	20 53 4b 45 59 0d 0a 00                              SKEY...

000007f5 <TPI::connect()::__c>:
     7f5:	3c 48 56 45 4e 3e 00                                <HVEN>.

000007fc <UPDI::set_nvmprog_key(bool)::__c>:
     7fc:	20 50 52 4f 47 5f 4b 45 59 3d 00                     PROG_KEY=.

00000807 <UPDI::set_erase_key()::__c>:
     807:	20 45 52 41 53 45 5f 4b 45 59 3d 00                  ERASE_KEY=.

00000813 <UPDI::chip_erase()::__c>:
     813:	20 50 52 4f 47 53 54 41 52 54 3d 25 30 32 58 0d      PROGSTART=%02X.
     823:	0a 00                                               ..

00000825 <UPDI::chip_erase()::__c>:
     825:	20 3c 53 59 53 3a 25 30 32 58 3e 0d 0a 00            <SYS:%02X>...

00000833 <UPDI::chip_erase()::__c>:
     833:	20 57 41 49 54 00                                    WAIT.

00000839 <UPDI::chip_erase()::__c>:
     839:	20 43 48 49 50 5f 45 52 41 53 45 00                  CHIP_ERASE.

00000845 <UPDI::set_urowwrite_key()::__c>:
     845:	20 55 52 4f 57 5f 4b 45 59 3d 00                     UROW_KEY=.

00000850 <UPDI::write_userrow()::__c>:
     850:	20 52 45 5f 50 52 4f 47 53 54 41 52 54 3d 25 30      RE_PROGSTART=%0
     860:	32 58 0d 0a 00                                      2X...

00000865 <UPDI::write_userrow()::__c>:
     865:	3c 53 59 53 3a 25 30 32 58 3a 25 64 3e 0d 0a 00     <SYS:%02X:%d>...

00000875 <UPDI::write_userrow()::__c>:
     875:	3c 53 59 53 3a 25 30 32 58 3a 25 64 3e 0d 0a 00     <SYS:%02X:%d>...

00000885 <UPDI::write_userrow()::__c>:
     885:	20 45 4e 54 45 52 5f 55 52 4f 57 3d 25 30 34 6c      ENTER_UROW=%04l
     895:	58 3a 25 30 34 58 0d 0a 00                          X:%04X...

0000089e <USART::change_updi()::__c>:
     89e:	20 55 53 41 52 54 3d 55 50 44 49 20 58 43 4c 4b      USART=UPDI XCLK
     8ae:	3d 25 64 20 42 41 55 44 3d 25 30 34 58 0d 0a 00     =%d BAUD=%04X...

000008be <UPDI::connect()::__c>:
     8be:	20 46 41 49 4c 3a 25 30 32 58 2c 25 30 32 58 0d      FAIL:%02X,%02X.
     8ce:	0a 00                                               ..

000008d0 <UPDI::connect()::__c>:
     8d0:	20 4e 56 4d 3a 25 30 32 58 2c 53 49 42 3d 22 25      NVM:%02X,SIB="%
     8e0:	73 22 0d 0a 00                                      s"...

000008e5 <UPDI::connect()::__c>:
     8e5:	3c 48 56 43 3a 56 32 2b 3e 00                       <HVC:V2+>.

000008ef <UPDI::connect()::__c>:
     8ef:	3c 48 56 43 3a 56 30 3e 00                          <HVC:V0>.

000008f8 <UPDI::enter_progmode()::__c>:
     8f8:	25 30 32 58 0d 0a 00                                %02X...

000008ff <USART::change_pdi()::__c>:
     8ff:	20 55 53 41 52 54 3d 50 44 49 20 42 41 55 44 3d      USART=PDI BAUD=
     90f:	25 30 34 58 0d 0a 00                                %04X...

00000916 <USART::change_vcp()::__c>:
     916:	20 56 43 50 3d 46 41 49 4c 0d 0a 00                  VCP=FAIL...

00000922 <USART::change_vcp()::__c>:
     922:	20 55 53 41 52 54 3d 56 43 50 0d 0a 00               USART=VCP...

0000092f <USART::change_vcp()::__c>:
     92f:	20 42 41 55 44 3d 25 30 38 6c 58 3a 25 30 32 58      BAUD=%08lX:%02X
     93f:	0d 0a 00                                            ...

00000942 <USB::ep_init>:
	...
     94a:	00 4b 00 00 5a 63 00 00 00 7b 00 00 62 63 00 00     .K..Zc...{..bc..
	...
     962:	00 bb 40 00 72 63 00 00 00 8b 00 00 72 63 40 00     ..@.rc......rc@.
     972:	00 b9 00 00 62 63 00 00 00 8b 00 00 b2 63 40 00     ....bc.......c@.
     982:	02 bb 00 00 f2 63 00 00 00 00                       .....c....

0000098c <_portmux_usart1c>:
     98c:	e2 05 18 10 60 04 40 80 77 04                       ....`.@.w.

00000996 <__ctors_start>:
__ctors_start():
     996:	3e 1a       	sub	r3, r30

00000998 <__ctors_end>:
__dtors_end():
../../../../crt1/gcrt1.S:230
     998:	11 24       	eor	r1, r1
../../../../crt1/gcrt1.S:231
     99a:	1f be       	out	0x3f, r1	; 63
../../../../crt1/gcrt1.S:232
     99c:	cf ef       	ldi	r28, 0xFF	; 255
../../../../crt1/gcrt1.S:234
     99e:	cd bf       	out	0x3d, r28	; 61
../../../../crt1/gcrt1.S:236
     9a0:	df e7       	ldi	r29, 0x7F	; 127
../../../../crt1/gcrt1.S:237
     9a2:	de bf       	out	0x3e, r29	; 62

000009a4 <setup_mcu()>:
_CLKCTRL_SETUP():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/CLKCTRL_modernAVR.h:301
#else
#assert This internal CPU clock is not supported
#endif

#if defined(_CLKCTRL_FREQSEL_)
  _PROTECTED_WRITE(CLKCTRL_OSCHFCTRLA, _CLKCTRL_FREQSEL_);
     9a4:	88 ed       	ldi	r24, 0xD8	; 216
     9a6:	90 e2       	ldi	r25, 0x20	; 32
     9a8:	84 bf       	out	0x34, r24	; 52
     9aa:	90 93 68 00 	sts	0x0068, r25	; 0x800068 <__TEXT_REGION_LENGTH__+0x7f0068>
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/CLKCTRL_modernAVR.h:313
#endif

#if defined(_CLKCTRL_PDIV_)
  _PROTECTED_WRITE(CLKCTRL_MCLKCTRLB, _CLKCTRL_PDIV_ | CLKCTRL_PEN_bm);
#else
  _PROTECTED_WRITE(CLKCTRL_MCLKCTRLB, 0);
     9ae:	90 e0       	ldi	r25, 0x00	; 0
     9b0:	84 bf       	out	0x34, r24	; 52
     9b2:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__TEXT_REGION_LENGTH__+0x7f0061>
initVariant():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/variants/avr_du32/variant.h:267
extern "C" {
#endif

inline void initVariant (void) {
  _CLKCTRL_SETUP();
  PORTA.PINCONFIG = PORT_ISC_INPUT_DISABLE_gc;
     9b6:	e0 e0       	ldi	r30, 0x00	; 0
     9b8:	f4 e0       	ldi	r31, 0x04	; 4
     9ba:	84 e0       	ldi	r24, 0x04	; 4
     9bc:	83 87       	std	Z+11, r24	; 0x0b
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/variants/avr_du32/variant.h:268
  PORTA.PINCTRLUPD = ~0;
     9be:	8f ef       	ldi	r24, 0xFF	; 255
     9c0:	84 87       	std	Z+12, r24	; 0x0c
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/variants/avr_du32/variant.h:269
  PORTC.PINCTRLUPD = ~0;
     9c2:	80 93 4c 04 	sts	0x044C, r24	; 0x80044c <__TEXT_REGION_LENGTH__+0x7f044c>
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/variants/avr_du32/variant.h:270
  PORTD.PINCTRLUPD = ~0;
     9c6:	80 93 6c 04 	sts	0x046C, r24	; 0x80046c <__TEXT_REGION_LENGTH__+0x7f046c>
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/variants/avr_du32/variant.h:271
  PORTF.PINCTRLUPD = ~0;
     9ca:	80 93 ac 04 	sts	0x04AC, r24	; 0x8004ac <__TEXT_REGION_LENGTH__+0x7f04ac>

000009ce <__do_copy_data>:
__do_copy_data():
     9ce:	10 e6       	ldi	r17, 0x60	; 96
     9d0:	a0 e0       	ldi	r26, 0x00	; 0
     9d2:	b0 e6       	ldi	r27, 0x60	; 96
     9d4:	ec e8       	ldi	r30, 0x8C	; 140
     9d6:	f4 e5       	ldi	r31, 0x54	; 84
     9d8:	02 c0       	rjmp	.+4      	; 0x9de <__do_copy_data+0x10>
     9da:	05 90       	lpm	r0, Z+
     9dc:	0d 92       	st	X+, r0
     9de:	aa 3a       	cpi	r26, 0xAA	; 170
     9e0:	b1 07       	cpc	r27, r17
     9e2:	d9 f7       	brne	.-10     	; 0x9da <__do_copy_data+0xc>

000009e4 <__do_clear_bss>:
__do_clear_bss():
     9e4:	20 e6       	ldi	r18, 0x60	; 96
     9e6:	aa ea       	ldi	r26, 0xAA	; 170
     9e8:	b0 e6       	ldi	r27, 0x60	; 96
     9ea:	01 c0       	rjmp	.+2      	; 0x9ee <.do_clear_bss_start>

000009ec <.do_clear_bss_loop>:
     9ec:	1d 92       	st	X+, r1

000009ee <.do_clear_bss_start>:
     9ee:	aa 3b       	cpi	r26, 0xBA	; 186
     9f0:	b2 07       	cpc	r27, r18
     9f2:	e1 f7       	brne	.-8      	; 0x9ec <.do_clear_bss_loop>

000009f4 <__do_global_ctors>:
__do_global_ctors():
     9f4:	14 e0       	ldi	r17, 0x04	; 4
     9f6:	cc ec       	ldi	r28, 0xCC	; 204
     9f8:	d4 e0       	ldi	r29, 0x04	; 4
     9fa:	04 c0       	rjmp	.+8      	; 0xa04 <__do_global_ctors+0x10>
     9fc:	21 97       	sbiw	r28, 0x01	; 1
     9fe:	fe 01       	movw	r30, r28
     a00:	0e 94 21 2a 	call	0x5442	; 0x5442 <__tablejump2__>
     a04:	cb 3c       	cpi	r28, 0xCB	; 203
     a06:	d1 07       	cpc	r29, r17
     a08:	c9 f7       	brne	.-14     	; 0x9fc <__do_global_ctors+0x8>
../../../../crt1/gcrt1.S:314
     a0a:	0e 94 4d 1a 	call	0x349a	; 0x349a <main>
../../../../crt1/gcrt1.S:315
     a0e:	0c 94 44 2a 	jmp	0x5488	; 0x5488 <_exit>

00000a12 <__bad_interrupt>:
__vector_22():
../../../../crt1/gcrt1.S:209
     a12:	f6 ca       	rjmp	.-2580   	; 0x0 <__vectors>

00000a14 <printf_putchar(char, __file*)>:
printf_putchar():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/Print_format.cpp:22
/*
 * Format Printable
 */

static int printf_putchar (char _c, FILE *_fp) {
  return ((class Print *)(fdev_get_udata(_fp)))->write((uint8_t) _c);
     a14:	fb 01       	movw	r30, r22
     a16:	a4 85       	ldd	r26, Z+12	; 0x0c
     a18:	b5 85       	ldd	r27, Z+13	; 0x0d
     a1a:	ed 91       	ld	r30, X+
     a1c:	fc 91       	ld	r31, X
     a1e:	11 97       	sbiw	r26, 0x01	; 1
     a20:	01 90       	ld	r0, Z+
     a22:	f0 81       	ld	r31, Z
     a24:	e0 2d       	mov	r30, r0
     a26:	68 2f       	mov	r22, r24
     a28:	cd 01       	movw	r24, r26
     a2a:	09 94       	ijmp

00000a2c <USART::drain(unsigned int) [clone .constprop.13]>:
drain():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:60
    if (_baud < 64) _baud = 64;
    else if (_baud > 0xFFFFU) _baud = 0xFFFF;
    return _baud;
  }

  void drain (size_t _delay) {
     a2c:	80 e0       	ldi	r24, 0x00	; 0
     a2e:	94 e0       	ldi	r25, 0x04	; 4
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:62
    do {
      if (bit_is_set(USART0_STATUS, USART_RXCIF_bp)) {
     a30:	20 91 04 08 	lds	r18, 0x0804	; 0x800804 <__TEXT_REGION_LENGTH__+0x7f0804>
     a34:	27 ff       	sbrs	r18, 7
     a36:	04 c0       	rjmp	.+8      	; 0xa40 <USART::drain(unsigned int) [clone .constprop.13]+0x14>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:66
        __asm__ __volatile__ (
          "LDS R0, 0x0801\n"  /* drop USART0_RXDATAH */
          "LDS R0, 0x0800\n"  /* drop USART0_RXDATAL */
        );
     a38:	00 90 01 08 	lds	r0, 0x0801	; 0x800801 <__TEXT_REGION_LENGTH__+0x7f0801>
     a3c:	00 90 00 08 	lds	r0, 0x0800	; 0x800800 <__TEXT_REGION_LENGTH__+0x7f0800>
     a40:	01 97       	sbiw	r24, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:68
      }
    } while (--_delay);
     a42:	b1 f7       	brne	.-20     	; 0xa30 <USART::drain(unsigned int) [clone .constprop.13]+0x4>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:69
  }
     a44:	08 95       	ret

00000a46 <SYS::send_bitmap(unsigned char const*, unsigned int) [clone .constprop.12]>:
send_bitmap():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:360
  }

  /*** Low level TDAT stream manipulation ***/
  /* UPDI commands are sent from TDAT using only TCA0 and bit manipulation, without switching USART. */
  /* 128kbps is the lowest limit that can be achieved with an 8-bit timer at 32MHz or less. */
  void send_bitmap (const uint8_t _bitmap[], const size_t _length) {
     a46:	bc 01       	movw	r22, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:361
    TCA0_SPLIT_HPER  = F_CPU / 125000L;
     a48:	80 ea       	ldi	r24, 0xA0	; 160
     a4a:	80 93 27 0a 	sts	0x0A27, r24	; 0x800a27 <__TEXT_REGION_LENGTH__+0x7f0a27>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:362
    TCA0_SPLIT_CTRLA = TCA_SPLIT_ENABLE_bm | TCA_SPLIT_CLKSEL_DIV1_gc;
     a4e:	81 e0       	ldi	r24, 0x01	; 1
     a50:	80 93 00 0a 	sts	0x0A00, r24	; 0x800a00 <__TEXT_REGION_LENGTH__+0x7f0a00>
     a54:	30 e0       	ldi	r19, 0x00	; 0
     a56:	20 e0       	ldi	r18, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:364
    for (uint8_t i = 0; i < _length; i++) {
      uint8_t _d = (_bitmap[i >> 3]) >> (i & 7);
     a58:	f9 01       	movw	r30, r18
     a5a:	83 e0       	ldi	r24, 0x03	; 3
     a5c:	f5 95       	asr	r31
     a5e:	e7 95       	ror	r30
     a60:	8a 95       	dec	r24
     a62:	e1 f7       	brne	.-8      	; 0xa5c <SYS::send_bitmap(unsigned char const*, unsigned int) [clone .constprop.12]+0x16>
     a64:	e6 0f       	add	r30, r22
     a66:	f7 1f       	adc	r31, r23
     a68:	40 81       	ld	r20, Z
     a6a:	50 e0       	ldi	r21, 0x00	; 0
     a6c:	82 2f       	mov	r24, r18
     a6e:	87 70       	andi	r24, 0x07	; 7
     a70:	02 c0       	rjmp	.+4      	; 0xa76 <SYS::send_bitmap(unsigned char const*, unsigned int) [clone .constprop.12]+0x30>
     a72:	55 95       	asr	r21
     a74:	47 95       	ror	r20
     a76:	8a 95       	dec	r24
     a78:	e2 f7       	brpl	.-8      	; 0xa72 <SYS::send_bitmap(unsigned char const*, unsigned int) [clone .constprop.12]+0x2c>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:365
      loop_until_bit_is_set(TCA0_SPLIT_INTFLAGS, TCA_SPLIT_HUNF_bp);
     a7a:	80 91 0b 0a 	lds	r24, 0x0A0B	; 0x800a0b <__TEXT_REGION_LENGTH__+0x7f0a0b>
     a7e:	81 ff       	sbrs	r24, 1
     a80:	fc cf       	rjmp	.-8      	; 0xa7a <SYS::send_bitmap(unsigned char const*, unsigned int) [clone .constprop.12]+0x34>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:366
      if (bit_is_set(_d, 0))
     a82:	40 ff       	sbrs	r20, 0
     a84:	0e c0       	rjmp	.+28     	; 0xaa2 <SYS::send_bitmap(unsigned char const*, unsigned int) [clone .constprop.12]+0x5c>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:367
        pinLogicOpen(PIN_PGM_TDAT);
     a86:	00 98       	cbi	0x00, 0	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:370
      else
        pinLogicPush(PIN_PGM_TDAT);
      bit_set(TCA0_SPLIT_INTFLAGS, TCA_SPLIT_HUNF_bp);
     a88:	90 91 0b 0a 	lds	r25, 0x0A0B	; 0x800a0b <__TEXT_REGION_LENGTH__+0x7f0a0b>
     a8c:	92 60       	ori	r25, 0x02	; 2
     a8e:	90 93 0b 0a 	sts	0x0A0B, r25	; 0x800a0b <__TEXT_REGION_LENGTH__+0x7f0a0b>
     a92:	2f 5f       	subi	r18, 0xFF	; 255
     a94:	3f 4f       	sbci	r19, 0xFF	; 255
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:363
  /* UPDI commands are sent from TDAT using only TCA0 and bit manipulation, without switching USART. */
  /* 128kbps is the lowest limit that can be achieved with an 8-bit timer at 32MHz or less. */
  void send_bitmap (const uint8_t _bitmap[], const size_t _length) {
    TCA0_SPLIT_HPER  = F_CPU / 125000L;
    TCA0_SPLIT_CTRLA = TCA_SPLIT_ENABLE_bm | TCA_SPLIT_CLKSEL_DIV1_gc;
    for (uint8_t i = 0; i < _length; i++) {
     a96:	20 37       	cpi	r18, 0x70	; 112
     a98:	31 05       	cpc	r19, r1
     a9a:	f1 f6       	brne	.-68     	; 0xa58 <SYS::send_bitmap(unsigned char const*, unsigned int) [clone .constprop.12]+0x12>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:372
        pinLogicOpen(PIN_PGM_TDAT);
      else
        pinLogicPush(PIN_PGM_TDAT);
      bit_set(TCA0_SPLIT_INTFLAGS, TCA_SPLIT_HUNF_bp);
    }
    TCA0_SPLIT_CTRLA = 0;
     a9c:	10 92 00 0a 	sts	0x0A00, r1	; 0x800a00 <__TEXT_REGION_LENGTH__+0x7f0a00>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:373
  }
     aa0:	08 95       	ret
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:369
      uint8_t _d = (_bitmap[i >> 3]) >> (i & 7);
      loop_until_bit_is_set(TCA0_SPLIT_INTFLAGS, TCA_SPLIT_HUNF_bp);
      if (bit_is_set(_d, 0))
        pinLogicOpen(PIN_PGM_TDAT);
      else
        pinLogicPush(PIN_PGM_TDAT);
     aa2:	00 9a       	sbi	0x00, 0	; 0
     aa4:	f1 cf       	rjmp	.-30     	; 0xa88 <SYS::send_bitmap(unsigned char const*, unsigned int) [clone .constprop.12]+0x42>

00000aa6 <UsartBaseClass::write(unsigned char)>:
write():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/UsartBaseClass.cpp:18
#if !defined(__AVR_TINY__)

#include "../UsartBaseClass.h"

size_t UsartBaseClass::write (const uint8_t _c) {
  loop_until_bit_is_set(usart->STATUS, USART_DREIF_bp);
     aa6:	dc 01       	movw	r26, r24
     aa8:	12 96       	adiw	r26, 0x02	; 2
     aaa:	ed 91       	ld	r30, X+
     aac:	fc 91       	ld	r31, X
     aae:	24 81       	ldd	r18, Z+4	; 0x04
     ab0:	25 ff       	sbrs	r18, 5
     ab2:	fd cf       	rjmp	.-6      	; 0xaae <UsartBaseClass::write(unsigned char)+0x8>
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/UsartBaseClass.cpp:19
  usart->STATUS = USART_TXCIF_bm;
     ab4:	20 e4       	ldi	r18, 0x40	; 64
     ab6:	24 83       	std	Z+4, r18	; 0x04
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/UsartBaseClass.cpp:20
  usart->TXDATAL = _c;
     ab8:	dc 01       	movw	r26, r24
     aba:	12 96       	adiw	r26, 0x02	; 2
     abc:	ed 91       	ld	r30, X+
     abe:	fc 91       	ld	r31, X
     ac0:	62 83       	std	Z+2, r22	; 0x02
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/UsartBaseClass.cpp:22
  return 1;
}
     ac2:	81 e0       	ldi	r24, 0x01	; 1
     ac4:	90 e0       	ldi	r25, 0x00	; 0
     ac6:	08 95       	ret

00000ac8 <USB::ep_cdo_listen()>:
ep_cdo_listen():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:335
    loop_until_bit_is_clear(USB0_INTFLAGSB, USB_RMWBUSY_bp);
    USB_EP_STATUS_CLR(USB_EP_CDI) = ~USB_TOGGLE_bm;
  }

  void ep_cdo_listen (void) {
    ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
     ac8:	8f b7       	in	r24, 0x3f	; 63
__iCliRetVal():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:50
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
     aca:	f8 94       	cli
ep_cdo_listen():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:336
      _recv_count = 0;
     acc:	10 92 74 64 	sts	0x6474, r1	; 0x806474 <_recv_count>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:337
      EP_CDO.CNT  = 0;
     ad0:	10 92 b2 64 	sts	0x64B2, r1	; 0x8064b2 <EP_TABLE+0x3a>
     ad4:	10 92 b3 64 	sts	0x64B3, r1	; 0x8064b3 <EP_TABLE+0x3b>
__iRestore():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:70
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
     ad8:	8f bf       	out	0x3f, r24	; 63
ep_cdo_listen():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:339
    }
    loop_until_bit_is_clear(USB0_INTFLAGSB, USB_RMWBUSY_bp);
     ada:	80 91 0b 0c 	lds	r24, 0x0C0B	; 0x800c0b <__TEXT_REGION_LENGTH__+0x7f0c0b>
     ade:	82 fd       	sbrc	r24, 2
     ae0:	fc cf       	rjmp	.-8      	; 0xada <USB::ep_cdo_listen()+0x12>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:340
    USB_EP_STATUS_CLR(USB_EP_CDO) = ~USB_TOGGLE_bm;
     ae2:	8e ef       	ldi	r24, 0xFE	; 254
     ae4:	80 93 4c 0c 	sts	0x0C4C, r24	; 0x800c4c <__TEXT_REGION_LENGTH__+0x7f0c4c>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:341
  }
     ae8:	08 95       	ret

00000aea <USB::ep_cdi_listen()>:
ep_cdi_listen():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:311
    /* Send the VCP-RxD buffer to the host. */
    /* If our math is correct, then if each side of the double */
    /* buffer can complete the transmission of 64 characters   */
    /* in 1 ms, then it can support 640 kbps. */
    if (bit_is_clear(GPCONF, GPCONF_OPN_bp)
     || bit_is_clear(EP_CDI.STATUS, USB_BUSNAK_bp)) {
     aea:	f4 9b       	sbis	0x1e, 4	; 30
     aec:	0b c0       	rjmp	.+22     	; 0xb04 <USB::ep_cdi_listen()+0x1a>
     aee:	80 91 b8 64 	lds	r24, 0x64B8	; 0x8064b8 <EP_TABLE+0x40>
     af2:	81 ff       	sbrs	r24, 1
     af4:	07 c0       	rjmp	.+14     	; 0xb04 <USB::ep_cdi_listen()+0x1a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:321
    }
    D2PRINTF(" VI=%02X:", _send_count);
    D2PRINTHEX(bit_is_set(GPCONF, GPCONF_DBL_bp)
      ? &EP_MEM.cdi_data[64]
      : &EP_MEM.cdi_data[0], _send_count);
    ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
     af6:	2f b7       	in	r18, 0x3f	; 63
__iCliRetVal():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:50
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
     af8:	f8 94       	cli
ep_cdi_listen():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:323
      EP_CDI.DATAPTR = bit_is_set(GPCONF, GPCONF_DBL_bp)
        ? (register16_t)&EP_MEM.cdi_data[64]
     afa:	f2 99       	sbic	0x1e, 2	; 30
     afc:	0a c0       	rjmp	.+20     	; 0xb12 <USB::ep_cdi_listen()+0x28>
     afe:	82 ef       	ldi	r24, 0xF2	; 242
     b00:	93 e6       	ldi	r25, 0x63	; 99
     b02:	09 c0       	rjmp	.+18     	; 0xb16 <USB::ep_cdi_listen()+0x2c>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:314
    /* in 1 ms, then it can support 640 kbps. */
    if (bit_is_clear(GPCONF, GPCONF_OPN_bp)
     || bit_is_clear(EP_CDI.STATUS, USB_BUSNAK_bp)) {
      /* No sending allowed while port is closed.  */
      /* If the buffer overflows, it is discarded. */
      if (_send_count == 64) _send_count = 0;
     b04:	80 91 75 64 	lds	r24, 0x6475	; 0x806475 <_send_count>
     b08:	80 34       	cpi	r24, 0x40	; 64
     b0a:	11 f5       	brne	.+68     	; 0xb50 <USB::ep_cdi_listen()+0x66>
     b0c:	10 92 75 64 	sts	0x6475, r1	; 0x806475 <_send_count>
     b10:	08 95       	ret
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:323
    D2PRINTHEX(bit_is_set(GPCONF, GPCONF_DBL_bp)
      ? &EP_MEM.cdi_data[64]
      : &EP_MEM.cdi_data[0], _send_count);
    ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
      EP_CDI.DATAPTR = bit_is_set(GPCONF, GPCONF_DBL_bp)
        ? (register16_t)&EP_MEM.cdi_data[64]
     b12:	82 e3       	ldi	r24, 0x32	; 50
     b14:	94 e6       	ldi	r25, 0x64	; 100
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:322
    D2PRINTF(" VI=%02X:", _send_count);
    D2PRINTHEX(bit_is_set(GPCONF, GPCONF_DBL_bp)
      ? &EP_MEM.cdi_data[64]
      : &EP_MEM.cdi_data[0], _send_count);
    ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
      EP_CDI.DATAPTR = bit_is_set(GPCONF, GPCONF_DBL_bp)
     b16:	80 93 bc 64 	sts	0x64BC, r24	; 0x8064bc <EP_TABLE+0x44>
     b1a:	90 93 bd 64 	sts	0x64BD, r25	; 0x8064bd <EP_TABLE+0x45>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:325
        ? (register16_t)&EP_MEM.cdi_data[64]
        : (register16_t)&EP_MEM.cdi_data[0];
      EP_CDI.CNT = _send_count;
     b1e:	80 91 75 64 	lds	r24, 0x6475	; 0x806475 <_send_count>
     b22:	90 e0       	ldi	r25, 0x00	; 0
     b24:	80 93 ba 64 	sts	0x64BA, r24	; 0x8064ba <EP_TABLE+0x42>
     b28:	90 93 bb 64 	sts	0x64BB, r25	; 0x8064bb <EP_TABLE+0x43>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:326
      EP_CDI.MCNT = 0;
     b2c:	10 92 be 64 	sts	0x64BE, r1	; 0x8064be <EP_TABLE+0x46>
     b30:	10 92 bf 64 	sts	0x64BF, r1	; 0x8064bf <EP_TABLE+0x47>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:327
      _send_count = 0;
     b34:	10 92 75 64 	sts	0x6475, r1	; 0x806475 <_send_count>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:328
      GPCONF ^= GPCONF_DBL_bm;
     b38:	8e b3       	in	r24, 0x1e	; 30
     b3a:	94 e0       	ldi	r25, 0x04	; 4
     b3c:	89 27       	eor	r24, r25
     b3e:	8e bb       	out	0x1e, r24	; 30
__iRestore():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:70
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
     b40:	2f bf       	out	0x3f, r18	; 63
ep_cdi_listen():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:330
    }
    loop_until_bit_is_clear(USB0_INTFLAGSB, USB_RMWBUSY_bp);
     b42:	80 91 0b 0c 	lds	r24, 0x0C0B	; 0x800c0b <__TEXT_REGION_LENGTH__+0x7f0c0b>
     b46:	82 fd       	sbrc	r24, 2
     b48:	fc cf       	rjmp	.-8      	; 0xb42 <USB::ep_cdi_listen()+0x58>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:331
    USB_EP_STATUS_CLR(USB_EP_CDI) = ~USB_TOGGLE_bm;
     b4a:	8e ef       	ldi	r24, 0xFE	; 254
     b4c:	80 93 4e 0c 	sts	0x0C4E, r24	; 0x800c4e <__TEXT_REGION_LENGTH__+0x7f0c4e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:332
  }
     b50:	08 95       	ret

00000b52 <USB::ep_res_listen()>:
ep_res_listen():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:277
    loop_until_bit_is_clear(USB0_INTFLAGSB, USB_RMWBUSY_bp);
    USB_EP_STATUS_CLR(USB_EP_REQ) = ~USB_TOGGLE_bm;
  }

  void ep_res_listen (void) {
    EP_RES.MCNT = 0;
     b52:	10 92 8e 64 	sts	0x648E, r1	; 0x80648e <EP_TABLE+0x16>
     b56:	10 92 8f 64 	sts	0x648F, r1	; 0x80648f <EP_TABLE+0x17>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:278
    loop_until_bit_is_clear(USB0_INTFLAGSB, USB_RMWBUSY_bp);
     b5a:	80 91 0b 0c 	lds	r24, 0x0C0B	; 0x800c0b <__TEXT_REGION_LENGTH__+0x7f0c0b>
     b5e:	82 fd       	sbrc	r24, 2
     b60:	fc cf       	rjmp	.-8      	; 0xb5a <USB::ep_res_listen()+0x8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:279
    USB_EP_STATUS_CLR(USB_EP_RES) = ~USB_TOGGLE_bm;
     b62:	8e ef       	ldi	r24, 0xFE	; 254
     b64:	80 93 42 0c 	sts	0x0C42, r24	; 0x800c42 <__TEXT_REGION_LENGTH__+0x7f0c42>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:280
  }
     b68:	08 95       	ret

00000b6a <USB::ep_req_listen()>:
ep_req_listen():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:271
  void ep_cci_pending (void) { loop_until_bit_is_set(EP_CCI.STATUS, USB_BUSNAK_bp); }
  void ep_cdo_pending (void) { loop_until_bit_is_set(EP_CDO.STATUS, USB_BUSNAK_bp); }
  void ep_cdi_pending (void) { loop_until_bit_is_set(EP_CDI.STATUS, USB_BUSNAK_bp); }

  void ep_req_listen (void) {
    EP_REQ.CNT = 0;
     b6a:	10 92 82 64 	sts	0x6482, r1	; 0x806482 <EP_TABLE+0xa>
     b6e:	10 92 83 64 	sts	0x6483, r1	; 0x806483 <EP_TABLE+0xb>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:272
    loop_until_bit_is_clear(USB0_INTFLAGSB, USB_RMWBUSY_bp);
     b72:	80 91 0b 0c 	lds	r24, 0x0C0B	; 0x800c0b <__TEXT_REGION_LENGTH__+0x7f0c0b>
     b76:	82 fd       	sbrc	r24, 2
     b78:	fc cf       	rjmp	.-8      	; 0xb72 <USB::ep_req_listen()+0x8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:273
    USB_EP_STATUS_CLR(USB_EP_REQ) = ~USB_TOGGLE_bm;
     b7a:	8e ef       	ldi	r24, 0xFE	; 254
     b7c:	80 93 40 0c 	sts	0x0C40, r24	; 0x800c40 <__TEXT_REGION_LENGTH__+0x7f0c40>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:274
  }
     b80:	08 95       	ret

00000b82 <UsartBaseClass::flush() [clone .isra.0] [clone .lto_priv.18]>:
_ZN14UsartBaseClass5flushEv.isra.0():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/UsartBaseClass.h:31
  size_t write (const uint8_t _c);
  using Print::write; // pull in write(str) and write(buf, size) from Print

  int read (void);

  void flush (void) {
     b82:	fc 01       	movw	r30, r24
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/UsartBaseClass.h:32
    loop_until_bit_is_set(usart->STATUS, USART_TXCIF_bp);
     b84:	94 81       	ldd	r25, Z+4	; 0x04
     b86:	96 ff       	sbrs	r25, 6
     b88:	fd cf       	rjmp	.-6      	; 0xb84 <UsartBaseClass::flush() [clone .isra.0] [clone .lto_priv.18]+0x2>
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/UsartBaseClass.h:33
  }
     b8a:	08 95       	ret

00000b8c <NVM::V1::prog_init()>:
prog_init():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv1.cpp:30
 * This file is a template for the future.
 */

namespace NVM::V1 {

  size_t prog_init (void) { return 0; }
     b8c:	90 e0       	ldi	r25, 0x00	; 0
     b8e:	80 e0       	ldi	r24, 0x00	; 0
     b90:	08 95       	ret

00000b92 <PDI::recv()>:
recv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:120
    idle_clock(16);
    return start_txd();
  }

  bool recv (void) {
    do { RXSTAT = USART0_RXDATAH; } while (!RXSTAT);
     b92:	80 91 01 08 	lds	r24, 0x0801	; 0x800801 <__TEXT_REGION_LENGTH__+0x7f0801>
     b96:	8c bb       	out	0x1c, r24	; 28
     b98:	8c b3       	in	r24, 0x1c	; 28
     b9a:	88 23       	and	r24, r24
     b9c:	d1 f3       	breq	.-12     	; 0xb92 <PDI::recv()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:121
    RXDATA = USART0_RXDATAL;
     b9e:	80 91 00 08 	lds	r24, 0x0800	; 0x800800 <__TEXT_REGION_LENGTH__+0x7f0800>
     ba2:	8d bb       	out	0x1d, r24	; 29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:122
    RXSTAT ^= 0x80;
     ba4:	8c b3       	in	r24, 0x1c	; 28
     ba6:	80 58       	subi	r24, 0x80	; 128
     ba8:	8c bb       	out	0x1c, r24	; 28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:124
    // D2PRINTF("(%02X:%02X)", RXSTAT, RXDATA);
    return RXSTAT == 0;
     baa:	9c b3       	in	r25, 0x1c	; 28
     bac:	81 e0       	ldi	r24, 0x01	; 1
     bae:	91 11       	cpse	r25, r1
     bb0:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:125
  }
     bb2:	08 95       	ret

00000bb4 <PDI::recv_byte() [clone .part.3]>:
_ZN3PDI9recv_byteEv.part.3():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:128

  bool recv_byte (void) {
    return stop_txd() && recv();
     bb4:	ee cf       	rjmp	.-36     	; 0xb92 <PDI::recv()>

00000bb6 <PDI::send(unsigned char)>:
send():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:148
      *_data++ = RXDATA;
    } while (--_len);
    return true;
  }

  bool send (const uint8_t _data) {
     bb6:	cf 93       	push	r28
     bb8:	c8 2f       	mov	r28, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:149
    loop_until_bit_is_set(USART0_STATUS, USART_DREIF_bp);
     bba:	80 91 04 08 	lds	r24, 0x0804	; 0x800804 <__TEXT_REGION_LENGTH__+0x7f0804>
     bbe:	85 ff       	sbrs	r24, 5
     bc0:	fc cf       	rjmp	.-8      	; 0xbba <PDI::send(unsigned char)+0x4>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:151
    // D2PRINTF("[%02X]", _data);
    USART0_TXDATAL = _data;
     bc2:	c0 93 02 08 	sts	0x0802, r28	; 0x800802 <__TEXT_REGION_LENGTH__+0x7f0802>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:152
    return recv() && _data == RXDATA;
     bc6:	e5 df       	rcall	.-54     	; 0xb92 <PDI::recv()>
     bc8:	88 23       	and	r24, r24
     bca:	21 f0       	breq	.+8      	; 0xbd4 <PDI::send(unsigned char)+0x1e>
     bcc:	9d b3       	in	r25, 0x1d	; 29
     bce:	81 e0       	ldi	r24, 0x01	; 1
     bd0:	9c 13       	cpse	r25, r28
     bd2:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:153
  }
     bd4:	cf 91       	pop	r28
     bd6:	08 95       	ret

00000bd8 <UPDI::send_bytes(unsigned char const*, unsigned int)>:
send_bytes():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:103
    // D1PRINTF("\r\n[%02X]", _data);
    USART0_TXDATAL = _data;
    return recv() && _data == RXDATA;
  }

  bool send_bytes (const uint8_t* _data, size_t _len) {
     bd8:	0f 93       	push	r16
     bda:	1f 93       	push	r17
     bdc:	cf 93       	push	r28
     bde:	df 93       	push	r29
     be0:	eb 01       	movw	r28, r22
     be2:	8c 01       	movw	r16, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:105
    do {
      if (!send(*_data++)) return false;
     be4:	f8 01       	movw	r30, r16
     be6:	81 91       	ld	r24, Z+
     be8:	8f 01       	movw	r16, r30
     bea:	e5 df       	rcall	.-54     	; 0xbb6 <PDI::send(unsigned char)>
     bec:	88 23       	and	r24, r24
     bee:	11 f0       	breq	.+4      	; 0xbf4 <UPDI::send_bytes(unsigned char const*, unsigned int)+0x1c>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:106
    } while (--_len);
     bf0:	21 97       	sbiw	r28, 0x01	; 1
     bf2:	c1 f7       	brne	.-16     	; 0xbe4 <UPDI::send_bytes(unsigned char const*, unsigned int)+0xc>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:108
    return true;
  }
     bf4:	df 91       	pop	r29
     bf6:	cf 91       	pop	r28
     bf8:	1f 91       	pop	r17
     bfa:	0f 91       	pop	r16
     bfc:	08 95       	ret

00000bfe <UPDI::disconnect()>:
sys_reset():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:137
    const static uint8_t _reset[] = {
      0x55, 0xC8, 0x59, /* SYSRST */
      0x55, 0xC8, 0x00, /* SYSRUN */
      0x55, 0xC3, 0x04  /* UPDIDIS */
    };
    return send_bytes(_reset, _leave ? 9 : 6);
     bfe:	69 e0       	ldi	r22, 0x09	; 9
     c00:	70 e0       	ldi	r23, 0x00	; 0
     c02:	87 e9       	ldi	r24, 0x97	; 151
     c04:	90 e6       	ldi	r25, 0x60	; 96
     c06:	e8 df       	rcall	.-48     	; 0xbd8 <UPDI::send_bytes(unsigned char const*, unsigned int)>
disconnect():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:467
    return 0;
  }

  inline size_t disconnect (void) {
    return sys_reset(true);
  }
     c08:	90 e0       	ldi	r25, 0x00	; 0
     c0a:	08 95       	ret

00000c0c <UPDI::sys_status()>:
sys_status():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:231
    return send_bytes(_key_stat, 2) && recv();
  }

  bool sys_status (void) {
    const static uint8_t _sys_stat[] = {0x55, 0x8B};
    return send_bytes(_sys_stat, 2) && recv();
     c0c:	62 e0       	ldi	r22, 0x02	; 2
     c0e:	70 e0       	ldi	r23, 0x00	; 0
     c10:	81 e6       	ldi	r24, 0x61	; 97
     c12:	90 e6       	ldi	r25, 0x60	; 96
     c14:	e1 df       	rcall	.-62     	; 0xbd8 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     c16:	81 11       	cpse	r24, r1
     c18:	cd cf       	rjmp	.-102    	; 0xbb4 <PDI::recv_byte() [clone .part.3]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:232
  }
     c1a:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:226
    return send_byte(0x1000, _nvmcmd);  /* NVMCTRL_CTRLA */
  }

  bool key_status (void) {
    const static uint8_t _key_stat[] = {0x55, 0x87};
    return send_bytes(_key_stat, 2) && recv();
     c1c:	08 95       	ret

00000c1e <UPDI::key_status()>:
key_status():
     c1e:	62 e0       	ldi	r22, 0x02	; 2
     c20:	70 e0       	ldi	r23, 0x00	; 0
     c22:	8f e5       	ldi	r24, 0x5F	; 95
     c24:	90 e6       	ldi	r25, 0x60	; 96
     c26:	d8 df       	rcall	.-80     	; 0xbd8 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     c28:	81 11       	cpse	r24, r1
     c2a:	c4 cf       	rjmp	.-120    	; 0xbb4 <PDI::recv_byte() [clone .part.3]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:227
  }
     c2c:	80 e0       	ldi	r24, 0x00	; 0
     c2e:	08 95       	ret

00000c30 <UPDI::recv_byte(unsigned long)>:
recv_byte():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:116
  /* The acquired data is stored in RXDATA.    */
  bool recv_byte (uint32_t _dwAddr) {
    static uint8_t _set_ptr[] = {
      0x55, 0x08, 0, 0, 0, 0  /* LDS ADDR3 DATA1 */
    };
    _CAPS32(_set_ptr[2])->dword = _dwAddr;
     c30:	60 93 15 60 	sts	0x6015, r22	; 0x806015 <UPDI::recv_byte(unsigned long)::_set_ptr+0x2>
     c34:	70 93 16 60 	sts	0x6016, r23	; 0x806016 <UPDI::recv_byte(unsigned long)::_set_ptr+0x3>
     c38:	80 93 17 60 	sts	0x6017, r24	; 0x806017 <UPDI::recv_byte(unsigned long)::_set_ptr+0x4>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:117
    return send_bytes(_set_ptr, 5) && recv();
     c3c:	90 93 18 60 	sts	0x6018, r25	; 0x806018 <UPDI::recv_byte(unsigned long)::_set_ptr+0x5>
     c40:	65 e0       	ldi	r22, 0x05	; 5
     c42:	70 e0       	ldi	r23, 0x00	; 0
     c44:	83 e1       	ldi	r24, 0x13	; 19
     c46:	90 e6       	ldi	r25, 0x60	; 96
     c48:	c7 df       	rcall	.-114    	; 0xbd8 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     c4a:	81 11       	cpse	r24, r1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:118
  }
     c4c:	b3 cf       	rjmp	.-154    	; 0xbb4 <PDI::recv_byte() [clone .part.3]>
     c4e:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:93
    } while (--_len);
    return true;
  }

  bool is_ack (void) {
    return recv() && 0x40 == RXDATA;
     c50:	08 95       	ret

00000c52 <UPDI::is_ack()>:
is_ack():
     c52:	9f df       	rcall	.-194    	; 0xb92 <PDI::recv()>
     c54:	88 23       	and	r24, r24
     c56:	29 f0       	breq	.+10     	; 0xc62 <UPDI::is_ack()+0x10>
     c58:	9d b3       	in	r25, 0x1d	; 29
     c5a:	81 e0       	ldi	r24, 0x01	; 1
     c5c:	90 34       	cpi	r25, 0x40	; 64
     c5e:	09 f0       	breq	.+2      	; 0xc62 <UPDI::is_ack()+0x10>
     c60:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:94
  }
     c62:	08 95       	ret

00000c64 <UPDI::send_words_block(unsigned long, unsigned int)>:
send_words_block():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:194
      && send_bytes(_set_repeat, sizeof(_set_repeat))
      && send_bytes(&packet.out.memData[0], _wLength)
      && clear_rsd();
  }

  bool send_words_block (uint32_t _dwAddr, size_t _wLength) {
     c64:	cf 93       	push	r28
     c66:	df 93       	push	r29
     c68:	ea 01       	movw	r28, r20
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:197
    /* This function works in word units up to 256 words, */
    /* and will round down any fractional words.          */
    _CAPS32(_set_ptr24[2])->dword = _dwAddr;
     c6a:	60 93 26 60 	sts	0x6026, r22	; 0x806026 <UPDI::_set_ptr24+0x2>
     c6e:	70 93 27 60 	sts	0x6027, r23	; 0x806027 <UPDI::_set_ptr24+0x3>
     c72:	80 93 28 60 	sts	0x6028, r24	; 0x806028 <UPDI::_set_ptr24+0x4>
     c76:	90 93 29 60 	sts	0x6029, r25	; 0x806029 <UPDI::_set_ptr24+0x5>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:198
    _set_repeat[2] = (_wLength >> 1) - 1;
     c7a:	ca 01       	movw	r24, r20
     c7c:	96 95       	lsr	r25
     c7e:	87 95       	ror	r24
     c80:	81 50       	subi	r24, 0x01	; 1
     c82:	80 93 21 60 	sts	0x6021, r24	; 0x806021 <UPDI::_set_repeat+0x2>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:199
    _set_repeat[4] = 0x65;  /* ST PTR++ DATA2 */
     c86:	85 e6       	ldi	r24, 0x65	; 101
     c88:	80 93 23 60 	sts	0x6023, r24	; 0x806023 <UPDI::_set_repeat+0x4>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:200
    return send_bytes(_set_ptr24, 5)
     c8c:	65 e0       	ldi	r22, 0x05	; 5
     c8e:	70 e0       	ldi	r23, 0x00	; 0
     c90:	84 e2       	ldi	r24, 0x24	; 36
     c92:	90 e6       	ldi	r25, 0x60	; 96
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:205
      && is_ack()
      && set_rsd()
      && send_bytes(_set_repeat, sizeof(_set_repeat))
      && send_bytes(&packet.out.memData[0], _wLength & ~1)
      && clear_rsd();
     c94:	a1 df       	rcall	.-190    	; 0xbd8 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     c96:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:201
    /* and will round down any fractional words.          */
    _CAPS32(_set_ptr24[2])->dword = _dwAddr;
    _set_repeat[2] = (_wLength >> 1) - 1;
    _set_repeat[4] = 0x65;  /* ST PTR++ DATA2 */
    return send_bytes(_set_ptr24, 5)
      && is_ack()
     c98:	f9 f0       	breq	.+62     	; 0xcd8 <UPDI::send_words_block(unsigned long, unsigned int)+0x74>
     c9a:	db df       	rcall	.-74     	; 0xc52 <UPDI::is_ack()>
     c9c:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:142
    return send_bytes(_reset, _leave ? 9 : 6);
  }

  bool set_rsd (void) {
    const static uint8_t _set_rsd[] = {0x55, 0xC2, 0x08 + UPDI_CTRLAV};
    return send_bytes(_set_rsd, 3);
     c9e:	e1 f0       	breq	.+56     	; 0xcd8 <UPDI::send_words_block(unsigned long, unsigned int)+0x74>
set_rsd():
     ca0:	63 e0       	ldi	r22, 0x03	; 3
     ca2:	70 e0       	ldi	r23, 0x00	; 0
     ca4:	8c e5       	ldi	r24, 0x5C	; 92
     ca6:	90 e6       	ldi	r25, 0x60	; 96
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:202
    _CAPS32(_set_ptr24[2])->dword = _dwAddr;
    _set_repeat[2] = (_wLength >> 1) - 1;
    _set_repeat[4] = 0x65;  /* ST PTR++ DATA2 */
    return send_bytes(_set_ptr24, 5)
      && is_ack()
      && set_rsd()
     ca8:	97 df       	rcall	.-210    	; 0xbd8 <UPDI::send_bytes(unsigned char const*, unsigned int)>
send_words_block():
     caa:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:203
      && send_bytes(_set_repeat, sizeof(_set_repeat))
     cac:	a9 f0       	breq	.+42     	; 0xcd8 <UPDI::send_words_block(unsigned long, unsigned int)+0x74>
     cae:	65 e0       	ldi	r22, 0x05	; 5
     cb0:	70 e0       	ldi	r23, 0x00	; 0
     cb2:	8f e1       	ldi	r24, 0x1F	; 31
     cb4:	90 e6       	ldi	r25, 0x60	; 96
     cb6:	90 df       	rcall	.-224    	; 0xbd8 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     cb8:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:204
      && send_bytes(&packet.out.memData[0], _wLength & ~1)
     cba:	71 f0       	breq	.+28     	; 0xcd8 <UPDI::send_words_block(unsigned long, unsigned int)+0x74>
     cbc:	be 01       	movw	r22, r28
     cbe:	6e 7f       	andi	r22, 0xFE	; 254
     cc0:	81 e1       	ldi	r24, 0x11	; 17
     cc2:	91 e6       	ldi	r25, 0x61	; 97
     cc4:	89 df       	rcall	.-238    	; 0xbd8 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     cc6:	88 23       	and	r24, r24
     cc8:	39 f0       	breq	.+14     	; 0xcd8 <UPDI::send_words_block(unsigned long, unsigned int)+0x74>
clear_rsd():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:147
    return send_bytes(_set_rsd, 3);
  }

  bool clear_rsd (void) {
    const static uint8_t _clear_rsd[] = {0x55, 0xC2, UPDI_CTRLAV};
    return send_bytes(_clear_rsd, 3);
     cca:	63 e0       	ldi	r22, 0x03	; 3
     ccc:	70 e0       	ldi	r23, 0x00	; 0
     cce:	87 e8       	ldi	r24, 0x87	; 135
     cd0:	90 e6       	ldi	r25, 0x60	; 96
send_words_block():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:206
      && is_ack()
      && set_rsd()
      && send_bytes(_set_repeat, sizeof(_set_repeat))
      && send_bytes(&packet.out.memData[0], _wLength & ~1)
      && clear_rsd();
  }
     cd2:	df 91       	pop	r29
     cd4:	cf 91       	pop	r28
clear_rsd():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:147
    return send_bytes(_set_rsd, 3);
  }

  bool clear_rsd (void) {
    const static uint8_t _clear_rsd[] = {0x55, 0xC2, UPDI_CTRLAV};
    return send_bytes(_clear_rsd, 3);
     cd6:	80 cf       	rjmp	.-256    	; 0xbd8 <UPDI::send_bytes(unsigned char const*, unsigned int)>
send_words_block():
     cd8:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:206
      && is_ack()
      && set_rsd()
      && send_bytes(_set_repeat, sizeof(_set_repeat))
      && send_bytes(&packet.out.memData[0], _wLength & ~1)
      && clear_rsd();
  }
     cda:	df 91       	pop	r29
     cdc:	cf 91       	pop	r28
     cde:	08 95       	ret

00000ce0 <UPDI::send_byte(unsigned long, unsigned char)>:
send_byte():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:120
    };
    _CAPS32(_set_ptr[2])->dword = _dwAddr;
    return send_bytes(_set_ptr, 5) && recv();
  }

  bool send_byte (uint32_t _dwAddr, uint8_t _data) {
     ce0:	cf 93       	push	r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:124
    static uint8_t _set_ptr[] = {
      0x55, 0x48, 0, 0, 0, 0  /* STS ADDR3 DATA1 */
    };
    _CAPS32(_set_ptr[2])->dword = _dwAddr;
     ce2:	c4 2f       	mov	r28, r20
     ce4:	60 93 1b 60 	sts	0x601B, r22	; 0x80601b <UPDI::send_byte(unsigned long, unsigned char)::_set_ptr+0x2>
     ce8:	70 93 1c 60 	sts	0x601C, r23	; 0x80601c <UPDI::send_byte(unsigned long, unsigned char)::_set_ptr+0x3>
     cec:	80 93 1d 60 	sts	0x601D, r24	; 0x80601d <UPDI::send_byte(unsigned long, unsigned char)::_set_ptr+0x4>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:125
    return send_bytes(_set_ptr, 5)
     cf0:	90 93 1e 60 	sts	0x601E, r25	; 0x80601e <UPDI::send_byte(unsigned long, unsigned char)::_set_ptr+0x5>
     cf4:	65 e0       	ldi	r22, 0x05	; 5
     cf6:	70 e0       	ldi	r23, 0x00	; 0
     cf8:	89 e1       	ldi	r24, 0x19	; 25
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:128
      && is_ack()
      && send(_data)
      && is_ack();
     cfa:	90 e6       	ldi	r25, 0x60	; 96
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:126
    static uint8_t _set_ptr[] = {
      0x55, 0x48, 0, 0, 0, 0  /* STS ADDR3 DATA1 */
    };
    _CAPS32(_set_ptr[2])->dword = _dwAddr;
    return send_bytes(_set_ptr, 5)
      && is_ack()
     cfc:	6d df       	rcall	.-294    	; 0xbd8 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     cfe:	88 23       	and	r24, r24
     d00:	49 f0       	breq	.+18     	; 0xd14 <UPDI::send_byte(unsigned long, unsigned char)+0x34>
     d02:	a7 df       	rcall	.-178    	; 0xc52 <UPDI::is_ack()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:127
      && send(_data)
     d04:	88 23       	and	r24, r24
     d06:	31 f0       	breq	.+12     	; 0xd14 <UPDI::send_byte(unsigned long, unsigned char)+0x34>
     d08:	8c 2f       	mov	r24, r28
     d0a:	55 df       	rcall	.-342    	; 0xbb6 <PDI::send(unsigned char)>
     d0c:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:129
      && is_ack();
  }
     d0e:	11 f0       	breq	.+4      	; 0xd14 <UPDI::send_byte(unsigned long, unsigned char)+0x34>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:128
    };
    _CAPS32(_set_ptr[2])->dword = _dwAddr;
    return send_bytes(_set_ptr, 5)
      && is_ack()
      && send(_data)
      && is_ack();
     d10:	cf 91       	pop	r28
     d12:	9f cf       	rjmp	.-194    	; 0xc52 <UPDI::is_ack()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:129
  }
     d14:	80 e0       	ldi	r24, 0x00	; 0
     d16:	cf 91       	pop	r28
     d18:	08 95       	ret

00000d1a <UPDI::nvm_ctrl(unsigned char)>:
nvm_ctrl():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:221
    /* This slow process is due to USERROW and BOOTROW. */
    return send_bytes_data(_dwAddr, &packet.out.memData[0], _wLength);
  }

  bool nvm_ctrl (uint8_t _nvmcmd) {
    return send_byte(0x1000, _nvmcmd);  /* NVMCTRL_CTRLA */
     d1a:	48 2f       	mov	r20, r24
     d1c:	60 e0       	ldi	r22, 0x00	; 0
     d1e:	70 e1       	ldi	r23, 0x10	; 16
     d20:	80 e0       	ldi	r24, 0x00	; 0
     d22:	90 e0       	ldi	r25, 0x00	; 0
     d24:	dd cf       	rjmp	.-70     	; 0xce0 <UPDI::send_byte(unsigned long, unsigned char)>

00000d26 <UPDI::send_bytes_block_slow(unsigned long, unsigned int)>:
send_bytes_block_slow():
     d26:	cf 92       	push	r12
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:215
      if (!send_byte(_dwAddr++, *_data++)) return false;
    }
    return true;
  }

  bool send_bytes_block_slow (uint32_t _dwAddr, size_t _wLength) {
     d28:	df 92       	push	r13
     d2a:	ef 92       	push	r14
     d2c:	ff 92       	push	r15
     d2e:	0f 93       	push	r16
     d30:	1f 93       	push	r17
     d32:	cf 93       	push	r28
     d34:	df 93       	push	r29
     d36:	c0 e0       	ldi	r28, 0x00	; 0
     d38:	d1 e6       	ldi	r29, 0x61	; 97
     d3a:	8a 01       	movw	r16, r20
     d3c:	00 50       	subi	r16, 0x00	; 0
     d3e:	1f 49       	sbci	r17, 0x9F	; 159
send_bytes_data():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:209
      && send_bytes(&packet.out.memData[0], _wLength & ~1)
      && clear_rsd();
  }

  bool send_bytes_data (uint32_t _dwAddr, uint8_t* _data, size_t _wLength) {
    for (size_t _i = 0; _i < _wLength; _i++) {
     d40:	c0 17       	cp	r28, r16
     d42:	d1 07       	cpc	r29, r17
     d44:	c1 f0       	breq	.+48     	; 0xd76 <UPDI::send_bytes_block_slow(unsigned long, unsigned int)+0x50>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:210
      if (!send_byte(_dwAddr++, *_data++)) return false;
     d46:	6b 01       	movw	r12, r22
     d48:	7c 01       	movw	r14, r24
     d4a:	2f ef       	ldi	r18, 0xFF	; 255
     d4c:	c2 1a       	sub	r12, r18
     d4e:	d2 0a       	sbc	r13, r18
     d50:	e2 0a       	sbc	r14, r18
     d52:	f2 0a       	sbc	r15, r18
     d54:	49 89       	ldd	r20, Y+17	; 0x11
     d56:	c4 df       	rcall	.-120    	; 0xce0 <UPDI::send_byte(unsigned long, unsigned char)>
     d58:	21 96       	adiw	r28, 0x01	; 1
     d5a:	81 11       	cpse	r24, r1
     d5c:	09 c0       	rjmp	.+18     	; 0xd70 <UPDI::send_bytes_block_slow(unsigned long, unsigned int)+0x4a>
send_bytes_block_slow():
     d5e:	df 91       	pop	r29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:218
  }

  bool send_bytes_block_slow (uint32_t _dwAddr, size_t _wLength) {
    /* This slow process is due to USERROW and BOOTROW. */
    return send_bytes_data(_dwAddr, &packet.out.memData[0], _wLength);
  }
     d60:	cf 91       	pop	r28
     d62:	1f 91       	pop	r17
     d64:	0f 91       	pop	r16
     d66:	ff 90       	pop	r15
     d68:	ef 90       	pop	r14
     d6a:	df 90       	pop	r13
     d6c:	cf 90       	pop	r12
     d6e:	08 95       	ret
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:210
      && clear_rsd();
  }

  bool send_bytes_data (uint32_t _dwAddr, uint8_t* _data, size_t _wLength) {
    for (size_t _i = 0; _i < _wLength; _i++) {
      if (!send_byte(_dwAddr++, *_data++)) return false;
     d70:	c7 01       	movw	r24, r14
     d72:	b6 01       	movw	r22, r12
     d74:	e5 cf       	rjmp	.-54     	; 0xd40 <UPDI::send_bytes_block_slow(unsigned long, unsigned int)+0x1a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:212
    }
    return true;
     d76:	81 e0       	ldi	r24, 0x01	; 1
     d78:	f2 cf       	rjmp	.-28     	; 0xd5e <UPDI::send_bytes_block_slow(unsigned long, unsigned int)+0x38>

00000d7a <UPDI::send_bytes_block(unsigned long, unsigned int)>:
send_bytes_block():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:181
      && is_ack()
      && send_bytes(_set_repeat, sizeof(_set_repeat))
      && recv_bytes(&packet.in.data[0], _wLength & ~1);
  }

  bool send_bytes_block (uint32_t _dwAddr, size_t _wLength) {
     d7a:	cf 93       	push	r28
     d7c:	df 93       	push	r29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:182
    if (_wLength == 1) return send_byte(_dwAddr, packet.out.memData[0]);
     d7e:	41 30       	cpi	r20, 0x01	; 1
     d80:	51 05       	cpc	r21, r1
     d82:	29 f4       	brne	.+10     	; 0xd8e <UPDI::send_bytes_block(unsigned long, unsigned int)+0x14>
     d84:	40 91 11 61 	lds	r20, 0x6111	; 0x806111 <packet+0x11>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:192
      && is_ack()
      && set_rsd()
      && send_bytes(_set_repeat, sizeof(_set_repeat))
      && send_bytes(&packet.out.memData[0], _wLength)
      && clear_rsd();
  }
     d88:	df 91       	pop	r29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:182
      && send_bytes(_set_repeat, sizeof(_set_repeat))
      && recv_bytes(&packet.in.data[0], _wLength & ~1);
  }

  bool send_bytes_block (uint32_t _dwAddr, size_t _wLength) {
    if (_wLength == 1) return send_byte(_dwAddr, packet.out.memData[0]);
     d8a:	cf 91       	pop	r28
     d8c:	a9 cf       	rjmp	.-174    	; 0xce0 <UPDI::send_byte(unsigned long, unsigned char)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:183
    _CAPS32(_set_ptr24[2])->dword = _dwAddr;
     d8e:	ea 01       	movw	r28, r20
     d90:	60 93 26 60 	sts	0x6026, r22	; 0x806026 <UPDI::_set_ptr24+0x2>
     d94:	70 93 27 60 	sts	0x6027, r23	; 0x806027 <UPDI::_set_ptr24+0x3>
     d98:	80 93 28 60 	sts	0x6028, r24	; 0x806028 <UPDI::_set_ptr24+0x4>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:184
    _set_repeat[2] = _wLength - 1;
     d9c:	90 93 29 60 	sts	0x6029, r25	; 0x806029 <UPDI::_set_ptr24+0x5>
     da0:	84 2f       	mov	r24, r20
     da2:	81 50       	subi	r24, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:185
    _set_repeat[4] = 0x64;  /* ST PTR++ DATA1 */
     da4:	80 93 21 60 	sts	0x6021, r24	; 0x806021 <UPDI::_set_repeat+0x2>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:186
    return send_bytes(_set_ptr24, 5)
     da8:	84 e6       	ldi	r24, 0x64	; 100
     daa:	80 93 23 60 	sts	0x6023, r24	; 0x806023 <UPDI::_set_repeat+0x4>
     dae:	65 e0       	ldi	r22, 0x05	; 5
     db0:	70 e0       	ldi	r23, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:191
      && is_ack()
      && set_rsd()
      && send_bytes(_set_repeat, sizeof(_set_repeat))
      && send_bytes(&packet.out.memData[0], _wLength)
      && clear_rsd();
     db2:	84 e2       	ldi	r24, 0x24	; 36
     db4:	90 e6       	ldi	r25, 0x60	; 96
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:187
    if (_wLength == 1) return send_byte(_dwAddr, packet.out.memData[0]);
    _CAPS32(_set_ptr24[2])->dword = _dwAddr;
    _set_repeat[2] = _wLength - 1;
    _set_repeat[4] = 0x64;  /* ST PTR++ DATA1 */
    return send_bytes(_set_ptr24, 5)
      && is_ack()
     db6:	10 df       	rcall	.-480    	; 0xbd8 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     db8:	88 23       	and	r24, r24
     dba:	f1 f0       	breq	.+60     	; 0xdf8 <UPDI::send_bytes_block(unsigned long, unsigned int)+0x7e>
     dbc:	4a df       	rcall	.-364    	; 0xc52 <UPDI::is_ack()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:142
    return send_bytes(_reset, _leave ? 9 : 6);
  }

  bool set_rsd (void) {
    const static uint8_t _set_rsd[] = {0x55, 0xC2, 0x08 + UPDI_CTRLAV};
    return send_bytes(_set_rsd, 3);
     dbe:	88 23       	and	r24, r24
     dc0:	d9 f0       	breq	.+54     	; 0xdf8 <UPDI::send_bytes_block(unsigned long, unsigned int)+0x7e>
set_rsd():
     dc2:	63 e0       	ldi	r22, 0x03	; 3
     dc4:	70 e0       	ldi	r23, 0x00	; 0
     dc6:	8c e5       	ldi	r24, 0x5C	; 92
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:188
    _CAPS32(_set_ptr24[2])->dword = _dwAddr;
    _set_repeat[2] = _wLength - 1;
    _set_repeat[4] = 0x64;  /* ST PTR++ DATA1 */
    return send_bytes(_set_ptr24, 5)
      && is_ack()
      && set_rsd()
     dc8:	90 e6       	ldi	r25, 0x60	; 96
     dca:	06 df       	rcall	.-500    	; 0xbd8 <UPDI::send_bytes(unsigned char const*, unsigned int)>
send_bytes_block():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:189
      && send_bytes(_set_repeat, sizeof(_set_repeat))
     dcc:	88 23       	and	r24, r24
     dce:	a1 f0       	breq	.+40     	; 0xdf8 <UPDI::send_bytes_block(unsigned long, unsigned int)+0x7e>
     dd0:	65 e0       	ldi	r22, 0x05	; 5
     dd2:	70 e0       	ldi	r23, 0x00	; 0
     dd4:	8f e1       	ldi	r24, 0x1F	; 31
     dd6:	90 e6       	ldi	r25, 0x60	; 96
     dd8:	ff de       	rcall	.-514    	; 0xbd8 <UPDI::send_bytes(unsigned char const*, unsigned int)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:190
      && send_bytes(&packet.out.memData[0], _wLength)
     dda:	88 23       	and	r24, r24
     ddc:	69 f0       	breq	.+26     	; 0xdf8 <UPDI::send_bytes_block(unsigned long, unsigned int)+0x7e>
     dde:	be 01       	movw	r22, r28
     de0:	81 e1       	ldi	r24, 0x11	; 17
     de2:	91 e6       	ldi	r25, 0x61	; 97
     de4:	f9 de       	rcall	.-526    	; 0xbd8 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     de6:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:147
    return send_bytes(_set_rsd, 3);
  }

  bool clear_rsd (void) {
    const static uint8_t _clear_rsd[] = {0x55, 0xC2, UPDI_CTRLAV};
    return send_bytes(_clear_rsd, 3);
     de8:	39 f0       	breq	.+14     	; 0xdf8 <UPDI::send_bytes_block(unsigned long, unsigned int)+0x7e>
clear_rsd():
     dea:	63 e0       	ldi	r22, 0x03	; 3
     dec:	70 e0       	ldi	r23, 0x00	; 0
     dee:	87 e8       	ldi	r24, 0x87	; 135
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:192
      && is_ack()
      && set_rsd()
      && send_bytes(_set_repeat, sizeof(_set_repeat))
      && send_bytes(&packet.out.memData[0], _wLength)
      && clear_rsd();
  }
     df0:	90 e6       	ldi	r25, 0x60	; 96
send_bytes_block():
     df2:	df 91       	pop	r29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:147
    return send_bytes(_set_rsd, 3);
  }

  bool clear_rsd (void) {
    const static uint8_t _clear_rsd[] = {0x55, 0xC2, UPDI_CTRLAV};
    return send_bytes(_clear_rsd, 3);
     df4:	cf 91       	pop	r28
clear_rsd():
     df6:	f0 ce       	rjmp	.-544    	; 0xbd8 <UPDI::send_bytes(unsigned char const*, unsigned int)>
send_bytes_block():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:192
      && is_ack()
      && set_rsd()
      && send_bytes(_set_repeat, sizeof(_set_repeat))
      && send_bytes(&packet.out.memData[0], _wLength)
      && clear_rsd();
  }
     df8:	80 e0       	ldi	r24, 0x00	; 0
     dfa:	df 91       	pop	r29
     dfc:	cf 91       	pop	r28
     dfe:	08 95       	ret

00000e00 <UPDI::recv_bytes(unsigned char*, unsigned int)>:
recv_bytes():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:84
    RXSTAT ^= 0x80;
    // D1PRINTF("(%02X:%02X)", RXSTAT, RXDATA);
    return RXSTAT == 0;
  }

  bool recv_bytes (uint8_t* _data, size_t _len) {
     e00:	0f 93       	push	r16
     e02:	1f 93       	push	r17
     e04:	cf 93       	push	r28
     e06:	df 93       	push	r29
     e08:	eb 01       	movw	r28, r22
     e0a:	8c 01       	movw	r16, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:86
    do {
      if (!recv()) return false;
     e0c:	c2 de       	rcall	.-636    	; 0xb92 <PDI::recv()>
     e0e:	88 23       	and	r24, r24
     e10:	31 f0       	breq	.+12     	; 0xe1e <UPDI::recv_bytes(unsigned char*, unsigned int)+0x1e>
     e12:	9d b3       	in	r25, 0x1d	; 29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:87
      *_data++ = RXDATA;
     e14:	f8 01       	movw	r30, r16
     e16:	91 93       	st	Z+, r25
     e18:	8f 01       	movw	r16, r30
     e1a:	21 97       	sbiw	r28, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:88
    } while (--_len);
     e1c:	b9 f7       	brne	.-18     	; 0xe0c <UPDI::recv_bytes(unsigned char*, unsigned int)+0xc>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:90
    return true;
  }
     e1e:	df 91       	pop	r29
     e20:	cf 91       	pop	r28
     e22:	1f 91       	pop	r17
     e24:	0f 91       	pop	r16
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:169
      && is_ack()
      && send_bytes(_set_repeat, sizeof(_set_repeat))
      && recv_bytes(&packet.in.data[0], _wLength);
  }

  bool recv_words_block (uint32_t _dwAddr, size_t _wLength) {
     e26:	08 95       	ret

00000e28 <UPDI::recv_words_block(unsigned long, unsigned int)>:
recv_words_block():
     e28:	cf 93       	push	r28
     e2a:	df 93       	push	r29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:172
    /* This function works in word units up to 256 words, */
    /* and will round down any fractional words.          */
    _CAPS32(_set_ptr24[2])->dword = _dwAddr;
     e2c:	ea 01       	movw	r28, r20
     e2e:	60 93 26 60 	sts	0x6026, r22	; 0x806026 <UPDI::_set_ptr24+0x2>
     e32:	70 93 27 60 	sts	0x6027, r23	; 0x806027 <UPDI::_set_ptr24+0x3>
     e36:	80 93 28 60 	sts	0x6028, r24	; 0x806028 <UPDI::_set_ptr24+0x4>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:173
    _set_repeat[2] = (_wLength >> 1) - 1;
     e3a:	90 93 29 60 	sts	0x6029, r25	; 0x806029 <UPDI::_set_ptr24+0x5>
     e3e:	ca 01       	movw	r24, r20
     e40:	96 95       	lsr	r25
     e42:	87 95       	ror	r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:174
    _set_repeat[4] = 0x25;  /* LD PTR++ DATA2 */
     e44:	81 50       	subi	r24, 0x01	; 1
     e46:	80 93 21 60 	sts	0x6021, r24	; 0x806021 <UPDI::_set_repeat+0x2>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:175
    return send_bytes(_set_ptr24, 5)
     e4a:	85 e2       	ldi	r24, 0x25	; 37
     e4c:	80 93 23 60 	sts	0x6023, r24	; 0x806023 <UPDI::_set_repeat+0x4>
     e50:	65 e0       	ldi	r22, 0x05	; 5
     e52:	70 e0       	ldi	r23, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:178
      && is_ack()
      && send_bytes(_set_repeat, sizeof(_set_repeat))
      && recv_bytes(&packet.in.data[0], _wLength & ~1);
     e54:	84 e2       	ldi	r24, 0x24	; 36
     e56:	90 e6       	ldi	r25, 0x60	; 96
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:176
    /* and will round down any fractional words.          */
    _CAPS32(_set_ptr24[2])->dword = _dwAddr;
    _set_repeat[2] = (_wLength >> 1) - 1;
    _set_repeat[4] = 0x25;  /* LD PTR++ DATA2 */
    return send_bytes(_set_ptr24, 5)
      && is_ack()
     e58:	bf de       	rcall	.-642    	; 0xbd8 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     e5a:	88 23       	and	r24, r24
     e5c:	89 f0       	breq	.+34     	; 0xe80 <UPDI::recv_words_block(unsigned long, unsigned int)+0x58>
     e5e:	f9 de       	rcall	.-526    	; 0xc52 <UPDI::is_ack()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:177
      && send_bytes(_set_repeat, sizeof(_set_repeat))
     e60:	88 23       	and	r24, r24
     e62:	71 f0       	breq	.+28     	; 0xe80 <UPDI::recv_words_block(unsigned long, unsigned int)+0x58>
     e64:	65 e0       	ldi	r22, 0x05	; 5
     e66:	70 e0       	ldi	r23, 0x00	; 0
     e68:	8f e1       	ldi	r24, 0x1F	; 31
     e6a:	90 e6       	ldi	r25, 0x60	; 96
     e6c:	b5 de       	rcall	.-662    	; 0xbd8 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     e6e:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:178
      && recv_bytes(&packet.in.data[0], _wLength & ~1);
     e70:	39 f0       	breq	.+14     	; 0xe80 <UPDI::recv_words_block(unsigned long, unsigned int)+0x58>
     e72:	be 01       	movw	r22, r28
     e74:	6e 7f       	andi	r22, 0xFE	; 254
     e76:	87 e0       	ldi	r24, 0x07	; 7
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:179
  }
     e78:	91 e6       	ldi	r25, 0x61	; 97
     e7a:	df 91       	pop	r29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:178
    _set_repeat[2] = (_wLength >> 1) - 1;
    _set_repeat[4] = 0x25;  /* LD PTR++ DATA2 */
    return send_bytes(_set_ptr24, 5)
      && is_ack()
      && send_bytes(_set_repeat, sizeof(_set_repeat))
      && recv_bytes(&packet.in.data[0], _wLength & ~1);
     e7c:	cf 91       	pop	r28
     e7e:	c0 cf       	rjmp	.-128    	; 0xe00 <UPDI::recv_bytes(unsigned char*, unsigned int)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:179
  }
     e80:	80 e0       	ldi	r24, 0x00	; 0
     e82:	df 91       	pop	r29
     e84:	cf 91       	pop	r28
     e86:	08 95       	ret

00000e88 <UPDI::recv_bytes_block(unsigned long, unsigned int)>:
recv_bytes_block():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:152
    return send_bytes(_clear_rsd, 3);
  }

  // MARK: UPDI API

  bool recv_bytes_block (uint32_t _dwAddr, size_t _wLength) {
     e88:	cf 93       	push	r28
     e8a:	df 93       	push	r29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:153
    if (_wLength == 1) {
     e8c:	ea 01       	movw	r28, r20
     e8e:	41 30       	cpi	r20, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:154
      if (recv_byte(_dwAddr)) {
     e90:	51 05       	cpc	r21, r1
     e92:	59 f4       	brne	.+22     	; 0xeaa <UPDI::recv_bytes_block(unsigned long, unsigned int)+0x22>
     e94:	cd de       	rcall	.-614    	; 0xc30 <UPDI::recv_byte(unsigned long)>
     e96:	81 11       	cpse	r24, r1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:158
        packet.in.data[0] = RXDATA;
        return true;
      }
      return false;
     e98:	04 c0       	rjmp	.+8      	; 0xea2 <UPDI::recv_bytes_block(unsigned long, unsigned int)+0x1a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:167
    _set_repeat[4] = 0x24;  /* LD PTR++ DATA1 */
    return send_bytes(_set_ptr24, 5)
      && is_ack()
      && send_bytes(_set_repeat, sizeof(_set_repeat))
      && recv_bytes(&packet.in.data[0], _wLength);
  }
     e9a:	80 e0       	ldi	r24, 0x00	; 0
     e9c:	df 91       	pop	r29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:155
  // MARK: UPDI API

  bool recv_bytes_block (uint32_t _dwAddr, size_t _wLength) {
    if (_wLength == 1) {
      if (recv_byte(_dwAddr)) {
        packet.in.data[0] = RXDATA;
     e9e:	cf 91       	pop	r28
     ea0:	08 95       	ret
     ea2:	9d b3       	in	r25, 0x1d	; 29
     ea4:	90 93 07 61 	sts	0x6107, r25	; 0x806107 <packet+0x7>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:160
        return true;
      }
      return false;
    }
    _CAPS32(_set_ptr24[2])->dword = _dwAddr;
     ea8:	f9 cf       	rjmp	.-14     	; 0xe9c <UPDI::recv_bytes_block(unsigned long, unsigned int)+0x14>
     eaa:	60 93 26 60 	sts	0x6026, r22	; 0x806026 <UPDI::_set_ptr24+0x2>
     eae:	70 93 27 60 	sts	0x6027, r23	; 0x806027 <UPDI::_set_ptr24+0x3>
     eb2:	80 93 28 60 	sts	0x6028, r24	; 0x806028 <UPDI::_set_ptr24+0x4>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:161
    _set_repeat[2] = _wLength - 1;
     eb6:	90 93 29 60 	sts	0x6029, r25	; 0x806029 <UPDI::_set_ptr24+0x5>
     eba:	84 2f       	mov	r24, r20
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:162
    _set_repeat[4] = 0x24;  /* LD PTR++ DATA1 */
     ebc:	81 50       	subi	r24, 0x01	; 1
     ebe:	80 93 21 60 	sts	0x6021, r24	; 0x806021 <UPDI::_set_repeat+0x2>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:163
    return send_bytes(_set_ptr24, 5)
     ec2:	84 e2       	ldi	r24, 0x24	; 36
     ec4:	80 93 23 60 	sts	0x6023, r24	; 0x806023 <UPDI::_set_repeat+0x4>
     ec8:	65 e0       	ldi	r22, 0x05	; 5
     eca:	70 e0       	ldi	r23, 0x00	; 0
     ecc:	84 e2       	ldi	r24, 0x24	; 36
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:166
      && is_ack()
      && send_bytes(_set_repeat, sizeof(_set_repeat))
      && recv_bytes(&packet.in.data[0], _wLength);
     ece:	90 e6       	ldi	r25, 0x60	; 96
     ed0:	83 de       	rcall	.-762    	; 0xbd8 <UPDI::send_bytes(unsigned char const*, unsigned int)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:164
    }
    _CAPS32(_set_ptr24[2])->dword = _dwAddr;
    _set_repeat[2] = _wLength - 1;
    _set_repeat[4] = 0x24;  /* LD PTR++ DATA1 */
    return send_bytes(_set_ptr24, 5)
      && is_ack()
     ed2:	88 23       	and	r24, r24
     ed4:	11 f3       	breq	.-60     	; 0xe9a <UPDI::recv_bytes_block(unsigned long, unsigned int)+0x12>
     ed6:	bd de       	rcall	.-646    	; 0xc52 <UPDI::is_ack()>
     ed8:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:165
      && send_bytes(_set_repeat, sizeof(_set_repeat))
     eda:	f9 f2       	breq	.-66     	; 0xe9a <UPDI::recv_bytes_block(unsigned long, unsigned int)+0x12>
     edc:	65 e0       	ldi	r22, 0x05	; 5
     ede:	70 e0       	ldi	r23, 0x00	; 0
     ee0:	8f e1       	ldi	r24, 0x1F	; 31
     ee2:	90 e6       	ldi	r25, 0x60	; 96
     ee4:	79 de       	rcall	.-782    	; 0xbd8 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     ee6:	88 23       	and	r24, r24
     ee8:	c1 f2       	breq	.-80     	; 0xe9a <UPDI::recv_bytes_block(unsigned long, unsigned int)+0x12>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:166
      && recv_bytes(&packet.in.data[0], _wLength);
     eea:	be 01       	movw	r22, r28
     eec:	87 e0       	ldi	r24, 0x07	; 7
     eee:	91 e6       	ldi	r25, 0x61	; 97
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:167
  }
     ef0:	df 91       	pop	r29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:166
    _set_repeat[2] = _wLength - 1;
    _set_repeat[4] = 0x24;  /* LD PTR++ DATA1 */
    return send_bytes(_set_ptr24, 5)
      && is_ack()
      && send_bytes(_set_repeat, sizeof(_set_repeat))
      && recv_bytes(&packet.in.data[0], _wLength);
     ef2:	cf 91       	pop	r28
     ef4:	85 cf       	rjmp	.-246    	; 0xe00 <UPDI::recv_bytes(unsigned char*, unsigned int)>

00000ef6 <NVM::V0::read_memory()>:
read_memory():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:114
    UPDI::nvm_ctrl(0x04);         /* NVM_CMD_PBC */
    nvm_wait();
    return UPDI::nvm_ctrl(0x00);
  }

  size_t read_memory (void) {
     ef6:	cf 93       	push	r28
     ef8:	df 93       	push	r29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:115
    uint8_t  m_type = packet.out.bMType;
     efa:	80 91 07 61 	lds	r24, 0x6107	; 0x806107 <packet+0x7>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:116
    uint16_t _wAddr = packet.out.dwAddr;
     efe:	60 91 08 61 	lds	r22, 0x6108	; 0x806108 <packet+0x8>
     f02:	30 91 09 61 	lds	r19, 0x6109	; 0x806109 <packet+0x9>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:118
    size_t _wLength = packet.out.dwLength;
    if (m_type == 0xB4) {
     f06:	84 3b       	cpi	r24, 0xB4	; 180
     f08:	51 f4       	brne	.+20     	; 0xf1e <NVM::V0::read_memory()+0x28>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:120
      /* MTYPE_SIGN_JTAG */
      _wAddr = PROD_SIG + ((uint8_t)_wAddr & 0x7F);
     f0a:	6f 77       	andi	r22, 0x7F	; 127
     f0c:	70 e0       	ldi	r23, 0x00	; 0
     f0e:	7f 5e       	subi	r23, 0xEF	; 239
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:127
    else if (m_type == 0xB0) {
      /* MTYPE_FLASH_PAGE (PROGMEM) */
      _wAddr += Device_Descriptor.UPDI.prog_base;
    }
    if (bit_is_set(PGCONF, PGCONF_PROG_bp)
     && UPDI::recv_bytes_block(_wAddr, _wLength))
     f10:	f9 99       	sbic	0x1f, 1	; 31
     f12:	0f c0       	rjmp	.+30     	; 0xf32 <NVM::V0::read_memory()+0x3c>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:129
      return _wLength + 1;
    return 0;
     f14:	90 e0       	ldi	r25, 0x00	; 0
     f16:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:130
  }
     f18:	df 91       	pop	r29
     f1a:	cf 91       	pop	r28
     f1c:	08 95       	ret
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:116
    return UPDI::nvm_ctrl(0x00);
  }

  size_t read_memory (void) {
    uint8_t  m_type = packet.out.bMType;
    uint16_t _wAddr = packet.out.dwAddr;
     f1e:	73 2f       	mov	r23, r19
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:122
    size_t _wLength = packet.out.dwLength;
    if (m_type == 0xB4) {
      /* MTYPE_SIGN_JTAG */
      _wAddr = PROD_SIG + ((uint8_t)_wAddr & 0x7F);
    }
    else if (m_type == 0xB0) {
     f20:	80 3b       	cpi	r24, 0xB0	; 176
     f22:	b1 f7       	brne	.-20     	; 0xf10 <NVM::V0::read_memory()+0x1a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:124
      /* MTYPE_FLASH_PAGE (PROGMEM) */
      _wAddr += Device_Descriptor.UPDI.prog_base;
     f24:	80 91 1e 63 	lds	r24, 0x631E	; 0x80631e <Device_Descriptor>
     f28:	90 91 1f 63 	lds	r25, 0x631F	; 0x80631f <Device_Descriptor+0x1>
     f2c:	68 0f       	add	r22, r24
     f2e:	79 1f       	adc	r23, r25
     f30:	ef cf       	rjmp	.-34     	; 0xf10 <NVM::V0::read_memory()+0x1a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:117
  }

  size_t read_memory (void) {
    uint8_t  m_type = packet.out.bMType;
    uint16_t _wAddr = packet.out.dwAddr;
    size_t _wLength = packet.out.dwLength;
     f32:	c0 91 0c 61 	lds	r28, 0x610C	; 0x80610c <packet+0xc>
     f36:	d0 91 0d 61 	lds	r29, 0x610D	; 0x80610d <packet+0xd>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:127
    else if (m_type == 0xB0) {
      /* MTYPE_FLASH_PAGE (PROGMEM) */
      _wAddr += Device_Descriptor.UPDI.prog_base;
    }
    if (bit_is_set(PGCONF, PGCONF_PROG_bp)
     && UPDI::recv_bytes_block(_wAddr, _wLength))
     f3a:	90 e0       	ldi	r25, 0x00	; 0
     f3c:	80 e0       	ldi	r24, 0x00	; 0
     f3e:	ae 01       	movw	r20, r28
     f40:	a3 df       	rcall	.-186    	; 0xe88 <UPDI::recv_bytes_block(unsigned long, unsigned int)>
     f42:	88 23       	and	r24, r24
     f44:	39 f3       	breq	.-50     	; 0xf14 <NVM::V0::read_memory()+0x1e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:128
      return _wLength + 1;
     f46:	ce 01       	movw	r24, r28
     f48:	01 96       	adiw	r24, 0x01	; 1
     f4a:	e6 cf       	rjmp	.-52     	; 0xf18 <NVM::V0::read_memory()+0x22>

00000f4c <NVM::V2::read_memory()>:
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:116

  size_t prog_init (void) {
    return nvm_ctrl_change(0x00);
  }

  size_t read_memory (void) {
     f4c:	cf 93       	push	r28
     f4e:	df 93       	push	r29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:120
    uint8_t   m_type = packet.out.bMType;
    uint32_t _dwAddr = packet.out.dwAddr;
    size_t  _wLength = packet.out.dwLength;
    if (bit_is_set(PGCONF, PGCONF_PROG_bp)) {
     f50:	f9 99       	sbic	0x1f, 1	; 31
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:133
        _dwAddr = PROD_SIG + ((uint8_t)_dwAddr & 0x7F);
      }
      if (UPDI::recv_bytes_block(_dwAddr, _wLength))
        return _wLength + 1;
    }
    return 0;
     f52:	05 c0       	rjmp	.+10     	; 0xf5e <NVM::V2::read_memory()+0x12>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:134
  }
     f54:	90 e0       	ldi	r25, 0x00	; 0
     f56:	80 e0       	ldi	r24, 0x00	; 0
     f58:	df 91       	pop	r29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:117
  size_t prog_init (void) {
    return nvm_ctrl_change(0x00);
  }

  size_t read_memory (void) {
    uint8_t   m_type = packet.out.bMType;
     f5a:	cf 91       	pop	r28
     f5c:	08 95       	ret
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:118
    uint32_t _dwAddr = packet.out.dwAddr;
     f5e:	20 91 07 61 	lds	r18, 0x6107	; 0x806107 <packet+0x7>
     f62:	60 91 08 61 	lds	r22, 0x6108	; 0x806108 <packet+0x8>
     f66:	70 91 09 61 	lds	r23, 0x6109	; 0x806109 <packet+0x9>
     f6a:	80 91 0a 61 	lds	r24, 0x610A	; 0x80610a <packet+0xa>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:119
    size_t  _wLength = packet.out.dwLength;
     f6e:	90 91 0b 61 	lds	r25, 0x610B	; 0x80610b <packet+0xb>
     f72:	c0 91 0c 61 	lds	r28, 0x610C	; 0x80610c <packet+0xc>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:121
    if (bit_is_set(PGCONF, PGCONF_PROG_bp)) {
      if (m_type == 0xB0) {
     f76:	d0 91 0d 61 	lds	r29, 0x610D	; 0x80610d <packet+0xd>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:123
        /* MTYPE_FLASH_PAGE (PROGMEM) */
        _dwAddr += PROG_START;
     f7a:	20 3b       	cpi	r18, 0xB0	; 176
     f7c:	49 f4       	brne	.+18     	; 0xf90 <NVM::V2::read_memory()+0x44>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:124
        return UPDI::recv_words_block(_dwAddr, _wLength) ? _wLength + 1 : 0;
     f7e:	80 58       	subi	r24, 0x80	; 128
     f80:	9f 4f       	sbci	r25, 0xFF	; 255
     f82:	ae 01       	movw	r20, r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:130
      }
      if (m_type == 0xB4) {
        /* MTYPE_SIGN_JTAG */
        _dwAddr = PROD_SIG + ((uint8_t)_dwAddr & 0x7F);
      }
      if (UPDI::recv_bytes_block(_dwAddr, _wLength))
     f84:	51 df       	rcall	.-350    	; 0xe28 <UPDI::recv_words_block(unsigned long, unsigned int)>
     f86:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:131
        return _wLength + 1;
     f88:	29 f3       	breq	.-54     	; 0xf54 <NVM::V2::read_memory()+0x8>
     f8a:	ce 01       	movw	r24, r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:126
      if (m_type == 0xB0) {
        /* MTYPE_FLASH_PAGE (PROGMEM) */
        _dwAddr += PROG_START;
        return UPDI::recv_words_block(_dwAddr, _wLength) ? _wLength + 1 : 0;
      }
      if (m_type == 0xB4) {
     f8c:	01 96       	adiw	r24, 0x01	; 1
     f8e:	e4 cf       	rjmp	.-56     	; 0xf58 <NVM::V2::read_memory()+0xc>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:128
        /* MTYPE_SIGN_JTAG */
        _dwAddr = PROD_SIG + ((uint8_t)_dwAddr & 0x7F);
     f90:	24 3b       	cpi	r18, 0xB4	; 180
     f92:	39 f4       	brne	.+14     	; 0xfa2 <NVM::V2::read_memory()+0x56>
     f94:	6f 77       	andi	r22, 0x7F	; 127
     f96:	70 e0       	ldi	r23, 0x00	; 0
     f98:	7f 5e       	subi	r23, 0xEF	; 239
     f9a:	07 2e       	mov	r0, r23
     f9c:	00 0c       	add	r0, r0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:130
      }
      if (UPDI::recv_bytes_block(_dwAddr, _wLength))
     f9e:	88 0b       	sbc	r24, r24
     fa0:	99 0b       	sbc	r25, r25
     fa2:	ae 01       	movw	r20, r28
     fa4:	71 df       	rcall	.-286    	; 0xe88 <UPDI::recv_bytes_block(unsigned long, unsigned int)>
     fa6:	ef cf       	rjmp	.-34     	; 0xf86 <NVM::V2::read_memory()+0x3a>

00000fa8 <NVM::V3::read_memory()>:
_ZN3NVM2V311read_memoryEv():
     fa8:	d1 cf       	rjmp	.-94     	; 0xf4c <NVM::V2::read_memory()>

00000faa <NVM::V4::read_memory()>:
read_memory():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:119

  size_t prog_init (void) {
    return nvm_ctrl_change(0x00);
  }

  size_t read_memory (void) {
     faa:	cf 93       	push	r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:123
    uint8_t   m_type = packet.out.bMType;
    uint32_t _dwAddr = packet.out.dwAddr;
    size_t  _wLength = packet.out.dwLength;
    if (bit_is_set(PGCONF, PGCONF_PROG_bp)) {
     fac:	df 93       	push	r29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:136
        _dwAddr = PROD_SIG + ((uint8_t)_dwAddr & 0x7F);
      }
      if (UPDI::recv_bytes_block(_dwAddr, _wLength))
        return _wLength + 1;
    }
    return 0;
     fae:	f9 99       	sbic	0x1f, 1	; 31
     fb0:	05 c0       	rjmp	.+10     	; 0xfbc <NVM::V4::read_memory()+0x12>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:137
  }
     fb2:	90 e0       	ldi	r25, 0x00	; 0
     fb4:	80 e0       	ldi	r24, 0x00	; 0
     fb6:	df 91       	pop	r29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:120
  size_t prog_init (void) {
    return nvm_ctrl_change(0x00);
  }

  size_t read_memory (void) {
    uint8_t   m_type = packet.out.bMType;
     fb8:	cf 91       	pop	r28
     fba:	08 95       	ret
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:121
    uint32_t _dwAddr = packet.out.dwAddr;
     fbc:	20 91 07 61 	lds	r18, 0x6107	; 0x806107 <packet+0x7>
     fc0:	60 91 08 61 	lds	r22, 0x6108	; 0x806108 <packet+0x8>
     fc4:	70 91 09 61 	lds	r23, 0x6109	; 0x806109 <packet+0x9>
     fc8:	80 91 0a 61 	lds	r24, 0x610A	; 0x80610a <packet+0xa>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:122
    size_t  _wLength = packet.out.dwLength;
     fcc:	90 91 0b 61 	lds	r25, 0x610B	; 0x80610b <packet+0xb>
     fd0:	c0 91 0c 61 	lds	r28, 0x610C	; 0x80610c <packet+0xc>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:124
    if (bit_is_set(PGCONF, PGCONF_PROG_bp)) {
      if (m_type == 0xB0) {
     fd4:	d0 91 0d 61 	lds	r29, 0x610D	; 0x80610d <packet+0xd>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:126
        /* MTYPE_FLASH_PAGE (PROGMEM) */
        _dwAddr += PROG_START;
     fd8:	20 3b       	cpi	r18, 0xB0	; 176
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:127
        return UPDI::recv_words_block(_dwAddr, _wLength) ? _wLength + 1 : 0;
     fda:	49 f4       	brne	.+18     	; 0xfee <NVM::V4::read_memory()+0x44>
     fdc:	80 58       	subi	r24, 0x80	; 128
     fde:	9f 4f       	sbci	r25, 0xFF	; 255
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:133
      }
      if (m_type == 0xB4) {
        /* MTYPE_SIGN_JTAG */
        _dwAddr = PROD_SIG + ((uint8_t)_dwAddr & 0x7F);
      }
      if (UPDI::recv_bytes_block(_dwAddr, _wLength))
     fe0:	ae 01       	movw	r20, r28
     fe2:	22 df       	rcall	.-444    	; 0xe28 <UPDI::recv_words_block(unsigned long, unsigned int)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:134
        return _wLength + 1;
     fe4:	88 23       	and	r24, r24
     fe6:	29 f3       	breq	.-54     	; 0xfb2 <NVM::V4::read_memory()+0x8>
     fe8:	ce 01       	movw	r24, r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:129
      if (m_type == 0xB0) {
        /* MTYPE_FLASH_PAGE (PROGMEM) */
        _dwAddr += PROG_START;
        return UPDI::recv_words_block(_dwAddr, _wLength) ? _wLength + 1 : 0;
      }
      if (m_type == 0xB4) {
     fea:	01 96       	adiw	r24, 0x01	; 1
     fec:	e4 cf       	rjmp	.-56     	; 0xfb6 <NVM::V4::read_memory()+0xc>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:131
        /* MTYPE_SIGN_JTAG */
        _dwAddr = PROD_SIG + ((uint8_t)_dwAddr & 0x7F);
     fee:	24 3b       	cpi	r18, 0xB4	; 180
     ff0:	41 f4       	brne	.+16     	; 0x1002 <NVM::V4::read_memory()+0x58>
     ff2:	6f 77       	andi	r22, 0x7F	; 127
     ff4:	70 e0       	ldi	r23, 0x00	; 0
     ff6:	60 58       	subi	r22, 0x80	; 128
     ff8:	7f 4e       	sbci	r23, 0xEF	; 239
     ffa:	07 2e       	mov	r0, r23
     ffc:	00 0c       	add	r0, r0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:133
      }
      if (UPDI::recv_bytes_block(_dwAddr, _wLength))
     ffe:	88 0b       	sbc	r24, r24
    1000:	99 0b       	sbc	r25, r25
    1002:	ae 01       	movw	r20, r28
    1004:	41 df       	rcall	.-382    	; 0xe88 <UPDI::recv_bytes_block(unsigned long, unsigned int)>
    1006:	ee cf       	rjmp	.-36     	; 0xfe4 <NVM::V4::read_memory()+0x3a>

00001008 <NVM::V5::read_memory()>:
_ZN3NVM2V511read_memoryEv():
    1008:	d0 cf       	rjmp	.-96     	; 0xfaa <NVM::V4::read_memory()>

0000100a <UPDI::send_break()>:
send_break():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:64
  };

  // MARK: UPDI Low level

  bool send_break (void) {
    USART0_BAUD = USART0_BAUD + (USART0_BAUD >> 1);
    100a:	20 91 08 08 	lds	r18, 0x0808	; 0x800808 <__TEXT_REGION_LENGTH__+0x7f0808>
    100e:	30 91 09 08 	lds	r19, 0x0809	; 0x800809 <__TEXT_REGION_LENGTH__+0x7f0809>
    1012:	80 91 08 08 	lds	r24, 0x0808	; 0x800808 <__TEXT_REGION_LENGTH__+0x7f0808>
    1016:	90 91 09 08 	lds	r25, 0x0809	; 0x800809 <__TEXT_REGION_LENGTH__+0x7f0809>
    101a:	96 95       	lsr	r25
    101c:	87 95       	ror	r24
    101e:	82 0f       	add	r24, r18
    1020:	93 1f       	adc	r25, r19
    1022:	80 93 08 08 	sts	0x0808, r24	; 0x800808 <__TEXT_REGION_LENGTH__+0x7f0808>
    1026:	90 93 09 08 	sts	0x0809, r25	; 0x800809 <__TEXT_REGION_LENGTH__+0x7f0809>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:65
    send(0x00);
    102a:	80 e0       	ldi	r24, 0x00	; 0
    102c:	c4 dd       	rcall	.-1144   	; 0xbb6 <PDI::send(unsigned char)>
calk_baud_khz():
    102e:	20 91 57 63 	lds	r18, 0x6357	; 0x806357 <_xclk>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:46
  #endif
  }

  /*** Calculate the baud rate for VCP asynchronous mode. ***/
  uint16_t calk_baud_khz (uint16_t _khz) {
    uint32_t _baud = ((F_CPU / 1000L * 8L) / _khz + 1) / 2;
    1032:	30 91 58 63 	lds	r19, 0x6358	; 0x806358 <_xclk+0x1>
    1036:	50 e0       	ldi	r21, 0x00	; 0
    1038:	40 e0       	ldi	r20, 0x00	; 0
    103a:	60 e0       	ldi	r22, 0x00	; 0
    103c:	71 e7       	ldi	r23, 0x71	; 113
    103e:	82 e0       	ldi	r24, 0x02	; 2
    1040:	90 e0       	ldi	r25, 0x00	; 0
    1042:	0e 94 fe 29 	call	0x53fc	; 0x53fc <__divmodsi4>
    1046:	da 01       	movw	r26, r20
    1048:	c9 01       	movw	r24, r18
    104a:	01 96       	adiw	r24, 0x01	; 1
    104c:	a1 1d       	adc	r26, r1
    104e:	b1 1d       	adc	r27, r1
    1050:	b5 95       	asr	r27
    1052:	a7 95       	ror	r26
    1054:	97 95       	ror	r25
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:47
    if (_baud < 64) _baud = 64;
    1056:	87 95       	ror	r24
    1058:	80 34       	cpi	r24, 0x40	; 64
    105a:	91 05       	cpc	r25, r1
    105c:	a1 05       	cpc	r26, r1
    105e:	b1 05       	cpc	r27, r1
    1060:	7c f0       	brlt	.+30     	; 0x1080 <UPDI::send_break()+0x76>
    1062:	00 97       	sbiw	r24, 0x00	; 0
    1064:	21 e0       	ldi	r18, 0x01	; 1
    1066:	a2 07       	cpc	r26, r18
    1068:	b1 05       	cpc	r27, r1
    106a:	20 f0       	brcs	.+8      	; 0x1074 <UPDI::send_break()+0x6a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:66
    USART0_BAUD = USART::calk_baud_khz(_xclk);
    106c:	8f ef       	ldi	r24, 0xFF	; 255
    106e:	9f ef       	ldi	r25, 0xFF	; 255
    1070:	a0 e0       	ldi	r26, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:68
    return true;
  }
    1072:	b0 e0       	ldi	r27, 0x00	; 0
send_break():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:47
    1074:	80 93 08 08 	sts	0x0808, r24	; 0x800808 <__TEXT_REGION_LENGTH__+0x7f0808>
    1078:	90 93 09 08 	sts	0x0809, r25	; 0x800809 <__TEXT_REGION_LENGTH__+0x7f0809>
    107c:	81 e0       	ldi	r24, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:365

  // MARK: UPDI Session

  size_t timeout_fallback (void) {
    /* If a timeout occurs, the communication speed will be reduced. */
    RXDATA = _xclk - 25;
    107e:	08 95       	ret
    1080:	80 e4       	ldi	r24, 0x40	; 64
    1082:	90 e0       	ldi	r25, 0x00	; 0
    1084:	a0 e0       	ldi	r26, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:366
    if (RXDATA < 40) return 0;
    1086:	b0 e0       	ldi	r27, 0x00	; 0
    1088:	f5 cf       	rjmp	.-22     	; 0x1074 <UPDI::send_break()+0x6a>

0000108a <UPDI::timeout_fallback()>:
timeout_fallback():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:367
    _xclk = RXDATA;
    108a:	80 91 57 63 	lds	r24, 0x6357	; 0x806357 <_xclk>
    108e:	89 51       	subi	r24, 0x19	; 25
    1090:	8d bb       	out	0x1d, r24	; 29
    1092:	8d b3       	in	r24, 0x1d	; 29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:368
    send_break();
    1094:	88 32       	cpi	r24, 0x28	; 40
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:147
    return send_bytes(_set_rsd, 3);
  }

  bool clear_rsd (void) {
    const static uint8_t _clear_rsd[] = {0x55, 0xC2, UPDI_CTRLAV};
    return send_bytes(_clear_rsd, 3);
    1096:	70 f0       	brcs	.+28     	; 0x10b4 <UPDI::timeout_fallback()+0x2a>
    1098:	8d b3       	in	r24, 0x1d	; 29
    109a:	90 e0       	ldi	r25, 0x00	; 0
    109c:	80 93 57 63 	sts	0x6357, r24	; 0x806357 <_xclk>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:369
    /* If a timeout occurs, the communication speed will be reduced. */
    RXDATA = _xclk - 25;
    if (RXDATA < 40) return 0;
    _xclk = RXDATA;
    send_break();
    return clear_rsd();
    10a0:	90 93 58 63 	sts	0x6358, r25	; 0x806358 <_xclk+0x1>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:366
  // MARK: UPDI Session

  size_t timeout_fallback (void) {
    /* If a timeout occurs, the communication speed will be reduced. */
    RXDATA = _xclk - 25;
    if (RXDATA < 40) return 0;
    10a4:	b2 df       	rcall	.-156    	; 0x100a <UPDI::send_break()>
clear_rsd():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:370
    _xclk = RXDATA;
    send_break();
    return clear_rsd();
  }
    10a6:	63 e0       	ldi	r22, 0x03	; 3
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:156

  bool send_byte (const uint8_t _data) {
    return start_txd() && send(_data);
    10a8:	70 e0       	ldi	r23, 0x00	; 0
    10aa:	87 e8       	ldi	r24, 0x87	; 135
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:116
    while (get_sin(0x62) && RXDATA);  /* NVMCSR_REG: IO=0x32 */
    D2PRINTF("<CSR:%02X>\r\n", RXDATA);
    return true;
  }

  bool nvm_ctrl (const uint8_t _nvmcmd) {
    10ac:	90 e6       	ldi	r25, 0x60	; 96
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:82
    return send(0xC0 | _addr) && send(_data);
  }

  bool set_sout (const uint8_t _addr, const uint8_t _data) {
    D2PRINTF("[SOUT:%02X:%02X]\r\n", _addr, _data);
    return send(0x90 | _addr) && send(_data);
    10ae:	94 dd       	rcall	.-1240   	; 0xbd8 <UPDI::send_bytes(unsigned char const*, unsigned int)>
timeout_fallback():
    10b0:	90 e0       	ldi	r25, 0x00	; 0
    10b2:	08 95       	ret
    10b4:	90 e0       	ldi	r25, 0x00	; 0
    10b6:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:118
    return true;
  }

  bool nvm_ctrl (const uint8_t _nvmcmd) {
    return set_sout(0x63, _nvmcmd);   /* NVMCMD_REG: IO=0x33 */
  }
    10b8:	08 95       	ret

000010ba <PDI::send_byte(unsigned char) [clone .part.4]>:
_ZN3PDI9send_byteEh.part.4():
    10ba:	7d cd       	rjmp	.-1286   	; 0xbb6 <PDI::send(unsigned char)>

000010bc <TPI::nvm_ctrl(unsigned char)>:
nvm_ctrl():
    10bc:	cf 93       	push	r28
    10be:	c8 2f       	mov	r28, r24
set_sout():
    10c0:	83 ef       	ldi	r24, 0xF3	; 243
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:87
    return send(0x90 | _addr) && send(_data);
  }

  bool get_sin (const uint8_t _addr) {
    D2PRINTF("[SIN:%02X]\r\n", _addr);
    return send(0x10 | _addr) && recv();
    10c2:	79 dd       	rcall	.-1294   	; 0xbb6 <PDI::send(unsigned char)>
    10c4:	88 23       	and	r24, r24
    10c6:	19 f0       	breq	.+6      	; 0x10ce <TPI::nvm_ctrl(unsigned char)+0x12>
    10c8:	8c 2f       	mov	r24, r28
nvm_ctrl():
    10ca:	cf 91       	pop	r28
set_sout():
    10cc:	f6 cf       	rjmp	.-20     	; 0x10ba <PDI::send_byte(unsigned char) [clone .part.4]>
nvm_ctrl():
    10ce:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:111
  }

  // MARK: TPI NVM Control

  bool nvm_wait (void) {
    while (get_sin(0x62) && RXDATA);  /* NVMCSR_REG: IO=0x32 */
    10d0:	cf 91       	pop	r28
    10d2:	08 95       	ret

000010d4 <TPI::nvm_wait()>:
get_sin():
    10d4:	82 e7       	ldi	r24, 0x72	; 114
    10d6:	6f dd       	rcall	.-1314   	; 0xbb6 <PDI::send(unsigned char)>
    10d8:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:114
    D2PRINTF("<CSR:%02X>\r\n", RXDATA);
    return true;
  }
    10da:	31 f0       	breq	.+12     	; 0x10e8 <TPI::nvm_wait()+0x14>
    10dc:	6b dd       	rcall	.-1322   	; 0xbb4 <PDI::recv_byte() [clone .part.3]>
nvm_wait():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:103
  bool get_sld (void) {
    D2PRINTF("[SLD]\r\n");
    return send(0x24) && recv();
  }

  bool set_sst (const uint8_t _data) {
    10de:	88 23       	and	r24, r24
    10e0:	19 f0       	breq	.+6      	; 0x10e8 <TPI::nvm_wait()+0x14>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:105
    D2PRINTF("[SST:%02X]\r\n", _data);
    return send(0x64) && send(_data);
    10e2:	8d b3       	in	r24, 0x1d	; 29
    10e4:	81 11       	cpse	r24, r1
    10e6:	f6 cf       	rjmp	.-20     	; 0x10d4 <TPI::nvm_wait()>
    10e8:	81 e0       	ldi	r24, 0x01	; 1
    10ea:	08 95       	ret

000010ec <TPI::set_sst(unsigned char)>:
set_sst():
    10ec:	cf 93       	push	r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:106
  }
    10ee:	c8 2f       	mov	r28, r24
    10f0:	84 e6       	ldi	r24, 0x64	; 100
    10f2:	61 dd       	rcall	.-1342   	; 0xbb6 <PDI::send(unsigned char)>
    10f4:	88 23       	and	r24, r24
    10f6:	19 f0       	breq	.+6      	; 0x10fe <TPI::set_sst(unsigned char)+0x12>
    10f8:	8c 2f       	mov	r24, r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:100
        && send(_addr >> 8);
  }

  bool get_sld (void) {
    D2PRINTF("[SLD]\r\n");
    return send(0x24) && recv();
    10fa:	cf 91       	pop	r28
    10fc:	de cf       	rjmp	.-68     	; 0x10ba <PDI::send_byte(unsigned char) [clone .part.4]>
    10fe:	80 e0       	ldi	r24, 0x00	; 0
    1100:	cf 91       	pop	r28
    1102:	08 95       	ret

00001104 <TPI::get_sld()>:
get_sld():
    1104:	84 e2       	ldi	r24, 0x24	; 36
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:101
  }
    1106:	57 dd       	rcall	.-1362   	; 0xbb6 <PDI::send(unsigned char)>
    1108:	81 11       	cpse	r24, r1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:90
  bool get_sin (const uint8_t _addr) {
    D2PRINTF("[SIN:%02X]\r\n", _addr);
    return send(0x10 | _addr) && recv();
  }

  bool set_sstpr (const uint16_t _addr) {
    110a:	54 cd       	rjmp	.-1368   	; 0xbb4 <PDI::recv_byte() [clone .part.3]>
    110c:	80 e0       	ldi	r24, 0x00	; 0
    110e:	08 95       	ret

00001110 <TPI::set_sstpr(unsigned int)>:
set_sstpr():
    1110:	cf 93       	push	r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:92
    D2PRINTF("[SSTPR:%04X]\r\n", _addr);
    return send(0x68)
    1112:	df 93       	push	r29
    1114:	d8 2f       	mov	r29, r24
    1116:	c9 2f       	mov	r28, r25
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:95
        && send(_addr & 0xFF)
        && send(0x69)
        && send(_addr >> 8);
    1118:	88 e6       	ldi	r24, 0x68	; 104
    111a:	4d dd       	rcall	.-1382   	; 0xbb6 <PDI::send(unsigned char)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:93
  }

  bool set_sstpr (const uint16_t _addr) {
    D2PRINTF("[SSTPR:%04X]\r\n", _addr);
    return send(0x68)
        && send(_addr & 0xFF)
    111c:	88 23       	and	r24, r24
    111e:	61 f0       	breq	.+24     	; 0x1138 <TPI::set_sstpr(unsigned int)+0x28>
    1120:	8d 2f       	mov	r24, r29
    1122:	49 dd       	rcall	.-1390   	; 0xbb6 <PDI::send(unsigned char)>
    1124:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:94
        && send(0x69)
    1126:	41 f0       	breq	.+16     	; 0x1138 <TPI::set_sstpr(unsigned int)+0x28>
    1128:	89 e6       	ldi	r24, 0x69	; 105
    112a:	45 dd       	rcall	.-1398   	; 0xbb6 <PDI::send(unsigned char)>
    112c:	88 23       	and	r24, r24
    112e:	21 f0       	breq	.+8      	; 0x1138 <TPI::set_sstpr(unsigned int)+0x28>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:95
        && send(_addr >> 8);
    1130:	8c 2f       	mov	r24, r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:96
  }
    1132:	df 91       	pop	r29
    1134:	cf 91       	pop	r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:95
  bool set_sstpr (const uint16_t _addr) {
    D2PRINTF("[SSTPR:%04X]\r\n", _addr);
    return send(0x68)
        && send(_addr & 0xFF)
        && send(0x69)
        && send(_addr >> 8);
    1136:	3f cd       	rjmp	.-1410   	; 0xbb6 <PDI::send(unsigned char)>
    1138:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:96
  }
    113a:	df 91       	pop	r29
    113c:	cf 91       	pop	r28
    113e:	08 95       	ret

00001140 <TPI::idle_clock(unsigned int)>:
idle_clock():
    1140:	30 e0       	ldi	r19, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:49
  };

  // MARK: TPI Low level

  void idle_clock (const size_t clock) {
    for (size_t i = 0; i < clock; i++) {
    1142:	20 e0       	ldi	r18, 0x00	; 0
    1144:	40 91 08 04 	lds	r20, 0x0408	; 0x800408 <__TEXT_REGION_LENGTH__+0x7f0408>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:50
      loop_until_bit_is_set(TCLK_IN, TCLK_bp);
    1148:	42 ff       	sbrs	r20, 2
    114a:	fc cf       	rjmp	.-8      	; 0x1144 <TPI::idle_clock(unsigned int)+0x4>
    114c:	40 91 08 04 	lds	r20, 0x0408	; 0x800408 <__TEXT_REGION_LENGTH__+0x7f0408>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:51
      loop_until_bit_is_clear(TCLK_IN, TCLK_bp);
    1150:	42 fd       	sbrc	r20, 2
    1152:	fc cf       	rjmp	.-8      	; 0x114c <TPI::idle_clock(unsigned int)+0xc>
    1154:	2f 5f       	subi	r18, 0xFF	; 255
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:49
  };

  // MARK: TPI Low level

  void idle_clock (const size_t clock) {
    for (size_t i = 0; i < clock; i++) {
    1156:	3f 4f       	sbci	r19, 0xFF	; 255
    1158:	82 17       	cp	r24, r18
    115a:	93 07       	cpc	r25, r19
    115c:	99 f7       	brne	.-26     	; 0x1144 <TPI::idle_clock(unsigned int)+0x4>
    115e:	08 95       	ret

00001160 <SYS::get_vdd()>:
get_vdd():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:53
      loop_until_bit_is_set(TCLK_IN, TCLK_bp);
      loop_until_bit_is_clear(TCLK_IN, TCLK_bp);
    }
  }
    1160:	84 e1       	ldi	r24, 0x14	; 20
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:457
   * A delay of 1250us is required for the voltage to stabilize.
   * The result is 10-bit, so multiply by 10.0 to convert to 1V * 0.0001.
   * The ADC0 peripheral is operational only during voltage measurements.
   */
  uint16_t get_vdd (void) {
    CLKCTRL_MCLKTIMEBASE = F_CPU / 1000000.0;
    1162:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <__TEXT_REGION_LENGTH__+0x7f0066>
    1166:	8f ef       	ldi	r24, 0xFF	; 255
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:458
    ADC0_INTFLAGS = ~0;
    1168:	80 93 07 06 	sts	0x0607, r24	; 0x800607 <__TEXT_REGION_LENGTH__+0x7f0607>
    116c:	10 92 0e 06 	sts	0x060E, r1	; 0x80060e <__TEXT_REGION_LENGTH__+0x7f060e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:459
    ADC0_SAMPLE = 0;
    1170:	10 92 0f 06 	sts	0x060F, r1	; 0x80060f <__TEXT_REGION_LENGTH__+0x7f060f>
    1174:	81 e0       	ldi	r24, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:460
    ADC0_CTRLA = ADC_ENABLE_bm;
    1176:	80 93 00 06 	sts	0x0600, r24	; 0x800600 <__TEXT_REGION_LENGTH__+0x7f0600>
    117a:	80 93 01 06 	sts	0x0601, r24	; 0x800601 <__TEXT_REGION_LENGTH__+0x7f0601>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:461
    ADC0_CTRLB = ADC_PRESC_DIV4_gc;
    117e:	84 e0       	ldi	r24, 0x04	; 4
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:462
    ADC0_CTRLC = ADC_REFSEL_1V024_gc;
    1180:	80 93 02 06 	sts	0x0602, r24	; 0x800602 <__TEXT_REGION_LENGTH__+0x7f0602>
    1184:	8a ef       	ldi	r24, 0xFA	; 250
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:463
    ADC0_CTRLE = 250; /* (SAMPDUR + 0.5) * fCLK_ADC sample duration */
    1186:	80 93 04 06 	sts	0x0604, r24	; 0x800604 <__TEXT_REGION_LENGTH__+0x7f0604>
    118a:	84 e4       	ldi	r24, 0x44	; 68
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:464
    ADC0_MUXPOS = ADC_MUXPOS_VDDDIV10_gc; /* ADC channel VDD * 0.1 */
    118c:	80 93 0b 06 	sts	0x060B, r24	; 0x80060b <__TEXT_REGION_LENGTH__+0x7f060b>
    1190:	80 91 08 06 	lds	r24, 0x0608	; 0x800608 <__TEXT_REGION_LENGTH__+0x7f0608>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:465
    loop_until_bit_is_clear(ADC0_STATUS, ADC_ADCBUSY_bp);
    1194:	80 fd       	sbrc	r24, 0
    1196:	fc cf       	rjmp	.-8      	; 0x1190 <SYS::get_vdd()+0x30>
    1198:	81 e1       	ldi	r24, 0x11	; 17
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:466
    ADC0_COMMAND = ADC_MODE_SINGLE_10BIT_gc | ADC_START_IMMEDIATE_gc;
    119a:	80 93 0a 06 	sts	0x060A, r24	; 0x80060a <__TEXT_REGION_LENGTH__+0x7f060a>
    119e:	80 91 07 06 	lds	r24, 0x0607	; 0x800607 <__TEXT_REGION_LENGTH__+0x7f0607>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:467
    loop_until_bit_is_set(ADC0_INTFLAGS, ADC_SAMPRDY_bp);
    11a2:	81 ff       	sbrs	r24, 1
    11a4:	fc cf       	rjmp	.-8      	; 0x119e <SYS::get_vdd()+0x3e>
    11a6:	20 91 0e 06 	lds	r18, 0x060E	; 0x80060e <__TEXT_REGION_LENGTH__+0x7f060e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:468
    uint16_t _adc_reading = ADC0_SAMPLE;
    11aa:	30 91 0f 06 	lds	r19, 0x060F	; 0x80060f <__TEXT_REGION_LENGTH__+0x7f060f>
    11ae:	c9 01       	movw	r24, r18
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:469
    _adc_reading += (_adc_reading << 3) + _adc_reading;
    11b0:	43 e0       	ldi	r20, 0x03	; 3
    11b2:	88 0f       	add	r24, r24
    11b4:	99 1f       	adc	r25, r25
    11b6:	4a 95       	dec	r20
    11b8:	e1 f7       	brne	.-8      	; 0x11b2 <SYS::get_vdd()+0x52>
    11ba:	22 0f       	add	r18, r18
    11bc:	33 1f       	adc	r19, r19
    11be:	10 92 00 06 	sts	0x0600, r1	; 0x800600 <__TEXT_REGION_LENGTH__+0x7f0600>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:470
    ADC0_CTRLA = 0;
    11c2:	82 0f       	add	r24, r18
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:472
    return _adc_reading;
  }
    11c4:	93 1f       	adc	r25, r19
    11c6:	08 95       	ret

000011c8 <SYS::is_boundary_flash_page(unsigned long)>:
is_boundary_flash_page():
    11c8:	cf 92       	push	r12
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:439
   * Flash memory boundary check
   *
   * True when a page area address different from the previous time is detected.
   * Indicates the need to erase a page in FLASH/USERROW/BOOTROW of the AVR-Dx series.
   */
  bool is_boundary_flash_page (uint32_t _dwAddr) {
    11ca:	df 92       	push	r13
    11cc:	ef 92       	push	r14
    11ce:	ff 92       	push	r15
    11d0:	ab 01       	movw	r20, r22
    11d2:	bc 01       	movw	r22, r24
    11d4:	80 91 4b 63 	lds	r24, 0x634B	; 0x80634b <Device_Descriptor+0x2d>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:440
    uint32_t _mask = ~(((uint16_t)Device_Descriptor.UPDI.flash_page_size_msb << 8)
    11d8:	28 2f       	mov	r18, r24
    11da:	30 e0       	ldi	r19, 0x00	; 0
    11dc:	32 2f       	mov	r19, r18
    11de:	22 27       	eor	r18, r18
    11e0:	80 91 20 63 	lds	r24, 0x6320	; 0x806320 <Device_Descriptor+0x2>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:441
                                + Device_Descriptor.UPDI.flash_page_size - 1);
    11e4:	82 0f       	add	r24, r18
    11e6:	93 2f       	mov	r25, r19
    11e8:	91 1d       	adc	r25, r1
    11ea:	91 95       	neg	r25
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:440
   *
   * True when a page area address different from the previous time is detected.
   * Indicates the need to erase a page in FLASH/USERROW/BOOTROW of the AVR-Dx series.
   */
  bool is_boundary_flash_page (uint32_t _dwAddr) {
    uint32_t _mask = ~(((uint16_t)Device_Descriptor.UPDI.flash_page_size_msb << 8)
    11ec:	81 95       	neg	r24
    11ee:	91 09       	sbc	r25, r1
    11f0:	b0 e0       	ldi	r27, 0x00	; 0
    11f2:	a0 e0       	ldi	r26, 0x00	; 0
    11f4:	84 23       	and	r24, r20
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:442
                                + Device_Descriptor.UPDI.flash_page_size - 1);
    uint32_t _after_page = _dwAddr & _mask;
    11f6:	95 23       	and	r25, r21
    11f8:	a6 23       	and	r26, r22
    11fa:	b7 23       	and	r27, r23
    11fc:	21 e0       	ldi	r18, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:443
    bool _result = _before_page != _after_page;
    11fe:	c0 90 db 60 	lds	r12, 0x60DB	; 0x8060db <_before_page>
    1202:	d0 90 dc 60 	lds	r13, 0x60DC	; 0x8060dc <_before_page+0x1>
    1206:	e0 90 dd 60 	lds	r14, 0x60DD	; 0x8060dd <_before_page+0x2>
    120a:	f0 90 de 60 	lds	r15, 0x60DE	; 0x8060de <_before_page+0x3>
    120e:	c8 16       	cp	r12, r24
    1210:	d9 06       	cpc	r13, r25
    1212:	ea 06       	cpc	r14, r26
    1214:	fb 06       	cpc	r15, r27
    1216:	09 f4       	brne	.+2      	; 0x121a <SYS::is_boundary_flash_page(unsigned long)+0x52>
    1218:	20 e0       	ldi	r18, 0x00	; 0
    121a:	80 93 db 60 	sts	0x60DB, r24	; 0x8060db <_before_page>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:444
    _before_page = _after_page;
    121e:	90 93 dc 60 	sts	0x60DC, r25	; 0x8060dc <_before_page+0x1>
    1222:	a0 93 dd 60 	sts	0x60DD, r26	; 0x8060dd <_before_page+0x2>
    1226:	b0 93 de 60 	sts	0x60DE, r27	; 0x8060de <_before_page+0x3>
    122a:	82 2f       	mov	r24, r18
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:446
    return _result;
  }
    122c:	ff 90       	pop	r15
    122e:	ef 90       	pop	r14
    1230:	df 90       	pop	r13
    1232:	cf 90       	pop	r12
    1234:	08 95       	ret

00001236 <SYS::LED_Flash()>:
LED_TCB1():
    1236:	80 91 ab 60 	lds	r24, 0x60AB	; 0x8060ab <_led_mode>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:286
      _led_mode = 1;
    }
  }

  void LED_TCB1 (uint8_t _mode, uint16_t _ccmp) {
    if (_led_mode != _mode) {
    123a:	82 30       	cpi	r24, 0x02	; 2
    123c:	81 f0       	breq	.+32     	; 0x125e <SYS::LED_Flash()+0x28>
    123e:	10 92 00 0a 	sts	0x0A00, r1	; 0x800a00 <__TEXT_REGION_LENGTH__+0x7f0a00>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:287
      TCA0_SPLIT_CTRLA = 0;
    1242:	10 92 1a 0b 	sts	0x0B1A, r1	; 0x800b1a <__TEXT_REGION_LENGTH__+0x7f0b1a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:288
      TCB1_CNTL = 0;
    1246:	89 ea       	ldi	r24, 0xA9	; 169
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:289
      TCB1_CCMP = _ccmp;
    1248:	95 e0       	ldi	r25, 0x05	; 5
    124a:	80 93 1c 0b 	sts	0x0B1C, r24	; 0x800b1c <__TEXT_REGION_LENGTH__+0x7f0b1c>
    124e:	90 93 1d 0b 	sts	0x0B1D, r25	; 0x800b1d <__TEXT_REGION_LENGTH__+0x7f0b1d>
    1252:	8f e0       	ldi	r24, 0x0F	; 15
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:290
      TCB1_CTRLA = TCB_ENABLE_bm | TCB_CLKSEL_EVENT_gc;
    1254:	80 93 10 0b 	sts	0x0B10, r24	; 0x800b10 <__TEXT_REGION_LENGTH__+0x7f0b10>
    1258:	82 e0       	ldi	r24, 0x02	; 2
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:291
      _led_mode = _mode;
    125a:	80 93 ab 60 	sts	0x60AB, r24	; 0x8060ab <_led_mode>
LED_Flash():
    125e:	08 95       	ret

00001260 <SYS::LED_HeartBeat()>:
LED_HeartBeat():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:304
     * Restarting TCBn in PWM8 mode may cause the duty
     * cycle of TCBn_WO to invert. Solution unknown.
     * This function is affected.
     */
    LED_TCB1(2, TCB1_FLASH);
  }
    1260:	80 91 ab 60 	lds	r24, 0x60AB	; 0x8060ab <_led_mode>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:276
  * LED operation switching
  */

  /* Heartbeat (waiting) */
  void LED_HeartBeat (void) {
    if (_led_mode != 1) {
    1264:	81 30       	cpi	r24, 0x01	; 1
    1266:	89 f0       	breq	.+34     	; 0x128a <SYS::LED_HeartBeat()+0x2a>
    1268:	8f e0       	ldi	r24, 0x0F	; 15
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:277
      TCA0_SPLIT_CTRLA = TCA_SPLIT_ENABLE_bm | TCA_SPLIT_CLKSEL_DIV1024_gc;
    126a:	80 93 00 0a 	sts	0x0A00, r24	; 0x800a00 <__TEXT_REGION_LENGTH__+0x7f0a00>
    126e:	10 92 1a 0b 	sts	0x0B1A, r1	; 0x800b1a <__TEXT_REGION_LENGTH__+0x7f0b1a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:278
      TCB1_CNTL = 0;
    1272:	84 ec       	ldi	r24, 0xC4	; 196
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:279
      TCB1_CCMP = TCB1_HBEAT;
    1274:	92 e6       	ldi	r25, 0x62	; 98
    1276:	80 93 1c 0b 	sts	0x0B1C, r24	; 0x800b1c <__TEXT_REGION_LENGTH__+0x7f0b1c>
    127a:	90 93 1d 0b 	sts	0x0B1D, r25	; 0x800b1d <__TEXT_REGION_LENGTH__+0x7f0b1d>
    127e:	85 e0       	ldi	r24, 0x05	; 5
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:280
      TCB1_CTRLA = TCB_ENABLE_bm | TCB_CLKSEL_TCA0_gc;
    1280:	80 93 10 0b 	sts	0x0B10, r24	; 0x800b10 <__TEXT_REGION_LENGTH__+0x7f0b10>
    1284:	81 e0       	ldi	r24, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:281
      _led_mode = 1;
    1286:	80 93 ab 60 	sts	0x60AB, r24	; 0x8060ab <_led_mode>
    128a:	08 95       	ret

0000128c <PDI::get_mtype_offset(unsigned char)>:
get_mtype_offset():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:283
    }
  }
    128c:	82 32       	cpi	r24, 0x22	; 34
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:190
  }

  // MARK: PDI NVM API

  uint32_t get_mtype_offset (uint8_t m_type) {
    if      (m_type == 0x22) return Device_Descriptor.Xmega.nvm_eeprom_offset;    /* MTYPE_EEPROM (EEPROM) */
    128e:	49 f4       	brne	.+18     	; 0x12a2 <PDI::get_mtype_offset(unsigned char)+0x16>
    1290:	60 91 26 63 	lds	r22, 0x6326	; 0x806326 <Device_Descriptor+0x8>
    1294:	70 91 27 63 	lds	r23, 0x6327	; 0x806327 <Device_Descriptor+0x9>
    1298:	80 91 28 63 	lds	r24, 0x6328	; 0x806328 <Device_Descriptor+0xa>
    129c:	90 91 29 63 	lds	r25, 0x6329	; 0x806329 <Device_Descriptor+0xb>
    12a0:	08 95       	ret
    12a2:	80 3b       	cpi	r24, 0xB0	; 176
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:191
    else if (m_type == 0xB0) return Device_Descriptor.Xmega.nvm_boot_offset;      /* MTYPE_FLASH_PAGE (BOOTCODE) */
    12a4:	49 f4       	brne	.+18     	; 0x12b8 <PDI::get_mtype_offset(unsigned char)+0x2c>
    12a6:	60 91 22 63 	lds	r22, 0x6322	; 0x806322 <Device_Descriptor+0x4>
    12aa:	70 91 23 63 	lds	r23, 0x6323	; 0x806323 <Device_Descriptor+0x5>
    12ae:	80 91 24 63 	lds	r24, 0x6324	; 0x806324 <Device_Descriptor+0x6>
    12b2:	90 91 25 63 	lds	r25, 0x6325	; 0x806325 <Device_Descriptor+0x7>
    12b6:	08 95       	ret
    12b8:	81 3b       	cpi	r24, 0xB1	; 177
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:192
    else if (m_type == 0xB1) return Device_Descriptor.Xmega.nvm_eeprom_offset;    /* MTYPE_EEPROM_PAGE (EEPROM) */
    12ba:	51 f3       	breq	.-44     	; 0x1290 <PDI::get_mtype_offset(unsigned char)+0x4>
    12bc:	82 3b       	cpi	r24, 0xB2	; 178
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:193
    else if (m_type == 0xB2) return Device_Descriptor.Xmega.nvm_fuse_offset;      /* MTYPE_FUSE_BITS (FUSE) */
    12be:	49 f4       	brne	.+18     	; 0x12d2 <PDI::get_mtype_offset(unsigned char)+0x46>
    12c0:	60 91 2a 63 	lds	r22, 0x632A	; 0x80632a <Device_Descriptor+0xc>
    12c4:	70 91 2b 63 	lds	r23, 0x632B	; 0x80632b <Device_Descriptor+0xd>
    12c8:	80 91 2c 63 	lds	r24, 0x632C	; 0x80632c <Device_Descriptor+0xe>
    12cc:	90 91 2d 63 	lds	r25, 0x632D	; 0x80632d <Device_Descriptor+0xf>
    12d0:	08 95       	ret
    12d2:	83 3b       	cpi	r24, 0xB3	; 179
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:194
    else if (m_type == 0xB3) return Device_Descriptor.Xmega.nvm_lock_offset;      /* MTYPE_LOCK_BITS (LOCK) */
    12d4:	49 f4       	brne	.+18     	; 0x12e8 <PDI::get_mtype_offset(unsigned char)+0x5c>
    12d6:	60 91 2e 63 	lds	r22, 0x632E	; 0x80632e <Device_Descriptor+0x10>
    12da:	70 91 2f 63 	lds	r23, 0x632F	; 0x80632f <Device_Descriptor+0x11>
    12de:	80 91 30 63 	lds	r24, 0x6330	; 0x806330 <Device_Descriptor+0x12>
    12e2:	90 91 31 63 	lds	r25, 0x6331	; 0x806331 <Device_Descriptor+0x13>
    12e6:	08 95       	ret
    12e8:	84 3b       	cpi	r24, 0xB4	; 180
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:195
    else if (m_type == 0xB4) return Device_Descriptor.Xmega.nvm_data_offset
    12ea:	89 f4       	brne	.+34     	; 0x130e <PDI::get_mtype_offset(unsigned char)+0x82>
    12ec:	20 91 4b 63 	lds	r18, 0x634B	; 0x80634b <Device_Descriptor+0x2d>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:196
                                  + Device_Descriptor.Xmega.mcu_base_addr;        /* MTYPE_SIGN_JTAG */
    12f0:	30 91 4c 63 	lds	r19, 0x634C	; 0x80634c <Device_Descriptor+0x2e>
    12f4:	60 91 3a 63 	lds	r22, 0x633A	; 0x80633a <Device_Descriptor+0x1c>
    12f8:	70 91 3b 63 	lds	r23, 0x633B	; 0x80633b <Device_Descriptor+0x1d>
    12fc:	80 91 3c 63 	lds	r24, 0x633C	; 0x80633c <Device_Descriptor+0x1e>
    1300:	90 91 3d 63 	lds	r25, 0x633D	; 0x80633d <Device_Descriptor+0x1f>
    1304:	62 0f       	add	r22, r18
    1306:	73 1f       	adc	r23, r19
    1308:	81 1d       	adc	r24, r1
    130a:	91 1d       	adc	r25, r1
    130c:	08 95       	ret
    130e:	80 3c       	cpi	r24, 0xC0	; 192
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:197
    else if (m_type == 0xC0) return Device_Descriptor.Xmega.nvm_app_offset;       /* MTYPE_FLASH (APPCODE) */
    1310:	49 f4       	brne	.+18     	; 0x1324 <PDI::get_mtype_offset(unsigned char)+0x98>
    1312:	60 91 1e 63 	lds	r22, 0x631E	; 0x80631e <Device_Descriptor>
    1316:	70 91 1f 63 	lds	r23, 0x631F	; 0x80631f <Device_Descriptor+0x1>
    131a:	80 91 20 63 	lds	r24, 0x6320	; 0x806320 <Device_Descriptor+0x2>
    131e:	90 91 21 63 	lds	r25, 0x6321	; 0x806321 <Device_Descriptor+0x3>
    1322:	08 95       	ret
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:198
    else if (m_type == 0xC1) return Device_Descriptor.Xmega.nvm_boot_offset;      /* MTYPE_BOOT_FLASH (BOOTCODE) */
    1324:	81 3c       	cpi	r24, 0xC1	; 193
    1326:	09 f4       	brne	.+2      	; 0x132a <PDI::get_mtype_offset(unsigned char)+0x9e>
    1328:	be cf       	rjmp	.-132    	; 0x12a6 <PDI::get_mtype_offset(unsigned char)+0x1a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:199
    else if (m_type == 0xC4) return Device_Descriptor.Xmega.nvm_eeprom_offset;    /* MTYPE_EEPROM_XMEGA (EEPROM) */
    132a:	84 3c       	cpi	r24, 0xC4	; 196
    132c:	09 f4       	brne	.+2      	; 0x1330 <PDI::get_mtype_offset(unsigned char)+0xa4>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:200
    else if (m_type == 0xC5) return Device_Descriptor.Xmega.nvm_user_sig_offset;  /* MTYPE_USERSIG (USERROW) */
    132e:	b0 cf       	rjmp	.-160    	; 0x1290 <PDI::get_mtype_offset(unsigned char)+0x4>
    1330:	85 3c       	cpi	r24, 0xC5	; 197
    1332:	49 f4       	brne	.+18     	; 0x1346 <PDI::get_mtype_offset(unsigned char)+0xba>
    1334:	60 91 32 63 	lds	r22, 0x6332	; 0x806332 <Device_Descriptor+0x14>
    1338:	70 91 33 63 	lds	r23, 0x6333	; 0x806333 <Device_Descriptor+0x15>
    133c:	80 91 34 63 	lds	r24, 0x6334	; 0x806334 <Device_Descriptor+0x16>
    1340:	90 91 35 63 	lds	r25, 0x6335	; 0x806335 <Device_Descriptor+0x17>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:201
    else if (m_type == 0xC6) return Device_Descriptor.Xmega.nvm_prod_sig_offset;  /* MTYPE_PRODSIG (PRODSIG) */
    1344:	08 95       	ret
    1346:	86 3c       	cpi	r24, 0xC6	; 198
    1348:	49 f4       	brne	.+18     	; 0x135c <PDI::get_mtype_offset(unsigned char)+0xd0>
    134a:	60 91 36 63 	lds	r22, 0x6336	; 0x806336 <Device_Descriptor+0x18>
    134e:	70 91 37 63 	lds	r23, 0x6337	; 0x806337 <Device_Descriptor+0x19>
    1352:	80 91 38 63 	lds	r24, 0x6338	; 0x806338 <Device_Descriptor+0x1a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:202
    else                     return Device_Descriptor.Xmega.nvm_data_offset;
    1356:	90 91 39 63 	lds	r25, 0x6339	; 0x806339 <Device_Descriptor+0x1b>
    135a:	08 95       	ret
    135c:	60 91 3a 63 	lds	r22, 0x633A	; 0x80633a <Device_Descriptor+0x1c>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:203
  }
    1360:	70 91 3b 63 	lds	r23, 0x633B	; 0x80633b <Device_Descriptor+0x1d>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:77
  };

  // MARK: PDI Low level

  bool idle_clock (const size_t clock) {
    for (size_t i = 0; i < clock; i++) {
    1364:	80 91 3c 63 	lds	r24, 0x633C	; 0x80633c <Device_Descriptor+0x1e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:78
      loop_until_bit_is_set(PCLK_IN, PCLK_bp);
    1368:	90 91 3d 63 	lds	r25, 0x633D	; 0x80633d <Device_Descriptor+0x1f>
    136c:	08 95       	ret

0000136e <PDI::idle_clock(unsigned int)>:
idle_clock():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:79
      loop_until_bit_is_clear(PCLK_IN, PCLK_bp);
    136e:	30 e0       	ldi	r19, 0x00	; 0
    1370:	20 e0       	ldi	r18, 0x00	; 0
    1372:	40 91 08 04 	lds	r20, 0x0408	; 0x800408 <__TEXT_REGION_LENGTH__+0x7f0408>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:77
  };

  // MARK: PDI Low level

  bool idle_clock (const size_t clock) {
    for (size_t i = 0; i < clock; i++) {
    1376:	46 ff       	sbrs	r20, 6
    1378:	fc cf       	rjmp	.-8      	; 0x1372 <PDI::idle_clock(unsigned int)+0x4>
    137a:	40 91 08 04 	lds	r20, 0x0408	; 0x800408 <__TEXT_REGION_LENGTH__+0x7f0408>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:82
      loop_until_bit_is_set(PCLK_IN, PCLK_bp);
      loop_until_bit_is_clear(PCLK_IN, PCLK_bp);
    }
    return true;
  }
    137e:	46 fd       	sbrc	r20, 6
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:98
    }
    return true;
  }

  bool stop_txd (void) {
    if (bit_is_set(PGCONF, PGCONF_XDIR_bp)) {
    1380:	fc cf       	rjmp	.-8      	; 0x137a <PDI::idle_clock(unsigned int)+0xc>
    1382:	2f 5f       	subi	r18, 0xFF	; 255
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:99
      idle_clock(1);
    1384:	3f 4f       	sbci	r19, 0xFF	; 255
    1386:	82 17       	cp	r24, r18
    1388:	93 07       	cpc	r25, r19
    138a:	99 f7       	brne	.-26     	; 0x1372 <PDI::idle_clock(unsigned int)+0x4>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:100
      pinLogicOpen(PIN_PGM_PDAT);
    138c:	81 e0       	ldi	r24, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:101
      USART0_CTRLB = USART_RXEN_bm | USART_ODME_bm;
    138e:	08 95       	ret

00001390 <PDI::stop_txd()>:
stop_txd():
    1390:	fb 9b       	sbis	0x1f, 3	; 31
    1392:	08 c0       	rjmp	.+16     	; 0x13a4 <PDI::stop_txd()+0x14>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:102
      bit_clear(PGCONF, PGCONF_XDIR_bp);
    1394:	81 e0       	ldi	r24, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:105
    }
    return true;
  }
    1396:	90 e0       	ldi	r25, 0x00	; 0
    1398:	ea df       	rcall	.-44     	; 0x136e <PDI::idle_clock(unsigned int)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:128
    // D2PRINTF("(%02X:%02X)", RXSTAT, RXDATA);
    return RXSTAT == 0;
  }

  bool recv_byte (void) {
    return stop_txd() && recv();
    139a:	04 98       	cbi	0x00, 4	; 0
    139c:	88 e8       	ldi	r24, 0x88	; 136
    139e:	80 93 06 08 	sts	0x0806, r24	; 0x800806 <__TEXT_REGION_LENGTH__+0x7f0806>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:129
  }
    13a2:	fb 98       	cbi	0x1f, 3	; 31
    13a4:	81 e0       	ldi	r24, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:87
  }

  /* To run push-pull TxD in single-wire mode with loopback, */
  /* controlling the USART becomes a bit more complicated.   */
  bool start_txd (void) {
    if (bit_is_clear(PGCONF, PGCONF_XDIR_bp)) {
    13a6:	08 95       	ret

000013a8 <PDI::recv_byte()>:
recv_byte():
    13a8:	f3 df       	rcall	.-26     	; 0x1390 <PDI::stop_txd()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:88
      idle_clock(1);
    13aa:	81 11       	cpse	r24, r1
    13ac:	03 cc       	rjmp	.-2042   	; 0xbb4 <PDI::recv_byte() [clone .part.3]>
    13ae:	80 e0       	ldi	r24, 0x00	; 0
    13b0:	08 95       	ret

000013b2 <PDI::start_txd()>:
start_txd():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:89
      digitalWriteMacro(PIN_PGM_PDAT, HIGH);
    13b2:	fb 99       	sbic	0x1f, 3	; 31
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:90
      pinLogicPush(PIN_PGM_PDAT);
    13b4:	09 c0       	rjmp	.+18     	; 0x13c8 <PDI::start_txd()+0x16>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:91
      USART0_CTRLB = USART_RXEN_bm | USART_TXEN_bm;
    13b6:	81 e0       	ldi	r24, 0x01	; 1
    13b8:	90 e0       	ldi	r25, 0x00	; 0
    13ba:	d9 df       	rcall	.-78     	; 0x136e <PDI::idle_clock(unsigned int)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:92
      bit_set(PGCONF, PGCONF_XDIR_bp);
    13bc:	0c 9a       	sbi	0x01, 4	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:95
    }
    return true;
  }
    13be:	04 9a       	sbi	0x00, 4	; 0
    13c0:	80 ec       	ldi	r24, 0xC0	; 192
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:178
  }

  bool pdibus_wait (void) {
    do {
      /* ACC STATUS check */
      idle_clock(2);
    13c2:	80 93 06 08 	sts	0x0806, r24	; 0x800806 <__TEXT_REGION_LENGTH__+0x7f0806>
    13c6:	fb 9a       	sbi	0x1f, 3	; 31
    13c8:	81 e0       	ldi	r24, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:156
    USART0_TXDATAL = _data;
    return recv() && _data == RXDATA;
  }

  bool send_byte (const uint8_t _data) {
    return start_txd() && send(_data);
    13ca:	08 95       	ret

000013cc <PDI::pdibus_wait()>:
pdibus_wait():
    13cc:	82 e0       	ldi	r24, 0x02	; 2
    13ce:	90 e0       	ldi	r25, 0x00	; 0
    13d0:	ce df       	rcall	.-100    	; 0x136e <PDI::idle_clock(unsigned int)>
send_byte():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:184
      if (send_byte(0x80)) {
        if (recv_byte() && bit_is_set(RXDATA, 1)) return true;
      }
      else break;
    } while (true);
    return false;
    13d2:	ef df       	rcall	.-34     	; 0x13b2 <PDI::start_txd()>
    13d4:	81 11       	cpse	r24, r1
    13d6:	02 c0       	rjmp	.+4      	; 0x13dc <PDI::pdibus_wait()+0x10>
pdibus_wait():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:179

  bool pdibus_wait (void) {
    do {
      /* ACC STATUS check */
      idle_clock(2);
      if (send_byte(0x80)) {
    13d8:	80 e0       	ldi	r24, 0x00	; 0
    13da:	08 95       	ret
send_byte():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:180
        if (recv_byte() && bit_is_set(RXDATA, 1)) return true;
    13dc:	80 e8       	ldi	r24, 0x80	; 128
    13de:	6d de       	rcall	.-806    	; 0x10ba <PDI::send_byte(unsigned char) [clone .part.4]>
pdibus_wait():
    13e0:	88 23       	and	r24, r24
    13e2:	d1 f3       	breq	.-12     	; 0x13d8 <PDI::pdibus_wait()+0xc>
    13e4:	e1 df       	rcall	.-62     	; 0x13a8 <PDI::recv_byte()>
    13e6:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:185
      }
      else break;
    } while (true);
    return false;
  }
    13e8:	89 f3       	breq	.-30     	; 0x13cc <PDI::pdibus_wait()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:167
    };
    _CAPS32(_set_ptr[1])->dword = _dwAddr;
    return send_bytes(_set_ptr, sizeof(_set_ptr)) && send(_data);
  }

  bool send_bytes (const uint8_t* _data, size_t _len) {
    13ea:	e9 9b       	sbis	0x1d, 1	; 29
    13ec:	ef cf       	rjmp	.-34     	; 0x13cc <PDI::pdibus_wait()>
    13ee:	08 95       	ret

000013f0 <PDI::send_bytes(unsigned char const*, unsigned int)>:
send_bytes():
    13f0:	ef 92       	push	r14
    13f2:	ff 92       	push	r15
    13f4:	0f 93       	push	r16
    13f6:	1f 93       	push	r17
    13f8:	cf 93       	push	r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:168
    start_txd();
    13fa:	df 93       	push	r29
    13fc:	7c 01       	movw	r14, r24
    13fe:	8b 01       	movw	r16, r22
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:170
    do {
      if (!send(*_data++)) return false;
    1400:	d8 df       	rcall	.-80     	; 0x13b2 <PDI::start_txd()>
    1402:	e7 01       	movw	r28, r14
    1404:	89 91       	ld	r24, Y+
    1406:	d7 db       	rcall	.-2130   	; 0xbb6 <PDI::send(unsigned char)>
    1408:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:171
    } while (--_len);
    140a:	19 f0       	breq	.+6      	; 0x1412 <PDI::send_bytes(unsigned char const*, unsigned int)+0x22>
    140c:	01 50       	subi	r16, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:173
    return true;
  }
    140e:	11 09       	sbc	r17, r1
    1410:	c9 f7       	brne	.-14     	; 0x1404 <PDI::send_bytes(unsigned char const*, unsigned int)+0x14>
    1412:	df 91       	pop	r29
    1414:	cf 91       	pop	r28
    1416:	1f 91       	pop	r17
    1418:	0f 91       	pop	r16
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:363
  size_t disconnect (void) {
    const static uint8_t _leave[] = {
      0xC0, 0x02,       /* NVM disable */
      0xC1, 0x00        /* leave SYSRST */
    };
    if (bit_is_set(PGCONF, PGCONF_UPDI_bp)) return 1;
    141a:	ff 90       	pop	r15
    141c:	ef 90       	pop	r14
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:364
    return send_bytes(_leave, sizeof(_leave));
    141e:	08 95       	ret

00001420 <PDI::disconnect()>:
disconnect():
    1420:	f8 99       	sbic	0x1f, 0	; 31
    1422:	07 c0       	rjmp	.+14     	; 0x1432 <PDI::disconnect()+0x12>
    1424:	64 e0       	ldi	r22, 0x04	; 4
    1426:	70 e0       	ldi	r23, 0x00	; 0
    1428:	8f e4       	ldi	r24, 0x4F	; 79
    142a:	90 e6       	ldi	r25, 0x60	; 96
    142c:	e1 df       	rcall	.-62     	; 0x13f0 <PDI::send_bytes(unsigned char const*, unsigned int)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:363
  size_t disconnect (void) {
    const static uint8_t _leave[] = {
      0xC0, 0x02,       /* NVM disable */
      0xC1, 0x00        /* leave SYSRST */
    };
    if (bit_is_set(PGCONF, PGCONF_UPDI_bp)) return 1;
    142e:	90 e0       	ldi	r25, 0x00	; 0
    1430:	08 95       	ret
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:365
    return send_bytes(_leave, sizeof(_leave));
  }
    1432:	81 e0       	ldi	r24, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:213

  bool nvm_cmdex (void) {
    return send_byte(0x010001CBUL, 1);        /* 0x01CA: NVMCTRL_CTRLA */
  }

  bool nvm_wait (void) {
    1434:	90 e0       	ldi	r25, 0x00	; 0
    1436:	08 95       	ret

00001438 <PDI::nvm_wait()>:
nvm_wait():
    1438:	cf 92       	push	r12
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:135

  bool recv_byte (uint32_t _dwAddr) {
    static uint8_t _set_ptr[] = {
      0x0C, 0, 0, 0, 0    /* LDS ADDR4 DATA1 */
    };
    _CAPS32(_set_ptr[1])->dword = _dwAddr;
    143a:	df 92       	push	r13
    143c:	ef 92       	push	r14
    143e:	ff 92       	push	r15
recv_byte():
    1440:	8f ec       	ldi	r24, 0xCF	; 207
    1442:	c8 2e       	mov	r12, r24
    1444:	dd 24       	eor	r13, r13
    1446:	d3 94       	inc	r13
    1448:	e1 2c       	mov	r14, r1
    144a:	fd 2c       	mov	r15, r13
    144c:	c0 92 06 60 	sts	0x6006, r12	; 0x806006 <PDI::recv_byte(unsigned long)::_set_ptr+0x1>
    1450:	d0 92 07 60 	sts	0x6007, r13	; 0x806007 <PDI::recv_byte(unsigned long)::_set_ptr+0x2>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:136
    return send_bytes(_set_ptr, sizeof(_set_ptr)) && recv_byte();
    1454:	e0 92 08 60 	sts	0x6008, r14	; 0x806008 <PDI::recv_byte(unsigned long)::_set_ptr+0x3>
    1458:	f0 92 09 60 	sts	0x6009, r15	; 0x806009 <PDI::recv_byte(unsigned long)::_set_ptr+0x4>
    145c:	65 e0       	ldi	r22, 0x05	; 5
    145e:	70 e0       	ldi	r23, 0x00	; 0
    1460:	85 e0       	ldi	r24, 0x05	; 5
    1462:	90 e6       	ldi	r25, 0x60	; 96
    1464:	c5 df       	rcall	.-118    	; 0x13f0 <PDI::send_bytes(unsigned char const*, unsigned int)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:214
  bool nvm_cmdex (void) {
    return send_byte(0x010001CBUL, 1);        /* 0x01CA: NVMCTRL_CTRLA */
  }

  bool nvm_wait (void) {
    do { recv_byte(0x010001CFUL); } while (RXDATA & 0xC0); /* 0x01CF: NVMCTRL_STATUS */
    1466:	81 11       	cpse	r24, r1
    1468:	9f df       	rcall	.-194    	; 0x13a8 <PDI::recv_byte()>
nvm_wait():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:216
    return true;
  }
    146a:	8d b3       	in	r24, 0x1d	; 29
    146c:	80 7c       	andi	r24, 0xC0	; 192
    146e:	71 f7       	brne	.-36     	; 0x144c <PDI::nvm_wait()+0x14>
    1470:	81 e0       	ldi	r24, 0x01	; 1
    1472:	ff 90       	pop	r15
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:205
    else if (m_type == 0xC5) return Device_Descriptor.Xmega.nvm_user_sig_offset;  /* MTYPE_USERSIG (USERROW) */
    else if (m_type == 0xC6) return Device_Descriptor.Xmega.nvm_prod_sig_offset;  /* MTYPE_PRODSIG (PRODSIG) */
    else                     return Device_Descriptor.Xmega.nvm_data_offset;
  }

  bool nvm_cmd (uint8_t _nvmcmd) {
    1474:	ef 90       	pop	r14
    1476:	df 90       	pop	r13
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:163

  bool send_byte (uint32_t _dwAddr, uint8_t _data) {
    static uint8_t _set_ptr[] = {
      0x4C, 0, 0, 0, 0    /* STS ADDR4 DATA1 */
    };
    _CAPS32(_set_ptr[1])->dword = _dwAddr;
    1478:	cf 90       	pop	r12
    147a:	08 95       	ret

0000147c <PDI::nvm_cmd(unsigned char)>:
nvm_cmd():
    147c:	cf 93       	push	r28
    147e:	c8 2f       	mov	r28, r24
send_byte():
    1480:	8a ec       	ldi	r24, 0xCA	; 202
    1482:	91 e0       	ldi	r25, 0x01	; 1
    1484:	a0 e0       	ldi	r26, 0x00	; 0
    1486:	b1 e0       	ldi	r27, 0x01	; 1
    1488:	80 93 01 60 	sts	0x6001, r24	; 0x806001 <__DATA_REGION_ORIGIN__+0x1>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:164
    return send_bytes(_set_ptr, sizeof(_set_ptr)) && send(_data);
    148c:	90 93 02 60 	sts	0x6002, r25	; 0x806002 <__DATA_REGION_ORIGIN__+0x2>
    1490:	a0 93 03 60 	sts	0x6003, r26	; 0x806003 <__DATA_REGION_ORIGIN__+0x3>
    1494:	b0 93 04 60 	sts	0x6004, r27	; 0x806004 <__DATA_REGION_ORIGIN__+0x4>
    1498:	65 e0       	ldi	r22, 0x05	; 5
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:207
    else                     return Device_Descriptor.Xmega.nvm_data_offset;
  }

  bool nvm_cmd (uint8_t _nvmcmd) {
    return send_byte(0x010001CAUL, _nvmcmd);  /* 0x01CA: NVMCTRL_CMD */
  }
    149a:	70 e0       	ldi	r23, 0x00	; 0
    149c:	80 e0       	ldi	r24, 0x00	; 0
    149e:	90 e6       	ldi	r25, 0x60	; 96
    14a0:	a7 df       	rcall	.-178    	; 0x13f0 <PDI::send_bytes(unsigned char const*, unsigned int)>
    14a2:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:163

  bool send_byte (uint32_t _dwAddr, uint8_t _data) {
    static uint8_t _set_ptr[] = {
      0x4C, 0, 0, 0, 0    /* STS ADDR4 DATA1 */
    };
    _CAPS32(_set_ptr[1])->dword = _dwAddr;
    14a4:	19 f0       	breq	.+6      	; 0x14ac <PDI::nvm_cmd(unsigned char)+0x30>
    14a6:	8c 2f       	mov	r24, r28
nvm_cmd():
    14a8:	cf 91       	pop	r28
send_byte():
    14aa:	07 ce       	rjmp	.-1010   	; 0x10ba <PDI::send_byte(unsigned char) [clone .part.4]>
nvm_cmd():
    14ac:	80 e0       	ldi	r24, 0x00	; 0
    14ae:	cf 91       	pop	r28
    14b0:	08 95       	ret

000014b2 <PDI::nvm_cmdex()>:
send_byte():
    14b2:	8b ec       	ldi	r24, 0xCB	; 203
    14b4:	91 e0       	ldi	r25, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:164
    return send_bytes(_set_ptr, sizeof(_set_ptr)) && send(_data);
    14b6:	a0 e0       	ldi	r26, 0x00	; 0
    14b8:	b1 e0       	ldi	r27, 0x01	; 1
    14ba:	80 93 01 60 	sts	0x6001, r24	; 0x806001 <__DATA_REGION_ORIGIN__+0x1>
    14be:	90 93 02 60 	sts	0x6002, r25	; 0x806002 <__DATA_REGION_ORIGIN__+0x2>
    14c2:	a0 93 03 60 	sts	0x6003, r26	; 0x806003 <__DATA_REGION_ORIGIN__+0x3>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:211
    return send_byte(0x010001CAUL, _nvmcmd);  /* 0x01CA: NVMCTRL_CMD */
  }

  bool nvm_cmdex (void) {
    return send_byte(0x010001CBUL, 1);        /* 0x01CA: NVMCTRL_CTRLA */
  }
    14c6:	b0 93 04 60 	sts	0x6004, r27	; 0x806004 <__DATA_REGION_ORIGIN__+0x4>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:219
    do { recv_byte(0x010001CFUL); } while (RXDATA & 0xC0); /* 0x01CF: NVMCTRL_STATUS */
    return true;
  }

  size_t erase_memory (void) {
    uint8_t   e_type = packet.out.bEType;
    14ca:	65 e0       	ldi	r22, 0x05	; 5
    14cc:	70 e0       	ldi	r23, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:221
    uint32_t _dwAddr = packet.out.dwAddr;
    _CAPS32(_set_ptr32[1])->dword = _dwAddr;
    14ce:	80 e0       	ldi	r24, 0x00	; 0
    14d0:	90 e6       	ldi	r25, 0x60	; 96
    14d2:	8e df       	rcall	.-228    	; 0x13f0 <PDI::send_bytes(unsigned char const*, unsigned int)>
    14d4:	88 23       	and	r24, r24
    14d6:	11 f0       	breq	.+4      	; 0x14dc <PDI::nvm_cmdex()+0x2a>
    14d8:	81 e0       	ldi	r24, 0x01	; 1
    14da:	ef cd       	rjmp	.-1058   	; 0x10ba <PDI::send_byte(unsigned char) [clone .part.4]>
nvm_cmdex():
    14dc:	80 e0       	ldi	r24, 0x00	; 0
    14de:	08 95       	ret

000014e0 <PDI::erase_memory()>:
erase_memory():
    14e0:	cf 93       	push	r28
    14e2:	c0 91 07 61 	lds	r28, 0x6107	; 0x806107 <packet+0x7>
    14e6:	80 91 08 61 	lds	r24, 0x6108	; 0x806108 <packet+0x8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:222
    nvm_wait();
    14ea:	90 91 09 61 	lds	r25, 0x6109	; 0x806109 <packet+0x9>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:223
    if (e_type == 0x00) {
    14ee:	a0 91 0a 61 	lds	r26, 0x610A	; 0x80610a <packet+0xa>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:225
      /* XMEGA_ERASE_CHIP */
      if (!(nvm_cmd(0x40) && nvm_cmdex() && pdibus_wait() && nvm_wait())) return 0;
    14f2:	b0 91 0b 61 	lds	r27, 0x610B	; 0x80610b <packet+0xb>
    14f6:	80 93 0f 60 	sts	0x600F, r24	; 0x80600f <PDI::_set_ptr32+0x1>
    14fa:	90 93 10 60 	sts	0x6010, r25	; 0x806010 <PDI::_set_ptr32+0x2>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:240
         && nvm_wait())) return 0;
    }
    /* Any other sections specified will be ignored, */
    /* but the command will return successful completion. */
    return 1;
  }
    14fe:	a0 93 11 60 	sts	0x6011, r26	; 0x806011 <PDI::_set_ptr32+0x3>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:225
    uint32_t _dwAddr = packet.out.dwAddr;
    _CAPS32(_set_ptr32[1])->dword = _dwAddr;
    nvm_wait();
    if (e_type == 0x00) {
      /* XMEGA_ERASE_CHIP */
      if (!(nvm_cmd(0x40) && nvm_cmdex() && pdibus_wait() && nvm_wait())) return 0;
    1502:	b0 93 12 60 	sts	0x6012, r27	; 0x806012 <PDI::_set_ptr32+0x4>
    1506:	98 df       	rcall	.-208    	; 0x1438 <PDI::nvm_wait()>
    1508:	c1 11       	cpse	r28, r1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:234
    else if (e_type == 0x07) {
      /* XMEGA_ERASE_USERSIG */
      if (!(nvm_cmd(0x18)
         && send_bytes(_set_ptr32, sizeof(_set_ptr32))
         && send(0x64)
         && send(0xFF)
    150a:	11 c0       	rjmp	.+34     	; 0x152e <PDI::erase_memory()+0x4e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:235
         && nvm_wait())) return 0;
    150c:	80 e4       	ldi	r24, 0x40	; 64
    150e:	b6 df       	rcall	.-148    	; 0x147c <PDI::nvm_cmd(unsigned char)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:225
    uint32_t _dwAddr = packet.out.dwAddr;
    _CAPS32(_set_ptr32[1])->dword = _dwAddr;
    nvm_wait();
    if (e_type == 0x00) {
      /* XMEGA_ERASE_CHIP */
      if (!(nvm_cmd(0x40) && nvm_cmdex() && pdibus_wait() && nvm_wait())) return 0;
    1510:	81 11       	cpse	r24, r1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:239
         && send(0xFF)
         && nvm_wait())) return 0;
    }
    /* Any other sections specified will be ignored, */
    /* but the command will return successful completion. */
    return 1;
    1512:	04 c0       	rjmp	.+8      	; 0x151c <PDI::erase_memory()+0x3c>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:229
      /* XMEGA_ERASE_CHIP */
      if (!(nvm_cmd(0x40) && nvm_cmdex() && pdibus_wait() && nvm_wait())) return 0;
    }
    /* Section erasure is only used with USERSIG. */
    /* Unlike READ/WRITE, the address is given as an absolute value. */
    else if (e_type == 0x07) {
    1514:	90 e0       	ldi	r25, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:231
      /* XMEGA_ERASE_USERSIG */
      if (!(nvm_cmd(0x18)
    1516:	80 e0       	ldi	r24, 0x00	; 0
    1518:	cf 91       	pop	r28
    151a:	08 95       	ret
    151c:	ca df       	rcall	.-108    	; 0x14b2 <PDI::nvm_cmdex()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:232
         && send_bytes(_set_ptr32, sizeof(_set_ptr32))
    151e:	88 23       	and	r24, r24
    1520:	c9 f3       	breq	.-14     	; 0x1514 <PDI::erase_memory()+0x34>
    1522:	54 df       	rcall	.-344    	; 0x13cc <PDI::pdibus_wait()>
    1524:	88 23       	and	r24, r24
    1526:	b1 f3       	breq	.-20     	; 0x1514 <PDI::erase_memory()+0x34>
    1528:	87 df       	rcall	.-242    	; 0x1438 <PDI::nvm_wait()>
    152a:	90 e0       	ldi	r25, 0x00	; 0
    152c:	f5 cf       	rjmp	.-22     	; 0x1518 <PDI::erase_memory()+0x38>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:233
         && send(0x64)
    152e:	81 e0       	ldi	r24, 0x01	; 1
    1530:	90 e0       	ldi	r25, 0x00	; 0
    1532:	c7 30       	cpi	r28, 0x07	; 7
    1534:	89 f7       	brne	.-30     	; 0x1518 <PDI::erase_memory()+0x38>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:234
         && send(0xFF)
    1536:	88 e1       	ldi	r24, 0x18	; 24
    1538:	a1 df       	rcall	.-190    	; 0x147c <PDI::nvm_cmd(unsigned char)>
    153a:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:108
    }
    return true;
  }

  bool send_break (void) {
    stop_txd();
    153c:	59 f3       	breq	.-42     	; 0x1514 <PDI::erase_memory()+0x34>
    153e:	65 e0       	ldi	r22, 0x05	; 5
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:109
    digitalWriteMacro(PIN_PGM_PDAT, LOW);
    1540:	70 e0       	ldi	r23, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:111
    pinLogicPush(PIN_PGM_PDAT);
    idle_clock(16);
    1542:	8e e0       	ldi	r24, 0x0E	; 14
    1544:	90 e6       	ldi	r25, 0x60	; 96
    1546:	54 df       	rcall	.-344    	; 0x13f0 <PDI::send_bytes(unsigned char const*, unsigned int)>
    1548:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:112
    digitalWriteMacro(PIN_PGM_PDAT, HIGH);
    154a:	21 f3       	breq	.-56     	; 0x1514 <PDI::erase_memory()+0x34>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:113
    idle_clock(2);
    154c:	84 e6       	ldi	r24, 0x64	; 100
    154e:	33 db       	rcall	.-2458   	; 0xbb6 <PDI::send(unsigned char)>
    1550:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:114
    digitalWriteMacro(PIN_PGM_PDAT, LOW);
    1552:	01 f3       	breq	.-64     	; 0x1514 <PDI::erase_memory()+0x34>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:115
    idle_clock(16);
    1554:	8f ef       	ldi	r24, 0xFF	; 255
    1556:	2f db       	rcall	.-2466   	; 0xbb6 <PDI::send(unsigned char)>
    1558:	e5 cf       	rjmp	.-54     	; 0x1524 <PDI::erase_memory()+0x44>

0000155a <PDI::send_break()>:
send_break():
    155a:	1a df       	rcall	.-460    	; 0x1390 <PDI::stop_txd()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:116
    return start_txd();
    155c:	0c 98       	cbi	0x01, 4	; 1
    155e:	04 9a       	sbi	0x00, 4	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:55
  constexpr auto NVM_STATUS = 0x1006;
  constexpr auto PROD_SIG   = 0x1100;
  constexpr auto PROG_START = 0x800000;

  uint8_t nvm_wait (void) {
    do { UPDI::recv_byte(NVM_STATUS); } while (RXDATA & 3);
    1560:	80 e1       	ldi	r24, 0x10	; 16
    1562:	90 e0       	ldi	r25, 0x00	; 0
    1564:	04 df       	rcall	.-504    	; 0x136e <PDI::idle_clock(unsigned int)>
    1566:	0c 9a       	sbi	0x01, 4	; 1
    1568:	82 e0       	ldi	r24, 0x02	; 2
    156a:	90 e0       	ldi	r25, 0x00	; 0
    156c:	00 df       	rcall	.-512    	; 0x136e <PDI::idle_clock(unsigned int)>
    156e:	0c 98       	cbi	0x01, 4	; 1
    1570:	80 e1       	ldi	r24, 0x10	; 16
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:56
    return RXDATA;
    1572:	90 e0       	ldi	r25, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:57
  }
    1574:	fc de       	rcall	.-520    	; 0x136e <PDI::idle_clock(unsigned int)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:73
    D2PRINTF(" NVM_V3_FLPERW=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x00)
      && UPDI::send_words_block(_dwAddr, _wLength)
      && nvm_ctrl_change(0x05)  /* NVM_V3_CMD_FLPERW */
      && (nvm_wait() & 0x73) == 0
    1576:	1d cf       	rjmp	.-454    	; 0x13b2 <PDI::start_txd()>

00001578 <NVM::V3::nvm_wait()>:
nvm_wait():
    1578:	66 e0       	ldi	r22, 0x06	; 6
    157a:	70 e1       	ldi	r23, 0x10	; 16
    157c:	80 e0       	ldi	r24, 0x00	; 0
    157e:	90 e0       	ldi	r25, 0x00	; 0
    1580:	57 db       	rcall	.-2386   	; 0xc30 <UPDI::recv_byte(unsigned long)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:75
    );
  }
    1582:	8d b3       	in	r24, 0x1d	; 29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:59
  uint8_t nvm_wait (void) {
    do { UPDI::recv_byte(NVM_STATUS); } while (RXDATA & 3);
    return RXDATA;
  }

  bool nvm_ctrl_change (uint8_t _nvmcmd) {
    1584:	83 70       	andi	r24, 0x03	; 3
    1586:	c1 f7       	brne	.-16     	; 0x1578 <NVM::V3::nvm_wait()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:60
    nvm_wait();
    1588:	8d b3       	in	r24, 0x1d	; 29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:61
    if (UPDI::recv_byte(NVM_CTRL) && RXDATA == _nvmcmd) return true;
    158a:	08 95       	ret

0000158c <NVM::V3::write_eeprom(unsigned long, unsigned int) [clone .part.3]>:
_ZN3NVM2V317write_words_flashEmj.part.1():
    158c:	f5 df       	rcall	.-22     	; 0x1578 <NVM::V3::nvm_wait()>
    158e:	98 2f       	mov	r25, r24
    1590:	93 77       	andi	r25, 0x73	; 115
    1592:	81 e0       	ldi	r24, 0x01	; 1
    1594:	09 f0       	breq	.+2      	; 0x1598 <NVM::V3::write_eeprom(unsigned long, unsigned int) [clone .part.3]+0xc>
    1596:	80 e0       	ldi	r24, 0x00	; 0
    1598:	08 95       	ret

0000159a <NVM::V3::nvm_ctrl_change(unsigned char)>:
nvm_ctrl_change():
    159a:	cf 93       	push	r28
    159c:	c8 2f       	mov	r28, r24
    159e:	ec df       	rcall	.-40     	; 0x1578 <NVM::V3::nvm_wait()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:65
    if (!UPDI::nvm_ctrl(0x00)) return false;
    if (0 != _nvmcmd) return UPDI::nvm_ctrl(_nvmcmd);
    return true;
  }
    15a0:	60 e0       	ldi	r22, 0x00	; 0
    15a2:	70 e1       	ldi	r23, 0x10	; 16
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:62
  }

  bool nvm_ctrl_change (uint8_t _nvmcmd) {
    nvm_wait();
    if (UPDI::recv_byte(NVM_CTRL) && RXDATA == _nvmcmd) return true;
    if (!UPDI::nvm_ctrl(0x00)) return false;
    15a4:	80 e0       	ldi	r24, 0x00	; 0
    15a6:	90 e0       	ldi	r25, 0x00	; 0
    15a8:	43 db       	rcall	.-2426   	; 0xc30 <UPDI::recv_byte(unsigned long)>
    15aa:	88 23       	and	r24, r24
    15ac:	31 f0       	breq	.+12     	; 0x15ba <NVM::V3::nvm_ctrl_change(unsigned char)+0x20>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:65

  bool nvm_ctrl_change (uint8_t _nvmcmd) {
    nvm_wait();
    if (UPDI::recv_byte(NVM_CTRL) && RXDATA == _nvmcmd) return true;
    if (!UPDI::nvm_ctrl(0x00)) return false;
    if (0 != _nvmcmd) return UPDI::nvm_ctrl(_nvmcmd);
    15ae:	8d b3       	in	r24, 0x1d	; 29
    15b0:	8c 13       	cpse	r24, r28
    15b2:	03 c0       	rjmp	.+6      	; 0x15ba <NVM::V3::nvm_ctrl_change(unsigned char)+0x20>
    if (0 != _nvmcmd) return UPDI::nvm_ctrl(_nvmcmd);
    return true;
  }
    15b4:	81 e0       	ldi	r24, 0x01	; 1
    15b6:	cf 91       	pop	r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:116
      && nvm_ctrl_change(0x00)
    );
  }

  size_t prog_init (void) {
    return nvm_ctrl_change(0x00);
    15b8:	08 95       	ret
    15ba:	80 e0       	ldi	r24, 0x00	; 0
    15bc:	ae db       	rcall	.-2212   	; 0xd1a <UPDI::nvm_ctrl(unsigned char)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:117
  }
    15be:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:78
    D2PRINTF(" NVM_V4_FLPER=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x08)   /* NVM_V4_CMD_FLPER */
      && UPDI::send_byte(_dwAddr, 0xFF)
      && (nvm_wait() & 0x73) == 0
      && nvm_ctrl_change(0x00)
    15c0:	d1 f3       	breq	.-12     	; 0x15b6 <NVM::V3::nvm_ctrl_change(unsigned char)+0x1c>
    15c2:	cc 23       	and	r28, r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:98
      && (nvm_wait() & 0x73) == 0
    );
  }

  size_t prog_init (void) {
    nvm_ctrl_change(0x0F);      /* NVM_V3_CMD_FLPBCLR */
    15c4:	b9 f3       	breq	.-18     	; 0x15b4 <NVM::V3::nvm_ctrl_change(unsigned char)+0x1a>
    15c6:	8c 2f       	mov	r24, r28
    15c8:	cf 91       	pop	r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:99
    nvm_ctrl_change(0x1F);      /* NVM_V3_CMD_EEPBCLR */
    15ca:	a7 cb       	rjmp	.-2226   	; 0xd1a <UPDI::nvm_ctrl(unsigned char)>

000015cc <NVM::V4::prog_init()>:
prog_init():
    15cc:	80 e0       	ldi	r24, 0x00	; 0
    15ce:	e5 df       	rcall	.-54     	; 0x159a <NVM::V3::nvm_ctrl_change(unsigned char)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:100
    return nvm_ctrl_change(0x00);
    15d0:	90 e0       	ldi	r25, 0x00	; 0
    15d2:	08 95       	ret

000015d4 <NVM::V4::write_eeprom(unsigned long, unsigned int) [clone .part.5]>:
_ZN3NVM2V416erase_flash_pageEm.part.1():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:101
  }
    15d4:	80 e0       	ldi	r24, 0x00	; 0
    15d6:	e1 cf       	rjmp	.-62     	; 0x159a <NVM::V3::nvm_ctrl_change(unsigned char)>

000015d8 <NVM::V3::prog_init()>:
prog_init():
    15d8:	8f e0       	ldi	r24, 0x0F	; 15
    15da:	df df       	rcall	.-66     	; 0x159a <NVM::V3::nvm_ctrl_change(unsigned char)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:77
      && nvm_ctrl_change(0x05)  /* NVM_V3_CMD_FLPERW */
      && (nvm_wait() & 0x73) == 0
    );
  }

  bool write_bytes_flash (uint32_t _dwAddr, size_t _wLength) {
    15dc:	8f e1       	ldi	r24, 0x1F	; 31
    15de:	dd df       	rcall	.-70     	; 0x159a <NVM::V3::nvm_ctrl_change(unsigned char)>
    15e0:	80 e0       	ldi	r24, 0x00	; 0
    15e2:	db df       	rcall	.-74     	; 0x159a <NVM::V3::nvm_ctrl_change(unsigned char)>
    15e4:	90 e0       	ldi	r25, 0x00	; 0
    15e6:	08 95       	ret

000015e8 <NVM::V5::prog_init()>:
_ZN3NVM2V59prog_initEv():
    15e8:	f7 cf       	rjmp	.-18     	; 0x15d8 <NVM::V3::prog_init()>

000015ea <NVM::V3::write_bytes_flash(unsigned long, unsigned int)>:
write_bytes_flash():
    15ea:	cf 92       	push	r12
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:80
    D2PRINTF(" NVM_V3_FLPERW=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x00)
    15ec:	df 92       	push	r13
    15ee:	ef 92       	push	r14
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:83
      && UPDI::send_bytes_block(_dwAddr, _wLength)
      && nvm_ctrl_change(0x05)  /* NVM_V3_CMD_FLPERW */
      && (nvm_wait() & 0x73) == 0
    15f0:	ff 92       	push	r15
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:81

  bool write_bytes_flash (uint32_t _dwAddr, size_t _wLength) {
    D2PRINTF(" NVM_V3_FLPERW=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x00)
      && UPDI::send_bytes_block(_dwAddr, _wLength)
    15f2:	cf 93       	push	r28
    15f4:	df 93       	push	r29
    15f6:	6b 01       	movw	r12, r22
    15f8:	7c 01       	movw	r14, r24
    15fa:	ea 01       	movw	r28, r20
    15fc:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:82
      && nvm_ctrl_change(0x05)  /* NVM_V3_CMD_FLPERW */
    15fe:	cd df       	rcall	.-102    	; 0x159a <NVM::V3::nvm_ctrl_change(unsigned char)>
    1600:	88 23       	and	r24, r24
    1602:	89 f0       	breq	.+34     	; 0x1626 <NVM::V3::write_bytes_flash(unsigned long, unsigned int)+0x3c>
    1604:	ae 01       	movw	r20, r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:85
      && (nvm_wait() & 0x73) == 0
    );
  }
    1606:	c7 01       	movw	r24, r14
    1608:	b6 01       	movw	r22, r12
    160a:	b7 db       	rcall	.-2194   	; 0xd7a <UPDI::send_bytes_block(unsigned long, unsigned int)>
    160c:	88 23       	and	r24, r24
    160e:	59 f0       	breq	.+22     	; 0x1626 <NVM::V3::write_bytes_flash(unsigned long, unsigned int)+0x3c>
    1610:	85 e0       	ldi	r24, 0x05	; 5
    1612:	c3 df       	rcall	.-122    	; 0x159a <NVM::V3::nvm_ctrl_change(unsigned char)>
    1614:	88 23       	and	r24, r24
    1616:	39 f0       	breq	.+14     	; 0x1626 <NVM::V3::write_bytes_flash(unsigned long, unsigned int)+0x3c>
    1618:	df 91       	pop	r29
    161a:	cf 91       	pop	r28
    161c:	ff 90       	pop	r15
    161e:	ef 90       	pop	r14
    1620:	df 90       	pop	r13
    1622:	cf 90       	pop	r12
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:67
    if (!UPDI::nvm_ctrl(0x00)) return false;
    if (0 != _nvmcmd) return UPDI::nvm_ctrl(_nvmcmd);
    return true;
  }

  bool write_words_flash (uint32_t _dwAddr, size_t _wLength) {
    1624:	b3 cf       	rjmp	.-154    	; 0x158c <NVM::V3::write_eeprom(unsigned long, unsigned int) [clone .part.3]>
    1626:	80 e0       	ldi	r24, 0x00	; 0
    1628:	df 91       	pop	r29
    162a:	cf 91       	pop	r28
    162c:	ff 90       	pop	r15
    162e:	ef 90       	pop	r14
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:70
    D2PRINTF(" NVM_V3_FLPERW=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x00)
    1630:	df 90       	pop	r13
    1632:	cf 90       	pop	r12
    1634:	08 95       	ret

00001636 <NVM::V3::write_words_flash(unsigned long, unsigned int)>:
write_words_flash():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:73
      && UPDI::send_words_block(_dwAddr, _wLength)
      && nvm_ctrl_change(0x05)  /* NVM_V3_CMD_FLPERW */
      && (nvm_wait() & 0x73) == 0
    1636:	cf 92       	push	r12
    1638:	df 92       	push	r13
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:71

  bool write_words_flash (uint32_t _dwAddr, size_t _wLength) {
    D2PRINTF(" NVM_V3_FLPERW=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x00)
      && UPDI::send_words_block(_dwAddr, _wLength)
    163a:	ef 92       	push	r14
    163c:	ff 92       	push	r15
    163e:	cf 93       	push	r28
    1640:	df 93       	push	r29
    1642:	6b 01       	movw	r12, r22
    1644:	7c 01       	movw	r14, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:72
      && nvm_ctrl_change(0x05)  /* NVM_V3_CMD_FLPERW */
    1646:	ea 01       	movw	r28, r20
    1648:	80 e0       	ldi	r24, 0x00	; 0
    164a:	a7 df       	rcall	.-178    	; 0x159a <NVM::V3::nvm_ctrl_change(unsigned char)>
    164c:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:75
      && (nvm_wait() & 0x73) == 0
    );
  }
    164e:	89 f0       	breq	.+34     	; 0x1672 <NVM::V3::write_words_flash(unsigned long, unsigned int)+0x3c>
    1650:	ae 01       	movw	r20, r28
    1652:	c7 01       	movw	r24, r14
    1654:	b6 01       	movw	r22, r12
    1656:	06 db       	rcall	.-2548   	; 0xc64 <UPDI::send_words_block(unsigned long, unsigned int)>
    1658:	88 23       	and	r24, r24
    165a:	59 f0       	breq	.+22     	; 0x1672 <NVM::V3::write_words_flash(unsigned long, unsigned int)+0x3c>
    165c:	85 e0       	ldi	r24, 0x05	; 5
    165e:	9d df       	rcall	.-198    	; 0x159a <NVM::V3::nvm_ctrl_change(unsigned char)>
    1660:	88 23       	and	r24, r24
    1662:	39 f0       	breq	.+14     	; 0x1672 <NVM::V3::write_words_flash(unsigned long, unsigned int)+0x3c>
    1664:	df 91       	pop	r29
    1666:	cf 91       	pop	r28
    1668:	ff 90       	pop	r15
    166a:	ef 90       	pop	r14
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:72
    if (!UPDI::nvm_ctrl(0x00)) return false;
    if (0 != _nvmcmd) return UPDI::nvm_ctrl(_nvmcmd);
    return true;
  }

  bool erase_flash_page (uint32_t _dwAddr) {
    166c:	df 90       	pop	r13
    166e:	cf 90       	pop	r12
    1670:	8d cf       	rjmp	.-230    	; 0x158c <NVM::V3::write_eeprom(unsigned long, unsigned int) [clone .part.3]>
    1672:	80 e0       	ldi	r24, 0x00	; 0
    1674:	df 91       	pop	r29
    1676:	cf 91       	pop	r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:75
    D2PRINTF(" NVM_V4_FLPER=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x08)   /* NVM_V4_CMD_FLPER */
    1678:	ff 90       	pop	r15
    167a:	ef 90       	pop	r14
    167c:	df 90       	pop	r13
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:78
      && UPDI::send_byte(_dwAddr, 0xFF)
      && (nvm_wait() & 0x73) == 0
      && nvm_ctrl_change(0x00)
    167e:	cf 90       	pop	r12
    1680:	08 95       	ret

00001682 <NVM::V4::erase_flash_page(unsigned long)>:
erase_flash_page():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:76

  bool erase_flash_page (uint32_t _dwAddr) {
    D2PRINTF(" NVM_V4_FLPER=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x08)   /* NVM_V4_CMD_FLPER */
      && UPDI::send_byte(_dwAddr, 0xFF)
    1682:	cf 92       	push	r12
    1684:	df 92       	push	r13
    1686:	ef 92       	push	r14
    1688:	ff 92       	push	r15
    168a:	6b 01       	movw	r12, r22
    168c:	7c 01       	movw	r14, r24
    168e:	88 e0       	ldi	r24, 0x08	; 8
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:77
      && (nvm_wait() & 0x73) == 0
    1690:	84 df       	rcall	.-248    	; 0x159a <NVM::V3::nvm_ctrl_change(unsigned char)>
    1692:	88 23       	and	r24, r24
    1694:	71 f0       	breq	.+28     	; 0x16b2 <NVM::V4::erase_flash_page(unsigned long)+0x30>
    1696:	4f ef       	ldi	r20, 0xFF	; 255
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:80
      && nvm_ctrl_change(0x00)
    );
  }
    1698:	c7 01       	movw	r24, r14
    169a:	b6 01       	movw	r22, r12
    169c:	21 db       	rcall	.-2494   	; 0xce0 <UPDI::send_byte(unsigned long, unsigned char)>
    169e:	88 23       	and	r24, r24
    16a0:	41 f0       	breq	.+16     	; 0x16b2 <NVM::V4::erase_flash_page(unsigned long)+0x30>
    16a2:	6a df       	rcall	.-300    	; 0x1578 <NVM::V3::nvm_wait()>
    16a4:	83 77       	andi	r24, 0x73	; 115
    16a6:	29 f4       	brne	.+10     	; 0x16b2 <NVM::V4::erase_flash_page(unsigned long)+0x30>
    16a8:	ff 90       	pop	r15
    16aa:	ef 90       	pop	r14
    16ac:	df 90       	pop	r13
    16ae:	cf 90       	pop	r12
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:62
  constexpr auto NVM_STATUS = 0x1002;
  constexpr auto NVM_DATA   = 0x1006;
  constexpr auto PROD_SIG   = 0x1100;

  uint8_t nvm_wait (void) {
    do { UPDI::recv_byte(NVM_STATUS); } while (RXDATA & 3);
    16b0:	91 cf       	rjmp	.-222    	; 0x15d4 <NVM::V4::write_eeprom(unsigned long, unsigned int) [clone .part.5]>
    16b2:	80 e0       	ldi	r24, 0x00	; 0
    16b4:	ff 90       	pop	r15
    16b6:	ef 90       	pop	r14
    16b8:	df 90       	pop	r13
    16ba:	cf 90       	pop	r12
    16bc:	08 95       	ret

000016be <NVM::V0::nvm_wait()>:
nvm_wait():
    16be:	62 e0       	ldi	r22, 0x02	; 2
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:63
    return RXDATA;
    16c0:	70 e1       	ldi	r23, 0x10	; 16
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:64
  }
    16c2:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:108
      && (nvm_wait() & 7) == 0
    );
  }

  size_t prog_init (void) {
    nvm_wait();
    16c4:	90 e0       	ldi	r25, 0x00	; 0
    16c6:	b4 da       	rcall	.-2712   	; 0xc30 <UPDI::recv_byte(unsigned long)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:109
    UPDI::nvm_ctrl(0x04);         /* NVM_CMD_PBC */
    16c8:	8d b3       	in	r24, 0x1d	; 29
    16ca:	83 70       	andi	r24, 0x03	; 3
    16cc:	c1 f7       	brne	.-16     	; 0x16be <NVM::V0::nvm_wait()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:110
    nvm_wait();
    16ce:	8d b3       	in	r24, 0x1d	; 29
    16d0:	08 95       	ret

000016d2 <NVM::V0::prog_init()>:
prog_init():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:111
    return UPDI::nvm_ctrl(0x00);
    16d2:	f5 df       	rcall	.-22     	; 0x16be <NVM::V0::nvm_wait()>
    16d4:	84 e0       	ldi	r24, 0x04	; 4
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:112
  }
    16d6:	21 db       	rcall	.-2494   	; 0xd1a <UPDI::nvm_ctrl(unsigned char)>
    16d8:	f2 df       	rcall	.-28     	; 0x16be <NVM::V0::nvm_wait()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:61
  uint8_t nvm_wait (void) {
    do { UPDI::recv_byte(NVM_STATUS); } while (RXDATA & 3);
    return RXDATA;
  }

  bool nvm_ctrl_change (uint8_t _nvmcmd) {
    16da:	80 e0       	ldi	r24, 0x00	; 0
    16dc:	1e db       	rcall	.-2500   	; 0xd1a <UPDI::nvm_ctrl(unsigned char)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:62
    nvm_wait();
    16de:	90 e0       	ldi	r25, 0x00	; 0
    16e0:	08 95       	ret

000016e2 <NVM::V2::nvm_ctrl_change(unsigned char)>:
nvm_ctrl_change():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:63
    if (UPDI::recv_byte(NVM_CTRL) && RXDATA == _nvmcmd) return true;
    16e2:	cf 93       	push	r28
    16e4:	c8 2f       	mov	r28, r24
    16e6:	eb df       	rcall	.-42     	; 0x16be <NVM::V0::nvm_wait()>
    16e8:	60 e0       	ldi	r22, 0x00	; 0
    16ea:	70 e1       	ldi	r23, 0x10	; 16
    16ec:	80 e0       	ldi	r24, 0x00	; 0
    16ee:	90 e0       	ldi	r25, 0x00	; 0
    16f0:	9f da       	rcall	.-2754   	; 0xc30 <UPDI::recv_byte(unsigned long)>
    16f2:	88 23       	and	r24, r24
    16f4:	31 f0       	breq	.+12     	; 0x1702 <NVM::V2::nvm_ctrl_change(unsigned char)+0x20>
    16f6:	8d b3       	in	r24, 0x1d	; 29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:67
    if (!UPDI::nvm_ctrl(0x00)) return false;
    if (0 != _nvmcmd) return UPDI::nvm_ctrl(_nvmcmd);
    return true;
  }
    16f8:	8c 13       	cpse	r24, r28
    16fa:	03 c0       	rjmp	.+6      	; 0x1702 <NVM::V2::nvm_ctrl_change(unsigned char)+0x20>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:64
  }

  bool nvm_ctrl_change (uint8_t _nvmcmd) {
    nvm_wait();
    if (UPDI::recv_byte(NVM_CTRL) && RXDATA == _nvmcmd) return true;
    if (!UPDI::nvm_ctrl(0x00)) return false;
    16fc:	81 e0       	ldi	r24, 0x01	; 1
    16fe:	cf 91       	pop	r28
    1700:	08 95       	ret
    1702:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:65
    if (0 != _nvmcmd) return UPDI::nvm_ctrl(_nvmcmd);
    1704:	0a db       	rcall	.-2540   	; 0xd1a <UPDI::nvm_ctrl(unsigned char)>
    1706:	88 23       	and	r24, r24
    1708:	d1 f3       	breq	.-12     	; 0x16fe <NVM::V2::nvm_ctrl_change(unsigned char)+0x1c>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:67
    return true;
  }
    170a:	cc 23       	and	r28, r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:65

  bool nvm_ctrl_change (uint8_t _nvmcmd) {
    nvm_wait();
    if (UPDI::recv_byte(NVM_CTRL) && RXDATA == _nvmcmd) return true;
    if (!UPDI::nvm_ctrl(0x00)) return false;
    if (0 != _nvmcmd) return UPDI::nvm_ctrl(_nvmcmd);
    170c:	b9 f3       	breq	.-18     	; 0x16fc <NVM::V2::nvm_ctrl_change(unsigned char)+0x1a>
    170e:	8c 2f       	mov	r24, r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:113
      && nvm_ctrl_change(0x00)
    );
  }

  size_t prog_init (void) {
    return nvm_ctrl_change(0x00);
    1710:	cf 91       	pop	r28
    1712:	03 cb       	rjmp	.-2554   	; 0xd1a <UPDI::nvm_ctrl(unsigned char)>

00001714 <NVM::V2::prog_init()>:
prog_init():
    1714:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:114
  }
    1716:	e5 df       	rcall	.-54     	; 0x16e2 <NVM::V2::nvm_ctrl_change(unsigned char)>
    1718:	90 e0       	ldi	r25, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:75
    D2PRINTF(" NVM_V2_FLPER=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x08)   /* NVM_V2_CMD_FLPER */
      && UPDI::send_byte(_dwAddr, 0xFF)
      && (nvm_wait() & 0x73) == 0
      && nvm_ctrl_change(0x00)
    171a:	08 95       	ret

0000171c <NVM::V2::write_eeprom(unsigned long, unsigned int) [clone .part.5]>:
_ZN3NVM2V216erase_flash_pageEm.part.1():
    171c:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:69
    if (!UPDI::nvm_ctrl(0x00)) return false;
    if (0 != _nvmcmd) return UPDI::nvm_ctrl(_nvmcmd);
    return true;
  }

  bool erase_flash_page (uint32_t _dwAddr) {
    171e:	e1 cf       	rjmp	.-62     	; 0x16e2 <NVM::V2::nvm_ctrl_change(unsigned char)>

00001720 <NVM::V2::erase_flash_page(unsigned long)>:
erase_flash_page():
    1720:	cf 92       	push	r12
    1722:	df 92       	push	r13
    1724:	ef 92       	push	r14
    1726:	ff 92       	push	r15
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:72
    D2PRINTF(" NVM_V2_FLPER=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x08)   /* NVM_V2_CMD_FLPER */
    1728:	6b 01       	movw	r12, r22
    172a:	7c 01       	movw	r14, r24
    172c:	88 e0       	ldi	r24, 0x08	; 8
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:75
      && UPDI::send_byte(_dwAddr, 0xFF)
      && (nvm_wait() & 0x73) == 0
      && nvm_ctrl_change(0x00)
    172e:	d9 df       	rcall	.-78     	; 0x16e2 <NVM::V2::nvm_ctrl_change(unsigned char)>
    1730:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:73

  bool erase_flash_page (uint32_t _dwAddr) {
    D2PRINTF(" NVM_V2_FLPER=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x08)   /* NVM_V2_CMD_FLPER */
      && UPDI::send_byte(_dwAddr, 0xFF)
    1732:	71 f0       	breq	.+28     	; 0x1750 <NVM::V2::erase_flash_page(unsigned long)+0x30>
    1734:	4f ef       	ldi	r20, 0xFF	; 255
    1736:	c7 01       	movw	r24, r14
    1738:	b6 01       	movw	r22, r12
    173a:	d2 da       	rcall	.-2652   	; 0xce0 <UPDI::send_byte(unsigned long, unsigned char)>
    173c:	88 23       	and	r24, r24
    173e:	41 f0       	breq	.+16     	; 0x1750 <NVM::V2::erase_flash_page(unsigned long)+0x30>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:74
      && (nvm_wait() & 0x73) == 0
    1740:	be df       	rcall	.-132    	; 0x16be <NVM::V0::nvm_wait()>
    1742:	83 77       	andi	r24, 0x73	; 115
    1744:	29 f4       	brne	.+10     	; 0x1750 <NVM::V2::erase_flash_page(unsigned long)+0x30>
    1746:	ff 90       	pop	r15
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:77
      && nvm_ctrl_change(0x00)
    );
  }
    1748:	ef 90       	pop	r14
    174a:	df 90       	pop	r13
    174c:	cf 90       	pop	r12
    174e:	e6 cf       	rjmp	.-52     	; 0x171c <NVM::V2::write_eeprom(unsigned long, unsigned int) [clone .part.5]>
    1750:	80 e0       	ldi	r24, 0x00	; 0
    1752:	ff 90       	pop	r15
    1754:	ef 90       	pop	r14
    1756:	df 90       	pop	r13
    1758:	cf 90       	pop	r12
    175a:	08 95       	ret

0000175c <NVM::V1::write_memory()>:
_ZN3NVM2V112write_memoryEv():
    175c:	90 e0       	ldi	r25, 0x00	; 0
    175e:	80 e0       	ldi	r24, 0x00	; 0
    1760:	08 95       	ret

00001762 <NVM::V1::read_memory()>:
_ZN3NVM2V111read_memoryEv():
    1762:	90 e0       	ldi	r25, 0x00	; 0
    1764:	80 e0       	ldi	r24, 0x00	; 0
    1766:	08 95       	ret

00001768 <NVM::V1::erase_memory()>:
_ZN3NVM2V112erase_memoryEv():
    1768:	90 e0       	ldi	r25, 0x00	; 0
    176a:	80 e0       	ldi	r24, 0x00	; 0
    176c:	08 95       	ret

0000176e <Print::write(char)>:
write():
    176e:	dc 01       	movw	r26, r24
    1770:	ed 91       	ld	r30, X+
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/Print.h:58

  virtual size_t write (uint8_t) = 0;

  /* Value and Strings */

  inline size_t write (const char _c) { return write((uint8_t) _c); }
    1772:	fc 91       	ld	r31, X
    1774:	01 90       	ld	r0, Z+
    1776:	f0 81       	ld	r31, Z
    1778:	e0 2d       	mov	r30, r0
    177a:	09 94       	ijmp

0000177c <Print::printHex(void const*, unsigned int, char, unsigned int, char const*) [clone .constprop.14]>:
printHex():
    177c:	cf 92       	push	r12
    177e:	df 92       	push	r13
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/Print_puts.cpp:85
    }
  }
  return *this;
}

Print& Print::printHex (const void* _source, size_t _length, char _separator, size_t _wrap, const char* _split) {
    1780:	ef 92       	push	r14
    1782:	ff 92       	push	r15
    1784:	0f 93       	push	r16
    1786:	1f 93       	push	r17
    1788:	cf 93       	push	r28
    178a:	df 93       	push	r29
    178c:	7c 01       	movw	r14, r24
    178e:	10 e0       	ldi	r17, 0x00	; 0
    1790:	00 e0       	ldi	r16, 0x00	; 0
_print_hex():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/Print_puts.cpp:72
uint8_t _read (uint32_t _addr, bool _prog) {
  return _prog ? pgm_read_byte(_addr) : *((uint8_t*)_addr);
}

Print& Print::_print_hex (Print_OPT_HEX_t p) {
  size_t _count = 0;
    1792:	6b 01       	movw	r12, r22
    1794:	81 e0       	ldi	r24, 0x01	; 1
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/Print_puts.cpp:73
  while (p.length--) {
    1796:	c8 1a       	sub	r12, r24
    1798:	d1 08       	sbc	r13, r1
    179a:	67 2b       	or	r22, r23
    179c:	91 f1       	breq	.+100    	; 0x1802 <Print::printHex(void const*, unsigned int, char, unsigned int, char const*) [clone .constprop.14]+0x86>
_read():
    179e:	f7 01       	movw	r30, r14
    17a0:	c1 91       	ld	r28, Z+
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/Print_puts.cpp:68
/*
 * Hex Dump
 */

uint8_t _read (uint32_t _addr, bool _prog) {
  return _prog ? pgm_read_byte(_addr) : *((uint8_t*)_addr);
    17a2:	7f 01       	movw	r14, r30
_print_hex():
    17a4:	8c 2f       	mov	r24, r28
    17a6:	82 95       	swap	r24
btoh():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/Print_puts.cpp:75

Print& Print::_print_hex (Print_OPT_HEX_t p) {
  size_t _count = 0;
  while (p.length--) {
    uint8_t _c = _read(p.addr++, p.prog);
    write(btoh(__builtin_avr_swap(_c)));
    17a8:	8f 70       	andi	r24, 0x0F	; 15
    17aa:	60 e3       	ldi	r22, 0x30	; 48
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/btools.cpp:69
    _p++; _r--;
  }
}

char btoh (uint8_t _x) {
  _x = (_x & 15) + '0';
    17ac:	68 0f       	add	r22, r24
    17ae:	6a 33       	cpi	r22, 0x3A	; 58
    17b0:	10 f0       	brcs	.+4      	; 0x17b6 <Print::printHex(void const*, unsigned int, char, unsigned int, char const*) [clone .constprop.14]+0x3a>
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/btools.cpp:70
  if (_x > '9') _x += 7;
    17b2:	67 e3       	ldi	r22, 0x37	; 55
    17b4:	68 0f       	add	r22, r24
_print_hex():
    17b6:	83 eb       	ldi	r24, 0xB3	; 179
    17b8:	90 e6       	ldi	r25, 0x60	; 96
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/Print_puts.cpp:75
    17ba:	d9 df       	rcall	.-78     	; 0x176e <Print::write(char)>
btoh():
    17bc:	cf 70       	andi	r28, 0x0F	; 15
    17be:	60 e3       	ldi	r22, 0x30	; 48
    17c0:	6c 0f       	add	r22, r28
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/btools.cpp:69
    _p++; _r--;
  }
}

char btoh (uint8_t _x) {
  _x = (_x & 15) + '0';
    17c2:	6a 33       	cpi	r22, 0x3A	; 58
    17c4:	10 f0       	brcs	.+4      	; 0x17ca <Print::printHex(void const*, unsigned int, char, unsigned int, char const*) [clone .constprop.14]+0x4e>
    17c6:	67 e3       	ldi	r22, 0x37	; 55
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/btools.cpp:70
  if (_x > '9') _x += 7;
    17c8:	6c 0f       	add	r22, r28
_print_hex():
    17ca:	83 eb       	ldi	r24, 0xB3	; 179
    17cc:	90 e6       	ldi	r25, 0x60	; 96
    17ce:	cf df       	rcall	.-98     	; 0x176e <Print::write(char)>
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/Print_puts.cpp:76
    write(btoh(_c));
    17d0:	c1 14       	cp	r12, r1
    17d2:	d1 04       	cpc	r13, r1
    17d4:	79 f0       	breq	.+30     	; 0x17f4 <Print::printHex(void const*, unsigned int, char, unsigned int, char const*) [clone .constprop.14]+0x78>
    17d6:	0f 5f       	subi	r16, 0xFF	; 255
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/Print_puts.cpp:77
    if (p.length) {
    17d8:	1f 4f       	sbci	r17, 0xFF	; 255
    17da:	71 f4       	brne	.+28     	; 0x17f8 <Print::printHex(void const*, unsigned int, char, unsigned int, char const*) [clone .constprop.14]+0x7c>
    17dc:	c6 ea       	ldi	r28, 0xA6	; 166
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/Print_puts.cpp:78
      if (++_count == p.wrap) { puts(p.split); _count -= p.wrap; }
    17de:	d0 e6       	ldi	r29, 0x60	; 96
puts():
    17e0:	69 91       	ld	r22, Y+
    17e2:	66 23       	and	r22, r22
    17e4:	39 f0       	breq	.+14     	; 0x17f4 <Print::printHex(void const*, unsigned int, char, unsigned int, char const*) [clone .constprop.14]+0x78>
    17e6:	83 eb       	ldi	r24, 0xB3	; 179
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/Print_puts.cpp:35

size_t Print::puts (const char _str[]) {
  char _c;
  size_t _n = 0;
  char* _p = (char *) _str;
  while ((_c = *_p++)) {
    17e8:	90 e6       	ldi	r25, 0x60	; 96
    17ea:	c1 df       	rcall	.-126    	; 0x176e <Print::write(char)>
    17ec:	89 2b       	or	r24, r25
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/Print_puts.cpp:36
    if (write(_c)) _n++;
    17ee:	c1 f7       	brne	.-16     	; 0x17e0 <Print::printHex(void const*, unsigned int, char, unsigned int, char const*) [clone .constprop.14]+0x64>
printHex():
    17f0:	10 e0       	ldi	r17, 0x00	; 0
    17f2:	00 e0       	ldi	r16, 0x00	; 0
    17f4:	b6 01       	movw	r22, r12
    17f6:	cd cf       	rjmp	.-102    	; 0x1792 <Print::printHex(void const*, unsigned int, char, unsigned int, char const*) [clone .constprop.14]+0x16>
_print_hex():
    17f8:	6a e3       	ldi	r22, 0x3A	; 58
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/Print_puts.cpp:78
  while (p.length--) {
    uint8_t _c = _read(p.addr++, p.prog);
    write(btoh(__builtin_avr_swap(_c)));
    write(btoh(_c));
    if (p.length) {
      if (++_count == p.wrap) { puts(p.split); _count -= p.wrap; }
    17fa:	83 eb       	ldi	r24, 0xB3	; 179
    17fc:	90 e6       	ldi	r25, 0x60	; 96
    17fe:	b7 df       	rcall	.-146    	; 0x176e <Print::write(char)>
    1800:	f9 cf       	rjmp	.-14     	; 0x17f4 <Print::printHex(void const*, unsigned int, char, unsigned int, char const*) [clone .constprop.14]+0x78>
printHex():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/Print_puts.cpp:79
      else if (p.sep) write(p.sep);
    1802:	83 eb       	ldi	r24, 0xB3	; 179
    1804:	90 e6       	ldi	r25, 0x60	; 96
    1806:	df 91       	pop	r29
    1808:	cf 91       	pop	r28
    180a:	1f 91       	pop	r17
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/Print_puts.cpp:95
  , _wrap
  , _separator
  , false
  };
  return _print_hex(p);
}
    180c:	0f 91       	pop	r16
    180e:	ff 90       	pop	r15
    1810:	ef 90       	pop	r14
    1812:	df 90       	pop	r13
    1814:	cf 90       	pop	r12
    1816:	08 95       	ret

00001818 <Print::ln()>:
ln():
    1818:	cf 93       	push	r28
    181a:	df 93       	push	r29
    181c:	ec 01       	movw	r28, r24
    181e:	6d e0       	ldi	r22, 0x0D	; 13
    1820:	a6 df       	rcall	.-180    	; 0x176e <Print::write(char)>
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/Print.h:73
  size_t puts (const char _str[]);
  size_t puts (const PGM_t _str[]);

  /* Support */

  inline Print& ln (void) { write('\r'); write('\n'); return *this; }
    1822:	6a e0       	ldi	r22, 0x0A	; 10
    1824:	ce 01       	movw	r24, r28
    1826:	a3 df       	rcall	.-186    	; 0x176e <Print::write(char)>
    1828:	ce 01       	movw	r24, r28
    182a:	df 91       	pop	r29
    182c:	cf 91       	pop	r28
    182e:	08 95       	ret

00001830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>:
printf():
    1830:	cf 93       	push	r28
    1832:	df 93       	push	r29
    1834:	cd b7       	in	r28, 0x3d	; 61
    1836:	de b7       	in	r29, 0x3e	; 62
    1838:	2e 97       	sbiw	r28, 0x0e	; 14
    183a:	cd bf       	out	0x3d, r28	; 61
    183c:	de bf       	out	0x3e, r29	; 62
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/Print_format.cpp:35
  va_start(_ap, _format);
  vfprintf(&_fp, _format, _ap);
  return *this;
}

Print& Print::printf (const PGM_t *_format, ...) {
    183e:	8a e0       	ldi	r24, 0x0A	; 10
    1840:	95 e0       	ldi	r25, 0x05	; 5
    1842:	89 87       	std	Y+9, r24	; 0x09
    1844:	9a 87       	std	Y+10, r25	; 0x0a
    1846:	1b 86       	std	Y+11, r1	; 0x0b
    1848:	1c 86       	std	Y+12, r1	; 0x0c
    184a:	82 e0       	ldi	r24, 0x02	; 2
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/Print_format.cpp:38
  FILE _fp;
  va_list _ap;
  fdev_setup_stream(&_fp, printf_putchar, NULL, _FDEV_SETUP_WRITE);
    184c:	8c 83       	std	Y+4, r24	; 0x04
    184e:	83 eb       	ldi	r24, 0xB3	; 179
    1850:	90 e6       	ldi	r25, 0x60	; 96
    1852:	8d 87       	std	Y+13, r24	; 0x0d
    1854:	9e 87       	std	Y+14, r25	; 0x0e
    1856:	ae 01       	movw	r20, r28
    1858:	49 5e       	subi	r20, 0xE9	; 233
    185a:	5f 4f       	sbci	r21, 0xFF	; 255
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/Print_format.cpp:39
  fdev_set_udata(&_fp, this);
    185c:	6d 89       	ldd	r22, Y+21	; 0x15
    185e:	7e 89       	ldd	r23, Y+22	; 0x16
    1860:	ce 01       	movw	r24, r28
    1862:	01 96       	adiw	r24, 0x01	; 1
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/Print_format.cpp:41
  va_start(_ap, _format);
  vfprintf_P(&_fp, (const char *) _format, _ap);
    1864:	0e 94 1a 27 	call	0x4e34	; 0x4e34 <vfprintf_P>
    1868:	83 eb       	ldi	r24, 0xB3	; 179
    186a:	90 e6       	ldi	r25, 0x60	; 96
    186c:	2e 96       	adiw	r28, 0x0e	; 14
    186e:	cd bf       	out	0x3d, r28	; 61
    1870:	de bf       	out	0x3e, r29	; 62
    1872:	df 91       	pop	r29
    1874:	cf 91       	pop	r28
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/Print_format.cpp:43
  return *this;
}
    1876:	08 95       	ret

00001878 <USART::change_vcp()>:
change_vcp():
    1878:	bf 92       	push	r11
    187a:	cf 92       	push	r12
    187c:	df 92       	push	r13
    187e:	ef 92       	push	r14
    1880:	ff 92       	push	r15
    1882:	0f 93       	push	r16
    1884:	1f 93       	push	r17
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:144
    #endif
  }

  /*** Activates VCP operation. ***/
  /* Detailed parameters are specified in SET_LINE_ENCODING. */
  void change_vcp (void) {
    1886:	cf 93       	push	r28
    1888:	df 93       	push	r29
    188a:	00 d0       	rcall	.+0      	; 0x188c <USART::change_vcp()+0x14>
    188c:	00 d0       	rcall	.+0      	; 0x188e <USART::change_vcp()+0x16>
    188e:	cd b7       	in	r28, 0x3d	; 61
    1890:	de b7       	in	r29, 0x3e	; 62
    1892:	c0 90 ac 60 	lds	r12, 0x60AC	; 0x8060ac <_set_line_encoding>
    1896:	d0 90 ad 60 	lds	r13, 0x60AD	; 0x8060ad <_set_line_encoding+0x1>
    189a:	e0 90 ae 60 	lds	r14, 0x60AE	; 0x8060ae <_set_line_encoding+0x2>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:146
    uint8_t _ctrlb = USART_RXEN_bm | USART_TXEN_bm | USART_ODME_bm;
    uint32_t _baud = _set_line_encoding.dwDTERate;
    189e:	f0 90 af 60 	lds	r15, 0x60AF	; 0x8060af <_set_line_encoding+0x3>
    18a2:	c1 14       	cp	r12, r1
    18a4:	d1 04       	cpc	r13, r1
    18a6:	e1 04       	cpc	r14, r1
    18a8:	f1 04       	cpc	r15, r1
    18aa:	d9 f0       	breq	.+54     	; 0x18e2 <USART::change_vcp()+0x6a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:148
    /* If the BAUD value is small, select double speed mode. */
    if (_baud) _baud = (((F_CPU * 8L) / _baud) + 1) >> 1;
    18ac:	60 e0       	ldi	r22, 0x00	; 0
    18ae:	78 e6       	ldi	r23, 0x68	; 104
    18b0:	89 e8       	ldi	r24, 0x89	; 137
    18b2:	99 e0       	ldi	r25, 0x09	; 9
    18b4:	a7 01       	movw	r20, r14
    18b6:	96 01       	movw	r18, r12
    18b8:	0e 94 dc 29 	call	0x53b8	; 0x53b8 <__udivmodsi4>
    18bc:	69 01       	movw	r12, r18
    18be:	7a 01       	movw	r14, r20
    18c0:	8f ef       	ldi	r24, 0xFF	; 255
    18c2:	c8 1a       	sub	r12, r24
    18c4:	d8 0a       	sbc	r13, r24
    18c6:	e8 0a       	sbc	r14, r24
    18c8:	f8 0a       	sbc	r15, r24
    18ca:	f6 94       	lsr	r15
    18cc:	e7 94       	ror	r14
    18ce:	d7 94       	ror	r13
    18d0:	c7 94       	ror	r12
    18d2:	88 ec       	ldi	r24, 0xC8	; 200
    18d4:	b8 2e       	mov	r11, r24
    18d6:	90 e6       	ldi	r25, 0x60	; 96
    18d8:	c9 16       	cp	r12, r25
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:145
  }

  /*** Activates VCP operation. ***/
  /* Detailed parameters are specified in SET_LINE_ENCODING. */
  void change_vcp (void) {
    uint8_t _ctrlb = USART_RXEN_bm | USART_TXEN_bm | USART_ODME_bm;
    18da:	d1 04       	cpc	r13, r1
    18dc:	e1 04       	cpc	r14, r1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:149
    uint32_t _baud = _set_line_encoding.dwDTERate;
    /* If the BAUD value is small, select double speed mode. */
    if (_baud) _baud = (((F_CPU * 8L) / _baud) + 1) >> 1;
    if (_baud < 96) {
    18de:	f1 04       	cpc	r15, r1
    18e0:	30 f4       	brcc	.+12     	; 0x18ee <USART::change_vcp()+0x76>
    18e2:	cc 0c       	add	r12, r12
    18e4:	dd 1c       	adc	r13, r13
    18e6:	ee 1c       	adc	r14, r14
    18e8:	ff 1c       	adc	r15, r15
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:150
      _baud <<= 1;
    18ea:	2a ec       	ldi	r18, 0xCA	; 202
    18ec:	b2 2e       	mov	r11, r18
    18ee:	1f 92       	push	r1
    18f0:	bf 92       	push	r11
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:151
      _ctrlb |= USART_RXMODE_CLK2X_gc;
    18f2:	ff 92       	push	r15
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:153
    }
    D1PRINTF(" BAUD=%08lX:%02X\r\n", _baud, _ctrlb);
    18f4:	ef 92       	push	r14
    18f6:	df 92       	push	r13
    18f8:	cf 92       	push	r12
    18fa:	8f e2       	ldi	r24, 0x2F	; 47
    18fc:	99 e0       	ldi	r25, 0x09	; 9
    18fe:	9f 93       	push	r25
    1900:	8f 93       	push	r24
    1902:	03 eb       	ldi	r16, 0xB3	; 179
    1904:	10 e6       	ldi	r17, 0x60	; 96
    1906:	1f 93       	push	r17
    1908:	0f 93       	push	r16
    190a:	92 df       	rcall	.-220    	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
    190c:	cd bf       	out	0x3d, r28	; 61
    190e:	de bf       	out	0x3e, r29	; 62
    1910:	d7 01       	movw	r26, r14
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:154
    if (_baud < 0x10000UL && _baud >= 64) {
    1912:	c6 01       	movw	r24, r12
    1914:	80 54       	subi	r24, 0x40	; 64
    1916:	91 09       	sbc	r25, r1
    1918:	a1 09       	sbc	r26, r1
    191a:	b1 09       	sbc	r27, r1
    191c:	80 3c       	cpi	r24, 0xC0	; 192
    191e:	9f 4f       	sbci	r25, 0xFF	; 255
    1920:	a1 05       	cpc	r26, r1
    1922:	b1 05       	cpc	r27, r1
    1924:	08 f0       	brcs	.+2      	; 0x1928 <USART::change_vcp()+0xb0>
    1926:	59 c0       	rjmp	.+178    	; 0x19da <USART::change_vcp()+0x162>
    1928:	90 91 b2 60 	lds	r25, 0x60B2	; 0x8060b2 <_set_line_encoding+0x6>
    192c:	95 50       	subi	r25, 0x05	; 5
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:155
      uint8_t _bits = _set_line_encoding.bDataBits - 5;
    192e:	40 91 2a 60 	lds	r20, 0x602A	; 0x80602a <UPDI::_set_ptr24+0x6>
    1932:	50 91 2b 60 	lds	r21, 0x602B	; 0x80602b <UPDI::_set_ptr24+0x7>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:156
      uint8_t _ctrlc = (uint8_t[]){
    1936:	60 91 2c 60 	lds	r22, 0x602C	; 0x80602c <UPDI::_set_ptr24+0x8>
    193a:	70 91 2d 60 	lds	r23, 0x602D	; 0x80602d <UPDI::_set_ptr24+0x9>
    193e:	49 83       	std	Y+1, r20	; 0x01
    1940:	5a 83       	std	Y+2, r21	; 0x02
    1942:	6b 83       	std	Y+3, r22	; 0x03
    1944:	7c 83       	std	Y+4, r23	; 0x04
    1946:	e0 91 b1 60 	lds	r30, 0x60B1	; 0x8060b1 <_set_line_encoding+0x5>
    194a:	e3 70       	andi	r30, 0x03	; 3
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:158
        USART_PMODE_DISABLED_gc, USART_PMODE_ODD_gc, USART_PMODE_EVEN_gc, USART_PMODE_DISABLED_gc
      }[_set_line_encoding.bParityType & 3]
    194c:	ec 0f       	add	r30, r28
    194e:	fd 2f       	mov	r31, r29
    1950:	f1 1d       	adc	r31, r1
    1952:	21 81       	ldd	r18, Z+1	; 0x01
    1954:	80 91 b0 60 	lds	r24, 0x60B0	; 0x8060b0 <_set_line_encoding+0x4>
    1958:	28 0f       	add	r18, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:159
      + _set_line_encoding.bCharFormat ? USART_SBMODE_2BIT_gc : USART_SBMODE_1BIT_gc;
    195a:	33 27       	eor	r19, r19
    195c:	33 1f       	adc	r19, r19
    195e:	80 e0       	ldi	r24, 0x00	; 0
    1960:	23 2b       	or	r18, r19
    1962:	09 f0       	breq	.+2      	; 0x1966 <USART::change_vcp()+0xee>
    1964:	88 e0       	ldi	r24, 0x08	; 8
    1966:	94 30       	cpi	r25, 0x04	; 4
    1968:	b0 f5       	brcc	.+108    	; 0x19d6 <USART::change_vcp()+0x15e>
    196a:	89 0f       	add	r24, r25
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:160
      if (_bits < 4) {
    196c:	9f b7       	in	r25, 0x3f	; 63
__iCliRetVal():
    196e:	f8 94       	cli
change_vcp():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:161
        _ctrlc += _bits; /* USART_CHSIZE_[5,6,7,8]BIT_gc */
    1970:	22 e1       	ldi	r18, 0x12	; 18
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:176
      }
      else {
        _ctrlc += USART_CHSIZE_8BIT_gc;
        #endif
      }
      ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1972:	20 93 e2 05 	sts	0x05E2, r18	; 0x8005e2 <__TEXT_REGION_LENGTH__+0x7f05e2>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:177
        PORTMUX_USARTROUTEA = PORTMUX_USART_VCP;
    1976:	20 e2       	ldi	r18, 0x20	; 32
    1978:	20 93 04 08 	sts	0x0804, r18	; 0x800804 <__TEXT_REGION_LENGTH__+0x7f0804>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:178
        USART0_STATUS = USART_DREIF_bm;
    197c:	c0 92 08 08 	sts	0x0808, r12	; 0x800808 <__TEXT_REGION_LENGTH__+0x7f0808>
    1980:	d0 92 09 08 	sts	0x0809, r13	; 0x800809 <__TEXT_REGION_LENGTH__+0x7f0809>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:179
        USART0_BAUD = (uint16_t)_baud;
    1984:	80 93 07 08 	sts	0x0807, r24	; 0x800807 <__TEXT_REGION_LENGTH__+0x7f0807>
    1988:	80 e8       	ldi	r24, 0x80	; 128
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:180
        USART0_CTRLC = _ctrlc;
    198a:	80 93 05 08 	sts	0x0805, r24	; 0x800805 <__TEXT_REGION_LENGTH__+0x7f0805>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:181
        USART0_CTRLA = USART_RXCIF_bm;
    198e:	b0 92 06 08 	sts	0x0806, r11	; 0x800806 <__TEXT_REGION_LENGTH__+0x7f0806>
    1992:	f1 9a       	sbi	0x1e, 1	; 30
__iRestore():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:182
        USART0_CTRLB = _ctrlb;
    1994:	9f bf       	out	0x3f, r25	; 63
change_vcp():
    1996:	82 e2       	ldi	r24, 0x22	; 34
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:183
        bit_set(GPCONF, GPCONF_VCP_bp);
    1998:	99 e0       	ldi	r25, 0x09	; 9
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:70
    199a:	9f 93       	push	r25
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:185
      }
      D1PRINTF(" USART=VCP\r\n");
    199c:	8f 93       	push	r24
    199e:	83 eb       	ldi	r24, 0xB3	; 179
    19a0:	90 e6       	ldi	r25, 0x60	; 96
    19a2:	9f 93       	push	r25
    19a4:	8f 93       	push	r24
    19a6:	44 df       	rcall	.-376    	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
    19a8:	41 d8       	rcall	.-3966   	; 0xa2c <USART::drain(unsigned int) [clone .constprop.13]>
    19aa:	0f 90       	pop	r0
    19ac:	0f 90       	pop	r0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:186
      drain();
    19ae:	0f 90       	pop	r0
    19b0:	0f 90       	pop	r0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:190
    }
    else {
      /* If outside the supported range, the USART will remain in the BREAK state. */
      D1PRINTF(" VCP=FAIL\r\n");
    19b2:	8e b3       	in	r24, 0x1e	; 30
    19b4:	8f 71       	andi	r24, 0x1F	; 31
    19b6:	8e bb       	out	0x1e, r24	; 30
    19b8:	f0 9b       	sbis	0x1e, 0	; 30
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:192
    }
    GPCONF &= ~(GPCONF_HLD_bm | GPCONF_RIS_bm | GPCONF_FAL_bm);
    19ba:	17 c0       	rjmp	.+46     	; 0x19ea <USART::change_vcp()+0x172>
    19bc:	24 96       	adiw	r28, 0x04	; 4
    19be:	cd bf       	out	0x3d, r28	; 61
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:193
    if (bit_is_set(GPCONF, GPCONF_USB_bp))
    19c0:	de bf       	out	0x3e, r29	; 62
    19c2:	df 91       	pop	r29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:197
      SYS::LED_HeartBeat();
    else
      SYS::LED_Flash();
  }
    19c4:	cf 91       	pop	r28
    19c6:	1f 91       	pop	r17
    19c8:	0f 91       	pop	r16
    19ca:	ff 90       	pop	r15
    19cc:	ef 90       	pop	r14
    19ce:	df 90       	pop	r13
    19d0:	cf 90       	pop	r12
    19d2:	bf 90       	pop	r11
    19d4:	45 cc       	rjmp	.-1910   	; 0x1260 <SYS::LED_HeartBeat()>
    19d6:	8d 5f       	subi	r24, 0xFD	; 253
    19d8:	c9 cf       	rjmp	.-110    	; 0x196c <USART::change_vcp()+0xf4>
    19da:	86 e1       	ldi	r24, 0x16	; 22
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:194
      /* If outside the supported range, the USART will remain in the BREAK state. */
      D1PRINTF(" VCP=FAIL\r\n");
    }
    GPCONF &= ~(GPCONF_HLD_bm | GPCONF_RIS_bm | GPCONF_FAL_bm);
    if (bit_is_set(GPCONF, GPCONF_USB_bp))
      SYS::LED_HeartBeat();
    19dc:	99 e0       	ldi	r25, 0x09	; 9
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:173
        usart_receiver    = &USB::vcp_receiver_9bit;
        usart_transmitter = &USB::vcp_transceiver_9bit;
        #else
      }
      else {
        _ctrlc += USART_CHSIZE_8BIT_gc;
    19de:	9f 93       	push	r25
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:190
      D1PRINTF(" USART=VCP\r\n");
      drain();
    }
    else {
      /* If outside the supported range, the USART will remain in the BREAK state. */
      D1PRINTF(" VCP=FAIL\r\n");
    19e0:	8f 93       	push	r24
    19e2:	1f 93       	push	r17
    19e4:	0f 93       	push	r16
    19e6:	24 df       	rcall	.-440    	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
    19e8:	e0 cf       	rjmp	.-64     	; 0x19aa <USART::change_vcp()+0x132>
    19ea:	24 96       	adiw	r28, 0x04	; 4
    19ec:	cd bf       	out	0x3d, r28	; 61
    19ee:	de bf       	out	0x3e, r29	; 62
    19f0:	df 91       	pop	r29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:197
    GPCONF &= ~(GPCONF_HLD_bm | GPCONF_RIS_bm | GPCONF_FAL_bm);
    if (bit_is_set(GPCONF, GPCONF_USB_bp))
      SYS::LED_HeartBeat();
    else
      SYS::LED_Flash();
  }
    19f2:	cf 91       	pop	r28
    19f4:	1f 91       	pop	r17
    19f6:	0f 91       	pop	r16
    19f8:	ff 90       	pop	r15
    19fa:	ef 90       	pop	r14
    19fc:	df 90       	pop	r13
    19fe:	cf 90       	pop	r12
    1a00:	bf 90       	pop	r11
    1a02:	19 cc       	rjmp	.-1998   	; 0x1236 <SYS::LED_Flash()>

00001a04 <USB::break_off()>:
break_off():
    1a04:	f1 9b       	sbis	0x1e, 1	; 30
    1a06:	04 c0       	rjmp	.+8      	; 0x1a10 <USB::break_off()+0xc>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:196
    }
    GPCONF &= ~(GPCONF_HLD_bm | GPCONF_RIS_bm | GPCONF_FAL_bm);
    if (bit_is_set(GPCONF, GPCONF_USB_bp))
      SYS::LED_HeartBeat();
    else
      SYS::LED_Flash();
    1a08:	f3 9b       	sbis	0x1e, 3	; 30
    1a0a:	02 c0       	rjmp	.+4      	; 0x1a10 <USB::break_off()+0xc>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:365
    bit_set(GPCONF, GPCONF_BRK_bp);
  }

  void break_off (void) {
    if (bit_is_set(GPCONF, GPCONF_VCP_bp)
     && bit_is_set(GPCONF, GPCONF_BRK_bp)) {
    1a0c:	35 df       	rcall	.-406    	; 0x1878 <USART::change_vcp()>
    1a0e:	f4 9a       	sbi	0x1e, 4	; 30
    1a10:	f3 98       	cbi	0x1e, 3	; 30
    1a12:	08 95       	ret

00001a14 <USART::change_pdi()>:
change_pdi():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:366
      USART::change_vcp();
    1a14:	cf 93       	push	r28
    1a16:	cf b7       	in	r28, 0x3f	; 63
__iCliRetVal():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:367
      bit_set(GPCONF, GPCONF_OPN_bp);
    1a18:	f8 94       	cli
change_pdi():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:369
    }
    bit_clear(GPCONF, GPCONF_BRK_bp);
    1a1a:	81 e1       	ldi	r24, 0x11	; 17
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:370
  }
    1a1c:	80 93 e2 05 	sts	0x05E2, r24	; 0x8005e2 <__TEXT_REGION_LENGTH__+0x7f05e2>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:128

  /*** Set up single-wire synchronous mode for PDI operation. ***/
  /* The TRST is repurposed to transmit the synchronous clock. */
  void change_pdi (void) {
    #if defined(CONFIG_PGM_PDI_ENABLE)
    ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1a20:	80 e8       	ldi	r24, 0x80	; 128
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:50
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    1a22:	80 93 16 04 	sts	0x0416, r24	; 0x800416 <__TEXT_REGION_LENGTH__+0x7f0416>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:129
      PORTMUX_USARTROUTEA = PORTMUX_USART_PDI;
    1a26:	06 9a       	sbi	0x00, 6	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:130
      pinControlRegister(PIN_PGM_PCLK) = PORT_INVEN_bm;
    1a28:	80 e2       	ldi	r24, 0x20	; 32
    1a2a:	80 93 04 08 	sts	0x0804, r24	; 0x800804 <__TEXT_REGION_LENGTH__+0x7f0804>
sync_baud_khz():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:131
      pinLogicPush(PIN_PGM_PCLK);   /* Everything except CNANO is shared with TRST */
    1a2e:	20 91 57 63 	lds	r18, 0x6357	; 0x806357 <_xclk>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:132
      USART0_STATUS = USART_DREIF_bm;
    1a32:	30 91 58 63 	lds	r19, 0x6358	; 0x806358 <_xclk+0x1>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:53
    else if (_baud > 0xFFFFU) _baud = 0xFFFF;
    return _baud;
  }

  uint16_t sync_baud_khz (uint16_t _khz) {
    uint32_t _baud = ((F_CPU / 1000) / _khz + 1) / 2;
    1a36:	50 e0       	ldi	r21, 0x00	; 0
    1a38:	40 e0       	ldi	r20, 0x00	; 0
    1a3a:	60 e2       	ldi	r22, 0x20	; 32
    1a3c:	7e e4       	ldi	r23, 0x4E	; 78
    1a3e:	80 e0       	ldi	r24, 0x00	; 0
    1a40:	90 e0       	ldi	r25, 0x00	; 0
    1a42:	0e 94 fe 29 	call	0x53fc	; 0x53fc <__divmodsi4>
    1a46:	da 01       	movw	r26, r20
    1a48:	c9 01       	movw	r24, r18
    1a4a:	01 96       	adiw	r24, 0x01	; 1
    1a4c:	a1 1d       	adc	r26, r1
    1a4e:	b1 1d       	adc	r27, r1
    1a50:	b5 95       	asr	r27
    1a52:	a7 95       	ror	r26
    1a54:	97 95       	ror	r25
    1a56:	87 95       	ror	r24
    1a58:	36 e0       	ldi	r19, 0x06	; 6
    1a5a:	88 0f       	add	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:54
    _baud <<= 6;
    1a5c:	99 1f       	adc	r25, r25
    1a5e:	aa 1f       	adc	r26, r26
    1a60:	bb 1f       	adc	r27, r27
    1a62:	3a 95       	dec	r19
    1a64:	d1 f7       	brne	.-12     	; 0x1a5a <USART::change_pdi()+0x46>
    1a66:	00 97       	sbiw	r24, 0x00	; 0
    1a68:	21 e0       	ldi	r18, 0x01	; 1
    1a6a:	a2 07       	cpc	r26, r18
    1a6c:	b1 05       	cpc	r27, r1
    1a6e:	20 f0       	brcs	.+8      	; 0x1a78 <USART::change_pdi()+0x64>
    1a70:	8f ef       	ldi	r24, 0xFF	; 255
    1a72:	9f ef       	ldi	r25, 0xFF	; 255
    1a74:	a0 e0       	ldi	r26, 0x00	; 0
    1a76:	b0 e0       	ldi	r27, 0x00	; 0
    1a78:	80 34       	cpi	r24, 0x40	; 64
    1a7a:	91 05       	cpc	r25, r1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:57
    if (_baud < 64) _baud = 64;
    else if (_baud > 0xFFFFU) _baud = 0xFFFF;
    return _baud;
    1a7c:	a1 05       	cpc	r26, r1
    1a7e:	b1 05       	cpc	r27, r1
    1a80:	20 f4       	brcc	.+8      	; 0x1a8a <USART::change_pdi()+0x76>
    1a82:	80 e4       	ldi	r24, 0x40	; 64
    1a84:	90 e0       	ldi	r25, 0x00	; 0
    1a86:	a0 e0       	ldi	r26, 0x00	; 0
    1a88:	b0 e0       	ldi	r27, 0x00	; 0
change_pdi():
    1a8a:	80 93 08 08 	sts	0x0808, r24	; 0x800808 <__TEXT_REGION_LENGTH__+0x7f0808>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:133
    ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
      PORTMUX_USARTROUTEA = PORTMUX_USART_PDI;
      pinControlRegister(PIN_PGM_PCLK) = PORT_INVEN_bm;
      pinLogicPush(PIN_PGM_PCLK);   /* Everything except CNANO is shared with TRST */
      USART0_STATUS = USART_DREIF_bm;
      USART0_BAUD  = sync_baud_khz(_xclk);
    1a8e:	90 93 09 08 	sts	0x0809, r25	; 0x800809 <__TEXT_REGION_LENGTH__+0x7f0809>
    1a92:	8b e6       	ldi	r24, 0x6B	; 107
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:134
      USART0_CTRLC = USART_CHSIZE_8BIT_gc | USART_PMODE_EVEN_gc | USART_CMODE_SYNCHRONOUS_gc | USART_SBMODE_2BIT_gc;
    1a94:	80 93 07 08 	sts	0x0807, r24	; 0x800807 <__TEXT_REGION_LENGTH__+0x7f0807>
    1a98:	8a e0       	ldi	r24, 0x0A	; 10
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:135
      USART0_CTRLA = USART_LBME_bm | USART_RS485_INT_gc;
    1a9a:	80 93 05 08 	sts	0x0805, r24	; 0x800805 <__TEXT_REGION_LENGTH__+0x7f0805>
    1a9e:	80 e8       	ldi	r24, 0x80	; 128
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:136
      USART0_CTRLB = USART_RXEN_bm;
    1aa0:	80 93 06 08 	sts	0x0806, r24	; 0x800806 <__TEXT_REGION_LENGTH__+0x7f0806>
    1aa4:	80 91 08 08 	lds	r24, 0x0808	; 0x800808 <__TEXT_REGION_LENGTH__+0x7f0808>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:137
      D1PRINTF(" USART=PDI BAUD=%04X\r\n", USART0_BAUD);
    1aa8:	90 91 09 08 	lds	r25, 0x0809	; 0x800809 <__TEXT_REGION_LENGTH__+0x7f0809>
    1aac:	9f 93       	push	r25
    1aae:	8f 93       	push	r24
    1ab0:	8f ef       	ldi	r24, 0xFF	; 255
    1ab2:	98 e0       	ldi	r25, 0x08	; 8
    1ab4:	9f 93       	push	r25
    1ab6:	8f 93       	push	r24
    1ab8:	83 eb       	ldi	r24, 0xB3	; 179
    1aba:	90 e6       	ldi	r25, 0x60	; 96
    1abc:	9f 93       	push	r25
    1abe:	8f 93       	push	r24
    1ac0:	b7 de       	rcall	.-658    	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
__iRestore():
    1ac2:	cf bf       	out	0x3f, r28	; 63
    1ac4:	0f 90       	pop	r0
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:70
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    1ac6:	0f 90       	pop	r0
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:71
    __asm__ volatile ("" ::: "memory");
    1ac8:	0f 90       	pop	r0
    1aca:	0f 90       	pop	r0
    1acc:	0f 90       	pop	r0
    1ace:	0f 90       	pop	r0
change_pdi():
    1ad0:	cf 91       	pop	r28
    1ad2:	08 95       	ret

00001ad4 <PDI::timeout_fallback()>:
timeout_fallback():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:140
    }
    #endif
  }
    1ad4:	80 91 57 63 	lds	r24, 0x6357	; 0x806357 <_xclk>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:321

  // MARK: PDI Session

  size_t timeout_fallback (void) {
    /* If a timeout occurs, the communication speed will be reduced. */
    if (_xclk == 50) return 0;
    1ad8:	90 91 58 63 	lds	r25, 0x6358	; 0x806358 <_xclk+0x1>
    1adc:	82 33       	cpi	r24, 0x32	; 50
    1ade:	91 05       	cpc	r25, r1
    1ae0:	79 f0       	breq	.+30     	; 0x1b00 <PDI::timeout_fallback()+0x2c>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:322
    _xclk -= 50;
    1ae2:	c2 97       	sbiw	r24, 0x32	; 50
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:323
    if (_xclk < 50) _xclk = 50;
    1ae4:	82 33       	cpi	r24, 0x32	; 50
    1ae6:	91 05       	cpc	r25, r1
    1ae8:	40 f0       	brcs	.+16     	; 0x1afa <PDI::timeout_fallback()+0x26>
    1aea:	80 93 57 63 	sts	0x6357, r24	; 0x806357 <_xclk>
    1aee:	90 93 58 63 	sts	0x6358, r25	; 0x806358 <_xclk+0x1>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:324
    USART::change_pdi();
    1af2:	90 df       	rcall	.-224    	; 0x1a14 <USART::change_pdi()>
    1af4:	32 dd       	rcall	.-1436   	; 0x155a <PDI::send_break()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:325
    return send_break();
    1af6:	90 e0       	ldi	r25, 0x00	; 0
    1af8:	08 95       	ret
    1afa:	82 e3       	ldi	r24, 0x32	; 50
    1afc:	90 e0       	ldi	r25, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:323

  size_t timeout_fallback (void) {
    /* If a timeout occurs, the communication speed will be reduced. */
    if (_xclk == 50) return 0;
    _xclk -= 50;
    if (_xclk < 50) _xclk = 50;
    1afe:	f5 cf       	rjmp	.-22     	; 0x1aea <PDI::timeout_fallback()+0x16>
    1b00:	90 e0       	ldi	r25, 0x00	; 0
    1b02:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:321

  // MARK: PDI Session

  size_t timeout_fallback (void) {
    /* If a timeout occurs, the communication speed will be reduced. */
    if (_xclk == 50) return 0;
    1b04:	08 95       	ret

00001b06 <SYS::reboot()>:
reboot():
    1b06:	8c e8       	ldi	r24, 0x8C	; 140
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:326
    _xclk -= 50;
    if (_xclk < 50) _xclk = 50;
    USART::change_pdi();
    return send_break();
  }
    1b08:	97 e0       	ldi	r25, 0x07	; 7
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:427
   * System reboot
   *
   * Always run it after the USB has stopped.
   */
  void reboot (void) {
    D1PRINTF("<REBOOT>\r\n");
    1b0a:	9f 93       	push	r25
    1b0c:	8f 93       	push	r24
    1b0e:	83 eb       	ldi	r24, 0xB3	; 179
    1b10:	90 e6       	ldi	r25, 0x60	; 96
    1b12:	9f 93       	push	r25
    1b14:	8f 93       	push	r24
    1b16:	8c de       	rcall	.-744    	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
    1b18:	80 91 b5 60 	lds	r24, 0x60B5	; 0x8060b5 <Serial1C+0x2>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:428
    DFLUSH();
    1b1c:	90 91 b6 60 	lds	r25, 0x60B6	; 0x8060b6 <Serial1C+0x3>
    1b20:	30 d8       	rcall	.-4000   	; 0xb82 <UsartBaseClass::flush() [clone .isra.0] [clone .lto_priv.18]>
    1b22:	88 ed       	ldi	r24, 0xD8	; 216
    1b24:	91 e0       	ldi	r25, 0x01	; 1
    1b26:	84 bf       	out	0x34, r24	; 52
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:429
    _PROTECTED_WRITE(WDT_CTRLA, WDT_PERIOD_8CLK_gc);
    1b28:	90 93 00 01 	sts	0x0100, r25	; 0x800100 <__TEXT_REGION_LENGTH__+0x7f0100>
    1b2c:	0f 90       	pop	r0
    1b2e:	0f 90       	pop	r0
    1b30:	0f 90       	pop	r0
    1b32:	0f 90       	pop	r0
    1b34:	ff cf       	rjmp	.-2      	; 0x1b34 <SYS::reboot()+0x2e>

00001b36 <PDI::enter_progmode()>:
enter_progmode():
    1b36:	f9 99       	sbic	0x1f, 1	; 31
    1b38:	20 c0       	rjmp	.+64     	; 0x1b7a <PDI::enter_progmode()+0x44>
    1b3a:	69 e0       	ldi	r22, 0x09	; 9
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:368
    if (bit_is_set(PGCONF, PGCONF_UPDI_bp)) return 1;
    return send_bytes(_leave, sizeof(_leave));
  }

  size_t enter_progmode (void) {
    if (bit_is_set(PGCONF, PGCONF_PROG_bp)) return 1;
    1b3c:	70 e0       	ldi	r23, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:371

    /* Enter NVMPROGKEY */
    if (send_bytes(nvmprog_key, sizeof(nvmprog_key)) && pdibus_wait()) {
    1b3e:	83 e5       	ldi	r24, 0x53	; 83
    1b40:	90 e6       	ldi	r25, 0x60	; 96
    1b42:	56 dc       	rcall	.-1876   	; 0x13f0 <PDI::send_bytes(unsigned char const*, unsigned int)>
    1b44:	81 11       	cpse	r24, r1
    1b46:	03 c0       	rjmp	.+6      	; 0x1b4e <PDI::enter_progmode()+0x18>
    1b48:	90 e0       	ldi	r25, 0x00	; 0
    1b4a:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:377
      bit_set(PGCONF, PGCONF_PROG_bp);
      D1PRINTF("<ST:%02X>\r\n", RXDATA);
      return 1;
    }

    return 0;
    1b4c:	08 95       	ret
    1b4e:	3e dc       	rcall	.-1924   	; 0x13cc <PDI::pdibus_wait()>
    1b50:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:371

  size_t enter_progmode (void) {
    if (bit_is_set(PGCONF, PGCONF_PROG_bp)) return 1;

    /* Enter NVMPROGKEY */
    if (send_bytes(nvmprog_key, sizeof(nvmprog_key)) && pdibus_wait()) {
    1b52:	d1 f3       	breq	.-12     	; 0x1b48 <PDI::enter_progmode()+0x12>
    1b54:	f9 9a       	sbi	0x1f, 1	; 31
    1b56:	8d b3       	in	r24, 0x1d	; 29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:373
      bit_set(PGCONF, PGCONF_PROG_bp);
      D1PRINTF("<ST:%02X>\r\n", RXDATA);
    1b58:	1f 92       	push	r1
    1b5a:	8f 93       	push	r24
    1b5c:	80 e8       	ldi	r24, 0x80	; 128
    1b5e:	97 e0       	ldi	r25, 0x07	; 7
    1b60:	9f 93       	push	r25
    1b62:	8f 93       	push	r24
    1b64:	83 eb       	ldi	r24, 0xB3	; 179
    1b66:	90 e6       	ldi	r25, 0x60	; 96
    1b68:	9f 93       	push	r25
    1b6a:	8f 93       	push	r24
    1b6c:	61 de       	rcall	.-830    	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
    1b6e:	0f 90       	pop	r0
    1b70:	0f 90       	pop	r0
    1b72:	0f 90       	pop	r0
    1b74:	0f 90       	pop	r0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:368
    if (bit_is_set(PGCONF, PGCONF_UPDI_bp)) return 1;
    return send_bytes(_leave, sizeof(_leave));
  }

  size_t enter_progmode (void) {
    if (bit_is_set(PGCONF, PGCONF_PROG_bp)) return 1;
    1b76:	0f 90       	pop	r0
    1b78:	0f 90       	pop	r0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:269
      }
    }
    return _rspsize;
  }

  size_t write_memory (void) {
    1b7a:	81 e0       	ldi	r24, 0x01	; 1
    1b7c:	90 e0       	ldi	r25, 0x00	; 0
    1b7e:	08 95       	ret

00001b80 <PDI::write_memory()>:
write_memory():
    1b80:	cf 92       	push	r12
    1b82:	df 92       	push	r13
    1b84:	ef 92       	push	r14
    1b86:	ff 92       	push	r15
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:271
    uint8_t _nvm_cmd = 0, _nvm_pclr = 0, _nvm_pset = 0;
    uint8_t   m_type = packet.out.bMType;
    1b88:	0f 93       	push	r16
    1b8a:	1f 93       	push	r17
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:272
    uint32_t _dwAddr = packet.out.dwAddr + get_mtype_offset(m_type);
    1b8c:	cf 93       	push	r28
    1b8e:	df 93       	push	r29
    1b90:	c0 91 07 61 	lds	r28, 0x6107	; 0x806107 <packet+0x7>
    1b94:	c0 90 08 61 	lds	r12, 0x6108	; 0x806108 <packet+0x8>
    1b98:	d0 90 09 61 	lds	r13, 0x6109	; 0x806109 <packet+0x9>
    1b9c:	e0 90 0a 61 	lds	r14, 0x610A	; 0x80610a <packet+0xa>
    1ba0:	f0 90 0b 61 	lds	r15, 0x610B	; 0x80610b <packet+0xb>
    1ba4:	8c 2f       	mov	r24, r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:273
    size_t  _wLength = packet.out.dwLength;
    1ba6:	72 db       	rcall	.-2332   	; 0x128c <PDI::get_mtype_offset(unsigned char)>
    1ba8:	c6 0e       	add	r12, r22
    1baa:	d7 1e       	adc	r13, r23
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:274
    _CAPS32(_set_ptr32[1])->dword = _dwAddr;
    1bac:	e8 1e       	adc	r14, r24
    1bae:	f9 1e       	adc	r15, r25
    1bb0:	00 91 0c 61 	lds	r16, 0x610C	; 0x80610c <packet+0xc>
    1bb4:	10 91 0d 61 	lds	r17, 0x610D	; 0x80610d <packet+0xd>
    1bb8:	c0 92 0f 60 	sts	0x600F, r12	; 0x80600f <PDI::_set_ptr32+0x1>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:275
    _CAPS16(_set_repeat[1])->word = _wLength - 1;
    1bbc:	d0 92 10 60 	sts	0x6010, r13	; 0x806010 <PDI::_set_ptr32+0x2>
    1bc0:	e0 92 11 60 	sts	0x6011, r14	; 0x806011 <PDI::_set_ptr32+0x3>
    1bc4:	f0 92 12 60 	sts	0x6012, r15	; 0x806012 <PDI::_set_ptr32+0x4>
    1bc8:	98 01       	movw	r18, r16
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:276
    _set_repeat[3] = 0x64;  /* ST PTR++ DATA1 */
    1bca:	21 50       	subi	r18, 0x01	; 1
    1bcc:	31 09       	sbc	r19, r1
    1bce:	20 93 0b 60 	sts	0x600B, r18	; 0x80600b <PDI::_set_repeat+0x1>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:277
    D1PRINTF(" L=%04X,A=%08lX,", _wLength, _dwAddr);
    1bd2:	30 93 0c 60 	sts	0x600C, r19	; 0x80600c <PDI::_set_repeat+0x2>
    1bd6:	24 e6       	ldi	r18, 0x64	; 100
    1bd8:	20 93 0d 60 	sts	0x600D, r18	; 0x80600d <PDI::_set_repeat+0x3>
    1bdc:	ff 92       	push	r15
    1bde:	ef 92       	push	r14
    1be0:	df 92       	push	r13
    1be2:	cf 92       	push	r12
    1be4:	1f 93       	push	r17
    1be6:	0f 93       	push	r16
    1be8:	8c e5       	ldi	r24, 0x5C	; 92
    1bea:	97 e0       	ldi	r25, 0x07	; 7
    1bec:	9f 93       	push	r25
    1bee:	8f 93       	push	r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:278
    nvm_wait();
    1bf0:	83 eb       	ldi	r24, 0xB3	; 179
    1bf2:	90 e6       	ldi	r25, 0x60	; 96
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:279
    if (m_type == 0xC0) {                                           /* APPCODE or FLASH */
    1bf4:	9f 93       	push	r25
    1bf6:	8f 93       	push	r24
    1bf8:	1b de       	rcall	.-970    	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
    1bfa:	1e dc       	rcall	.-1988   	; 0x1438 <PDI::nvm_wait()>
    1bfc:	8d b7       	in	r24, 0x3d	; 61
    1bfe:	9e b7       	in	r25, 0x3e	; 62
    1c00:	0a 96       	adiw	r24, 0x0a	; 10
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:282
      _nvm_cmd = 0x25; _nvm_pclr = 0x26; _nvm_pset = 0x23;
    }
    else if (m_type == 0xB0 || m_type == 0xC1) {                    /* BOOTCODE */
    1c02:	8d bf       	out	0x3d, r24	; 61
    1c04:	9e bf       	out	0x3e, r25	; 62
    1c06:	c0 3c       	cpi	r28, 0xC0	; 192
    1c08:	09 f4       	brne	.+2      	; 0x1c0c <PDI::write_memory()+0x8c>
    1c0a:	3f c0       	rjmp	.+126    	; 0x1c8a <PDI::write_memory()+0x10a>
    1c0c:	c0 3b       	cpi	r28, 0xB0	; 176
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:285
      _nvm_cmd = 0x2D; _nvm_pclr = 0x26; _nvm_pset = 0x23;
    }
    else if (m_type == 0x22 || m_type == 0xB1 || m_type == 0xC4) {  /* EEPROM */
    1c0e:	09 f4       	brne	.+2      	; 0x1c12 <PDI::write_memory()+0x92>
    1c10:	7a c0       	rjmp	.+244    	; 0x1d06 <PDI::write_memory()+0x186>
    1c12:	c1 3c       	cpi	r28, 0xC1	; 193
    1c14:	09 f4       	brne	.+2      	; 0x1c18 <PDI::write_memory()+0x98>
    1c16:	77 c0       	rjmp	.+238    	; 0x1d06 <PDI::write_memory()+0x186>
    1c18:	c2 32       	cpi	r28, 0x22	; 34
    1c1a:	09 f4       	brne	.+2      	; 0x1c1e <PDI::write_memory()+0x9e>
    1c1c:	78 c0       	rjmp	.+240    	; 0x1d0e <PDI::write_memory()+0x18e>
    1c1e:	c1 3b       	cpi	r28, 0xB1	; 177
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:288
      _nvm_cmd = 0x35; _nvm_pclr = 0x36; _nvm_pset = 0x33;
    }
    else if (m_type == 0xC5) {                                      /* USERSIG */
    1c20:	09 f4       	brne	.+2      	; 0x1c24 <PDI::write_memory()+0xa4>
    1c22:	75 c0       	rjmp	.+234    	; 0x1d0e <PDI::write_memory()+0x18e>
    1c24:	c4 3c       	cpi	r28, 0xC4	; 196
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:292
      _nvm_cmd = 0x1A; _nvm_pclr = 0x26; _nvm_pset = 0x23;
    }
    else {
      if      (m_type == 0xB2) _nvm_cmd = 0x4C;   /* FUSE */
    1c26:	09 f4       	brne	.+2      	; 0x1c2a <PDI::write_memory()+0xaa>
    1c28:	72 c0       	rjmp	.+228    	; 0x1d0e <PDI::write_memory()+0x18e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:293
      else if (m_type == 0xB3) _nvm_cmd = 0x08;   /* LOCK */
    1c2a:	c5 3c       	cpi	r28, 0xC5	; 197
    1c2c:	09 f4       	brne	.+2      	; 0x1c30 <PDI::write_memory()+0xb0>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:294
      else return 0;
    1c2e:	73 c0       	rjmp	.+230    	; 0x1d16 <PDI::write_memory()+0x196>
    1c30:	c2 3b       	cpi	r28, 0xB2	; 178
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:292
    }
    else if (m_type == 0xC5) {                                      /* USERSIG */
      _nvm_cmd = 0x1A; _nvm_pclr = 0x26; _nvm_pset = 0x23;
    }
    else {
      if      (m_type == 0xB2) _nvm_cmd = 0x4C;   /* FUSE */
    1c32:	31 f0       	breq	.+12     	; 0x1c40 <PDI::write_memory()+0xc0>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:295
      else if (m_type == 0xB3) _nvm_cmd = 0x08;   /* LOCK */
      else return 0;
      return (nvm_cmd(_nvm_cmd)
    1c34:	88 e0       	ldi	r24, 0x08	; 8
    1c36:	c3 3b       	cpi	r28, 0xB3	; 179
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:299
           && send_bytes(_set_ptr32, sizeof(_set_ptr32))
           && send_bytes(_set_repeat, sizeof(_set_repeat))
           && send_bytes(&packet.out.memData[0], _wLength)
           && nvm_wait());
    1c38:	21 f0       	breq	.+8      	; 0x1c42 <PDI::write_memory()+0xc2>
    1c3a:	90 e0       	ldi	r25, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:314
     && send_bytes(&packet.out.memData[0], _wLength)
     && nvm_cmd(_nvm_cmd)
     && send_bytes(_set_ptr32, sizeof(_set_ptr32))
     && send(0x64)  /* ST */
     && send(0xFF)  /* dummy byte */
     && nvm_wait());
    1c3c:	80 e0       	ldi	r24, 0x00	; 0
    1c3e:	06 c0       	rjmp	.+12     	; 0x1c4c <PDI::write_memory()+0xcc>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:315
  }
    1c40:	8c e4       	ldi	r24, 0x4C	; 76
    1c42:	1c dc       	rcall	.-1992   	; 0x147c <PDI::nvm_cmd(unsigned char)>
    1c44:	81 11       	cpse	r24, r1
    1c46:	0b c0       	rjmp	.+22     	; 0x1c5e <PDI::write_memory()+0xde>
    1c48:	80 e0       	ldi	r24, 0x00	; 0
    1c4a:	90 e0       	ldi	r25, 0x00	; 0
    1c4c:	df 91       	pop	r29
    1c4e:	cf 91       	pop	r28
    1c50:	1f 91       	pop	r17
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:296
    else {
      if      (m_type == 0xB2) _nvm_cmd = 0x4C;   /* FUSE */
      else if (m_type == 0xB3) _nvm_cmd = 0x08;   /* LOCK */
      else return 0;
      return (nvm_cmd(_nvm_cmd)
           && send_bytes(_set_ptr32, sizeof(_set_ptr32))
    1c52:	0f 91       	pop	r16
    1c54:	ff 90       	pop	r15
    1c56:	ef 90       	pop	r14
    1c58:	df 90       	pop	r13
    1c5a:	cf 90       	pop	r12
    1c5c:	08 95       	ret
    1c5e:	65 e0       	ldi	r22, 0x05	; 5
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:297
           && send_bytes(_set_repeat, sizeof(_set_repeat))
    1c60:	70 e0       	ldi	r23, 0x00	; 0
    1c62:	8e e0       	ldi	r24, 0x0E	; 14
    1c64:	90 e6       	ldi	r25, 0x60	; 96
    1c66:	c4 db       	rcall	.-2168   	; 0x13f0 <PDI::send_bytes(unsigned char const*, unsigned int)>
    1c68:	88 23       	and	r24, r24
    1c6a:	71 f3       	breq	.-36     	; 0x1c48 <PDI::write_memory()+0xc8>
    1c6c:	64 e0       	ldi	r22, 0x04	; 4
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:298
           && send_bytes(&packet.out.memData[0], _wLength)
    1c6e:	70 e0       	ldi	r23, 0x00	; 0
    1c70:	8a e0       	ldi	r24, 0x0A	; 10
    1c72:	90 e6       	ldi	r25, 0x60	; 96
    1c74:	bd db       	rcall	.-2182   	; 0x13f0 <PDI::send_bytes(unsigned char const*, unsigned int)>
    1c76:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:313
     && send_bytes(_set_repeat, sizeof(_set_repeat))
     && send_bytes(&packet.out.memData[0], _wLength)
     && nvm_cmd(_nvm_cmd)
     && send_bytes(_set_ptr32, sizeof(_set_ptr32))
     && send(0x64)  /* ST */
     && send(0xFF)  /* dummy byte */
    1c78:	39 f3       	breq	.-50     	; 0x1c48 <PDI::write_memory()+0xc8>
    1c7a:	b8 01       	movw	r22, r16
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:314
     && nvm_wait());
    1c7c:	81 e1       	ldi	r24, 0x11	; 17
    1c7e:	91 e6       	ldi	r25, 0x61	; 97
    1c80:	b7 db       	rcall	.-2194   	; 0x13f0 <PDI::send_bytes(unsigned char const*, unsigned int)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:280
    _CAPS16(_set_repeat[1])->word = _wLength - 1;
    _set_repeat[3] = 0x64;  /* ST PTR++ DATA1 */
    D1PRINTF(" L=%04X,A=%08lX,", _wLength, _dwAddr);
    nvm_wait();
    if (m_type == 0xC0) {                                           /* APPCODE or FLASH */
      _nvm_cmd = 0x25; _nvm_pclr = 0x26; _nvm_pset = 0x23;
    1c82:	88 23       	and	r24, r24
    1c84:	09 f3       	breq	.-62     	; 0x1c48 <PDI::write_memory()+0xc8>
    1c86:	d8 db       	rcall	.-2128   	; 0x1438 <PDI::nvm_wait()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:303
           && send_bytes(&packet.out.memData[0], _wLength)
           && nvm_wait());
    }

    /* FLASH, BOOTCODE, APPCODE or EEPROM */
    return (nvm_cmd(_nvm_pclr)
    1c88:	e0 cf       	rjmp	.-64     	; 0x1c4a <PDI::write_memory()+0xca>
    1c8a:	d3 e2       	ldi	r29, 0x23	; 35
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:314
     && send_bytes(&packet.out.memData[0], _wLength)
     && nvm_cmd(_nvm_cmd)
     && send_bytes(_set_ptr32, sizeof(_set_ptr32))
     && send(0x64)  /* ST */
     && send(0xFF)  /* dummy byte */
     && nvm_wait());
    1c8c:	86 e2       	ldi	r24, 0x26	; 38
    1c8e:	c5 e2       	ldi	r28, 0x25	; 37
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:304
           && nvm_wait());
    }

    /* FLASH, BOOTCODE, APPCODE or EEPROM */
    return (nvm_cmd(_nvm_pclr)
     && nvm_cmdex()
    1c90:	f5 db       	rcall	.-2070   	; 0x147c <PDI::nvm_cmd(unsigned char)>
    1c92:	88 23       	and	r24, r24
    1c94:	c9 f2       	breq	.-78     	; 0x1c48 <PDI::write_memory()+0xc8>
    1c96:	0d dc       	rcall	.-2022   	; 0x14b2 <PDI::nvm_cmdex()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:305
     && nvm_wait()
    1c98:	88 23       	and	r24, r24
    1c9a:	b1 f2       	breq	.-84     	; 0x1c48 <PDI::write_memory()+0xc8>
    1c9c:	cd db       	rcall	.-2150   	; 0x1438 <PDI::nvm_wait()>
    1c9e:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:306
     && nvm_cmd(_nvm_pset)
    1ca0:	99 f2       	breq	.-90     	; 0x1c48 <PDI::write_memory()+0xc8>
    1ca2:	8d 2f       	mov	r24, r29
    1ca4:	eb db       	rcall	.-2090   	; 0x147c <PDI::nvm_cmd(unsigned char)>
    1ca6:	88 23       	and	r24, r24
    1ca8:	79 f2       	breq	.-98     	; 0x1c48 <PDI::write_memory()+0xc8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:307
     && send_bytes(_set_ptr32, sizeof(_set_ptr32))
    1caa:	65 e0       	ldi	r22, 0x05	; 5
    1cac:	70 e0       	ldi	r23, 0x00	; 0
    1cae:	8e e0       	ldi	r24, 0x0E	; 14
    1cb0:	90 e6       	ldi	r25, 0x60	; 96
    1cb2:	9e db       	rcall	.-2244   	; 0x13f0 <PDI::send_bytes(unsigned char const*, unsigned int)>
    1cb4:	88 23       	and	r24, r24
    1cb6:	09 f4       	brne	.+2      	; 0x1cba <PDI::write_memory()+0x13a>
    1cb8:	c7 cf       	rjmp	.-114    	; 0x1c48 <PDI::write_memory()+0xc8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:308
     && send_bytes(_set_repeat, sizeof(_set_repeat))
    1cba:	64 e0       	ldi	r22, 0x04	; 4
    1cbc:	70 e0       	ldi	r23, 0x00	; 0
    1cbe:	8a e0       	ldi	r24, 0x0A	; 10
    1cc0:	90 e6       	ldi	r25, 0x60	; 96
    1cc2:	96 db       	rcall	.-2260   	; 0x13f0 <PDI::send_bytes(unsigned char const*, unsigned int)>
    1cc4:	88 23       	and	r24, r24
    1cc6:	09 f4       	brne	.+2      	; 0x1cca <PDI::write_memory()+0x14a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:309
     && send_bytes(&packet.out.memData[0], _wLength)
    1cc8:	bf cf       	rjmp	.-130    	; 0x1c48 <PDI::write_memory()+0xc8>
    1cca:	b8 01       	movw	r22, r16
    1ccc:	81 e1       	ldi	r24, 0x11	; 17
    1cce:	91 e6       	ldi	r25, 0x61	; 97
    1cd0:	8f db       	rcall	.-2274   	; 0x13f0 <PDI::send_bytes(unsigned char const*, unsigned int)>
    1cd2:	88 23       	and	r24, r24
    1cd4:	09 f4       	brne	.+2      	; 0x1cd8 <PDI::write_memory()+0x158>
    1cd6:	b8 cf       	rjmp	.-144    	; 0x1c48 <PDI::write_memory()+0xc8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:310
     && nvm_cmd(_nvm_cmd)
    1cd8:	8c 2f       	mov	r24, r28
    1cda:	d0 db       	rcall	.-2144   	; 0x147c <PDI::nvm_cmd(unsigned char)>
    1cdc:	88 23       	and	r24, r24
    1cde:	09 f4       	brne	.+2      	; 0x1ce2 <PDI::write_memory()+0x162>
    1ce0:	b3 cf       	rjmp	.-154    	; 0x1c48 <PDI::write_memory()+0xc8>
    1ce2:	65 e0       	ldi	r22, 0x05	; 5
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:311
     && send_bytes(_set_ptr32, sizeof(_set_ptr32))
    1ce4:	70 e0       	ldi	r23, 0x00	; 0
    1ce6:	8e e0       	ldi	r24, 0x0E	; 14
    1ce8:	90 e6       	ldi	r25, 0x60	; 96
    1cea:	82 db       	rcall	.-2300   	; 0x13f0 <PDI::send_bytes(unsigned char const*, unsigned int)>
    1cec:	88 23       	and	r24, r24
    1cee:	09 f4       	brne	.+2      	; 0x1cf2 <PDI::write_memory()+0x172>
    1cf0:	ab cf       	rjmp	.-170    	; 0x1c48 <PDI::write_memory()+0xc8>
    1cf2:	84 e6       	ldi	r24, 0x64	; 100
    1cf4:	0e 94 db 05 	call	0xbb6	; 0xbb6 <PDI::send(unsigned char)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:312
     && send(0x64)  /* ST */
    1cf8:	88 23       	and	r24, r24
    1cfa:	09 f4       	brne	.+2      	; 0x1cfe <PDI::write_memory()+0x17e>
    1cfc:	a5 cf       	rjmp	.-182    	; 0x1c48 <PDI::write_memory()+0xc8>
    1cfe:	8f ef       	ldi	r24, 0xFF	; 255
    1d00:	0e 94 db 05 	call	0xbb6	; 0xbb6 <PDI::send(unsigned char)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:313
     && send(0xFF)  /* dummy byte */
    1d04:	be cf       	rjmp	.-132    	; 0x1c82 <PDI::write_memory()+0x102>
    1d06:	d3 e2       	ldi	r29, 0x23	; 35
    1d08:	86 e2       	ldi	r24, 0x26	; 38
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:283
    nvm_wait();
    if (m_type == 0xC0) {                                           /* APPCODE or FLASH */
      _nvm_cmd = 0x25; _nvm_pclr = 0x26; _nvm_pset = 0x23;
    }
    else if (m_type == 0xB0 || m_type == 0xC1) {                    /* BOOTCODE */
      _nvm_cmd = 0x2D; _nvm_pclr = 0x26; _nvm_pset = 0x23;
    1d0a:	cd e2       	ldi	r28, 0x2D	; 45
    1d0c:	c1 cf       	rjmp	.-126    	; 0x1c90 <PDI::write_memory()+0x110>
    1d0e:	d3 e3       	ldi	r29, 0x33	; 51
    1d10:	86 e3       	ldi	r24, 0x36	; 54
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:286
    }
    else if (m_type == 0x22 || m_type == 0xB1 || m_type == 0xC4) {  /* EEPROM */
      _nvm_cmd = 0x35; _nvm_pclr = 0x36; _nvm_pset = 0x33;
    1d12:	c5 e3       	ldi	r28, 0x35	; 53
    1d14:	bd cf       	rjmp	.-134    	; 0x1c90 <PDI::write_memory()+0x110>
    1d16:	d3 e2       	ldi	r29, 0x23	; 35
    1d18:	86 e2       	ldi	r24, 0x26	; 38
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:289
    }
    else if (m_type == 0xC5) {                                      /* USERSIG */
      _nvm_cmd = 0x1A; _nvm_pclr = 0x26; _nvm_pset = 0x23;
    1d1a:	ca e1       	ldi	r28, 0x1A	; 26
    1d1c:	b9 cf       	rjmp	.-142    	; 0x1c90 <PDI::write_memory()+0x110>

00001d1e <PDI::read_memory()>:
read_memory():
    1d1e:	cf 92       	push	r12
    1d20:	df 92       	push	r13
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:242
    /* Any other sections specified will be ignored, */
    /* but the command will return successful completion. */
    return 1;
  }

  size_t read_memory (void) {
    1d22:	ef 92       	push	r14
    1d24:	ff 92       	push	r15
    1d26:	0f 93       	push	r16
    1d28:	1f 93       	push	r17
    1d2a:	cf 93       	push	r28
    1d2c:	df 93       	push	r29
    1d2e:	c0 90 08 61 	lds	r12, 0x6108	; 0x806108 <packet+0x8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:244
    uint8_t   m_type = packet.out.bMType;
    uint32_t _dwAddr = packet.out.dwAddr + get_mtype_offset(m_type);
    1d32:	d0 90 09 61 	lds	r13, 0x6109	; 0x806109 <packet+0x9>
    1d36:	e0 90 0a 61 	lds	r14, 0x610A	; 0x80610a <packet+0xa>
    1d3a:	f0 90 0b 61 	lds	r15, 0x610B	; 0x80610b <packet+0xb>
    1d3e:	80 91 07 61 	lds	r24, 0x6107	; 0x806107 <packet+0x7>
    1d42:	a4 da       	rcall	.-2744   	; 0x128c <PDI::get_mtype_offset(unsigned char)>
    1d44:	c6 0e       	add	r12, r22
    1d46:	d7 1e       	adc	r13, r23
    1d48:	e8 1e       	adc	r14, r24
    1d4a:	f9 1e       	adc	r15, r25
    1d4c:	c0 91 0c 61 	lds	r28, 0x610C	; 0x80610c <packet+0xc>
    1d50:	d0 91 0d 61 	lds	r29, 0x610D	; 0x80610d <packet+0xd>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:245
    size_t  _wLength = packet.out.dwLength;
    1d54:	ff 92       	push	r15
    1d56:	ef 92       	push	r14
    1d58:	df 92       	push	r13
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:247
    size_t  _rspsize = 0;
    D1PRINTF(" L=%04X,A=%08lX,", _wLength, _dwAddr);
    1d5a:	cf 92       	push	r12
    1d5c:	df 93       	push	r29
    1d5e:	cf 93       	push	r28
    1d60:	8b e4       	ldi	r24, 0x4B	; 75
    1d62:	97 e0       	ldi	r25, 0x07	; 7
    1d64:	9f 93       	push	r25
    1d66:	8f 93       	push	r24
    1d68:	83 eb       	ldi	r24, 0xB3	; 179
    1d6a:	90 e6       	ldi	r25, 0x60	; 96
    1d6c:	9f 93       	push	r25
    1d6e:	8f 93       	push	r24
    1d70:	5f dd       	rcall	.-1346   	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
    1d72:	83 e4       	ldi	r24, 0x43	; 67
    1d74:	83 db       	rcall	.-2298   	; 0x147c <PDI::nvm_cmd(unsigned char)>
    1d76:	ed b7       	in	r30, 0x3d	; 61
    1d78:	fe b7       	in	r31, 0x3e	; 62
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:248
    if (!nvm_cmd(0x43)) return 0;
    1d7a:	3a 96       	adiw	r30, 0x0a	; 10
    1d7c:	ed bf       	out	0x3d, r30	; 61
    1d7e:	fe bf       	out	0x3e, r31	; 62
    1d80:	88 23       	and	r24, r24
    1d82:	09 f4       	brne	.+2      	; 0x1d86 <PDI::read_memory()+0x68>
    1d84:	5a c0       	rjmp	.+180    	; 0x1e3a <PDI::read_memory()+0x11c>
    1d86:	c1 30       	cpi	r28, 0x01	; 1
    1d88:	d1 05       	cpc	r29, r1
    1d8a:	11 f5       	brne	.+68     	; 0x1dd0 <PDI::read_memory()+0xb2>
recv_byte():
    1d8c:	c0 92 06 60 	sts	0x6006, r12	; 0x806006 <PDI::recv_byte(unsigned long)::_set_ptr+0x1>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:249
    if (_wLength == 1) {
    1d90:	d0 92 07 60 	sts	0x6007, r13	; 0x806007 <PDI::recv_byte(unsigned long)::_set_ptr+0x2>
    1d94:	e0 92 08 60 	sts	0x6008, r14	; 0x806008 <PDI::recv_byte(unsigned long)::_set_ptr+0x3>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:135

  bool recv_byte (uint32_t _dwAddr) {
    static uint8_t _set_ptr[] = {
      0x0C, 0, 0, 0, 0    /* LDS ADDR4 DATA1 */
    };
    _CAPS32(_set_ptr[1])->dword = _dwAddr;
    1d98:	f0 92 09 60 	sts	0x6009, r15	; 0x806009 <PDI::recv_byte(unsigned long)::_set_ptr+0x4>
    1d9c:	65 e0       	ldi	r22, 0x05	; 5
    1d9e:	70 e0       	ldi	r23, 0x00	; 0
    1da0:	85 e0       	ldi	r24, 0x05	; 5
    1da2:	90 e6       	ldi	r25, 0x60	; 96
    1da4:	25 db       	rcall	.-2486   	; 0x13f0 <PDI::send_bytes(unsigned char const*, unsigned int)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:136
    return send_bytes(_set_ptr, sizeof(_set_ptr)) && recv_byte();
    1da6:	88 23       	and	r24, r24
    1da8:	09 f4       	brne	.+2      	; 0x1dac <PDI::read_memory()+0x8e>
    1daa:	47 c0       	rjmp	.+142    	; 0x1e3a <PDI::read_memory()+0x11c>
    1dac:	fd da       	rcall	.-2566   	; 0x13a8 <PDI::recv_byte()>
    1dae:	88 23       	and	r24, r24
    1db0:	09 f4       	brne	.+2      	; 0x1db4 <PDI::read_memory()+0x96>
    1db2:	43 c0       	rjmp	.+134    	; 0x1e3a <PDI::read_memory()+0x11c>
read_memory():
    1db4:	8d b3       	in	r24, 0x1d	; 29
    1db6:	80 93 07 61 	sts	0x6107, r24	; 0x806107 <packet+0x7>
    1dba:	82 e0       	ldi	r24, 0x02	; 2
    1dbc:	90 e0       	ldi	r25, 0x00	; 0
    1dbe:	df 91       	pop	r29
    1dc0:	cf 91       	pop	r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:251
    size_t  _rspsize = 0;
    D1PRINTF(" L=%04X,A=%08lX,", _wLength, _dwAddr);
    if (!nvm_cmd(0x43)) return 0;
    if (_wLength == 1) {
      if (recv_byte(_dwAddr)) {
        packet.in.data[0] = RXDATA;
    1dc2:	1f 91       	pop	r17
    1dc4:	0f 91       	pop	r16
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:252
        _rspsize = 1 + _wLength;
    1dc6:	ff 90       	pop	r15
    1dc8:	ef 90       	pop	r14
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:267
        _rspsize = 1 + _wLength;
        D2PRINTHEX(&packet.in.data[0], _wLength);
      }
    }
    return _rspsize;
  }
    1dca:	df 90       	pop	r13
    1dcc:	cf 90       	pop	r12
    1dce:	08 95       	ret
    1dd0:	c0 92 0f 60 	sts	0x600F, r12	; 0x80600f <PDI::_set_ptr32+0x1>
    1dd4:	d0 92 10 60 	sts	0x6010, r13	; 0x806010 <PDI::_set_ptr32+0x2>
    1dd8:	e0 92 11 60 	sts	0x6011, r14	; 0x806011 <PDI::_set_ptr32+0x3>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:256
        packet.in.data[0] = RXDATA;
        _rspsize = 1 + _wLength;
      }
    }
    else {
      _CAPS32(_set_ptr32[1])->dword = _dwAddr;
    1ddc:	f0 92 12 60 	sts	0x6012, r15	; 0x806012 <PDI::_set_ptr32+0x4>
    1de0:	ce 01       	movw	r24, r28
    1de2:	01 97       	sbiw	r24, 0x01	; 1
    1de4:	80 93 0b 60 	sts	0x600B, r24	; 0x80600b <PDI::_set_repeat+0x1>
    1de8:	90 93 0c 60 	sts	0x600C, r25	; 0x80600c <PDI::_set_repeat+0x2>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:257
      _CAPS16(_set_repeat[1])->word = _wLength - 1;
    1dec:	84 e2       	ldi	r24, 0x24	; 36
    1dee:	80 93 0d 60 	sts	0x600D, r24	; 0x80600d <PDI::_set_repeat+0x3>
    1df2:	65 e0       	ldi	r22, 0x05	; 5
    1df4:	70 e0       	ldi	r23, 0x00	; 0
    1df6:	8e e0       	ldi	r24, 0x0E	; 14
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:258
      _set_repeat[3] = 0x24;  /* LD PTR++ DATA1 */
    1df8:	90 e6       	ldi	r25, 0x60	; 96
    1dfa:	fa da       	rcall	.-2572   	; 0x13f0 <PDI::send_bytes(unsigned char const*, unsigned int)>
    1dfc:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:259
      if (send_bytes(_set_ptr32, sizeof(_set_ptr32))
    1dfe:	e9 f0       	breq	.+58     	; 0x1e3a <PDI::read_memory()+0x11c>
    1e00:	64 e0       	ldi	r22, 0x04	; 4
    1e02:	70 e0       	ldi	r23, 0x00	; 0
    1e04:	8a e0       	ldi	r24, 0x0A	; 10
    1e06:	90 e6       	ldi	r25, 0x60	; 96
    1e08:	f3 da       	rcall	.-2586   	; 0x13f0 <PDI::send_bytes(unsigned char const*, unsigned int)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:261
       && send_bytes(_set_repeat, sizeof(_set_repeat))
       && recv_bytes(&packet.in.data[0], _wLength)) {
    1e0a:	88 23       	and	r24, r24
    1e0c:	b1 f0       	breq	.+44     	; 0x1e3a <PDI::read_memory()+0x11c>
recv_bytes():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:260
    else {
      _CAPS32(_set_ptr32[1])->dword = _dwAddr;
      _CAPS16(_set_repeat[1])->word = _wLength - 1;
      _set_repeat[3] = 0x24;  /* LD PTR++ DATA1 */
      if (send_bytes(_set_ptr32, sizeof(_set_ptr32))
       && send_bytes(_set_repeat, sizeof(_set_repeat))
    1e0e:	c0 da       	rcall	.-2688   	; 0x1390 <PDI::stop_txd()>
    1e10:	00 e0       	ldi	r16, 0x00	; 0
    1e12:	11 e6       	ldi	r17, 0x61	; 97
    1e14:	9e 01       	movw	r18, r28
    1e16:	20 50       	subi	r18, 0x00	; 0
    1e18:	3f 49       	sbci	r19, 0x9F	; 159
    1e1a:	79 01       	movw	r14, r18
    1e1c:	0e 94 c9 05 	call	0xb92	; 0xb92 <PDI::recv()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:140
    _CAPS32(_set_ptr[1])->dword = _dwAddr;
    return send_bytes(_set_ptr, sizeof(_set_ptr)) && recv_byte();
  }

  bool recv_bytes (uint8_t* _data, size_t _len) {
    stop_txd();
    1e20:	88 23       	and	r24, r24
    1e22:	59 f0       	breq	.+22     	; 0x1e3a <PDI::read_memory()+0x11c>
    1e24:	8d b3       	in	r24, 0x1d	; 29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:144
    do {
      if (!recv()) return false;
      *_data++ = RXDATA;
    } while (--_len);
    1e26:	f8 01       	movw	r30, r16
    1e28:	87 83       	std	Z+7, r24	; 0x07
    1e2a:	0f 5f       	subi	r16, 0xFF	; 255
    1e2c:	1f 4f       	sbci	r17, 0xFF	; 255
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:142
  }

  bool recv_bytes (uint8_t* _data, size_t _len) {
    stop_txd();
    do {
      if (!recv()) return false;
    1e2e:	0e 15       	cp	r16, r14
    1e30:	1f 05       	cpc	r17, r15
    1e32:	a1 f7       	brne	.-24     	; 0x1e1c <PDI::read_memory()+0xfe>
read_memory():
    1e34:	ce 01       	movw	r24, r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:143
      *_data++ = RXDATA;
    1e36:	01 96       	adiw	r24, 0x01	; 1
    1e38:	c2 cf       	rjmp	.-124    	; 0x1dbe <PDI::read_memory()+0xa0>
    1e3a:	90 e0       	ldi	r25, 0x00	; 0
    1e3c:	80 e0       	ldi	r24, 0x00	; 0
    1e3e:	bf cf       	rjmp	.-130    	; 0x1dbe <PDI::read_memory()+0xa0>

00001e40 <USB::setup_device(bool) [clone .part.2]>:
_ZN3USB12setup_deviceEb.part.2():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:144
    } while (--_len);
    1e40:	cf 93       	push	r28
    1e42:	df 93       	push	r29
    1e44:	c0 e0       	ldi	r28, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:262
      _CAPS16(_set_repeat[1])->word = _wLength - 1;
      _set_repeat[3] = 0x24;  /* LD PTR++ DATA1 */
      if (send_bytes(_set_ptr32, sizeof(_set_ptr32))
       && send_bytes(_set_repeat, sizeof(_set_repeat))
       && recv_bytes(&packet.in.data[0], _wLength)) {
        _rspsize = 1 + _wLength;
    1e46:	dc e0       	ldi	r29, 0x0C	; 12
    1e48:	18 82       	st	Y, r1
    1e4a:	10 92 04 0c 	sts	0x0C04, r1	; 0x800c04 <__TEXT_REGION_LENGTH__+0x7f0c04>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:248
    uint8_t   m_type = packet.out.bMType;
    uint32_t _dwAddr = packet.out.dwAddr + get_mtype_offset(m_type);
    size_t  _wLength = packet.out.dwLength;
    size_t  _rspsize = 0;
    D1PRINTF(" L=%04X,A=%08lX,", _wLength, _dwAddr);
    if (!nvm_cmd(0x43)) return 0;
    1e4e:	80 e8       	ldi	r24, 0x80	; 128
    1e50:	94 e6       	ldi	r25, 0x64	; 100
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:236
    EP_MEM.cci_header.wIndex        = 1;    /* Interface#1 */
    EP_MEM.cci_header.wLength       = 2;
    EP_MEM.cci_wValue               = _state;
  }

  void setup_device (bool _force) {
    1e52:	80 93 06 0c 	sts	0x0C06, r24	; 0x800c06 <__TEXT_REGION_LENGTH__+0x7f0c06>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:240
    if (_led_mode != 3) SYS::LED_Flash();
    USB0_ADDR = 0;
    if (USB0_CTRLA || _force) {
      USB0_CTRLA = 0;
    1e56:	90 93 07 0c 	sts	0x0C07, r25	; 0x800c07 <__TEXT_REGION_LENGTH__+0x7f0c07>
    1e5a:	81 e0       	ldi	r24, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:241
      USB0_FIFOWP = 0;
    1e5c:	80 93 01 0c 	sts	0x0C01, r24	; 0x800c01 <__TEXT_REGION_LENGTH__+0x7f0c01>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:242
      USB0_EPPTR = (uint16_t)&EP_TABLE.EP;
    1e60:	1e ba       	out	0x1e, r1	; 30
    1e62:	1f ba       	out	0x1f, r1	; 31
    1e64:	1c ba       	out	0x1c, r1	; 28
    1e66:	10 92 76 64 	sts	0x6476, r1	; 0x806476 <_send_break>
    1e6a:	10 92 77 64 	sts	0x6477, r1	; 0x806477 <_send_break+0x1>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:243
      USB0_CTRLB = USB_ATTACH_bm;
    1e6e:	10 92 75 64 	sts	0x6475, r1	; 0x806475 <_send_count>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:244
      GPCONF = 0;
    1e72:	10 92 74 64 	sts	0x6474, r1	; 0x806474 <_recv_count>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:246
      PGCONF = 0;
      RXSTAT = 0;
    1e76:	10 92 73 64 	sts	0x6473, r1	; 0x806473 <_set_config>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:247
      _send_break = 0;
    1e7a:	10 92 72 64 	sts	0x6472, r1	; 0x806472 <_sof_count>
    1e7e:	4a e4       	ldi	r20, 0x4A	; 74
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:248
      _send_count = 0;
    1e80:	50 e0       	ldi	r21, 0x00	; 0
    1e82:	62 e4       	ldi	r22, 0x42	; 66
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:249
      _recv_count = 0;
    1e84:	79 e0       	ldi	r23, 0x09	; 9
    1e86:	88 e7       	ldi	r24, 0x78	; 120
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:250
      _set_config = 0;
    1e88:	94 e6       	ldi	r25, 0x64	; 100
    1e8a:	0e 94 11 27 	call	0x4e22	; 0x4e22 <memcpy_P>
set_cci_data():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:251
      _sof_count = 0;
    1e8e:	ea e5       	ldi	r30, 0x5A	; 90
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:252
      memcpy_P(&EP_TABLE, &ep_init, sizeof(EP_TABLE_t));
    1e90:	f3 e6       	ldi	r31, 0x63	; 99
    1e92:	81 ea       	ldi	r24, 0xA1	; 161
    1e94:	80 87       	std	Z+8, r24	; 0x08
    1e96:	80 e2       	ldi	r24, 0x20	; 32
    1e98:	81 87       	std	Z+9, r24	; 0x09
    1e9a:	12 86       	std	Z+10, r1	; 0x0a
    1e9c:	13 86       	std	Z+11, r1	; 0x0b
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:228
    return _size;
  }

  void set_cci_data (uint16_t _state) {
    _set_serial_state = _state;
    EP_MEM.cci_header.bmRequestType = 0xA1; /* REQTYPE_DIRECTION | REQTYPE_CLASS | RECIPIENT_INTERFACE */
    1e9e:	81 e0       	ldi	r24, 0x01	; 1
    1ea0:	90 e0       	ldi	r25, 0x00	; 0
    1ea2:	84 87       	std	Z+12, r24	; 0x0c
    1ea4:	95 87       	std	Z+13, r25	; 0x0d
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:229
    EP_MEM.cci_header.bRequest      = 0x20; /* CDC_REQ_SerialState */
    1ea6:	82 e0       	ldi	r24, 0x02	; 2
    1ea8:	90 e0       	ldi	r25, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:230
    EP_MEM.cci_header.wValue        = 0;
    1eaa:	86 87       	std	Z+14, r24	; 0x0e
    1eac:	97 87       	std	Z+15, r25	; 0x0f
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:231
    EP_MEM.cci_header.wIndex        = 1;    /* Interface#1 */
    1eae:	10 8a       	std	Z+16, r1	; 0x10
    1eb0:	11 8a       	std	Z+17, r1	; 0x11
_ZN3USB12setup_deviceEb.part.2():
    1eb2:	83 e8       	ldi	r24, 0x83	; 131
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:232
    EP_MEM.cci_header.wLength       = 2;
    1eb4:	88 83       	st	Y, r24
    1eb6:	df 91       	pop	r29
    1eb8:	cf 91       	pop	r28
    1eba:	08 95       	ret

00001ebc <USART::disable_vcp() [clone .part.1]>:
delay_micros():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:233
    EP_MEM.cci_wValue               = _state;
    1ebc:	8a e1       	ldi	r24, 0x1A	; 26
    1ebe:	8a 95       	dec	r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:254
      _recv_count = 0;
      _set_config = 0;
      _sof_count = 0;
      memcpy_P(&EP_TABLE, &ep_init, sizeof(EP_TABLE_t));
      set_cci_data(0x00);
      USB0_CTRLA = USB_ENABLE_bm | (USB_ENDPOINTS_MAX - 1);
    1ec0:	f1 f7       	brne	.-4      	; 0x1ebe <USART::disable_vcp() [clone .part.1]+0x2>
    1ec2:	00 c0       	rjmp	.+0      	; 0x1ec4 <USART::disable_vcp() [clone .part.1]+0x8>
_ZN5USART11disable_vcpEv.part.1():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:256
    }
  }
    1ec4:	8f b7       	in	r24, 0x3f	; 63
__iCliRetVal():
    1ec6:	f8 94       	cli
_ZN5USART11disable_vcpEv.part.1():
    1ec8:	10 92 06 08 	sts	0x0806, r1	; 0x800806 <__TEXT_REGION_LENGTH__+0x7f0806>
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/delay_busywait.h:33
static __inline__ __attribute__((__always_inline__)) void delay_micros (uint32_t _us);
static __inline__ __attribute__((__always_inline__)) void delay_millis (uint32_t _ms);

void delay_micros (uint32_t _us) {
  if (F_CPU >= 1000000L) {
    __builtin_avr_delay_cycles((F_CPU / 1000000L) * _us);
    1ecc:	10 92 05 08 	sts	0x0805, r1	; 0x800805 <__TEXT_REGION_LENGTH__+0x7f0805>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:77
  void disable_vcp (void) {
    if (USART0_CTRLB) {
      // D1PRINTF(" VCP=OFF\r\n");
      /* Allow time to move USART0_TXDATA */
      delay_micros(4);
      ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    1ed0:	1c ba       	out	0x1c, r1	; 28
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:50
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    1ed2:	1d ba       	out	0x1d, r1	; 29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:80
        /* Simply clearing the CTRLB does not disable the USART completely.                    */
        /* This errata is not documented for the AVR-DU, but is the same as for tinyAVR-0 etc. */
        USART0_CTRLB = 0;
    1ed4:	95 e1       	ldi	r25, 0x15	; 21
    1ed6:	90 93 e2 05 	sts	0x05E2, r25	; 0x8005e2 <__TEXT_REGION_LENGTH__+0x7f05e2>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:81
        USART0_CTRLA = 0;
    1eda:	f1 98       	cbi	0x1e, 1	; 30
__iRestore():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:82
        RXSTAT = 0;
    1edc:	8f bf       	out	0x3f, r24	; 63
_ZN5USART11disable_vcpEv.part.1():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:83
        RXDATA = 0;
    1ede:	88 e0       	ldi	r24, 0x08	; 8
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:84
        PORTMUX_USARTROUTEA = PORTMUX_USART_NONE;
    1ee0:	80 93 12 04 	sts	0x0412, r24	; 0x800412 <__TEXT_REGION_LENGTH__+0x7f0412>
    1ee4:	02 98       	cbi	0x00, 2	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:85
        bit_clear(GPCONF, GPCONF_VCP_bp);
    1ee6:	03 98       	cbi	0x00, 3	; 0
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:70
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    1ee8:	08 95       	ret

00001eea <USART::setup()>:
LED_TCB1():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:87
      }
      pinControlRegister(PIN_VCP_TXD) = PORT_PULLUPEN_bm;
    1eea:	80 91 ab 60 	lds	r24, 0x60AB	; 0x8060ab <_led_mode>
    1eee:	84 30       	cpi	r24, 0x04	; 4
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:88
      pinLogicOpen(PIN_VCP_TXD);  /* CONFIG_PGM_TYPE!=1 is internal shared TCLK */
    1ef0:	81 f0       	breq	.+32     	; 0x1f12 <USART::setup()+0x28>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:89
      pinLogicOpen(PIN_VCP_RXD);
    1ef2:	10 92 00 0a 	sts	0x0A00, r1	; 0x800a00 <__TEXT_REGION_LENGTH__+0x7f0a00>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:286
      _led_mode = 1;
    }
  }

  void LED_TCB1 (uint8_t _mode, uint16_t _ccmp) {
    if (_led_mode != _mode) {
    1ef6:	10 92 1a 0b 	sts	0x0B1A, r1	; 0x800b1a <__TEXT_REGION_LENGTH__+0x7f0b1a>
    1efa:	82 e2       	ldi	r24, 0x22	; 34
    1efc:	91 e1       	ldi	r25, 0x11	; 17
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:287
      TCA0_SPLIT_CTRLA = 0;
    1efe:	80 93 1c 0b 	sts	0x0B1C, r24	; 0x800b1c <__TEXT_REGION_LENGTH__+0x7f0b1c>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:288
      TCB1_CNTL = 0;
    1f02:	90 93 1d 0b 	sts	0x0B1D, r25	; 0x800b1d <__TEXT_REGION_LENGTH__+0x7f0b1d>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:289
      TCB1_CCMP = _ccmp;
    1f06:	8f e0       	ldi	r24, 0x0F	; 15
    1f08:	80 93 10 0b 	sts	0x0B10, r24	; 0x800b10 <__TEXT_REGION_LENGTH__+0x7f0b10>
    1f0c:	84 e0       	ldi	r24, 0x04	; 4
    1f0e:	80 93 ab 60 	sts	0x60AB, r24	; 0x8060ab <_led_mode>
disable_vcp():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:290
      TCB1_CTRLA = TCB_ENABLE_bm | TCB_CLKSEL_EVENT_gc;
    1f12:	80 91 06 08 	lds	r24, 0x0806	; 0x800806 <__TEXT_REGION_LENGTH__+0x7f0806>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:291
      _led_mode = _mode;
    1f16:	81 11       	cpse	r24, r1
    1f18:	d1 df       	rcall	.-94     	; 0x1ebc <USART::disable_vcp() [clone .part.1]>
setup():
    1f1a:	00 98       	cbi	0x00, 0	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:73
    } while (--_delay);
  }

  /*** Stop the VCP and release the ports in use. ***/
  void disable_vcp (void) {
    if (USART0_CTRLB) {
    1f1c:	01 98       	cbi	0x00, 1	; 0
    1f1e:	02 98       	cbi	0x00, 2	; 0
    1f20:	80 91 56 63 	lds	r24, 0x6356	; 0x806356 <_jtag_arch>
    1f24:	83 30       	cpi	r24, 0x03	; 3
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:30
namespace USART {

  void setup (void) {
    SYS::LED_Fast();
    disable_vcp();
    pinLogicOpen(PIN_PGM_TDAT);
    1f26:	19 f4       	brne	.+6      	; 0x1f2e <USART::setup()+0x44>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:31
    pinLogicOpen(PIN_PGM_TRST);
    1f28:	04 9a       	sbi	0x00, 4	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:32
    pinLogicOpen(PIN_PGM_TCLK);
    1f2a:	06 98       	cbi	0x00, 6	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:34
  #if CONFIG_PGM_TYPE == 0
    if (_jtag_arch == 3) {
    1f2c:	08 95       	ret
    1f2e:	04 98       	cbi	0x00, 4	; 0
    1f30:	fc cf       	rjmp	.-8      	; 0x1f2a <USART::setup()+0x40>

00001f32 <UPDI::sys_wait_clear(unsigned char)>:
sys_wait_clear():
    1f32:	cf 93       	push	r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:35
      pinLogicPush(PIN_PGM_PDAT);
    1f34:	df 93       	push	r29
delay_micros():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:40
    }
    else {
      pinLogicOpen(PIN_PGM_PDAT);
    }
    pinLogicOpen(PIN_PGM_PCLK);
    1f36:	e2 e1       	ldi	r30, 0x12	; 18
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:42
  #endif
  }
    1f38:	f1 e0       	ldi	r31, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:38
  #if CONFIG_PGM_TYPE == 0
    if (_jtag_arch == 3) {
      pinLogicPush(PIN_PGM_PDAT);
    }
    else {
      pinLogicOpen(PIN_PGM_PDAT);
    1f3a:	31 97       	sbiw	r30, 0x01	; 1
    1f3c:	f1 f7       	brne	.-4      	; 0x1f3a <UPDI::sys_wait_clear(unsigned char)+0x8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:258
      sys_status();
    } while (bit_is_clear(RXDATA, _bit));
    return true;
  }

  bool sys_wait_clear (uint8_t _bit) {
    1f3e:	00 c0       	rjmp	.+0      	; 0x1f40 <UPDI::sys_wait_clear(unsigned char)+0xe>
    1f40:	00 00       	nop
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/delay_busywait.h:33
    1f42:	c1 e0       	ldi	r28, 0x01	; 1
    1f44:	d0 e0       	ldi	r29, 0x00	; 0
    1f46:	02 c0       	rjmp	.+4      	; 0x1f4c <UPDI::sys_wait_clear(unsigned char)+0x1a>
    1f48:	cc 0f       	add	r28, r28
    1f4a:	dd 1f       	adc	r29, r29
    1f4c:	8a 95       	dec	r24
    1f4e:	e2 f7       	brpl	.-8      	; 0x1f48 <UPDI::sys_wait_clear(unsigned char)+0x16>
sys_wait_clear():
    1f50:	0e 94 06 06 	call	0xc0c	; 0xc0c <UPDI::sys_status()>
    1f54:	8d b3       	in	r24, 0x1d	; 29
    1f56:	90 e0       	ldi	r25, 0x00	; 0
    1f58:	8c 23       	and	r24, r28
    1f5a:	9d 23       	and	r25, r29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:261
    SYS::delay_55us();
    do {
      sys_status();
    1f5c:	89 2b       	or	r24, r25
    1f5e:	c1 f7       	brne	.-16     	; 0x1f50 <UPDI::sys_wait_clear(unsigned char)+0x1e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:262
    } while (bit_is_set(RXDATA, _bit));
    1f60:	81 e0       	ldi	r24, 0x01	; 1
    1f62:	df 91       	pop	r29
    1f64:	cf 91       	pop	r28
    1f66:	08 95       	ret

00001f68 <UPDI::sys_wait_set(unsigned char)>:
sys_wait_set():
    1f68:	cf 93       	push	r28
    1f6a:	df 93       	push	r29
delay_micros():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:264
    return true;
  }
    1f6c:	e2 e1       	ldi	r30, 0x12	; 18
    1f6e:	f1 e0       	ldi	r31, 0x01	; 1
    1f70:	31 97       	sbiw	r30, 0x01	; 1
    1f72:	f1 f7       	brne	.-4      	; 0x1f70 <UPDI::sys_wait_set(unsigned char)+0x8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:250
      key_status();
    } while (bit_is_set(RXDATA, _bit));
    return true;
  }

  bool sys_wait_set (uint8_t _bit) {
    1f74:	00 c0       	rjmp	.+0      	; 0x1f76 <UPDI::sys_wait_set(unsigned char)+0xe>
    1f76:	00 00       	nop
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/delay_busywait.h:33
    1f78:	c1 e0       	ldi	r28, 0x01	; 1
    1f7a:	d0 e0       	ldi	r29, 0x00	; 0
    1f7c:	02 c0       	rjmp	.+4      	; 0x1f82 <UPDI::sys_wait_set(unsigned char)+0x1a>
    1f7e:	cc 0f       	add	r28, r28
    1f80:	dd 1f       	adc	r29, r29
    1f82:	8a 95       	dec	r24
    1f84:	e2 f7       	brpl	.-8      	; 0x1f7e <UPDI::sys_wait_set(unsigned char)+0x16>
sys_wait_set():
    1f86:	0e 94 06 06 	call	0xc0c	; 0xc0c <UPDI::sys_status()>
    1f8a:	8d b3       	in	r24, 0x1d	; 29
    1f8c:	90 e0       	ldi	r25, 0x00	; 0
    1f8e:	8c 23       	and	r24, r28
    1f90:	9d 23       	and	r25, r29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:253
    SYS::delay_55us();
    do {
      sys_status();
    1f92:	89 2b       	or	r24, r25
    1f94:	c1 f3       	breq	.-16     	; 0x1f86 <UPDI::sys_wait_set(unsigned char)+0x1e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:254
    } while (bit_is_clear(RXDATA, _bit));
    1f96:	81 e0       	ldi	r24, 0x01	; 1
    1f98:	df 91       	pop	r29
    1f9a:	cf 91       	pop	r28
    1f9c:	08 95       	ret

00001f9e <UPDI::key_wait_set(unsigned char)>:
key_wait_set():
    1f9e:	cf 93       	push	r28
    1fa0:	df 93       	push	r29
delay_micros():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:256
    return true;
  }
    1fa2:	e2 e1       	ldi	r30, 0x12	; 18
    1fa4:	f1 e0       	ldi	r31, 0x01	; 1
    1fa6:	31 97       	sbiw	r30, 0x01	; 1
    1fa8:	f1 f7       	brne	.-4      	; 0x1fa6 <UPDI::key_wait_set(unsigned char)+0x8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:234
  bool sys_status (void) {
    const static uint8_t _sys_stat[] = {0x55, 0x8B};
    return send_bytes(_sys_stat, 2) && recv();
  }

  bool key_wait_set (uint8_t _bit) {
    1faa:	00 c0       	rjmp	.+0      	; 0x1fac <UPDI::key_wait_set(unsigned char)+0xe>
    1fac:	00 00       	nop
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/delay_busywait.h:33
    1fae:	c1 e0       	ldi	r28, 0x01	; 1
    1fb0:	d0 e0       	ldi	r29, 0x00	; 0
    1fb2:	02 c0       	rjmp	.+4      	; 0x1fb8 <UPDI::key_wait_set(unsigned char)+0x1a>
    1fb4:	cc 0f       	add	r28, r28
    1fb6:	dd 1f       	adc	r29, r29
    1fb8:	8a 95       	dec	r24
    1fba:	e2 f7       	brpl	.-8      	; 0x1fb4 <UPDI::key_wait_set(unsigned char)+0x16>
key_wait_set():
    1fbc:	0e 94 0f 06 	call	0xc1e	; 0xc1e <UPDI::key_status()>
    1fc0:	8d b3       	in	r24, 0x1d	; 29
    1fc2:	90 e0       	ldi	r25, 0x00	; 0
    1fc4:	8c 23       	and	r24, r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:237
    SYS::delay_55us();
    do {
      key_status();
    1fc6:	9d 23       	and	r25, r29
    1fc8:	89 2b       	or	r24, r25
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:238
    } while (bit_is_clear(RXDATA, _bit));
    1fca:	c1 f3       	breq	.-16     	; 0x1fbc <UPDI::key_wait_set(unsigned char)+0x1e>
    1fcc:	81 e0       	ldi	r24, 0x01	; 1
    1fce:	df 91       	pop	r29
    1fd0:	cf 91       	pop	r28
    1fd2:	08 95       	ret

00001fd4 <UPDI::set_nvmprog_key(bool)>:
set_nvmprog_key():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:240
    return true;
  }
    1fd4:	cf 93       	push	r28
    1fd6:	c8 2f       	mov	r28, r24
    1fd8:	8c ef       	ldi	r24, 0xFC	; 252
    1fda:	97 e0       	ldi	r25, 0x07	; 7
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:266
      sys_status();
    } while (bit_is_set(RXDATA, _bit));
    return true;
  }

  bool set_nvmprog_key (bool _reset = true) {
    1fdc:	9f 93       	push	r25
    1fde:	8f 93       	push	r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:267
    D1PRINTF(" PROG_KEY=");   /* wait set NVMPROG */
    1fe0:	83 eb       	ldi	r24, 0xB3	; 179
    1fe2:	90 e6       	ldi	r25, 0x60	; 96
    1fe4:	9f 93       	push	r25
    1fe6:	8f 93       	push	r24
    1fe8:	23 dc       	rcall	.-1978   	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
    1fea:	6a e0       	ldi	r22, 0x0A	; 10
    1fec:	70 e0       	ldi	r23, 0x00	; 0
    1fee:	83 e6       	ldi	r24, 0x63	; 99
    1ff0:	90 e6       	ldi	r25, 0x60	; 96
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:268
    if (!send_bytes(nvmprog_key, sizeof(nvmprog_key)) || !key_wait_set(4)) return false;
    1ff2:	0e 94 ec 05 	call	0xbd8	; 0xbd8 <UPDI::send_bytes(unsigned char const*, unsigned int)>
    1ff6:	0f 90       	pop	r0
    1ff8:	0f 90       	pop	r0
    1ffa:	0f 90       	pop	r0
    1ffc:	0f 90       	pop	r0
    1ffe:	81 11       	cpse	r24, r1
    2000:	03 c0       	rjmp	.+6      	; 0x2008 <__DATA_REGION_LENGTH__+0x8>
    2002:	80 e0       	ldi	r24, 0x00	; 0
    2004:	cf 91       	pop	r28
    2006:	08 95       	ret
    2008:	84 e0       	ldi	r24, 0x04	; 4
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:270
    return _reset ? sys_reset(false) : true;
  }
    200a:	c9 df       	rcall	.-110    	; 0x1f9e <UPDI::key_wait_set(unsigned char)>
    200c:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:268
    return true;
  }

  bool set_nvmprog_key (bool _reset = true) {
    D1PRINTF(" PROG_KEY=");   /* wait set NVMPROG */
    if (!send_bytes(nvmprog_key, sizeof(nvmprog_key)) || !key_wait_set(4)) return false;
    200e:	c9 f3       	breq	.-14     	; 0x2002 <__DATA_REGION_LENGTH__+0x2>
    2010:	cc 23       	and	r28, r28
    2012:	c1 f3       	breq	.-16     	; 0x2004 <__DATA_REGION_LENGTH__+0x4>
sys_reset():
    2014:	66 e0       	ldi	r22, 0x06	; 6
    2016:	70 e0       	ldi	r23, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:269
    return _reset ? sys_reset(false) : true;
    2018:	87 e9       	ldi	r24, 0x97	; 151
    201a:	90 e6       	ldi	r25, 0x60	; 96
set_nvmprog_key():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:137
    const static uint8_t _reset[] = {
      0x55, 0xC8, 0x59, /* SYSRST */
      0x55, 0xC8, 0x00, /* SYSRUN */
      0x55, 0xC3, 0x04  /* UPDIDIS */
    };
    return send_bytes(_reset, _leave ? 9 : 6);
    201c:	cf 91       	pop	r28
sys_reset():
    201e:	0c 94 ec 05 	jmp	0xbd8	; 0xbd8 <UPDI::send_bytes(unsigned char const*, unsigned int)>

00002022 <UPDI::enter_progmode()>:
enter_progmode():
    2022:	f9 99       	sbic	0x1f, 1	; 31
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:270

  bool set_nvmprog_key (bool _reset = true) {
    D1PRINTF(" PROG_KEY=");   /* wait set NVMPROG */
    if (!send_bytes(nvmprog_key, sizeof(nvmprog_key)) || !key_wait_set(4)) return false;
    return _reset ? sys_reset(false) : true;
  }
    2024:	2c c0       	rjmp	.+88     	; 0x207e <UPDI::enter_progmode()+0x5c>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:137
    const static uint8_t _reset[] = {
      0x55, 0xC8, 0x59, /* SYSRST */
      0x55, 0xC8, 0x00, /* SYSRUN */
      0x55, 0xC3, 0x04  /* UPDIDIS */
    };
    return send_bytes(_reset, _leave ? 9 : 6);
    2026:	81 e0       	ldi	r24, 0x01	; 1
    2028:	d5 df       	rcall	.-86     	; 0x1fd4 <UPDI::set_nvmprog_key(bool)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:470
  inline size_t disconnect (void) {
    return sys_reset(true);
  }

  size_t enter_progmode (void) {
    if (bit_is_set(PGCONF, PGCONF_PROG_bp)) return 1;
    202a:	88 23       	and	r24, r24
    202c:	59 f1       	breq	.+86     	; 0x2084 <UPDI::enter_progmode()+0x62>
delay_micros():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:473

    /* Enter NVMPROGKEY. */
    if (!set_nvmprog_key()) return 0;
    202e:	82 e1       	ldi	r24, 0x12	; 18
    2030:	91 e0       	ldi	r25, 0x01	; 1
    2032:	01 97       	sbiw	r24, 0x01	; 1
    2034:	f1 f7       	brne	.-4      	; 0x2032 <UPDI::enter_progmode()+0x10>
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/delay_busywait.h:33
    2036:	00 c0       	rjmp	.+0      	; 0x2038 <UPDI::enter_progmode()+0x16>
    2038:	00 00       	nop
key_wait_clear():
    203a:	0e 94 0f 06 	call	0xc1e	; 0xc1e <UPDI::key_status()>
    203e:	ec 99       	sbic	0x1d, 4	; 29
    2040:	fc cf       	rjmp	.-8      	; 0x203a <UPDI::enter_progmode()+0x18>
enter_progmode():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:245
  }

  bool key_wait_clear (uint8_t _bit) {
    SYS::delay_55us();
    do {
      key_status();
    2042:	0e 94 06 06 	call	0xc0c	; 0xc0c <UPDI::sys_status()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:246
    } while (bit_is_set(RXDATA, _bit));
    2046:	88 23       	and	r24, r24
    2048:	41 f0       	breq	.+16     	; 0x205a <UPDI::enter_progmode()+0x38>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:477
    /* Enter NVMPROGKEY. */
    if (!set_nvmprog_key()) return 0;

    /* Verify that the NVMPROG bit is cleared. */
    /* A locked device does not have LOCKSTATUS cleared. */
    if (key_wait_clear(4) && sys_status() && bit_is_clear(RXDATA, 0)) {
    204a:	e8 99       	sbic	0x1d, 0	; 29
    204c:	06 c0       	rjmp	.+12     	; 0x205a <UPDI::enter_progmode()+0x38>
    204e:	f9 9a       	sbi	0x1f, 1	; 31
    2050:	e0 91 4e 63 	lds	r30, 0x634E	; 0x80634e <Command_Table>
    2054:	f0 91 4f 63 	lds	r31, 0x634F	; 0x80634f <Command_Table+0x1>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:479
      bit_set(PGCONF, PGCONF_PROG_bp);
      (*Command_Table.prog_init)();
    2058:	09 95       	icall
    205a:	8d b3       	in	r24, 0x1d	; 29
    205c:	1f 92       	push	r1
    205e:	8f 93       	push	r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:481
    }
    D1PRINTF("%02X\r\n", RXDATA);
    2060:	88 ef       	ldi	r24, 0xF8	; 248
    2062:	98 e0       	ldi	r25, 0x08	; 8
    2064:	9f 93       	push	r25
    2066:	8f 93       	push	r24
    2068:	83 eb       	ldi	r24, 0xB3	; 179
    206a:	90 e6       	ldi	r25, 0x60	; 96
    206c:	9f 93       	push	r25
    206e:	8f 93       	push	r24
    2070:	df db       	rcall	.-2114   	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
    2072:	0f 90       	pop	r0
    2074:	0f 90       	pop	r0
    2076:	0f 90       	pop	r0
    2078:	0f 90       	pop	r0
    207a:	0f 90       	pop	r0
    207c:	0f 90       	pop	r0
    207e:	81 e0       	ldi	r24, 0x01	; 1
    2080:	90 e0       	ldi	r25, 0x00	; 0
    2082:	08 95       	ret
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:470
  inline size_t disconnect (void) {
    return sys_reset(true);
  }

  size_t enter_progmode (void) {
    if (bit_is_set(PGCONF, PGCONF_PROG_bp)) return 1;
    2084:	90 e0       	ldi	r25, 0x00	; 0
    2086:	80 e0       	ldi	r24, 0x00	; 0
    2088:	08 95       	ret

0000208a <UPDI::write_userrow()>:
write_userrow():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:473

    /* Enter NVMPROGKEY. */
    if (!set_nvmprog_key()) return 0;
    208a:	bf 92       	push	r11
    208c:	cf 92       	push	r12
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:485
    }
    D1PRINTF("%02X\r\n", RXDATA);

    /* In either case it returns success. */
    return 1;
  }
    208e:	df 92       	push	r13
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:312
  /*
   * Use the UPDI ACC to write to the USERROW of the locked chip.
   * The write start address should match the USERROW address.
   * The write length should match the USERROW field.
   */
  bool write_userrow (void) {
    2090:	ef 92       	push	r14
    2092:	ff 92       	push	r15
    2094:	0f 93       	push	r16
    2096:	1f 93       	push	r17
    2098:	cf 93       	push	r28
    209a:	df 93       	push	r29
    209c:	f8 99       	sbic	0x1f, 0	; 31
    209e:	0c c0       	rjmp	.+24     	; 0x20b8 <UPDI::write_userrow()+0x2e>
    20a0:	10 e0       	ldi	r17, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:321
    uint32_t _dwAddr = packet.out.dwAddr;
    size_t  _wLength = packet.out.dwLength;
    if (bit_is_clear(PGCONF, PGCONF_UPDI_bp)
     || m_type != 0xC5
     || _wLength != Device_Descriptor.UPDI.user_sig_bytes
     || (uint16_t)_dwAddr != Device_Descriptor.UPDI.user_sig_base) return false;
    20a2:	81 2f       	mov	r24, r17
    20a4:	df 91       	pop	r29
    20a6:	cf 91       	pop	r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:342
      sys_wait_set(3);    /* wait set PROGSTART */
      D1PRINTF(" RE_PROGSTART=%02X\r\n", RXDATA);
      return true;
    }
    else return sys_reset(false);
  }
    20a8:	1f 91       	pop	r17
    20aa:	0f 91       	pop	r16
    20ac:	ff 90       	pop	r15
    20ae:	ef 90       	pop	r14
    20b0:	df 90       	pop	r13
    20b2:	cf 90       	pop	r12
    20b4:	bf 90       	pop	r11
    20b6:	08 95       	ret
    20b8:	80 91 07 61 	lds	r24, 0x6107	; 0x806107 <packet+0x7>
    20bc:	85 3c       	cpi	r24, 0xC5	; 197
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:319
    const static uint8_t _urowstop[] = { 0x55, 0xC7, 0x20 };  /* ASI_KEY_STATUS <= UROWWR */
    uint8_t   m_type = packet.out.bMType;
    uint32_t _dwAddr = packet.out.dwAddr;
    size_t  _wLength = packet.out.dwLength;
    if (bit_is_clear(PGCONF, PGCONF_UPDI_bp)
     || m_type != 0xC5
    20be:	81 f7       	brne	.-32     	; 0x20a0 <UPDI::write_userrow()+0x16>
    20c0:	00 91 36 63 	lds	r16, 0x6336	; 0x806336 <Device_Descriptor+0x18>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:320
     || _wLength != Device_Descriptor.UPDI.user_sig_bytes
    20c4:	10 91 37 63 	lds	r17, 0x6337	; 0x806337 <Device_Descriptor+0x19>
    20c8:	80 91 0c 61 	lds	r24, 0x610C	; 0x80610c <packet+0xc>
    20cc:	90 91 0d 61 	lds	r25, 0x610D	; 0x80610d <packet+0xd>
    20d0:	08 17       	cp	r16, r24
    20d2:	19 07       	cpc	r17, r25
    20d4:	29 f7       	brne	.-54     	; 0x20a0 <UPDI::write_userrow()+0x16>
    20d6:	c0 90 08 61 	lds	r12, 0x6108	; 0x806108 <packet+0x8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:316
   */
  bool write_userrow (void) {
    const static uint8_t _urowdone[] = { 0x55, 0xCA, 0x03 };  /* ASI_SYS_CTRLA <= UROWDONE|CLKREQ */
    const static uint8_t _urowstop[] = { 0x55, 0xC7, 0x20 };  /* ASI_KEY_STATUS <= UROWWR */
    uint8_t   m_type = packet.out.bMType;
    uint32_t _dwAddr = packet.out.dwAddr;
    20da:	d0 90 09 61 	lds	r13, 0x6109	; 0x806109 <packet+0x9>
    20de:	e0 90 0a 61 	lds	r14, 0x610A	; 0x80610a <packet+0xa>
    20e2:	f0 90 0b 61 	lds	r15, 0x610B	; 0x80610b <packet+0xb>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:321
    size_t  _wLength = packet.out.dwLength;
    if (bit_is_clear(PGCONF, PGCONF_UPDI_bp)
     || m_type != 0xC5
     || _wLength != Device_Descriptor.UPDI.user_sig_bytes
     || (uint16_t)_dwAddr != Device_Descriptor.UPDI.user_sig_base) return false;
    20e6:	80 91 40 63 	lds	r24, 0x6340	; 0x806340 <Device_Descriptor+0x22>
    20ea:	90 91 41 63 	lds	r25, 0x6341	; 0x806341 <Device_Descriptor+0x23>
    20ee:	8c 15       	cp	r24, r12
    20f0:	9d 05       	cpc	r25, r13
    20f2:	b1 f6       	brne	.-84     	; 0x20a0 <UPDI::write_userrow()+0x16>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:322
    USART::drain();
    20f4:	0e 94 16 05 	call	0xa2c	; 0xa2c <USART::drain(unsigned int) [clone .constprop.13]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:323
    D1PRINTF(" ENTER_UROW=%04lX:%04X\r\n", _dwAddr, _wLength);
    20f8:	1f 93       	push	r17
    20fa:	0f 93       	push	r16
    20fc:	ff 92       	push	r15
    20fe:	ef 92       	push	r14
    2100:	df 92       	push	r13
    2102:	cf 92       	push	r12
    2104:	85 e8       	ldi	r24, 0x85	; 133
    2106:	98 e0       	ldi	r25, 0x08	; 8
    2108:	9f 93       	push	r25
    210a:	8f 93       	push	r24
    210c:	c3 eb       	ldi	r28, 0xB3	; 179
    210e:	d0 e6       	ldi	r29, 0x60	; 96
    2110:	df 93       	push	r29
    2112:	cf 93       	push	r28
    2114:	8d db       	rcall	.-2278   	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:324
    DFLUSH();
    2116:	80 91 b5 60 	lds	r24, 0x60B5	; 0x8060b5 <Serial1C+0x2>
    211a:	90 91 b6 60 	lds	r25, 0x60B6	; 0x8060b6 <Serial1C+0x3>
    211e:	0e 94 c1 05 	call	0xb82	; 0xb82 <UsartBaseClass::flush() [clone .isra.0] [clone .lto_priv.18]>
set_urowwrite_key():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:280
    if (!send_bytes(erase_key, sizeof(erase_key)) || !key_wait_set(3)) return false;
    return sys_reset(false);
  }

  bool set_urowwrite_key (void) {
    D1PRINTF(" UROW_KEY=");   /* wait set UROWWRITE */
    2122:	85 e4       	ldi	r24, 0x45	; 69
    2124:	98 e0       	ldi	r25, 0x08	; 8
    2126:	9f 93       	push	r25
    2128:	8f 93       	push	r24
    212a:	df 93       	push	r29
    212c:	cf 93       	push	r28
    212e:	80 db       	rcall	.-2304   	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
    2130:	6a e0       	ldi	r22, 0x0A	; 10
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:281
    if (!send_bytes(urowwrite_key, sizeof(urowwrite_key)) || !key_wait_set(5)) return false;
    2132:	70 e0       	ldi	r23, 0x00	; 0
    2134:	87 e7       	ldi	r24, 0x77	; 119
    2136:	90 e6       	ldi	r25, 0x60	; 96
    2138:	0e 94 ec 05 	call	0xbd8	; 0xbd8 <UPDI::send_bytes(unsigned char const*, unsigned int)>
    213c:	2d b7       	in	r18, 0x3d	; 61
    213e:	3e b7       	in	r19, 0x3e	; 62
    2140:	22 5f       	subi	r18, 0xF2	; 242
    2142:	3f 4f       	sbci	r19, 0xFF	; 255
    2144:	2d bf       	out	0x3d, r18	; 61
    2146:	3e bf       	out	0x3e, r19	; 62
    2148:	88 23       	and	r24, r24
    214a:	09 f4       	brne	.+2      	; 0x214e <UPDI::write_userrow()+0xc4>
    214c:	a9 cf       	rjmp	.-174    	; 0x20a0 <UPDI::write_userrow()+0x16>
    214e:	85 e0       	ldi	r24, 0x05	; 5
    2150:	26 df       	rcall	.-436    	; 0x1f9e <UPDI::key_wait_set(unsigned char)>
    2152:	88 23       	and	r24, r24
    2154:	09 f4       	brne	.+2      	; 0x2158 <UPDI::write_userrow()+0xce>
    2156:	a4 cf       	rjmp	.-184    	; 0x20a0 <UPDI::write_userrow()+0x16>
sys_reset():
    2158:	66 e0       	ldi	r22, 0x06	; 6
    215a:	70 e0       	ldi	r23, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:137
    const static uint8_t _reset[] = {
      0x55, 0xC8, 0x59, /* SYSRST */
      0x55, 0xC8, 0x00, /* SYSRUN */
      0x55, 0xC3, 0x04  /* UPDIDIS */
    };
    return send_bytes(_reset, _leave ? 9 : 6);
    215c:	87 e9       	ldi	r24, 0x97	; 151
    215e:	90 e6       	ldi	r25, 0x60	; 96
    2160:	0e 94 ec 05 	call	0xbd8	; 0xbd8 <UPDI::send_bytes(unsigned char const*, unsigned int)>
write_userrow():
    2164:	88 23       	and	r24, r24
    2166:	09 f4       	brne	.+2      	; 0x216a <UPDI::write_userrow()+0xe0>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:325
     || _wLength != Device_Descriptor.UPDI.user_sig_bytes
     || (uint16_t)_dwAddr != Device_Descriptor.UPDI.user_sig_base) return false;
    USART::drain();
    D1PRINTF(" ENTER_UROW=%04lX:%04X\r\n", _dwAddr, _wLength);
    DFLUSH();
    if (!set_urowwrite_key()) return false;
    2168:	9b cf       	rjmp	.-202    	; 0x20a0 <UPDI::write_userrow()+0x16>
    216a:	82 e0       	ldi	r24, 0x02	; 2
    216c:	fd de       	rcall	.-518    	; 0x1f68 <UPDI::sys_wait_set(unsigned char)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:326
    sys_wait_set(2);      /* wait set UROWPROG */
    216e:	8d b3       	in	r24, 0x1d	; 29
    2170:	9d b3       	in	r25, 0x1d	; 29
    2172:	86 95       	lsr	r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:327
    D1PRINTF("<SYS:%02X:%d>\r\n", RXDATA, bit_is_clear(RXDATA, 2));
    2174:	86 95       	lsr	r24
    2176:	bb 24       	eor	r11, r11
    2178:	b3 94       	inc	r11
    217a:	8b 25       	eor	r24, r11
    217c:	81 70       	andi	r24, 0x01	; 1
    217e:	1f 92       	push	r1
    2180:	8f 93       	push	r24
    2182:	1f 92       	push	r1
    2184:	9f 93       	push	r25
    2186:	85 e7       	ldi	r24, 0x75	; 117
    2188:	98 e0       	ldi	r25, 0x08	; 8
    218a:	9f 93       	push	r25
    218c:	8f 93       	push	r24
    218e:	df 93       	push	r29
    2190:	cf 93       	push	r28
    2192:	4e db       	rcall	.-2404   	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
    2194:	80 91 b5 60 	lds	r24, 0x60B5	; 0x8060b5 <Serial1C+0x2>
    2198:	90 91 b6 60 	lds	r25, 0x60B6	; 0x8060b6 <Serial1C+0x3>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:328
    DFLUSH();
    219c:	0e 94 c1 05 	call	0xb82	; 0xb82 <UsartBaseClass::flush() [clone .isra.0] [clone .lto_priv.18]>
    21a0:	a8 01       	movw	r20, r16
    21a2:	c7 01       	movw	r24, r14
    21a4:	b6 01       	movw	r22, r12
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:329
    send_words_block(_dwAddr, _wLength);
    21a6:	0e 94 32 06 	call	0xc64	; 0xc64 <UPDI::send_words_block(unsigned long, unsigned int)>
delay_micros():
    21aa:	83 ef       	ldi	r24, 0xF3	; 243
    21ac:	91 e0       	ldi	r25, 0x01	; 1
    21ae:	01 97       	sbiw	r24, 0x01	; 1
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/delay_busywait.h:33
    21b0:	f1 f7       	brne	.-4      	; 0x21ae <UPDI::write_userrow()+0x124>
    21b2:	00 c0       	rjmp	.+0      	; 0x21b4 <UPDI::write_userrow()+0x12a>
    21b4:	00 00       	nop
write_userrow():
    21b6:	63 e0       	ldi	r22, 0x03	; 3
    21b8:	70 e0       	ldi	r23, 0x00	; 0
    21ba:	84 e8       	ldi	r24, 0x84	; 132
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:331
    SYS::delay_100us();
    send_bytes(_urowdone, 3);
    21bc:	90 e6       	ldi	r25, 0x60	; 96
    21be:	0e 94 ec 05 	call	0xbd8	; 0xbd8 <UPDI::send_bytes(unsigned char const*, unsigned int)>
    21c2:	82 e0       	ldi	r24, 0x02	; 2
    21c4:	b6 de       	rcall	.-660    	; 0x1f32 <UPDI::sys_wait_clear(unsigned char)>
    21c6:	8d b3       	in	r24, 0x1d	; 29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:332
    sys_wait_clear(2);    /* wait clear UROWPROG */
    21c8:	9d b3       	in	r25, 0x1d	; 29
    21ca:	86 95       	lsr	r24
    21cc:	86 95       	lsr	r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:333
    D1PRINTF("<SYS:%02X:%d>\r\n", RXDATA, bit_is_clear(RXDATA, 2));
    21ce:	8b 25       	eor	r24, r11
    21d0:	81 70       	andi	r24, 0x01	; 1
    21d2:	1f 92       	push	r1
    21d4:	8f 93       	push	r24
    21d6:	1f 92       	push	r1
    21d8:	9f 93       	push	r25
    21da:	85 e6       	ldi	r24, 0x65	; 101
    21dc:	98 e0       	ldi	r25, 0x08	; 8
    21de:	9f 93       	push	r25
    21e0:	8f 93       	push	r24
    21e2:	df 93       	push	r29
    21e4:	cf 93       	push	r28
    21e6:	24 db       	rcall	.-2488   	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
    21e8:	80 91 b5 60 	lds	r24, 0x60B5	; 0x8060b5 <Serial1C+0x2>
    21ec:	90 91 b6 60 	lds	r25, 0x60B6	; 0x8060b6 <Serial1C+0x3>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:334
    DFLUSH();
    21f0:	0e 94 c1 05 	call	0xb82	; 0xb82 <UsartBaseClass::flush() [clone .isra.0] [clone .lto_priv.18]>
    21f4:	63 e0       	ldi	r22, 0x03	; 3
    21f6:	70 e0       	ldi	r23, 0x00	; 0
    21f8:	81 e8       	ldi	r24, 0x81	; 129
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:335
    send_bytes(_urowstop, 3);
    21fa:	90 e6       	ldi	r25, 0x60	; 96
    21fc:	0e 94 ec 05 	call	0xbd8	; 0xbd8 <UPDI::send_bytes(unsigned char const*, unsigned int)>
    2200:	8d b7       	in	r24, 0x3d	; 61
    2202:	9e b7       	in	r25, 0x3e	; 62
    2204:	40 96       	adiw	r24, 0x10	; 16
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:336
    if (bit_is_set(PGCONF, PGCONF_PROG_bp) && set_nvmprog_key()) {
    2206:	8d bf       	out	0x3d, r24	; 61
    2208:	9e bf       	out	0x3e, r25	; 62
    220a:	f9 99       	sbic	0x1f, 1	; 31
    220c:	0f c0       	rjmp	.+30     	; 0x222c <UPDI::write_userrow()+0x1a2>
sys_reset():
    220e:	66 e0       	ldi	r22, 0x06	; 6
    2210:	70 e0       	ldi	r23, 0x00	; 0
    2212:	87 e9       	ldi	r24, 0x97	; 151
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:137
    const static uint8_t _reset[] = {
      0x55, 0xC8, 0x59, /* SYSRST */
      0x55, 0xC8, 0x00, /* SYSRUN */
      0x55, 0xC3, 0x04  /* UPDIDIS */
    };
    return send_bytes(_reset, _leave ? 9 : 6);
    2214:	90 e6       	ldi	r25, 0x60	; 96
write_userrow():
    2216:	df 91       	pop	r29
    2218:	cf 91       	pop	r28
    221a:	1f 91       	pop	r17
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:342
      sys_wait_set(3);    /* wait set PROGSTART */
      D1PRINTF(" RE_PROGSTART=%02X\r\n", RXDATA);
      return true;
    }
    else return sys_reset(false);
  }
    221c:	0f 91       	pop	r16
    221e:	ff 90       	pop	r15
    2220:	ef 90       	pop	r14
    2222:	df 90       	pop	r13
    2224:	cf 90       	pop	r12
    2226:	bf 90       	pop	r11
sys_reset():
    2228:	0c 94 ec 05 	jmp	0xbd8	; 0xbd8 <UPDI::send_bytes(unsigned char const*, unsigned int)>
write_userrow():
    222c:	81 e0       	ldi	r24, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:137
    const static uint8_t _reset[] = {
      0x55, 0xC8, 0x59, /* SYSRST */
      0x55, 0xC8, 0x00, /* SYSRUN */
      0x55, 0xC3, 0x04  /* UPDIDIS */
    };
    return send_bytes(_reset, _leave ? 9 : 6);
    222e:	d2 de       	rcall	.-604    	; 0x1fd4 <UPDI::set_nvmprog_key(bool)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:336
    send_bytes(_urowdone, 3);
    sys_wait_clear(2);    /* wait clear UROWPROG */
    D1PRINTF("<SYS:%02X:%d>\r\n", RXDATA, bit_is_clear(RXDATA, 2));
    DFLUSH();
    send_bytes(_urowstop, 3);
    if (bit_is_set(PGCONF, PGCONF_PROG_bp) && set_nvmprog_key()) {
    2230:	18 2f       	mov	r17, r24
    2232:	88 23       	and	r24, r24
    2234:	61 f3       	breq	.-40     	; 0x220e <UPDI::write_userrow()+0x184>
    2236:	83 e0       	ldi	r24, 0x03	; 3
    2238:	97 de       	rcall	.-722    	; 0x1f68 <UPDI::sys_wait_set(unsigned char)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:337
      sys_wait_set(3);    /* wait set PROGSTART */
    223a:	8d b3       	in	r24, 0x1d	; 29
    223c:	1f 92       	push	r1
    223e:	8f 93       	push	r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:338
      D1PRINTF(" RE_PROGSTART=%02X\r\n", RXDATA);
    2240:	80 e5       	ldi	r24, 0x50	; 80
    2242:	98 e0       	ldi	r25, 0x08	; 8
    2244:	9f 93       	push	r25
    2246:	8f 93       	push	r24
    2248:	df 93       	push	r29
    224a:	cf 93       	push	r28
    224c:	f1 da       	rcall	.-2590   	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
    224e:	0f 90       	pop	r0
    2250:	0f 90       	pop	r0
    2252:	0f 90       	pop	r0
    2254:	0f 90       	pop	r0
    2256:	0f 90       	pop	r0
    2258:	0f 90       	pop	r0
    225a:	23 cf       	rjmp	.-442    	; 0x20a2 <UPDI::write_userrow()+0x18>

0000225c <NVM::V0::write_memory()>:
write_memory():
    225c:	4f 92       	push	r4
    225e:	5f 92       	push	r5
    2260:	6f 92       	push	r6
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:142
    }
    /* Page erase will not be used if received. */
    return 1;
  }

  size_t write_memory (void) {
    2262:	7f 92       	push	r7
    2264:	af 92       	push	r10
    2266:	bf 92       	push	r11
    2268:	cf 92       	push	r12
    226a:	df 92       	push	r13
    226c:	ef 92       	push	r14
    226e:	ff 92       	push	r15
    2270:	0f 93       	push	r16
    2272:	1f 93       	push	r17
    2274:	cf 93       	push	r28
    2276:	df 93       	push	r29
    2278:	00 d0       	rcall	.+0      	; 0x227a <NVM::V0::write_memory()+0x1e>
    227a:	00 d0       	rcall	.+0      	; 0x227c <NVM::V0::write_memory()+0x20>
    227c:	cd b7       	in	r28, 0x3d	; 61
    227e:	de b7       	in	r29, 0x3e	; 62
    2280:	f9 99       	sbic	0x1f, 1	; 31
    2282:	14 c0       	rjmp	.+40     	; 0x22ac <NVM::V0::write_memory()+0x50>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:146
    uint8_t  m_type = packet.out.bMType;
    uint16_t _wAddr = packet.out.dwAddr;
    size_t _wLength = packet.out.dwLength;
    if (bit_is_clear(PGCONF, PGCONF_PROG_bp)) return UPDI::write_userrow();
    2284:	02 df       	rcall	.-508    	; 0x208a <UPDI::write_userrow()>
    2286:	90 e0       	ldi	r25, 0x00	; 0
    2288:	24 96       	adiw	r28, 0x04	; 4
    228a:	cd bf       	out	0x3d, r28	; 61
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:166
      _wAddr += Device_Descriptor.UPDI.prog_base;
      return write_flash(_wAddr, _wLength);
    }
    else {
      /* MTYPE_SRAM */
      return UPDI::send_bytes_block(_wAddr, _wLength);
    228c:	de bf       	out	0x3e, r29	; 62
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:168
    }
  }
    228e:	df 91       	pop	r29
    2290:	cf 91       	pop	r28
    2292:	1f 91       	pop	r17
    2294:	0f 91       	pop	r16
    2296:	ff 90       	pop	r15
    2298:	ef 90       	pop	r14
    229a:	df 90       	pop	r13
    229c:	cf 90       	pop	r12
    229e:	bf 90       	pop	r11
    22a0:	af 90       	pop	r10
    22a2:	7f 90       	pop	r7
    22a4:	6f 90       	pop	r6
    22a6:	5f 90       	pop	r5
    22a8:	4f 90       	pop	r4
    22aa:	08 95       	ret
    22ac:	80 91 07 61 	lds	r24, 0x6107	; 0x806107 <packet+0x7>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:143
    /* Page erase will not be used if received. */
    return 1;
  }

  size_t write_memory (void) {
    uint8_t  m_type = packet.out.bMType;
    22b0:	c0 90 08 61 	lds	r12, 0x6108	; 0x806108 <packet+0x8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:144
    uint16_t _wAddr = packet.out.dwAddr;
    22b4:	d0 90 09 61 	lds	r13, 0x6109	; 0x806109 <packet+0x9>
    22b8:	e0 90 0a 61 	lds	r14, 0x610A	; 0x80610a <packet+0xa>
    22bc:	f0 90 0b 61 	lds	r15, 0x610B	; 0x80610b <packet+0xb>
    22c0:	96 01       	movw	r18, r12
    22c2:	00 91 0c 61 	lds	r16, 0x610C	; 0x80610c <packet+0xc>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:145
    size_t _wLength = packet.out.dwLength;
    22c6:	10 91 0d 61 	lds	r17, 0x610D	; 0x80610d <packet+0xd>
    22ca:	9e e4       	ldi	r25, 0x4E	; 78
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:147
    if (bit_is_clear(PGCONF, PGCONF_PROG_bp)) return UPDI::write_userrow();
    if (m_type == 0xB2 || m_type == 0xB3) {
    22cc:	98 0f       	add	r25, r24
    22ce:	92 30       	cpi	r25, 0x02	; 2
    22d0:	08 f0       	brcs	.+2      	; 0x22d4 <NVM::V0::write_memory()+0x78>
    22d2:	46 c0       	rjmp	.+140    	; 0x2360 <NVM::V0::write_memory()+0x104>
    22d4:	80 e0       	ldi	r24, 0x00	; 0
    22d6:	e8 2e       	mov	r14, r24
    22d8:	81 e6       	ldi	r24, 0x61	; 97
    22da:	f8 2e       	mov	r15, r24
write_fuse():
    22dc:	c9 01       	movw	r24, r18
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:73
      uint16_t data;  /* NVMCTRL_REG_DATA */
      uint16_t addr;  /* NVMCTRL_REG_ADDR */
    } fuses;
    for (size_t _i = 0; _i < _wLength; _i++) {
      fuses.data = packet.out.memData[_i];
      fuses.addr = _wAddr + _i;
    22de:	80 50       	subi	r24, 0x00	; 0
    22e0:	91 46       	sbci	r25, 0x61	; 97
    22e2:	6c 01       	movw	r12, r24
    22e4:	c7 01       	movw	r24, r14
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:71
  bool write_fuse (uint16_t _wAddr, size_t _wLength) {
    struct fuse_packet_t {
      uint16_t data;  /* NVMCTRL_REG_DATA */
      uint16_t addr;  /* NVMCTRL_REG_ADDR */
    } fuses;
    for (size_t _i = 0; _i < _wLength; _i++) {
    22e6:	80 50       	subi	r24, 0x00	; 0
    22e8:	91 46       	sbci	r25, 0x61	; 97
    22ea:	80 17       	cp	r24, r16
    22ec:	91 07       	cpc	r25, r17
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:72
      fuses.data = packet.out.memData[_i];
    22ee:	b0 f5       	brcc	.+108    	; 0x235c <NVM::V0::write_memory()+0x100>
    22f0:	f7 01       	movw	r30, r14
    22f2:	81 89       	ldd	r24, Z+17	; 0x11
    22f4:	90 e0       	ldi	r25, 0x00	; 0
    22f6:	89 83       	std	Y+1, r24	; 0x01
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:73
      fuses.addr = _wAddr + _i;
    22f8:	9a 83       	std	Y+2, r25	; 0x02
    22fa:	c6 01       	movw	r24, r12
    22fc:	8e 0d       	add	r24, r14
    22fe:	9f 1d       	adc	r25, r15
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:75
      D2PRINTF(" NVM_V0_WFU=%04X<%02X\r\n", fuses.addr, fuses.data);
      nvm_wait();
    2300:	8b 83       	std	Y+3, r24	; 0x03
    2302:	9c 83       	std	Y+4, r25	; 0x04
    2304:	dc d9       	rcall	.-3144   	; 0x16be <NVM::V0::nvm_wait()>
    2306:	ce 01       	movw	r24, r28
    2308:	01 96       	adiw	r24, 0x01	; 1
    230a:	5c 01       	movw	r10, r24
    230c:	66 e0       	ldi	r22, 0x06	; 6
    230e:	70 e1       	ldi	r23, 0x10	; 16
    2310:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:210
      && clear_rsd();
  }

  bool send_bytes_data (uint32_t _dwAddr, uint8_t* _data, size_t _wLength) {
    for (size_t _i = 0; _i < _wLength; _i++) {
      if (!send_byte(_dwAddr++, *_data++)) return false;
    2312:	90 e0       	ldi	r25, 0x00	; 0
send_bytes_data():
    2314:	f5 01       	movw	r30, r10
    2316:	41 91       	ld	r20, Z+
    2318:	5f 01       	movw	r10, r30
    231a:	2b 01       	movw	r4, r22
    231c:	3c 01       	movw	r6, r24
    231e:	ff ef       	ldi	r31, 0xFF	; 255
    2320:	4f 1a       	sub	r4, r31
    2322:	5f 0a       	sbc	r5, r31
    2324:	6f 0a       	sbc	r6, r31
    2326:	7f 0a       	sbc	r7, r31
    2328:	0e 94 70 06 	call	0xce0	; 0xce0 <UPDI::send_byte(unsigned long, unsigned char)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:78
      if (!(UPDI::send_bytes_data(NVM_DATA, (uint8_t*)&fuses, 4)
        && UPDI::nvm_ctrl(0x07)   /* NVM_CMD_WFU */
        && (nvm_wait() & 7) == 0)) return false;
    232c:	81 11       	cpse	r24, r1
    232e:	02 c0       	rjmp	.+4      	; 0x2334 <NVM::V0::write_memory()+0xd8>
write_memory():
    2330:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:209
      && send_bytes(&packet.out.memData[0], _wLength & ~1)
      && clear_rsd();
  }

  bool send_bytes_data (uint32_t _dwAddr, uint8_t* _data, size_t _wLength) {
    for (size_t _i = 0; _i < _wLength; _i++) {
    2332:	a9 cf       	rjmp	.-174    	; 0x2286 <NVM::V0::write_memory()+0x2a>
    2334:	c3 01       	movw	r24, r6
    2336:	b2 01       	movw	r22, r4
send_bytes_data():
    2338:	6a 30       	cpi	r22, 0x0A	; 10
    233a:	20 e1       	ldi	r18, 0x10	; 16
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:77
      fuses.data = packet.out.memData[_i];
      fuses.addr = _wAddr + _i;
      D2PRINTF(" NVM_V0_WFU=%04X<%02X\r\n", fuses.addr, fuses.data);
      nvm_wait();
      if (!(UPDI::send_bytes_data(NVM_DATA, (uint8_t*)&fuses, 4)
        && UPDI::nvm_ctrl(0x07)   /* NVM_CMD_WFU */
    233c:	72 07       	cpc	r23, r18
    233e:	81 05       	cpc	r24, r1
    2340:	91 05       	cpc	r25, r1
    2342:	41 f7       	brne	.-48     	; 0x2314 <NVM::V0::write_memory()+0xb8>
write_fuse():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:78
        && (nvm_wait() & 7) == 0)) return false;
    2344:	87 e0       	ldi	r24, 0x07	; 7
    2346:	0e 94 8d 06 	call	0xd1a	; 0xd1a <UPDI::nvm_ctrl(unsigned char)>
    234a:	88 23       	and	r24, r24
    234c:	89 f3       	breq	.-30     	; 0x2330 <NVM::V0::write_memory()+0xd4>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:76
    for (size_t _i = 0; _i < _wLength; _i++) {
      fuses.data = packet.out.memData[_i];
      fuses.addr = _wAddr + _i;
      D2PRINTF(" NVM_V0_WFU=%04X<%02X\r\n", fuses.addr, fuses.data);
      nvm_wait();
      if (!(UPDI::send_bytes_data(NVM_DATA, (uint8_t*)&fuses, 4)
    234e:	b7 d9       	rcall	.-3218   	; 0x16be <NVM::V0::nvm_wait()>
    2350:	9f ef       	ldi	r25, 0xFF	; 255
    2352:	e9 1a       	sub	r14, r25
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:80
        && UPDI::nvm_ctrl(0x07)   /* NVM_CMD_WFU */
        && (nvm_wait() & 7) == 0)) return false;
    }
    return true;
    2354:	f9 0a       	sbc	r15, r25
    2356:	87 70       	andi	r24, 0x07	; 7
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:152
    if (m_type == 0xB2 || m_type == 0xB3) {
      /* MTYPE_FUSE_BITS */
      /* MTYPE_LOCK_BITS */
      return write_fuse(_wAddr, _wLength);
    }
    else if (m_type == 0x22 || m_type == 0xC4 || m_type == 0xC5) {
    2358:	29 f2       	breq	.-118    	; 0x22e4 <NVM::V0::write_memory()+0x88>
    235a:	ea cf       	rjmp	.-44     	; 0x2330 <NVM::V0::write_memory()+0xd4>
write_memory():
    235c:	81 e0       	ldi	r24, 0x01	; 1
    235e:	93 cf       	rjmp	.-218    	; 0x2286 <NVM::V0::write_memory()+0x2a>
    2360:	82 32       	cpi	r24, 0x22	; 34
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:99
    );
  }

  bool write_eeprom (uint16_t _wAddr, size_t _wLength) {
    D2PRINTF(" NVM_V0_ERWP=%04X\r\n", _wAddr);
    nvm_wait();
    2362:	21 f0       	breq	.+8      	; 0x236c <NVM::V0::write_memory()+0x110>
    2364:	9c e3       	ldi	r25, 0x3C	; 60
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:101
    return (
      UPDI::send_bytes_block(_wAddr, _wLength)
    2366:	98 0f       	add	r25, r24
    2368:	92 30       	cpi	r25, 0x02	; 2
    236a:	60 f4       	brcc	.+24     	; 0x2384 <NVM::V0::write_memory()+0x128>
write_eeprom():
    236c:	a8 d9       	rcall	.-3248   	; 0x16be <NVM::V0::nvm_wait()>
    236e:	c7 01       	movw	r24, r14
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:91
      nvm_wait();
      UPDI::nvm_ctrl(0x04);       /* NVM_CMD_PBC */
    }
    nvm_wait();
    return (
      UPDI::send_bytes_block(_wAddr, _wLength)
    2370:	b6 01       	movw	r22, r12
    2372:	88 27       	eor	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:93
      && UPDI::nvm_ctrl(0x03)     /* NVM_CMD_ERWP */
      && (nvm_wait() & 7) == 0
    2374:	99 27       	eor	r25, r25
    2376:	a8 01       	movw	r20, r16
write_flash():
    2378:	0e 94 bd 06 	call	0xd7a	; 0xd7a <UPDI::send_bytes_block(unsigned long, unsigned int)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:158
      /* MTYPE_EEPROM */
      /* MTYPE_EEPROM_XMEGA */
      /* MTYPE_USERSIG (USERROW) */
      return write_eeprom(_wAddr, _wLength);
    }
    else if (m_type == 0xB0 || m_type == 0xC0) {
    237c:	81 11       	cpse	r24, r1
    237e:	1d c0       	rjmp	.+58     	; 0x23ba <NVM::V0::write_memory()+0x15e>
    2380:	90 e0       	ldi	r25, 0x00	; 0
    2382:	24 c0       	rjmp	.+72     	; 0x23cc <NVM::V0::write_memory()+0x170>
write_memory():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:161
      /* MTYPE_FLASH_PAGE (PROGMEM) */
      /* MTYPE_FLASH (alias) */
      _wAddr += Device_Descriptor.UPDI.prog_base;
    2384:	80 3b       	cpi	r24, 0xB0	; 176
    2386:	11 f0       	breq	.+4      	; 0x238c <NVM::V0::write_memory()+0x130>
    2388:	80 3c       	cpi	r24, 0xC0	; 192
    238a:	11 f5       	brne	.+68     	; 0x23d0 <NVM::V0::write_memory()+0x174>
    238c:	60 91 1e 63 	lds	r22, 0x631E	; 0x80631e <Device_Descriptor>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:85
    return true;
  }

  bool write_flash (uint16_t _wAddr, size_t _wLength) {
    D2PRINTF(" NVM_V0_ERWP=%04X\r\n", _wAddr);
    if (SYS::is_boundary_flash_page(_wAddr)) {
    2390:	70 91 1f 63 	lds	r23, 0x631F	; 0x80631f <Device_Descriptor+0x1>
    2394:	c6 0e       	add	r12, r22
    2396:	d7 1e       	adc	r13, r23
write_flash():
    2398:	f1 2c       	mov	r15, r1
    239a:	e1 2c       	mov	r14, r1
    239c:	c7 01       	movw	r24, r14
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:86
      nvm_wait();
    239e:	b6 01       	movw	r22, r12
    23a0:	0e 94 e4 08 	call	0x11c8	; 0x11c8 <SYS::is_boundary_flash_page(unsigned long)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:87
      UPDI::nvm_ctrl(0x04);       /* NVM_CMD_PBC */
    23a4:	88 23       	and	r24, r24
    23a6:	21 f0       	breq	.+8      	; 0x23b0 <NVM::V0::write_memory()+0x154>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:89
    }
    nvm_wait();
    23a8:	8a d9       	rcall	.-3308   	; 0x16be <NVM::V0::nvm_wait()>
    23aa:	84 e0       	ldi	r24, 0x04	; 4
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:91
    return (
      UPDI::send_bytes_block(_wAddr, _wLength)
    23ac:	0e 94 8d 06 	call	0xd1a	; 0xd1a <UPDI::nvm_ctrl(unsigned char)>
    23b0:	86 d9       	rcall	.-3316   	; 0x16be <NVM::V0::nvm_wait()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:92
      && UPDI::nvm_ctrl(0x03)     /* NVM_CMD_ERWP */
    23b2:	a8 01       	movw	r20, r16
    23b4:	c7 01       	movw	r24, r14
    23b6:	b6 01       	movw	r22, r12
    23b8:	df cf       	rjmp	.-66     	; 0x2378 <NVM::V0::write_memory()+0x11c>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:93
      && (nvm_wait() & 7) == 0
    23ba:	83 e0       	ldi	r24, 0x03	; 3
    23bc:	0e 94 8d 06 	call	0xd1a	; 0xd1a <UPDI::nvm_ctrl(unsigned char)>
    23c0:	88 23       	and	r24, r24
    23c2:	f1 f2       	breq	.-68     	; 0x2380 <NVM::V0::write_memory()+0x124>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:162
    }
    else if (m_type == 0xB0 || m_type == 0xC0) {
      /* MTYPE_FLASH_PAGE (PROGMEM) */
      /* MTYPE_FLASH (alias) */
      _wAddr += Device_Descriptor.UPDI.prog_base;
      return write_flash(_wAddr, _wLength);
    23c4:	7c d9       	rcall	.-3336   	; 0x16be <NVM::V0::nvm_wait()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:166
    }
    else {
      /* MTYPE_SRAM */
      return UPDI::send_bytes_block(_wAddr, _wLength);
    23c6:	87 70       	andi	r24, 0x07	; 7
    23c8:	91 e0       	ldi	r25, 0x01	; 1
    23ca:	d1 f6       	brne	.-76     	; 0x2380 <NVM::V0::write_memory()+0x124>
write_memory():
    23cc:	89 2f       	mov	r24, r25
    23ce:	5b cf       	rjmp	.-330    	; 0x2286 <NVM::V0::write_memory()+0x2a>
    23d0:	c7 01       	movw	r24, r14
    23d2:	b6 01       	movw	r22, r12
    23d4:	88 27       	eor	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:155
    /* Page erase will not be used if received. */
    /* Instead, page erase is determined by the is_boundary_flash_page function. */
    return 1;
  }

  size_t write_memory (void) {
    23d6:	99 27       	eor	r25, r25
    23d8:	a8 01       	movw	r20, r16
    23da:	0e 94 bd 06 	call	0xd7a	; 0xd7a <UPDI::send_bytes_block(unsigned long, unsigned int)>
    23de:	53 cf       	rjmp	.-346    	; 0x2286 <NVM::V0::write_memory()+0x2a>

000023e0 <NVM::V2::write_memory()>:
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:159
    uint8_t   m_type = packet.out.bMType;
    uint32_t _dwAddr = packet.out.dwAddr;
    size_t  _wLength = packet.out.dwLength;
    if (bit_is_clear(PGCONF, PGCONF_PROG_bp)) return UPDI::write_userrow();
    23e0:	cf 92       	push	r12
    23e2:	df 92       	push	r13
    23e4:	ef 92       	push	r14
    23e6:	ff 92       	push	r15
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:179
      _dwAddr += PROG_START;
      return write_words_flash(_dwAddr, _wLength);
    }
    else {
      /* MTYPE_SRAM */
      return UPDI::send_bytes_block(_dwAddr, _wLength);
    23e8:	cf 93       	push	r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:181
    }
  }
    23ea:	df 93       	push	r29
    23ec:	f9 99       	sbic	0x1f, 1	; 31
    23ee:	09 c0       	rjmp	.+18     	; 0x2402 <NVM::V2::write_memory()+0x22>
    23f0:	4c de       	rcall	.-872    	; 0x208a <UPDI::write_userrow()>
    23f2:	90 e0       	ldi	r25, 0x00	; 0
    23f4:	df 91       	pop	r29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:156
    /* Instead, page erase is determined by the is_boundary_flash_page function. */
    return 1;
  }

  size_t write_memory (void) {
    uint8_t   m_type = packet.out.bMType;
    23f6:	cf 91       	pop	r28
    23f8:	ff 90       	pop	r15
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:157
    uint32_t _dwAddr = packet.out.dwAddr;
    23fa:	ef 90       	pop	r14
    23fc:	df 90       	pop	r13
    23fe:	cf 90       	pop	r12
    2400:	08 95       	ret
    2402:	80 91 07 61 	lds	r24, 0x6107	; 0x806107 <packet+0x7>
    2406:	c0 90 08 61 	lds	r12, 0x6108	; 0x806108 <packet+0x8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:158
    size_t  _wLength = packet.out.dwLength;
    240a:	d0 90 09 61 	lds	r13, 0x6109	; 0x806109 <packet+0x9>
    240e:	e0 90 0a 61 	lds	r14, 0x610A	; 0x80610a <packet+0xa>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:160
    if (bit_is_clear(PGCONF, PGCONF_PROG_bp)) return UPDI::write_userrow();
    if (m_type == 0x22 || m_type == 0xB2 || m_type == 0xB3 || m_type == 0xC4) {
    2412:	f0 90 0b 61 	lds	r15, 0x610B	; 0x80610b <packet+0xb>
    2416:	c0 91 0c 61 	lds	r28, 0x610C	; 0x80610c <packet+0xc>
    241a:	d0 91 0d 61 	lds	r29, 0x610D	; 0x80610d <packet+0xd>
    241e:	82 32       	cpi	r24, 0x22	; 34
    2420:	31 f0       	breq	.+12     	; 0x242e <NVM::V2::write_memory()+0x4e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:105
  }

  bool write_eeprom (uint32_t _dwAddr, size_t _wLength) {
    D2PRINTF(" NVM_V2_EEERWR=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x13)   /* NVM_V2_CMD_EEERWR */
    2422:	9e e4       	ldi	r25, 0x4E	; 78
    2424:	98 0f       	add	r25, r24
    2426:	92 30       	cpi	r25, 0x02	; 2
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:108
      && UPDI::send_bytes_block_slow(_dwAddr, _wLength)
      && (nvm_wait() & 0x73) == 0
      && nvm_ctrl_change(0x00)
    2428:	10 f0       	brcs	.+4      	; 0x242e <NVM::V2::write_memory()+0x4e>
    242a:	84 3c       	cpi	r24, 0xC4	; 196
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:87
    D2PRINTF(" NVM_V2_FLWR=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x02)   /* NVM_V2_CMD_FLWR */
      && UPDI::send_words_block(_dwAddr, _wLength)
      && (nvm_wait() & 0x73) == 0
      && nvm_ctrl_change(0x00)
    242c:	91 f4       	brne	.+36     	; 0x2452 <NVM::V2::write_memory()+0x72>
write_eeprom():
    242e:	83 e1       	ldi	r24, 0x13	; 19
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:106

  bool write_eeprom (uint32_t _dwAddr, size_t _wLength) {
    D2PRINTF(" NVM_V2_EEERWR=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x13)   /* NVM_V2_CMD_EEERWR */
      && UPDI::send_bytes_block_slow(_dwAddr, _wLength)
    2430:	58 d9       	rcall	.-3408   	; 0x16e2 <NVM::V2::nvm_ctrl_change(unsigned char)>
    2432:	81 11       	cpse	r24, r1
    2434:	02 c0       	rjmp	.+4      	; 0x243a <NVM::V2::write_memory()+0x5a>
write_memory():
    2436:	80 e0       	ldi	r24, 0x00	; 0
    2438:	dc cf       	rjmp	.-72     	; 0x23f2 <NVM::V2::write_memory()+0x12>
write_eeprom():
    243a:	ae 01       	movw	r20, r28
    243c:	c7 01       	movw	r24, r14
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:107
      && (nvm_wait() & 0x73) == 0
    243e:	b6 01       	movw	r22, r12
    2440:	0e 94 93 06 	call	0xd26	; 0xd26 <UPDI::send_bytes_block_slow(unsigned long, unsigned int)>
    2444:	88 23       	and	r24, r24
    2446:	b9 f3       	breq	.-18     	; 0x2436 <NVM::V2::write_memory()+0x56>
    2448:	3a d9       	rcall	.-3468   	; 0x16be <NVM::V0::nvm_wait()>
    244a:	83 77       	andi	r24, 0x73	; 115
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:167
      /* MTYPE_LOCK_BITS */
      /* MTYPE_EEPROM */
      /* MTYPE_EEPROM_XMEGA */
      return write_eeprom(_dwAddr, _wLength);
    }
    else if (m_type == 0xC0 || m_type == 0xC5) {
    244c:	a1 f7       	brne	.-24     	; 0x2436 <NVM::V2::write_memory()+0x56>
    244e:	66 d9       	rcall	.-3380   	; 0x171c <NVM::V2::write_eeprom(unsigned long, unsigned int) [clone .part.5]>
    2450:	d0 cf       	rjmp	.-96     	; 0x23f2 <NVM::V2::write_memory()+0x12>
write_memory():
    2452:	80 3c       	cpi	r24, 0xC0	; 192
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:92
      && nvm_ctrl_change(0x00)
    );
  }

  bool write_bytes_flash (uint32_t _dwAddr, size_t _wLength) {
    if (SYS::is_boundary_flash_page(_dwAddr)) erase_flash_page(_dwAddr);
    2454:	11 f0       	breq	.+4      	; 0x245a <NVM::V2::write_memory()+0x7a>
    2456:	85 3c       	cpi	r24, 0xC5	; 197
    2458:	c9 f4       	brne	.+50     	; 0x248c <NVM::V2::write_memory()+0xac>
write_bytes_flash():
    245a:	c7 01       	movw	r24, r14
    245c:	b6 01       	movw	r22, r12
    245e:	0e 94 e4 08 	call	0x11c8	; 0x11c8 <SYS::is_boundary_flash_page(unsigned long)>
    2462:	88 23       	and	r24, r24
    2464:	19 f0       	breq	.+6      	; 0x246c <NVM::V2::write_memory()+0x8c>
    2466:	c7 01       	movw	r24, r14
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:95
    D2PRINTF(" NVM_V2_FLWR=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x02)   /* NVM_V2_CMD_FLWR */
    2468:	b6 01       	movw	r22, r12
    246a:	5a d9       	rcall	.-3404   	; 0x1720 <NVM::V2::erase_flash_page(unsigned long)>
    246c:	82 e0       	ldi	r24, 0x02	; 2
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:98
      && UPDI::send_bytes_block_slow(_dwAddr, _wLength)
      && (nvm_wait() & 0x73) == 0
      && nvm_ctrl_change(0x00)
    246e:	39 d9       	rcall	.-3470   	; 0x16e2 <NVM::V2::nvm_ctrl_change(unsigned char)>
    2470:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:96
  bool write_bytes_flash (uint32_t _dwAddr, size_t _wLength) {
    if (SYS::is_boundary_flash_page(_dwAddr)) erase_flash_page(_dwAddr);
    D2PRINTF(" NVM_V2_FLWR=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x02)   /* NVM_V2_CMD_FLWR */
      && UPDI::send_bytes_block_slow(_dwAddr, _wLength)
    2472:	09 f3       	breq	.-62     	; 0x2436 <NVM::V2::write_memory()+0x56>
    2474:	ae 01       	movw	r20, r28
    2476:	c7 01       	movw	r24, r14
    2478:	b6 01       	movw	r22, r12
    247a:	0e 94 93 06 	call	0xd26	; 0xd26 <UPDI::send_bytes_block_slow(unsigned long, unsigned int)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:97
      && (nvm_wait() & 0x73) == 0
    247e:	88 23       	and	r24, r24
    2480:	d1 f2       	breq	.-76     	; 0x2436 <NVM::V2::write_memory()+0x56>
    2482:	1d d9       	rcall	.-3526   	; 0x16be <NVM::V0::nvm_wait()>
    2484:	83 77       	andi	r24, 0x73	; 115
    2486:	b9 f6       	brne	.-82     	; 0x2436 <NVM::V2::write_memory()+0x56>
    2488:	49 d9       	rcall	.-3438   	; 0x171c <NVM::V2::write_eeprom(unsigned long, unsigned int) [clone .part.5]>
    248a:	b3 cf       	rjmp	.-154    	; 0x23f2 <NVM::V2::write_memory()+0x12>
write_memory():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:172
    else if (m_type == 0xC0 || m_type == 0xC5) {
      /* MTYPE_FLASH (alias) */
      /* MTYPE_USERSIG (USERROW) */
      return write_bytes_flash(_dwAddr, _wLength);
    }
    else if (m_type == 0xB0) {
    248c:	80 3b       	cpi	r24, 0xB0	; 176
    248e:	09 f5       	brne	.+66     	; 0x24d2 <NVM::V2::write_memory()+0xf2>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:174
      /* MTYPE_FLASH_PAGE (PROGMEM) */
      _dwAddr += PROG_START;
    2490:	80 e8       	ldi	r24, 0x80	; 128
    2492:	e8 0e       	add	r14, r24
    2494:	f1 1c       	adc	r15, r1
write_words_flash():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:81
    );
  }

  bool write_words_flash (uint32_t _dwAddr, size_t _wLength) {
    if (bit_is_clear(PGCONF, PGCONF_ERSE_bp)
      && SYS::is_boundary_flash_page(_dwAddr)) erase_flash_page(_dwAddr);
    2496:	fa 99       	sbic	0x1f, 2	; 31
    2498:	09 c0       	rjmp	.+18     	; 0x24ac <NVM::V2::write_memory()+0xcc>
    249a:	c7 01       	movw	r24, r14
    249c:	b6 01       	movw	r22, r12
    249e:	0e 94 e4 08 	call	0x11c8	; 0x11c8 <SYS::is_boundary_flash_page(unsigned long)>
    24a2:	88 23       	and	r24, r24
    24a4:	19 f0       	breq	.+6      	; 0x24ac <NVM::V2::write_memory()+0xcc>
    24a6:	c7 01       	movw	r24, r14
    24a8:	b6 01       	movw	r22, r12
    24aa:	3a d9       	rcall	.-3468   	; 0x1720 <NVM::V2::erase_flash_page(unsigned long)>
    24ac:	82 e0       	ldi	r24, 0x02	; 2
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:84
    D2PRINTF(" NVM_V2_FLWR=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x02)   /* NVM_V2_CMD_FLWR */
    24ae:	19 d9       	rcall	.-3534   	; 0x16e2 <NVM::V2::nvm_ctrl_change(unsigned char)>
    24b0:	88 23       	and	r24, r24
    24b2:	09 f4       	brne	.+2      	; 0x24b6 <NVM::V2::write_memory()+0xd6>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:87
      && UPDI::send_words_block(_dwAddr, _wLength)
      && (nvm_wait() & 0x73) == 0
      && nvm_ctrl_change(0x00)
    24b4:	c0 cf       	rjmp	.-128    	; 0x2436 <NVM::V2::write_memory()+0x56>
    24b6:	ae 01       	movw	r20, r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:85
    if (bit_is_clear(PGCONF, PGCONF_ERSE_bp)
      && SYS::is_boundary_flash_page(_dwAddr)) erase_flash_page(_dwAddr);
    D2PRINTF(" NVM_V2_FLWR=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x02)   /* NVM_V2_CMD_FLWR */
      && UPDI::send_words_block(_dwAddr, _wLength)
    24b8:	c7 01       	movw	r24, r14
    24ba:	b6 01       	movw	r22, r12
    24bc:	0e 94 32 06 	call	0xc64	; 0xc64 <UPDI::send_words_block(unsigned long, unsigned int)>
    24c0:	88 23       	and	r24, r24
    24c2:	09 f4       	brne	.+2      	; 0x24c6 <NVM::V2::write_memory()+0xe6>
    24c4:	b8 cf       	rjmp	.-144    	; 0x2436 <NVM::V2::write_memory()+0x56>
    24c6:	fb d8       	rcall	.-3594   	; 0x16be <NVM::V0::nvm_wait()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:86
      && (nvm_wait() & 0x73) == 0
    24c8:	83 77       	andi	r24, 0x73	; 115
    24ca:	09 f0       	breq	.+2      	; 0x24ce <NVM::V2::write_memory()+0xee>
    24cc:	b4 cf       	rjmp	.-152    	; 0x2436 <NVM::V2::write_memory()+0x56>
    24ce:	26 d9       	rcall	.-3508   	; 0x171c <NVM::V2::write_eeprom(unsigned long, unsigned int) [clone .part.5]>
    24d0:	90 cf       	rjmp	.-224    	; 0x23f2 <NVM::V2::write_memory()+0x12>
write_memory():
    24d2:	ae 01       	movw	r20, r28
    24d4:	c7 01       	movw	r24, r14
    24d6:	b6 01       	movw	r22, r12
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:179
      _dwAddr += PROG_START;
      return write_words_flash(_dwAddr, _wLength);
    }
    else {
      /* MTYPE_SRAM */
      return UPDI::send_bytes_block(_dwAddr, _wLength);
    24d8:	0e 94 bd 06 	call	0xd7a	; 0xd7a <UPDI::send_bytes_block(unsigned long, unsigned int)>
    24dc:	8a cf       	rjmp	.-236    	; 0x23f2 <NVM::V2::write_memory()+0x12>

000024de <NVM::V3::write_memory()>:
    24de:	cf 92       	push	r12
    24e0:	df 92       	push	r13
    24e2:	ef 92       	push	r14
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:133
    }
    /* Page erase will not be used if received. */
    return 1;
  }

  size_t write_memory (void) {
    24e4:	ff 92       	push	r15
    24e6:	cf 93       	push	r28
    24e8:	df 93       	push	r29
    24ea:	f9 99       	sbic	0x1f, 1	; 31
    24ec:	09 c0       	rjmp	.+18     	; 0x2500 <NVM::V3::write_memory()+0x22>
    24ee:	cd dd       	rcall	.-1126   	; 0x208a <UPDI::write_userrow()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:137
    uint8_t   m_type = packet.out.bMType;
    uint32_t _dwAddr = packet.out.dwAddr;
    size_t  _wLength = packet.out.dwLength;
    if (bit_is_clear(PGCONF, PGCONF_PROG_bp)) return UPDI::write_userrow();
    24f0:	90 e0       	ldi	r25, 0x00	; 0
    24f2:	df 91       	pop	r29
    24f4:	cf 91       	pop	r28
    24f6:	ff 90       	pop	r15
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:157
      _dwAddr += PROG_START;
      return write_words_flash(_dwAddr, _wLength);
    }
    else {
      /* MTYPE_SRAM */
      return UPDI::send_bytes_block(_dwAddr, _wLength);
    24f8:	ef 90       	pop	r14
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:159
    }
  }
    24fa:	df 90       	pop	r13
    24fc:	cf 90       	pop	r12
    24fe:	08 95       	ret
    2500:	80 91 07 61 	lds	r24, 0x6107	; 0x806107 <packet+0x7>
    2504:	c0 90 08 61 	lds	r12, 0x6108	; 0x806108 <packet+0x8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:134
    /* Page erase will not be used if received. */
    return 1;
  }

  size_t write_memory (void) {
    uint8_t   m_type = packet.out.bMType;
    2508:	d0 90 09 61 	lds	r13, 0x6109	; 0x806109 <packet+0x9>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:135
    uint32_t _dwAddr = packet.out.dwAddr;
    250c:	e0 90 0a 61 	lds	r14, 0x610A	; 0x80610a <packet+0xa>
    2510:	f0 90 0b 61 	lds	r15, 0x610B	; 0x80610b <packet+0xb>
    2514:	c0 91 0c 61 	lds	r28, 0x610C	; 0x80610c <packet+0xc>
    2518:	d0 91 0d 61 	lds	r29, 0x610D	; 0x80610d <packet+0xd>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:136
    size_t  _wLength = packet.out.dwLength;
    251c:	82 32       	cpi	r24, 0x22	; 34
    251e:	31 f0       	breq	.+12     	; 0x252c <NVM::V3::write_memory()+0x4e>
    2520:	9e e4       	ldi	r25, 0x4E	; 78
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:138
    if (bit_is_clear(PGCONF, PGCONF_PROG_bp)) return UPDI::write_userrow();
    if (m_type == 0x22 || m_type == 0xB2 || m_type == 0xB3 || m_type == 0xC4) {
    2522:	98 0f       	add	r25, r24
    2524:	92 30       	cpi	r25, 0x02	; 2
    2526:	10 f0       	brcs	.+4      	; 0x252c <NVM::V3::write_memory()+0x4e>
    2528:	84 3c       	cpi	r24, 0xC4	; 196
    252a:	99 f4       	brne	.+38     	; 0x2552 <NVM::V3::write_memory()+0x74>
write_eeprom():
    252c:	80 e1       	ldi	r24, 0x10	; 16
    252e:	35 d8       	rcall	.-3990   	; 0x159a <NVM::V3::nvm_ctrl_change(unsigned char)>
    2530:	81 11       	cpse	r24, r1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:90
  }

  bool write_eeprom (uint32_t _dwAddr, size_t _wLength) {
    D2PRINTF(" NVM_V3_EEPERW=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x10)
    2532:	02 c0       	rjmp	.+4      	; 0x2538 <NVM::V3::write_memory()+0x5a>
write_memory():
    2534:	80 e0       	ldi	r24, 0x00	; 0
    2536:	dc cf       	rjmp	.-72     	; 0x24f0 <NVM::V3::write_memory()+0x12>
write_eeprom():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:93
      && UPDI::send_bytes_block(_dwAddr, _wLength)
      && nvm_ctrl_change(0x15)  /* NVM_V3_CMD_EEPERW */
      && (nvm_wait() & 0x73) == 0
    2538:	ae 01       	movw	r20, r28
    253a:	c7 01       	movw	r24, r14
    253c:	b6 01       	movw	r22, r12
    253e:	0e 94 bd 06 	call	0xd7a	; 0xd7a <UPDI::send_bytes_block(unsigned long, unsigned int)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:91

  bool write_eeprom (uint32_t _dwAddr, size_t _wLength) {
    D2PRINTF(" NVM_V3_EEPERW=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x10)
      && UPDI::send_bytes_block(_dwAddr, _wLength)
    2542:	88 23       	and	r24, r24
    2544:	b9 f3       	breq	.-18     	; 0x2534 <NVM::V3::write_memory()+0x56>
    2546:	85 e1       	ldi	r24, 0x15	; 21
    2548:	28 d8       	rcall	.-4016   	; 0x159a <NVM::V3::nvm_ctrl_change(unsigned char)>
    254a:	88 23       	and	r24, r24
    254c:	99 f3       	breq	.-26     	; 0x2534 <NVM::V3::write_memory()+0x56>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:92
      && nvm_ctrl_change(0x15)  /* NVM_V3_CMD_EEPERW */
    254e:	1e d8       	rcall	.-4036   	; 0x158c <NVM::V3::write_eeprom(unsigned long, unsigned int) [clone .part.3]>
    2550:	cf cf       	rjmp	.-98     	; 0x24f0 <NVM::V3::write_memory()+0x12>
write_memory():
    2552:	80 3c       	cpi	r24, 0xC0	; 192
    2554:	11 f0       	breq	.+4      	; 0x255a <NVM::V3::write_memory()+0x7c>
    2556:	85 3c       	cpi	r24, 0xC5	; 197
    2558:	29 f4       	brne	.+10     	; 0x2564 <NVM::V3::write_memory()+0x86>
    255a:	ae 01       	movw	r20, r28
    255c:	c7 01       	movw	r24, r14
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:145
      /* MTYPE_LOCK_BITS */
      /* MTYPE_EEPROM */
      /* MTYPE_EEPROM_XMEGA */
      return write_eeprom(_dwAddr, _wLength);
    }
    else if (m_type == 0xC0 || m_type == 0xC5) {
    255e:	b6 01       	movw	r22, r12
    2560:	44 d8       	rcall	.-3960   	; 0x15ea <NVM::V3::write_bytes_flash(unsigned long, unsigned int)>
    2562:	c6 cf       	rjmp	.-116    	; 0x24f0 <NVM::V3::write_memory()+0x12>
    2564:	80 3b       	cpi	r24, 0xB0	; 176
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:148
      /* MTYPE_FLASH (alias) */
      /* MTYPE_USERSIG (USERROW) */
      return write_bytes_flash(_dwAddr, _wLength);
    2566:	39 f4       	brne	.+14     	; 0x2576 <NVM::V3::write_memory()+0x98>
    2568:	c7 01       	movw	r24, r14
    256a:	b6 01       	movw	r22, r12
    256c:	80 58       	subi	r24, 0x80	; 128
    256e:	9f 4f       	sbci	r25, 0xFF	; 255
    2570:	ae 01       	movw	r20, r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:150
    }
    else if (m_type == 0xB0) {
    2572:	61 d8       	rcall	.-3902   	; 0x1636 <NVM::V3::write_words_flash(unsigned long, unsigned int)>
    2574:	bd cf       	rjmp	.-134    	; 0x24f0 <NVM::V3::write_memory()+0x12>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:152
      /* MTYPE_FLASH_PAGE (PROGMEM) */
      _dwAddr += PROG_START;
    2576:	ae 01       	movw	r20, r28
    2578:	c7 01       	movw	r24, r14
    257a:	b6 01       	movw	r22, r12
    257c:	0e 94 bd 06 	call	0xd7a	; 0xd7a <UPDI::send_bytes_block(unsigned long, unsigned int)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:153
      return write_words_flash(_dwAddr, _wLength);
    2580:	b7 cf       	rjmp	.-146    	; 0x24f0 <NVM::V3::write_memory()+0x12>

00002582 <NVM::V4::write_memory()>:
    2582:	cf 92       	push	r12
    2584:	df 92       	push	r13
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:157
    }
    else {
      /* MTYPE_SRAM */
      return UPDI::send_bytes_block(_dwAddr, _wLength);
    2586:	ef 92       	push	r14
    2588:	ff 92       	push	r15
    258a:	cf 93       	push	r28
    258c:	df 93       	push	r29
    258e:	f9 99       	sbic	0x1f, 1	; 31
    2590:	09 c0       	rjmp	.+18     	; 0x25a4 <NVM::V4::write_memory()+0x22>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:158
    /* Page erase will not be used if received. */
    /* Instead, page erase is determined by the is_boundary_flash_page function. */
    return 1;
  }

  size_t write_memory (void) {
    2592:	7b dd       	rcall	.-1290   	; 0x208a <UPDI::write_userrow()>
    2594:	90 e0       	ldi	r25, 0x00	; 0
    2596:	df 91       	pop	r29
    2598:	cf 91       	pop	r28
    259a:	ff 90       	pop	r15
    259c:	ef 90       	pop	r14
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:162
    uint8_t   m_type = packet.out.bMType;
    uint32_t _dwAddr = packet.out.dwAddr;
    size_t  _wLength = packet.out.dwLength;
    if (bit_is_clear(PGCONF, PGCONF_PROG_bp)) return UPDI::write_userrow();
    259e:	df 90       	pop	r13
    25a0:	cf 90       	pop	r12
    25a2:	08 95       	ret
    25a4:	80 91 07 61 	lds	r24, 0x6107	; 0x806107 <packet+0x7>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:184
    }
    else {
      /* MTYPE_SRAM */
      return UPDI::send_bytes_block(_dwAddr, _wLength);
    }
  }
    25a8:	c0 90 08 61 	lds	r12, 0x6108	; 0x806108 <packet+0x8>
    25ac:	d0 90 09 61 	lds	r13, 0x6109	; 0x806109 <packet+0x9>
    25b0:	e0 90 0a 61 	lds	r14, 0x610A	; 0x80610a <packet+0xa>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:159
    /* Instead, page erase is determined by the is_boundary_flash_page function. */
    return 1;
  }

  size_t write_memory (void) {
    uint8_t   m_type = packet.out.bMType;
    25b4:	f0 90 0b 61 	lds	r15, 0x610B	; 0x80610b <packet+0xb>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:160
    uint32_t _dwAddr = packet.out.dwAddr;
    25b8:	c0 91 0c 61 	lds	r28, 0x610C	; 0x80610c <packet+0xc>
    25bc:	d0 91 0d 61 	lds	r29, 0x610D	; 0x80610d <packet+0xd>
    25c0:	82 32       	cpi	r24, 0x22	; 34
    25c2:	31 f0       	breq	.+12     	; 0x25d0 <NVM::V4::write_memory()+0x4e>
    25c4:	9e e4       	ldi	r25, 0x4E	; 78
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:161
    size_t  _wLength = packet.out.dwLength;
    25c6:	98 0f       	add	r25, r24
    25c8:	92 30       	cpi	r25, 0x02	; 2
    25ca:	10 f0       	brcs	.+4      	; 0x25d0 <NVM::V4::write_memory()+0x4e>
    25cc:	84 3c       	cpi	r24, 0xC4	; 196
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:163
    if (bit_is_clear(PGCONF, PGCONF_PROG_bp)) return UPDI::write_userrow();
    if (m_type == 0x22 || m_type == 0xB2 || m_type == 0xB3 || m_type == 0xC4) {
    25ce:	a9 f4       	brne	.+42     	; 0x25fa <NVM::V4::write_memory()+0x78>
write_eeprom():
    25d0:	83 e1       	ldi	r24, 0x13	; 19
    25d2:	0e 94 cd 0a 	call	0x159a	; 0x159a <NVM::V3::nvm_ctrl_change(unsigned char)>
    25d6:	81 11       	cpse	r24, r1
    25d8:	02 c0       	rjmp	.+4      	; 0x25de <NVM::V4::write_memory()+0x5c>
write_memory():
    25da:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:108
  }

  bool write_eeprom (uint32_t _dwAddr, size_t _wLength) {
    D2PRINTF(" NVM_V4_EEERWR=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x13)   /* NVM_V4_CMD_EEERWR */
    25dc:	db cf       	rjmp	.-74     	; 0x2594 <NVM::V4::write_memory()+0x12>
write_eeprom():
    25de:	ae 01       	movw	r20, r28
    25e0:	c7 01       	movw	r24, r14
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:111
      && UPDI::send_bytes_block_slow(_dwAddr, _wLength)
      && (nvm_wait() & 0x73) == 0
      && nvm_ctrl_change(0x00)
    25e2:	b6 01       	movw	r22, r12
    25e4:	0e 94 93 06 	call	0xd26	; 0xd26 <UPDI::send_bytes_block_slow(unsigned long, unsigned int)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:90
    D2PRINTF(" NVM_V4_FLWR=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x02)   /* NVM_V4_CMD_FLWR */
      && UPDI::send_words_block(_dwAddr, _wLength)
      && (nvm_wait() & 0x73) == 0
      && nvm_ctrl_change(0x00)
    25e8:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:109

  bool write_eeprom (uint32_t _dwAddr, size_t _wLength) {
    D2PRINTF(" NVM_V4_EEERWR=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x13)   /* NVM_V4_CMD_EEERWR */
      && UPDI::send_bytes_block_slow(_dwAddr, _wLength)
    25ea:	b9 f3       	breq	.-18     	; 0x25da <NVM::V4::write_memory()+0x58>
    25ec:	0e 94 bc 0a 	call	0x1578	; 0x1578 <NVM::V3::nvm_wait()>
    25f0:	83 77       	andi	r24, 0x73	; 115
    25f2:	99 f7       	brne	.-26     	; 0x25da <NVM::V4::write_memory()+0x58>
    25f4:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <NVM::V4::write_eeprom(unsigned long, unsigned int) [clone .part.5]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:110
      && (nvm_wait() & 0x73) == 0
    25f8:	cd cf       	rjmp	.-102    	; 0x2594 <NVM::V4::write_memory()+0x12>
write_memory():
    25fa:	80 3c       	cpi	r24, 0xC0	; 192
    25fc:	11 f0       	breq	.+4      	; 0x2602 <NVM::V4::write_memory()+0x80>
    25fe:	85 3c       	cpi	r24, 0xC5	; 197
    2600:	e1 f4       	brne	.+56     	; 0x263a <NVM::V4::write_memory()+0xb8>
write_bytes_flash():
    2602:	c7 01       	movw	r24, r14
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:170
      /* MTYPE_LOCK_BITS */
      /* MTYPE_EEPROM */
      /* MTYPE_EEPROM_XMEGA */
      return write_eeprom(_dwAddr, _wLength);
    }
    else if (m_type == 0xC0 || m_type == 0xC5) {
    2604:	b6 01       	movw	r22, r12
    2606:	0e 94 e4 08 	call	0x11c8	; 0x11c8 <SYS::is_boundary_flash_page(unsigned long)>
    260a:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:95
      && nvm_ctrl_change(0x00)
    );
  }

  bool write_bytes_flash (uint32_t _dwAddr, size_t _wLength) {
    if (SYS::is_boundary_flash_page(_dwAddr)) erase_flash_page(_dwAddr);
    260c:	19 f0       	breq	.+6      	; 0x2614 <NVM::V4::write_memory()+0x92>
    260e:	c7 01       	movw	r24, r14
    2610:	b6 01       	movw	r22, r12
    2612:	37 d8       	rcall	.-3986   	; 0x1682 <NVM::V4::erase_flash_page(unsigned long)>
    2614:	82 e0       	ldi	r24, 0x02	; 2
    2616:	0e 94 cd 0a 	call	0x159a	; 0x159a <NVM::V3::nvm_ctrl_change(unsigned char)>
    261a:	88 23       	and	r24, r24
    261c:	f1 f2       	breq	.-68     	; 0x25da <NVM::V4::write_memory()+0x58>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:98
    D2PRINTF(" NVM_V4_FLWR=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x02)   /* NVM_V4_CMD_FLWR */
    261e:	ae 01       	movw	r20, r28
    2620:	c7 01       	movw	r24, r14
    2622:	b6 01       	movw	r22, r12
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:101
      && UPDI::send_bytes_block_slow(_dwAddr, _wLength)
      && (nvm_wait() & 0x73) == 0
      && nvm_ctrl_change(0x00)
    2624:	0e 94 93 06 	call	0xd26	; 0xd26 <UPDI::send_bytes_block_slow(unsigned long, unsigned int)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:99
  bool write_bytes_flash (uint32_t _dwAddr, size_t _wLength) {
    if (SYS::is_boundary_flash_page(_dwAddr)) erase_flash_page(_dwAddr);
    D2PRINTF(" NVM_V4_FLWR=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x02)   /* NVM_V4_CMD_FLWR */
      && UPDI::send_bytes_block_slow(_dwAddr, _wLength)
    2628:	88 23       	and	r24, r24
    262a:	b9 f2       	breq	.-82     	; 0x25da <NVM::V4::write_memory()+0x58>
    262c:	0e 94 bc 0a 	call	0x1578	; 0x1578 <NVM::V3::nvm_wait()>
    2630:	83 77       	andi	r24, 0x73	; 115
    2632:	99 f6       	brne	.-90     	; 0x25da <NVM::V4::write_memory()+0x58>
    2634:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <NVM::V4::write_eeprom(unsigned long, unsigned int) [clone .part.5]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:100
      && (nvm_wait() & 0x73) == 0
    2638:	ad cf       	rjmp	.-166    	; 0x2594 <NVM::V4::write_memory()+0x12>
write_memory():
    263a:	80 3b       	cpi	r24, 0xB0	; 176
    263c:	21 f5       	brne	.+72     	; 0x2686 <NVM::V4::write_memory()+0x104>
    263e:	80 e8       	ldi	r24, 0x80	; 128
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:175
    else if (m_type == 0xC0 || m_type == 0xC5) {
      /* MTYPE_FLASH (alias) */
      /* MTYPE_USERSIG (USERROW, BOOTROW) */
      return write_bytes_flash(_dwAddr, _wLength);
    }
    else if (m_type == 0xB0) {
    2640:	e8 0e       	add	r14, r24
    2642:	f1 1c       	adc	r15, r1
write_words_flash():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:177
      /* MTYPE_FLASH_PAGE (PROGMEM) */
      _dwAddr += PROG_START;
    2644:	fa 99       	sbic	0x1f, 2	; 31
    2646:	09 c0       	rjmp	.+18     	; 0x265a <NVM::V4::write_memory()+0xd8>
    2648:	c7 01       	movw	r24, r14
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:84
    );
  }

  bool write_words_flash (uint32_t _dwAddr, size_t _wLength) {
    if (bit_is_clear(PGCONF, PGCONF_ERSE_bp)
      && SYS::is_boundary_flash_page(_dwAddr)) erase_flash_page(_dwAddr);
    264a:	b6 01       	movw	r22, r12
    264c:	0e 94 e4 08 	call	0x11c8	; 0x11c8 <SYS::is_boundary_flash_page(unsigned long)>
    2650:	88 23       	and	r24, r24
    2652:	19 f0       	breq	.+6      	; 0x265a <NVM::V4::write_memory()+0xd8>
    2654:	c7 01       	movw	r24, r14
    2656:	b6 01       	movw	r22, r12
    2658:	14 d8       	rcall	.-4056   	; 0x1682 <NVM::V4::erase_flash_page(unsigned long)>
    265a:	82 e0       	ldi	r24, 0x02	; 2
    265c:	0e 94 cd 0a 	call	0x159a	; 0x159a <NVM::V3::nvm_ctrl_change(unsigned char)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:87
    D2PRINTF(" NVM_V4_FLWR=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x02)   /* NVM_V4_CMD_FLWR */
    2660:	88 23       	and	r24, r24
    2662:	09 f4       	brne	.+2      	; 0x2666 <NVM::V4::write_memory()+0xe4>
    2664:	ba cf       	rjmp	.-140    	; 0x25da <NVM::V4::write_memory()+0x58>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:90
      && UPDI::send_words_block(_dwAddr, _wLength)
      && (nvm_wait() & 0x73) == 0
      && nvm_ctrl_change(0x00)
    2666:	ae 01       	movw	r20, r28
    2668:	c7 01       	movw	r24, r14
    266a:	b6 01       	movw	r22, r12
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:88
    if (bit_is_clear(PGCONF, PGCONF_ERSE_bp)
      && SYS::is_boundary_flash_page(_dwAddr)) erase_flash_page(_dwAddr);
    D2PRINTF(" NVM_V4_FLWR=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x02)   /* NVM_V4_CMD_FLWR */
      && UPDI::send_words_block(_dwAddr, _wLength)
    266c:	0e 94 32 06 	call	0xc64	; 0xc64 <UPDI::send_words_block(unsigned long, unsigned int)>
    2670:	88 23       	and	r24, r24
    2672:	09 f4       	brne	.+2      	; 0x2676 <NVM::V4::write_memory()+0xf4>
    2674:	b2 cf       	rjmp	.-156    	; 0x25da <NVM::V4::write_memory()+0x58>
    2676:	0e 94 bc 0a 	call	0x1578	; 0x1578 <NVM::V3::nvm_wait()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:89
      && (nvm_wait() & 0x73) == 0
    267a:	83 77       	andi	r24, 0x73	; 115
    267c:	09 f0       	breq	.+2      	; 0x2680 <NVM::V4::write_memory()+0xfe>
    267e:	ad cf       	rjmp	.-166    	; 0x25da <NVM::V4::write_memory()+0x58>
    2680:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <NVM::V4::write_eeprom(unsigned long, unsigned int) [clone .part.5]>
    2684:	87 cf       	rjmp	.-242    	; 0x2594 <NVM::V4::write_memory()+0x12>
write_memory():
    2686:	ae 01       	movw	r20, r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:182
      _dwAddr += PROG_START;
      return write_words_flash(_dwAddr, _wLength);
    }
    else {
      /* MTYPE_SRAM */
      return UPDI::send_bytes_block(_dwAddr, _wLength);
    2688:	c7 01       	movw	r24, r14
    268a:	b6 01       	movw	r22, r12
    268c:	0e 94 bd 06 	call	0xd7a	; 0xd7a <UPDI::send_bytes_block(unsigned long, unsigned int)>
    2690:	81 cf       	rjmp	.-254    	; 0x2594 <NVM::V4::write_memory()+0x12>

00002692 <NVM::V5::write_memory()>:
    2692:	cf 92       	push	r12
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv5.cpp:136
    }
    /* Page erase will not be used if received. */
    return 1;
  }

  size_t write_memory (void) {
    2694:	df 92       	push	r13
    2696:	ef 92       	push	r14
    2698:	ff 92       	push	r15
    269a:	cf 93       	push	r28
    269c:	df 93       	push	r29
    269e:	f9 99       	sbic	0x1f, 1	; 31
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv5.cpp:140
    uint8_t   m_type = packet.out.bMType;
    uint32_t _dwAddr = packet.out.dwAddr;
    size_t  _wLength = packet.out.dwLength;
    if (bit_is_clear(PGCONF, PGCONF_PROG_bp)) return UPDI::write_userrow();
    26a0:	09 c0       	rjmp	.+18     	; 0x26b4 <NVM::V5::write_memory()+0x22>
    26a2:	f3 dc       	rcall	.-1562   	; 0x208a <UPDI::write_userrow()>
    26a4:	90 e0       	ldi	r25, 0x00	; 0
    26a6:	df 91       	pop	r29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv5.cpp:160
      _dwAddr += PROG_START;
      return write_words_flash(_dwAddr, _wLength);
    }
    else {
      /* MTYPE_SRAM */
      return UPDI::send_bytes_block(_dwAddr, _wLength);
    26a8:	cf 91       	pop	r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv5.cpp:162
    }
  }
    26aa:	ff 90       	pop	r15
    26ac:	ef 90       	pop	r14
    26ae:	df 90       	pop	r13
    26b0:	cf 90       	pop	r12
    26b2:	08 95       	ret
    26b4:	80 91 07 61 	lds	r24, 0x6107	; 0x806107 <packet+0x7>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv5.cpp:137
    /* Page erase will not be used if received. */
    return 1;
  }

  size_t write_memory (void) {
    uint8_t   m_type = packet.out.bMType;
    26b8:	c0 90 08 61 	lds	r12, 0x6108	; 0x806108 <packet+0x8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv5.cpp:138
    uint32_t _dwAddr = packet.out.dwAddr;
    26bc:	d0 90 09 61 	lds	r13, 0x6109	; 0x806109 <packet+0x9>
    26c0:	e0 90 0a 61 	lds	r14, 0x610A	; 0x80610a <packet+0xa>
    26c4:	f0 90 0b 61 	lds	r15, 0x610B	; 0x80610b <packet+0xb>
    26c8:	c0 91 0c 61 	lds	r28, 0x610C	; 0x80610c <packet+0xc>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv5.cpp:139
    size_t  _wLength = packet.out.dwLength;
    26cc:	d0 91 0d 61 	lds	r29, 0x610D	; 0x80610d <packet+0xd>
    26d0:	82 32       	cpi	r24, 0x22	; 34
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv5.cpp:141
    if (bit_is_clear(PGCONF, PGCONF_PROG_bp)) return UPDI::write_userrow();
    if (m_type == 0x22 || m_type == 0xB2 || m_type == 0xB3 || m_type == 0xC4) {
    26d2:	31 f0       	breq	.+12     	; 0x26e0 <NVM::V5::write_memory()+0x4e>
    26d4:	9e e4       	ldi	r25, 0x4E	; 78
    26d6:	98 0f       	add	r25, r24
    26d8:	92 30       	cpi	r25, 0x02	; 2
    26da:	10 f0       	brcs	.+4      	; 0x26e0 <NVM::V5::write_memory()+0x4e>
    26dc:	84 3c       	cpi	r24, 0xC4	; 196
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv5.cpp:93
  }

  bool write_eeprom (uint32_t _dwAddr, size_t _wLength) {
    D2PRINTF(" NVM_V5_EEPERW=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x00)
    26de:	b1 f4       	brne	.+44     	; 0x270c <NVM::V5::write_memory()+0x7a>
write_eeprom():
    26e0:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv5.cpp:96
      && UPDI::send_bytes_block(_dwAddr, _wLength)
      && nvm_ctrl_change(0x15)  /* NVM_V5_CMD_EEPERW */
      && (nvm_wait() & 0x73) == 0
    26e2:	0e 94 cd 0a 	call	0x159a	; 0x159a <NVM::V3::nvm_ctrl_change(unsigned char)>
    26e6:	81 11       	cpse	r24, r1
    26e8:	02 c0       	rjmp	.+4      	; 0x26ee <NVM::V5::write_memory()+0x5c>
write_memory():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv5.cpp:94

  bool write_eeprom (uint32_t _dwAddr, size_t _wLength) {
    D2PRINTF(" NVM_V5_EEPERW=%06lX\r\n", _dwAddr);
    return (
      nvm_ctrl_change(0x00)
      && UPDI::send_bytes_block(_dwAddr, _wLength)
    26ea:	80 e0       	ldi	r24, 0x00	; 0
    26ec:	db cf       	rjmp	.-74     	; 0x26a4 <NVM::V5::write_memory()+0x12>
write_eeprom():
    26ee:	ae 01       	movw	r20, r28
    26f0:	c7 01       	movw	r24, r14
    26f2:	b6 01       	movw	r22, r12
    26f4:	0e 94 bd 06 	call	0xd7a	; 0xd7a <UPDI::send_bytes_block(unsigned long, unsigned int)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv5.cpp:95
      && nvm_ctrl_change(0x15)  /* NVM_V5_CMD_EEPERW */
    26f8:	88 23       	and	r24, r24
    26fa:	b9 f3       	breq	.-18     	; 0x26ea <NVM::V5::write_memory()+0x58>
    26fc:	85 e1       	ldi	r24, 0x15	; 21
    26fe:	0e 94 cd 0a 	call	0x159a	; 0x159a <NVM::V3::nvm_ctrl_change(unsigned char)>
    2702:	88 23       	and	r24, r24
    2704:	91 f3       	breq	.-28     	; 0x26ea <NVM::V5::write_memory()+0x58>
    2706:	0e 94 c6 0a 	call	0x158c	; 0x158c <NVM::V3::write_eeprom(unsigned long, unsigned int) [clone .part.3]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv5.cpp:148
      /* MTYPE_LOCK_BITS */
      /* MTYPE_EEPROM */
      /* MTYPE_EEPROM_XMEGA */
      return write_eeprom(_dwAddr, _wLength);
    }
    else if (m_type == 0xC0 || m_type == 0xC5) {
    270a:	cc cf       	rjmp	.-104    	; 0x26a4 <NVM::V5::write_memory()+0x12>
write_memory():
    270c:	80 3c       	cpi	r24, 0xC0	; 192
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv5.cpp:151
      /* MTYPE_FLASH (alias) */
      /* MTYPE_USERSIG (USERROW, BOOTROW) */
      return write_bytes_flash(_dwAddr, _wLength);
    270e:	11 f0       	breq	.+4      	; 0x2714 <NVM::V5::write_memory()+0x82>
    2710:	85 3c       	cpi	r24, 0xC5	; 197
    2712:	31 f4       	brne	.+12     	; 0x2720 <NVM::V5::write_memory()+0x8e>
    2714:	ae 01       	movw	r20, r28
    2716:	c7 01       	movw	r24, r14
    2718:	b6 01       	movw	r22, r12
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv5.cpp:153
    }
    else if (m_type == 0xB0) {
    271a:	0e 94 f5 0a 	call	0x15ea	; 0x15ea <NVM::V3::write_bytes_flash(unsigned long, unsigned int)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv5.cpp:155
      /* MTYPE_FLASH_PAGE (PROGMEM) */
      _dwAddr += PROG_START;
    271e:	c2 cf       	rjmp	.-124    	; 0x26a4 <NVM::V5::write_memory()+0x12>
    2720:	80 3b       	cpi	r24, 0xB0	; 176
    2722:	41 f4       	brne	.+16     	; 0x2734 <NVM::V5::write_memory()+0xa2>
    2724:	c7 01       	movw	r24, r14
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv5.cpp:156
      return write_words_flash(_dwAddr, _wLength);
    2726:	b6 01       	movw	r22, r12
    2728:	80 58       	subi	r24, 0x80	; 128
    272a:	9f 4f       	sbci	r25, 0xFF	; 255
    272c:	ae 01       	movw	r20, r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv5.cpp:160
    }
    else {
      /* MTYPE_SRAM */
      return UPDI::send_bytes_block(_dwAddr, _wLength);
    272e:	0e 94 1b 0b 	call	0x1636	; 0x1636 <NVM::V3::write_words_flash(unsigned long, unsigned int)>
    2732:	b8 cf       	rjmp	.-144    	; 0x26a4 <NVM::V5::write_memory()+0x12>
    2734:	ae 01       	movw	r20, r28
    2736:	c7 01       	movw	r24, r14
    2738:	b6 01       	movw	r22, r12
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:285
    D1PRINTF(" UROW_KEY=");   /* wait set UROWWRITE */
    if (!send_bytes(urowwrite_key, sizeof(urowwrite_key)) || !key_wait_set(5)) return false;
    return sys_reset(false);
  }

  bool chip_erase (void) {
    273a:	0e 94 bd 06 	call	0xd7a	; 0xd7a <UPDI::send_bytes_block(unsigned long, unsigned int)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:286
    D1PRINTF(" CHIP_ERASE");
    273e:	b2 cf       	rjmp	.-156    	; 0x26a4 <NVM::V5::write_memory()+0x12>

00002740 <UPDI::chip_erase()>:
chip_erase():
    2740:	cf 93       	push	r28
    2742:	df 93       	push	r29
    2744:	89 e3       	ldi	r24, 0x39	; 57
    2746:	98 e0       	ldi	r25, 0x08	; 8
    2748:	9f 93       	push	r25
    274a:	8f 93       	push	r24
    274c:	83 eb       	ldi	r24, 0xB3	; 179
    274e:	90 e6       	ldi	r25, 0x60	; 96
    2750:	9f 93       	push	r25
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:287
    USART::drain();
    2752:	8f 93       	push	r24
    2754:	6d d8       	rcall	.-3878   	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:273
    if (!send_bytes(nvmprog_key, sizeof(nvmprog_key)) || !key_wait_set(4)) return false;
    return _reset ? sys_reset(false) : true;
  }

  bool set_erase_key (void) {
    if (bit_is_clear(PGCONF, PGCONF_PROG_bp)) set_nvmprog_key(false);
    2756:	0e 94 16 05 	call	0xa2c	; 0xa2c <USART::drain(unsigned int) [clone .constprop.13]>
set_erase_key():
    275a:	0f 90       	pop	r0
    275c:	0f 90       	pop	r0
    275e:	0f 90       	pop	r0
    2760:	0f 90       	pop	r0
    2762:	f9 99       	sbic	0x1f, 1	; 31
    2764:	02 c0       	rjmp	.+4      	; 0x276a <UPDI::chip_erase()+0x2a>
    2766:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:274
    D1PRINTF(" ERASE_KEY=");  /* wait set CHIPERASE */
    2768:	35 dc       	rcall	.-1942   	; 0x1fd4 <UPDI::set_nvmprog_key(bool)>
    276a:	87 e0       	ldi	r24, 0x07	; 7
    276c:	98 e0       	ldi	r25, 0x08	; 8
    276e:	9f 93       	push	r25
    2770:	8f 93       	push	r24
    2772:	c3 eb       	ldi	r28, 0xB3	; 179
    2774:	d0 e6       	ldi	r29, 0x60	; 96
    2776:	df 93       	push	r29
    2778:	cf 93       	push	r28
    277a:	5a d8       	rcall	.-3916   	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:275
    if (!send_bytes(erase_key, sizeof(erase_key)) || !key_wait_set(3)) return false;
    277c:	6a e0       	ldi	r22, 0x0A	; 10
    277e:	70 e0       	ldi	r23, 0x00	; 0
    2780:	8d e6       	ldi	r24, 0x6D	; 109
    2782:	90 e6       	ldi	r25, 0x60	; 96
    2784:	0e 94 ec 05 	call	0xbd8	; 0xbd8 <UPDI::send_bytes(unsigned char const*, unsigned int)>
    2788:	0f 90       	pop	r0
    278a:	0f 90       	pop	r0
    278c:	0f 90       	pop	r0
    278e:	0f 90       	pop	r0
    2790:	81 11       	cpse	r24, r1
    2792:	02 c0       	rjmp	.+4      	; 0x2798 <UPDI::chip_erase()+0x58>
chip_erase():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:304
      sys_wait_set(3);      /* wait set PROGSTART */
    }
    D1PRINTF(" PROGSTART=%02X\r\n", RXDATA);
    bit_set(PGCONF, PGCONF_ERSE_bp);
    bit_set(PGCONF, PGCONF_PROG_bp);
    return (*Command_Table.prog_init)();
    2794:	20 e0       	ldi	r18, 0x00	; 0
    2796:	6f c0       	rjmp	.+222    	; 0x2876 <UPDI::chip_erase()+0x136>
set_erase_key():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:275
  }

  bool set_erase_key (void) {
    if (bit_is_clear(PGCONF, PGCONF_PROG_bp)) set_nvmprog_key(false);
    D1PRINTF(" ERASE_KEY=");  /* wait set CHIPERASE */
    if (!send_bytes(erase_key, sizeof(erase_key)) || !key_wait_set(3)) return false;
    2798:	83 e0       	ldi	r24, 0x03	; 3
    279a:	01 dc       	rcall	.-2046   	; 0x1f9e <UPDI::key_wait_set(unsigned char)>
    279c:	88 23       	and	r24, r24
    279e:	d1 f3       	breq	.-12     	; 0x2794 <UPDI::chip_erase()+0x54>
sys_reset():
    27a0:	66 e0       	ldi	r22, 0x06	; 6
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:137
    const static uint8_t _reset[] = {
      0x55, 0xC8, 0x59, /* SYSRST */
      0x55, 0xC8, 0x00, /* SYSRUN */
      0x55, 0xC3, 0x04  /* UPDIDIS */
    };
    return send_bytes(_reset, _leave ? 9 : 6);
    27a2:	70 e0       	ldi	r23, 0x00	; 0
    27a4:	87 e9       	ldi	r24, 0x97	; 151
    27a6:	90 e6       	ldi	r25, 0x60	; 96
    27a8:	0e 94 ec 05 	call	0xbd8	; 0xbd8 <UPDI::send_bytes(unsigned char const*, unsigned int)>
chip_erase():
    27ac:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:288
  }

  bool chip_erase (void) {
    D1PRINTF(" CHIP_ERASE");
    USART::drain();
    if (!set_erase_key()) return false;
    27ae:	91 f3       	breq	.-28     	; 0x2794 <UPDI::chip_erase()+0x54>
    27b0:	83 e3       	ldi	r24, 0x33	; 51
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:289
    D1PRINTF(" WAIT");
    27b2:	98 e0       	ldi	r25, 0x08	; 8
    27b4:	9f 93       	push	r25
    27b6:	8f 93       	push	r24
    27b8:	df 93       	push	r29
    27ba:	cf 93       	push	r28
    27bc:	39 d8       	rcall	.-3982   	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
delay_millis():
    27be:	8f e1       	ldi	r24, 0x1F	; 31
    27c0:	91 ea       	ldi	r25, 0xA1	; 161
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/delay_busywait.h:42
  }
}

void delay_millis (uint32_t _ms) {
  if (F_CPU >= 1000000L) {
    __builtin_avr_delay_cycles((F_CPU / 1000L) * _ms);
    27c2:	27 e0       	ldi	r18, 0x07	; 7
    27c4:	81 50       	subi	r24, 0x01	; 1
    27c6:	90 40       	sbci	r25, 0x00	; 0
    27c8:	20 40       	sbci	r18, 0x00	; 0
    27ca:	e1 f7       	brne	.-8      	; 0x27c4 <UPDI::chip_erase()+0x84>
    27cc:	00 c0       	rjmp	.+0      	; 0x27ce <UPDI::chip_erase()+0x8e>
    27ce:	00 00       	nop
    27d0:	8f e1       	ldi	r24, 0x1F	; 31
    27d2:	91 ea       	ldi	r25, 0xA1	; 161
    27d4:	27 e0       	ldi	r18, 0x07	; 7
    27d6:	81 50       	subi	r24, 0x01	; 1
    27d8:	90 40       	sbci	r25, 0x00	; 0
    27da:	20 40       	sbci	r18, 0x00	; 0
    27dc:	e1 f7       	brne	.-8      	; 0x27d6 <UPDI::chip_erase()+0x96>
    27de:	00 c0       	rjmp	.+0      	; 0x27e0 <UPDI::chip_erase()+0xa0>
    27e0:	00 00       	nop
chip_erase():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:292
    SYS::delay_125ms();
    SYS::delay_125ms();
    USART::drain();
    27e2:	0e 94 16 05 	call	0xa2c	; 0xa2c <USART::drain(unsigned int) [clone .constprop.13]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:293
    sys_wait_clear(5);      /* wait clear RSTSYS */
    27e6:	85 e0       	ldi	r24, 0x05	; 5
    27e8:	a4 db       	rcall	.-2232   	; 0x1f32 <UPDI::sys_wait_clear(unsigned char)>
    27ea:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:294
    sys_wait_clear(0);      /* wait clear LOCKSTATUS */
    27ec:	a2 db       	rcall	.-2236   	; 0x1f32 <UPDI::sys_wait_clear(unsigned char)>
    27ee:	8d b3       	in	r24, 0x1d	; 29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:295
    D1PRINTF(" <SYS:%02X>\r\n", RXDATA);
    27f0:	1f 92       	push	r1
    27f2:	8f 93       	push	r24
    27f4:	85 e2       	ldi	r24, 0x25	; 37
    27f6:	98 e0       	ldi	r25, 0x08	; 8
    27f8:	9f 93       	push	r25
    27fa:	8f 93       	push	r24
    27fc:	df 93       	push	r29
    27fe:	cf 93       	push	r28
    2800:	17 d8       	rcall	.-4050   	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
delay_micros():
    2802:	82 e1       	ldi	r24, 0x12	; 18
    2804:	91 e0       	ldi	r25, 0x01	; 1
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/delay_busywait.h:33
static __inline__ __attribute__((__always_inline__)) void delay_micros (uint32_t _us);
static __inline__ __attribute__((__always_inline__)) void delay_millis (uint32_t _ms);

void delay_micros (uint32_t _us) {
  if (F_CPU >= 1000000L) {
    __builtin_avr_delay_cycles((F_CPU / 1000000L) * _us);
    2806:	01 97       	sbiw	r24, 0x01	; 1
    2808:	f1 f7       	brne	.-4      	; 0x2806 <UPDI::chip_erase()+0xc6>
    280a:	00 c0       	rjmp	.+0      	; 0x280c <UPDI::chip_erase()+0xcc>
    280c:	00 00       	nop
    280e:	8d b7       	in	r24, 0x3d	; 61
    2810:	9e b7       	in	r25, 0x3e	; 62
    2812:	0a 96       	adiw	r24, 0x0a	; 10
    2814:	8d bf       	out	0x3d, r24	; 61
    2816:	9e bf       	out	0x3e, r25	; 62
key_wait_clear():
    2818:	0e 94 0f 06 	call	0xc1e	; 0xc1e <UPDI::key_status()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:245
  }

  bool key_wait_clear (uint8_t _bit) {
    SYS::delay_55us();
    do {
      key_status();
    281c:	eb 99       	sbic	0x1d, 3	; 29
    281e:	fc cf       	rjmp	.-8      	; 0x2818 <UPDI::chip_erase()+0xd8>
chip_erase():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:246
    } while (bit_is_set(RXDATA, _bit));
    2820:	0e 94 06 06 	call	0xc0c	; 0xc0c <UPDI::sys_status()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:297
    USART::drain();
    sys_wait_clear(5);      /* wait clear RSTSYS */
    sys_wait_clear(0);      /* wait clear LOCKSTATUS */
    D1PRINTF(" <SYS:%02X>\r\n", RXDATA);
    key_wait_clear(3);      /* wait clear CHIPERASE */
    if (sys_status() && bit_is_clear(RXDATA, 3)) {
    2824:	88 23       	and	r24, r24
    2826:	49 f0       	breq	.+18     	; 0x283a <UPDI::chip_erase()+0xfa>
    2828:	eb 99       	sbic	0x1d, 3	; 29
    282a:	07 c0       	rjmp	.+14     	; 0x283a <UPDI::chip_erase()+0xfa>
    282c:	81 e0       	ldi	r24, 0x01	; 1
    282e:	d2 db       	rcall	.-2140   	; 0x1fd4 <UPDI::set_nvmprog_key(bool)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:298
      if (!set_nvmprog_key(true)) return false;
    2830:	88 23       	and	r24, r24
    2832:	09 f4       	brne	.+2      	; 0x2836 <UPDI::chip_erase()+0xf6>
    2834:	af cf       	rjmp	.-162    	; 0x2794 <UPDI::chip_erase()+0x54>
    2836:	83 e0       	ldi	r24, 0x03	; 3
    2838:	97 db       	rcall	.-2258   	; 0x1f68 <UPDI::sys_wait_set(unsigned char)>
    283a:	8d b3       	in	r24, 0x1d	; 29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:299
      sys_wait_set(3);      /* wait set PROGSTART */
    283c:	1f 92       	push	r1
    283e:	8f 93       	push	r24
    2840:	83 e1       	ldi	r24, 0x13	; 19
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:301
    }
    D1PRINTF(" PROGSTART=%02X\r\n", RXDATA);
    2842:	98 e0       	ldi	r25, 0x08	; 8
    2844:	9f 93       	push	r25
    2846:	8f 93       	push	r24
    2848:	83 eb       	ldi	r24, 0xB3	; 179
    284a:	90 e6       	ldi	r25, 0x60	; 96
    284c:	9f 93       	push	r25
    284e:	8f 93       	push	r24
    2850:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
    2854:	fa 9a       	sbi	0x1f, 2	; 31
    2856:	f9 9a       	sbi	0x1f, 1	; 31
    2858:	e0 91 4e 63 	lds	r30, 0x634E	; 0x80634e <Command_Table>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:302
    bit_set(PGCONF, PGCONF_ERSE_bp);
    285c:	f0 91 4f 63 	lds	r31, 0x634F	; 0x80634f <Command_Table+0x1>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:304
    bit_set(PGCONF, PGCONF_PROG_bp);
    return (*Command_Table.prog_init)();
    2860:	09 95       	icall
    2862:	21 e0       	ldi	r18, 0x01	; 1
    2864:	0f 90       	pop	r0
    2866:	0f 90       	pop	r0
    2868:	0f 90       	pop	r0
    286a:	0f 90       	pop	r0
    286c:	0f 90       	pop	r0
    286e:	0f 90       	pop	r0
    2870:	89 2b       	or	r24, r25
    2872:	09 f4       	brne	.+2      	; 0x2876 <UPDI::chip_erase()+0x136>
    2874:	8f cf       	rjmp	.-226    	; 0x2794 <UPDI::chip_erase()+0x54>
    2876:	82 2f       	mov	r24, r18
    2878:	df 91       	pop	r29
    287a:	cf 91       	pop	r28
    287c:	08 95       	ret

0000287e <NVM::V0::erase_memory()>:
erase_memory():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:305
  }
    287e:	80 91 07 61 	lds	r24, 0x6107	; 0x806107 <packet+0x7>
    2882:	81 11       	cpse	r24, r1
    2884:	03 c0       	rjmp	.+6      	; 0x288c <NVM::V0::erase_memory()+0xe>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:134
    return 0;
  }

  size_t erase_memory (void) {
    uint8_t e_type = packet.out.bEType;
    if (e_type == 0x00) {
    2886:	5c df       	rcall	.-328    	; 0x2740 <UPDI::chip_erase()>
    2888:	90 e0       	ldi	r25, 0x00	; 0
    288a:	08 95       	ret
    288c:	81 e0       	ldi	r24, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:136
      /* XMEGA_ERASE_CHIP */
      return UPDI::chip_erase();
    288e:	90 e0       	ldi	r25, 0x00	; 0
    2890:	08 95       	ret

00002892 <NVM::V3::erase_memory()>:
_ZN3NVM2V312erase_memoryEv():
    2892:	f5 cf       	rjmp	.-22     	; 0x287e <NVM::V0::erase_memory()>

00002894 <NVM::V5::erase_memory()>:
_ZN3NVM2V512erase_memoryEv():
    2894:	f4 cf       	rjmp	.-24     	; 0x287e <NVM::V0::erase_memory()>

00002896 <NVM::V2::erase_memory()>:
erase_memory():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:139
    }
    /* Page erase will not be used if received. */
    return 1;
    2896:	80 91 07 61 	lds	r24, 0x6107	; 0x806107 <packet+0x7>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:140
  }
    289a:	81 11       	cpse	r24, r1
    289c:	03 c0       	rjmp	.+6      	; 0x28a4 <NVM::V2::erase_memory()+0xe>
    289e:	50 df       	rcall	.-352    	; 0x2740 <UPDI::chip_erase()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:137
    }
    return 0;
  }

  size_t erase_memory (void) {
    uint8_t e_type = packet.out.bEType;
    28a0:	90 e0       	ldi	r25, 0x00	; 0
    28a2:	08 95       	ret
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:138
    if (e_type == 0x00) {
    28a4:	87 30       	cpi	r24, 0x07	; 7
    28a6:	59 f4       	brne	.+22     	; 0x28be <NVM::V2::erase_memory()+0x28>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:140
      /* XMEGA_ERASE_CHIP */
      return UPDI::chip_erase();
    28a8:	60 91 08 61 	lds	r22, 0x6108	; 0x806108 <packet+0x8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:147
    else {
      /* NOTE: AVRDUDE<=7.3 may pass the wrong M_TYPE. */
      /* For safety, only USERROW and BOOTROW are allowed to erase pages. */
      if (e_type == 0x07) {
        /* XMEGA_ERASE_USERSIG */
        return erase_flash_page(packet.out.dwAddr);
    28ac:	70 91 09 61 	lds	r23, 0x6109	; 0x806109 <packet+0x9>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:145
      return UPDI::chip_erase();
    }
    else {
      /* NOTE: AVRDUDE<=7.3 may pass the wrong M_TYPE. */
      /* For safety, only USERROW and BOOTROW are allowed to erase pages. */
      if (e_type == 0x07) {
    28b0:	80 91 0a 61 	lds	r24, 0x610A	; 0x80610a <packet+0xa>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:147
        /* XMEGA_ERASE_USERSIG */
        return erase_flash_page(packet.out.dwAddr);
    28b4:	90 91 0b 61 	lds	r25, 0x610B	; 0x80610b <packet+0xb>
    28b8:	0e 94 90 0b 	call	0x1720	; 0x1720 <NVM::V2::erase_flash_page(unsigned long)>
    28bc:	f1 cf       	rjmp	.-30     	; 0x28a0 <NVM::V2::erase_memory()+0xa>
    28be:	81 e0       	ldi	r24, 0x01	; 1
    28c0:	90 e0       	ldi	r25, 0x00	; 0
    28c2:	08 95       	ret

000028c4 <NVM::V4::erase_memory()>:
    28c4:	80 91 07 61 	lds	r24, 0x6107	; 0x806107 <packet+0x7>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:152
      }
    }
    /* Page erase will not be used if received. */
    /* Instead, page erase is determined by the is_boundary_flash_page function. */
    return 1;
    28c8:	81 11       	cpse	r24, r1
    28ca:	03 c0       	rjmp	.+6      	; 0x28d2 <NVM::V4::erase_memory()+0xe>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:153
  }
    28cc:	39 df       	rcall	.-398    	; 0x2740 <UPDI::chip_erase()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:140
    }
    return 0;
  }

  size_t erase_memory (void) {
    uint8_t e_type = packet.out.bEType;
    28ce:	90 e0       	ldi	r25, 0x00	; 0
    28d0:	08 95       	ret
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:141
    if (e_type == 0x00) {
    28d2:	87 30       	cpi	r24, 0x07	; 7
    28d4:	59 f4       	brne	.+22     	; 0x28ec <NVM::V4::erase_memory()+0x28>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:143
      /* XMEGA_ERASE_CHIP */
      return UPDI::chip_erase();
    28d6:	60 91 08 61 	lds	r22, 0x6108	; 0x806108 <packet+0x8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:150
    else {
      /* NOTE: AVRDUDE<=7.3 may pass the wrong M_TYPE. */
      /* For safety, only USERROW and BOOTROW are allowed to erase pages. */
      if (e_type == 0x07) {
        /* XMEGA_ERASE_USERSIG */
        return erase_flash_page(packet.out.dwAddr);
    28da:	70 91 09 61 	lds	r23, 0x6109	; 0x806109 <packet+0x9>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:148
      return UPDI::chip_erase();
    }
    else {
      /* NOTE: AVRDUDE<=7.3 may pass the wrong M_TYPE. */
      /* For safety, only USERROW and BOOTROW are allowed to erase pages. */
      if (e_type == 0x07) {
    28de:	80 91 0a 61 	lds	r24, 0x610A	; 0x80610a <packet+0xa>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:150
        /* XMEGA_ERASE_USERSIG */
        return erase_flash_page(packet.out.dwAddr);
    28e2:	90 91 0b 61 	lds	r25, 0x610B	; 0x80610b <packet+0xb>
    28e6:	0e 94 41 0b 	call	0x1682	; 0x1682 <NVM::V4::erase_flash_page(unsigned long)>
    28ea:	f1 cf       	rjmp	.-30     	; 0x28ce <NVM::V4::erase_memory()+0xa>
    28ec:	81 e0       	ldi	r24, 0x01	; 1
    28ee:	90 e0       	ldi	r25, 0x00	; 0
    28f0:	08 95       	ret

000028f2 <SYS::power_reset(bool, bool) [clone .part.3]>:
delay_millis():
    28f2:	2f e1       	ldi	r18, 0x1F	; 31
    28f4:	81 ea       	ldi	r24, 0xA1	; 161
    28f6:	97 e0       	ldi	r25, 0x07	; 7
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:155
      }
    }
    /* Page erase will not be used if received. */
    /* Instead, page erase is determined by the is_boundary_flash_page function. */
    return 1;
    28f8:	21 50       	subi	r18, 0x01	; 1
    28fa:	80 40       	sbci	r24, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:156
  }
    28fc:	90 40       	sbci	r25, 0x00	; 0
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/delay_busywait.h:42
  }
}

void delay_millis (uint32_t _ms) {
  if (F_CPU >= 1000000L) {
    __builtin_avr_delay_cycles((F_CPU / 1000L) * _ms);
    28fe:	e1 f7       	brne	.-8      	; 0x28f8 <SYS::power_reset(bool, bool) [clone .part.3]+0x6>
    2900:	00 c0       	rjmp	.+0      	; 0x2902 <SYS::power_reset(bool, bool) [clone .part.3]+0x10>
    2902:	00 00       	nop
_ZN3SYS11power_resetEbb.part.3():
    2904:	0d 98       	cbi	0x01, 5	; 1
    2906:	80 91 12 04 	lds	r24, 0x0412	; 0x800412 <__TEXT_REGION_LENGTH__+0x7f0412>
    290a:	88 60       	ori	r24, 0x08	; 8
    290c:	80 93 12 04 	sts	0x0412, r24	; 0x800412 <__TEXT_REGION_LENGTH__+0x7f0412>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:342
  #endif
    }
    if (_on) {
  #ifdef PIN_PGM_VPOWER
      delay_125ms();  /* discharge duration */
      digitalWriteMacro(PIN_PGM_VPOWER, LOW);   /* VTG on */
    2910:	80 91 13 04 	lds	r24, 0x0413	; 0x800413 <__TEXT_REGION_LENGTH__+0x7f0413>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:343
      pinControlRegister(PIN_VCP_TXD)  |= PORT_PULLUPEN_bm;   /* internal shared TCLK */
    2914:	88 60       	ori	r24, 0x08	; 8
    2916:	80 93 13 04 	sts	0x0413, r24	; 0x800413 <__TEXT_REGION_LENGTH__+0x7f0413>
    291a:	80 91 10 04 	lds	r24, 0x0410	; 0x800410 <__TEXT_REGION_LENGTH__+0x7f0410>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:344
      pinControlRegister(PIN_VCP_RXD)  |= PORT_PULLUPEN_bm;
    291e:	88 60       	ori	r24, 0x08	; 8
    2920:	80 93 10 04 	sts	0x0410, r24	; 0x800410 <__TEXT_REGION_LENGTH__+0x7f0410>
    2924:	80 91 11 04 	lds	r24, 0x0411	; 0x800411 <__TEXT_REGION_LENGTH__+0x7f0411>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:345
      pinControlRegister(PIN_PGM_TDAT) |= PORT_PULLUPEN_bm;
    2928:	88 60       	ori	r24, 0x08	; 8
    292a:	80 93 11 04 	sts	0x0411, r24	; 0x800411 <__TEXT_REGION_LENGTH__+0x7f0411>
    292e:	80 91 56 63 	lds	r24, 0x6356	; 0x806356 <_jtag_arch>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:346
      pinControlRegister(PIN_PGM_TRST) |= PORT_PULLUPEN_bm;
    2932:	83 30       	cpi	r24, 0x03	; 3
    2934:	51 f0       	breq	.+20     	; 0x294a <SYS::power_reset(bool, bool) [clone .part.3]+0x58>
    2936:	80 91 14 04 	lds	r24, 0x0414	; 0x800414 <__TEXT_REGION_LENGTH__+0x7f0414>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:348
    #if CONFIG_PGM_TYPE == 0
      if (_jtag_arch != 0x03) {
    293a:	88 60       	ori	r24, 0x08	; 8
    293c:	80 93 14 04 	sts	0x0414, r24	; 0x800414 <__TEXT_REGION_LENGTH__+0x7f0414>
    2940:	80 91 16 04 	lds	r24, 0x0416	; 0x800416 <__TEXT_REGION_LENGTH__+0x7f0416>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:349
        pinControlRegister(PIN_PGM_PDAT) |= PORT_PULLUPEN_bm;
    2944:	88 60       	ori	r24, 0x08	; 8
    2946:	80 93 16 04 	sts	0x0416, r24	; 0x800416 <__TEXT_REGION_LENGTH__+0x7f0416>
    294a:	08 95       	ret

0000294c <SYS::power_reset(bool, bool)>:
power_reset():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:350
        pinControlRegister(PIN_PGM_PCLK) |= PORT_PULLUPEN_bm;
    294c:	88 23       	and	r24, r24
    294e:	19 f1       	breq	.+70     	; 0x2996 <SYS::power_reset(bool, bool)+0x4a>
    2950:	0d 9a       	sbi	0x01, 5	; 1
    2952:	80 91 56 63 	lds	r24, 0x6356	; 0x806356 <_jtag_arch>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:355
      }
    #endif
  #endif
    }
  }
    2956:	83 30       	cpi	r24, 0x03	; 3
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:321
  /*
   * Target Reset
   */

  void power_reset (bool _off, bool _on) {
    if (_off) {
    2958:	51 f0       	breq	.+20     	; 0x296e <SYS::power_reset(bool, bool)+0x22>
    295a:	80 91 14 04 	lds	r24, 0x0414	; 0x800414 <__TEXT_REGION_LENGTH__+0x7f0414>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:328
      digitalWriteMacro(PIN_PGM_VPOWER, HIGH);  /* VTG off */
      /* Temporarily disable the pullup to stop current leakage when VTG=OFF. */
      /* It would be easier to just set the pin output LOW,                   */
      /* but we do it this way because of possible conflicts.                 */
    #if CONFIG_PGM_TYPE == 0  /* HAL_CNANO */
      if (_jtag_arch != 0x03) {
    295e:	87 7f       	andi	r24, 0xF7	; 247
    2960:	80 93 14 04 	sts	0x0414, r24	; 0x800414 <__TEXT_REGION_LENGTH__+0x7f0414>
    2964:	80 91 16 04 	lds	r24, 0x0416	; 0x800416 <__TEXT_REGION_LENGTH__+0x7f0416>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:329
        pinControlRegister(PIN_PGM_PDAT) &= ~PORT_PULLUPEN_bm;
    2968:	87 7f       	andi	r24, 0xF7	; 247
    296a:	80 93 16 04 	sts	0x0416, r24	; 0x800416 <__TEXT_REGION_LENGTH__+0x7f0416>
    296e:	80 91 11 04 	lds	r24, 0x0411	; 0x800411 <__TEXT_REGION_LENGTH__+0x7f0411>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:330
        pinControlRegister(PIN_PGM_PCLK) &= ~PORT_PULLUPEN_bm;
    2972:	87 7f       	andi	r24, 0xF7	; 247
    2974:	80 93 11 04 	sts	0x0411, r24	; 0x800411 <__TEXT_REGION_LENGTH__+0x7f0411>
    2978:	80 91 10 04 	lds	r24, 0x0410	; 0x800410 <__TEXT_REGION_LENGTH__+0x7f0410>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:333
      }
    #endif
      pinControlRegister(PIN_PGM_TRST) &= ~PORT_PULLUPEN_bm;
    297c:	87 7f       	andi	r24, 0xF7	; 247
    297e:	80 93 10 04 	sts	0x0410, r24	; 0x800410 <__TEXT_REGION_LENGTH__+0x7f0410>
    2982:	80 91 12 04 	lds	r24, 0x0412	; 0x800412 <__TEXT_REGION_LENGTH__+0x7f0412>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:334
      pinControlRegister(PIN_PGM_TDAT) &= ~PORT_PULLUPEN_bm;
    2986:	87 7f       	andi	r24, 0xF7	; 247
    2988:	80 93 12 04 	sts	0x0412, r24	; 0x800412 <__TEXT_REGION_LENGTH__+0x7f0412>
    298c:	80 91 13 04 	lds	r24, 0x0413	; 0x800413 <__TEXT_REGION_LENGTH__+0x7f0413>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:335
      pinControlRegister(PIN_VCP_TXD)  &= ~PORT_PULLUPEN_bm;  /* internal shared TCLK */
    2990:	87 7f       	andi	r24, 0xF7	; 247
    2992:	80 93 13 04 	sts	0x0413, r24	; 0x800413 <__TEXT_REGION_LENGTH__+0x7f0413>
    2996:	61 11       	cpse	r22, r1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:336
      pinControlRegister(PIN_VCP_RXD)  &= ~PORT_PULLUPEN_bm;
    2998:	ac cf       	rjmp	.-168    	; 0x28f2 <SYS::power_reset(bool, bool) [clone .part.3]>
    299a:	08 95       	ret

0000299c <PDI::connect()>:
connect():
    299c:	a6 da       	rcall	.-2740   	; 0x1eea <USART::setup()>
    299e:	0c 98       	cbi	0x01, 4	; 1
    29a0:	04 9a       	sbi	0x00, 4	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:339
  #endif
    }
    if (_on) {
    29a2:	06 9a       	sbi	0x00, 6	; 0
    29a4:	61 e0       	ldi	r22, 0x01	; 1
    29a6:	81 e0       	ldi	r24, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:355
        pinControlRegister(PIN_PGM_PCLK) |= PORT_PULLUPEN_bm;
      }
    #endif
  #endif
    }
  }
    29a8:	d1 df       	rcall	.-94     	; 0x294c <SYS::power_reset(bool, bool)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:335
      0xC2, PDI_GVAL,   /* Set GUADTIME in ASI_CTRL */
      0xC1, 0x59,       /* SYSRST */
      0x82              /* Read back ASI_CTRL */
    };

    USART::setup();
    29aa:	0c 9a       	sbi	0x01, 4	; 1
delay_micros():
    29ac:	82 e1       	ldi	r24, 0x12	; 18
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:337

    digitalWriteMacro(PIN_PGM_PDAT, LOW);
    29ae:	91 e0       	ldi	r25, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:338
    pinLogicPush(PIN_PGM_PDAT);
    29b0:	01 97       	sbiw	r24, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:339
    pinLogicPush(PIN_PGM_PCLK);
    29b2:	f1 f7       	brne	.-4      	; 0x29b0 <PDI::connect()+0x14>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:340
    SYS::power_reset();
    29b4:	00 c0       	rjmp	.+0      	; 0x29b6 <PDI::connect()+0x1a>
    29b6:	00 00       	nop
connect():
    29b8:	2d d8       	rcall	.-4006   	; 0x1a14 <USART::change_pdi()>
    29ba:	80 e1       	ldi	r24, 0x10	; 16
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:341
    digitalWriteMacro(PIN_PGM_PDAT, HIGH);
    29bc:	90 e0       	ldi	r25, 0x00	; 0
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/delay_busywait.h:33
static __inline__ __attribute__((__always_inline__)) void delay_micros (uint32_t _us);
static __inline__ __attribute__((__always_inline__)) void delay_millis (uint32_t _ms);

void delay_micros (uint32_t _us) {
  if (F_CPU >= 1000000L) {
    __builtin_avr_delay_cycles((F_CPU / 1000000L) * _us);
    29be:	0e 94 b7 09 	call	0x136e	; 0x136e <PDI::idle_clock(unsigned int)>
    29c2:	65 e0       	ldi	r22, 0x05	; 5
    29c4:	70 e0       	ldi	r23, 0x00	; 0
    29c6:	8a e4       	ldi	r24, 0x4A	; 74
    29c8:	90 e6       	ldi	r25, 0x60	; 96
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:345
    SYS::delay_55us();

    /* Send at least a certain number of IDLE bits to PCLK within 100us after PoR. */
    USART::change_pdi();
    29ca:	0e 94 f8 09 	call	0x13f0	; 0x13f0 <PDI::send_bytes(unsigned char const*, unsigned int)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:346
    idle_clock(16);
    29ce:	81 11       	cpse	r24, r1
    29d0:	05 c0       	rjmp	.+10     	; 0x29dc <PDI::connect()+0x40>
    29d2:	0e 94 ad 0a 	call	0x155a	; 0x155a <PDI::send_break()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:348

    while (!(send_bytes(_init, sizeof(_init)) && recv_byte() && RXDATA == PDI_GVAL)) {
    29d6:	0e 94 ad 0a 	call	0x155a	; 0x155a <PDI::send_break()>
    29da:	f3 cf       	rjmp	.-26     	; 0x29c2 <PDI::connect()+0x26>
    29dc:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <PDI::recv_byte()>
    29e0:	88 23       	and	r24, r24
    29e2:	b9 f3       	breq	.-18     	; 0x29d2 <PDI::connect()+0x36>
    29e4:	8d b3       	in	r24, 0x1d	; 29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:349
      send_break();
    29e6:	85 30       	cpi	r24, 0x05	; 5
    29e8:	a1 f7       	brne	.-24     	; 0x29d2 <PDI::connect()+0x36>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:350
      send_break();
    29ea:	8d b3       	in	r24, 0x1d	; 29
    29ec:	1f 92       	push	r1
    29ee:	8f 93       	push	r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:348

    /* Send at least a certain number of IDLE bits to PCLK within 100us after PoR. */
    USART::change_pdi();
    idle_clock(16);

    while (!(send_bytes(_init, sizeof(_init)) && recv_byte() && RXDATA == PDI_GVAL)) {
    29f0:	8d e6       	ldi	r24, 0x6D	; 109
    29f2:	97 e0       	ldi	r25, 0x07	; 7
    29f4:	9f 93       	push	r25
    29f6:	8f 93       	push	r24
    29f8:	83 eb       	ldi	r24, 0xB3	; 179
    29fa:	90 e6       	ldi	r25, 0x60	; 96
    29fc:	9f 93       	push	r25
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:353
      send_break();
      send_break();
    }

    D1PRINTF(" PDION;GVAL=%02X\r\n", RXDATA);
    29fe:	8f 93       	push	r24
    2a00:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
    2a04:	f8 9a       	sbi	0x1f, 0	; 31
    2a06:	0f 90       	pop	r0
    2a08:	0f 90       	pop	r0
    2a0a:	0f 90       	pop	r0
    2a0c:	0f 90       	pop	r0
    2a0e:	0f 90       	pop	r0
    2a10:	0f 90       	pop	r0
    2a12:	81 e0       	ldi	r24, 0x01	; 1
    2a14:	90 e0       	ldi	r25, 0x00	; 0
    2a16:	08 95       	ret

00002a18 <SYS::hvc_enable()>:
hvc_enable():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:354
    bit_set(PGCONF, PGCONF_UPDI_bp);
    2a18:	e0 e0       	ldi	r30, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:355
    return 1;
    2a1a:	fa e0       	ldi	r31, 0x0A	; 10
    2a1c:	10 82       	st	Z, r1
    2a1e:	80 e6       	ldi	r24, 0x60	; 96
    2a20:	80 93 01 0a 	sts	0x0A01, r24	; 0x800a01 <__TEXT_REGION_LENGTH__+0x7f0a01>
    2a24:	82 e0       	ldi	r24, 0x02	; 2
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:356
  }
    2a26:	80 93 2b 0a 	sts	0x0A2B, r24	; 0x800a2b <__TEXT_REGION_LENGTH__+0x7f0a2b>
    2a2a:	80 93 2d 0a 	sts	0x0A2D, r24	; 0x800a2d <__TEXT_REGION_LENGTH__+0x7f0a2d>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:476
    return _adc_reading;
  }

  void hvc_enable (void) {
  #ifdef CONFIG_HVC_ENABLE
    TCA0_SPLIT_CTRLA = 0;
    2a2e:	83 e0       	ldi	r24, 0x03	; 3
    2a30:	80 93 27 0a 	sts	0x0A27, r24	; 0x800a27 <__TEXT_REGION_LENGTH__+0x7f0a27>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:477
    TCA0_SPLIT_CTRLB = TCA_SPLIT_HCMP2EN_bm | TCA_SPLIT_HCMP1EN_bm;
    2a34:	10 92 21 0a 	sts	0x0A21, r1	; 0x800a21 <__TEXT_REGION_LENGTH__+0x7f0a21>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:478
    TCA0_SPLIT_HCMP1 = F_CPU / HVC_CLK / 2;
    2a38:	81 e0       	ldi	r24, 0x01	; 1
    2a3a:	80 83       	st	Z, r24
delay_micros():
    2a3c:	83 ef       	ldi	r24, 0xF3	; 243
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:479
    TCA0_SPLIT_HCMP2 = F_CPU / HVC_CLK / 2;
    2a3e:	91 e0       	ldi	r25, 0x01	; 1
    2a40:	01 97       	sbiw	r24, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:480
    TCA0_SPLIT_HPER = (F_CPU / HVC_CLK) - 1;
    2a42:	f1 f7       	brne	.-4      	; 0x2a40 <SYS::hvc_enable()+0x28>
    2a44:	00 c0       	rjmp	.+0      	; 0x2a46 <SYS::hvc_enable()+0x2e>
    2a46:	00 00       	nop
hvc_enable():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:481
    TCA0_SPLIT_HCNT = 0;
    2a48:	08 95       	ret

00002a4a <TPI::connect()>:
connect():
    2a4a:	cf 92       	push	r12
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:482
    TCA0_SPLIT_CTRLA = TCA_SPLIT_ENABLE_bm | TCA_SPLIT_CLKSEL_DIV1_gc;
    2a4c:	df 92       	push	r13
    2a4e:	ef 92       	push	r14
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/delay_busywait.h:33
    2a50:	ff 92       	push	r15
    2a52:	0f 93       	push	r16
    2a54:	1f 93       	push	r17
    2a56:	cf 93       	push	r28
    2a58:	df 93       	push	r29
    2a5a:	00 d0       	rcall	.+0      	; 0x2a5c <TPI::connect()+0x12>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:485
    delay_100us();
  #endif
  }
    2a5c:	cd b7       	in	r28, 0x3d	; 61
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:229
    return nvm_ctrl(0x00);
  }

  // MARK: TPI Session

  size_t connect (void) {
    2a5e:	de b7       	in	r29, 0x3e	; 62
    2a60:	1f ba       	out	0x1f, r1	; 31
    2a62:	43 da       	rcall	.-2938   	; 0x1eea <USART::setup()>
    2a64:	01 9a       	sbi	0x00, 1	; 0
    2a66:	61 e0       	ldi	r22, 0x01	; 1
    2a68:	81 e0       	ldi	r24, 0x01	; 1
    2a6a:	70 df       	rcall	.-288    	; 0x294c <SYS::power_reset(bool, bool)>
delay_micros():
    2a6c:	83 ed       	ldi	r24, 0xD3	; 211
    2a6e:	90 e3       	ldi	r25, 0x30	; 48
    2a70:	01 97       	sbiw	r24, 0x01	; 1
    2a72:	f1 f7       	brne	.-4      	; 0x2a70 <TPI::connect()+0x26>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:230
    PGCONF = 0;
    2a74:	00 c0       	rjmp	.+0      	; 0x2a76 <TPI::connect()+0x2c>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:231
    USART::setup();
    2a76:	00 00       	nop
connect():
    2a78:	80 91 1c 63 	lds	r24, 0x631C	; 0x80631c <_packet_length>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:234

    pinLogicPush(PIN_PGM_TRST);
    SYS::power_reset();
    2a7c:	90 91 1d 63 	lds	r25, 0x631D	; 0x80631d <_packet_length+0x1>
    2a80:	07 97       	sbiw	r24, 0x07	; 7
    2a82:	20 f0       	brcs	.+8      	; 0x2a8c <TPI::connect()+0x42>
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/delay_busywait.h:33
    2a84:	80 91 06 61 	lds	r24, 0x6106	; 0x806106 <packet+0x6>
    2a88:	81 11       	cpse	r24, r1
    2a8a:	02 c0       	rjmp	.+4      	; 0x2a90 <TPI::connect()+0x46>
    2a8c:	f5 9b       	sbis	0x1e, 5	; 30
    2a8e:	12 c0       	rjmp	.+36     	; 0x2ab4 <TPI::connect()+0x6a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:240
    SYS::delay_2500us();

    /* Called with `-xhvtpi` hvtpi_support */
    /* or SW0 holding start */
  #ifdef CONFIG_HVC_ENABLE
    if ((_packet_length > 6 && packet.out.tpi.bType) || bit_is_set(GPCONF, GPCONF_HLD_bp)) {
    2a90:	01 98       	cbi	0x00, 1	; 0
    2a92:	c2 df       	rcall	.-124    	; 0x2a18 <SYS::hvc_enable()>
    2a94:	69 9a       	sbi	0x0d, 1	; 13
    2a96:	85 ef       	ldi	r24, 0xF5	; 245
    2a98:	97 e0       	ldi	r25, 0x07	; 7
    2a9a:	9f 93       	push	r25
    2a9c:	8f 93       	push	r24
    2a9e:	83 eb       	ldi	r24, 0xB3	; 179
    2aa0:	90 e6       	ldi	r25, 0x60	; 96
    2aa2:	9f 93       	push	r25
    2aa4:	8f 93       	push	r24
    2aa6:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:243
      /* External Reset : Activation High-Voltage mode */
      pinLogicOpen(PIN_PGM_TRST);
      SYS::hvc_enable();
    2aaa:	fe 9a       	sbi	0x1f, 6	; 31
    2aac:	0f 90       	pop	r0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:244
      digitalWriteMacro(PIN_HVC_SELECT2, HIGH);
    2aae:	0f 90       	pop	r0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:245
      D1PRINTF("<HVEN>");
    2ab0:	0f 90       	pop	r0
    2ab2:	0f 90       	pop	r0
delay_millis():
    2ab4:	9f e1       	ldi	r25, 0x1F	; 31
    2ab6:	e1 ea       	ldi	r30, 0xA1	; 161
    2ab8:	f7 e0       	ldi	r31, 0x07	; 7
    2aba:	91 50       	subi	r25, 0x01	; 1
    2abc:	e0 40       	sbci	r30, 0x00	; 0
    2abe:	f0 40       	sbci	r31, 0x00	; 0
    2ac0:	e1 f7       	brne	.-8      	; 0x2aba <TPI::connect()+0x70>
    2ac2:	00 c0       	rjmp	.+0      	; 0x2ac4 <TPI::connect()+0x7a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:246
      bit_set(PGCONF, PGCONF_HVEN_bp);
    2ac4:	00 00       	nop
change_tpi():
    2ac6:	1f b7       	in	r17, 0x3f	; 63
__iCliRetVal():
    2ac8:	f8 94       	cli
change_tpi():
    2aca:	80 e1       	ldi	r24, 0x10	; 16
    2acc:	80 93 e2 05 	sts	0x05E2, r24	; 0x8005e2 <__TEXT_REGION_LENGTH__+0x7f05e2>
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/delay_busywait.h:42
  }
}

void delay_millis (uint32_t _ms) {
  if (F_CPU >= 1000000L) {
    __builtin_avr_delay_cycles((F_CPU / 1000L) * _ms);
    2ad0:	80 e8       	ldi	r24, 0x80	; 128
    2ad2:	80 93 12 04 	sts	0x0412, r24	; 0x800412 <__TEXT_REGION_LENGTH__+0x7f0412>
    2ad6:	02 9a       	sbi	0x00, 2	; 0
    2ad8:	80 e2       	ldi	r24, 0x20	; 32
    2ada:	80 93 04 08 	sts	0x0804, r24	; 0x800804 <__TEXT_REGION_LENGTH__+0x7f0804>
    2ade:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:111
  }

  /*** Set up single-wire synchronous mode for TPI operation. ***/
  /* The VCD-TxD is repurposed to transmit the synchronous clock. */
  void change_tpi (void) {
    ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    2ae0:	9a e0       	ldi	r25, 0x0A	; 10
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:50
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    2ae2:	80 93 08 08 	sts	0x0808, r24	; 0x800808 <__TEXT_REGION_LENGTH__+0x7f0808>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:112
      PORTMUX_USARTROUTEA = PORTMUX_USART_PGM;
    2ae6:	90 93 09 08 	sts	0x0809, r25	; 0x800809 <__TEXT_REGION_LENGTH__+0x7f0809>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:113
      pinControlRegister(PIN_PGM_TCLK) = PORT_INVEN_bm;
    2aea:	8b e6       	ldi	r24, 0x6B	; 107
    2aec:	80 93 07 08 	sts	0x0807, r24	; 0x800807 <__TEXT_REGION_LENGTH__+0x7f0807>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:114
      pinLogicPush(PIN_PGM_TCLK);   /* CONFIG_PGM_TYPE!=1 is internal shared VTxD */
    2af0:	8a e0       	ldi	r24, 0x0A	; 10
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:115
      USART0_STATUS = USART_DREIF_bm;
    2af2:	80 93 05 08 	sts	0x0805, r24	; 0x800805 <__TEXT_REGION_LENGTH__+0x7f0805>
    2af6:	88 ec       	ldi	r24, 0xC8	; 200
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:116
      USART0_BAUD  = sync_baud_khz(TPI_CLK);
    2af8:	80 93 06 08 	sts	0x0806, r24	; 0x800806 <__TEXT_REGION_LENGTH__+0x7f0806>
    2afc:	80 91 08 08 	lds	r24, 0x0808	; 0x800808 <__TEXT_REGION_LENGTH__+0x7f0808>
    2b00:	90 91 09 08 	lds	r25, 0x0809	; 0x800809 <__TEXT_REGION_LENGTH__+0x7f0809>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:117
      USART0_CTRLC = USART_CHSIZE_8BIT_gc | USART_PMODE_EVEN_gc | USART_CMODE_SYNCHRONOUS_gc | USART_SBMODE_2BIT_gc;
    2b04:	9f 93       	push	r25
    2b06:	8f 93       	push	r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:118
      USART0_CTRLA = USART_LBME_bm | USART_RS485_INT_gc;
    2b08:	85 ec       	ldi	r24, 0xC5	; 197
    2b0a:	97 e0       	ldi	r25, 0x07	; 7
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:119
      USART0_CTRLB = USART_RXEN_bm | USART_TXEN_bm | USART_ODME_bm;
    2b0c:	9f 93       	push	r25
    2b0e:	8f 93       	push	r24
    2b10:	83 eb       	ldi	r24, 0xB3	; 179
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:120
      D1PRINTF(" USART=TPI BAUD=%04X\r\n", USART0_BAUD);
    2b12:	90 e6       	ldi	r25, 0x60	; 96
    2b14:	9f 93       	push	r25
    2b16:	8f 93       	push	r24
    2b18:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
__iRestore():
    2b1c:	1f bf       	out	0x3f, r17	; 63
connect():
    2b1e:	84 e1       	ldi	r24, 0x14	; 20
    2b20:	90 e0       	ldi	r25, 0x00	; 0
    2b22:	0e 94 a0 08 	call	0x1140	; 0x1140 <TPI::idle_clock(unsigned int)>
set_sstcs():
    2b26:	82 ec       	ldi	r24, 0xC2	; 194
    2b28:	0e 94 db 05 	call	0xbb6	; 0xbb6 <PDI::send(unsigned char)>
    2b2c:	0f 90       	pop	r0
    2b2e:	0f 90       	pop	r0
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:70
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    2b30:	0f 90       	pop	r0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:255
    /* Required rest time after PoR, 32-128 ms */
    SYS::delay_125ms();

    /*** Activate clock ***/
    USART::change_tpi();
    idle_clock(20);
    2b32:	0f 90       	pop	r0
    2b34:	0f 90       	pop	r0
    2b36:	0f 90       	pop	r0
    2b38:	81 11       	cpse	r24, r1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:77
    return send(0x80 | _addr) && recv();
  }

  bool set_sstcs (const uint8_t _addr, const uint8_t _data) {
    D2PRINTF("[SSTCS:%02X:%02X]\r\n", _addr, _data);
    return send(0xC0 | _addr) && send(_data);
    2b3a:	0d c0       	rjmp	.+26     	; 0x2b56 <TPI::connect()+0x10c>
connect():
    2b3c:	90 e0       	ldi	r25, 0x00	; 0
    2b3e:	80 e0       	ldi	r24, 0x00	; 0
    2b40:	0f 90       	pop	r0
    2b42:	0f 90       	pop	r0
    2b44:	df 91       	pop	r29
    2b46:	cf 91       	pop	r28
    2b48:	1f 91       	pop	r17
    2b4a:	0f 91       	pop	r16
    2b4c:	ff 90       	pop	r15
    2b4e:	ef 90       	pop	r14
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:258
    /*** Activate clock ***/
    USART::change_tpi();
    idle_clock(20);

    /*** Set TPIPCR Guard Time ****/
    if (!set_sstcs(0x02, TPI_GVAL)) return 0;
    2b50:	df 90       	pop	r13
    2b52:	cf 90       	pop	r12
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:299
          bit_set(PGCONF, PGCONF_PROG_bp);
          return 1;
        }
      }
    } while (true);
  }
    2b54:	08 95       	ret
set_sstcs():
    2b56:	85 e0       	ldi	r24, 0x05	; 5
    2b58:	0e 94 5d 08 	call	0x10ba	; 0x10ba <PDI::send_byte(unsigned char) [clone .part.4]>
connect():
    2b5c:	88 23       	and	r24, r24
    2b5e:	71 f3       	breq	.-36     	; 0x2b3c <TPI::connect()+0xf2>
get_sldcs():
    2b60:	8f e8       	ldi	r24, 0x8F	; 143
    2b62:	0e 94 db 05 	call	0xbb6	; 0xbb6 <PDI::send(unsigned char)>
    2b66:	88 23       	and	r24, r24
    2b68:	d9 f3       	breq	.-10     	; 0x2b60 <TPI::connect()+0x116>
    2b6a:	0e 94 da 05 	call	0xbb4	; 0xbb4 <PDI::recv_byte() [clone .part.3]>
connect():
    2b6e:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:258
    /*** Activate clock ***/
    USART::change_tpi();
    idle_clock(20);

    /*** Set TPIPCR Guard Time ****/
    if (!set_sstcs(0x02, TPI_GVAL)) return 0;
    2b70:	b9 f3       	breq	.-18     	; 0x2b60 <TPI::connect()+0x116>
    2b72:	8d b3       	in	r24, 0x1d	; 29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:72

  /*** TPI control and CSS area command ***/

  bool get_sldcs (const uint8_t _addr) {
    D2PRINTF("[SLDCS:%02X]\r\n", _addr);
    return send(0x80 | _addr) && recv();
    2b74:	80 38       	cpi	r24, 0x80	; 128
    2b76:	a1 f7       	brne	.-24     	; 0x2b60 <TPI::connect()+0x116>
    2b78:	f8 9a       	sbi	0x1f, 0	; 31
    2b7a:	8d ee       	ldi	r24, 0xED	; 237
    2b7c:	e8 2e       	mov	r14, r24
    2b7e:	87 e0       	ldi	r24, 0x07	; 7
    2b80:	f8 2e       	mov	r15, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:261

    /*** Set TPIPCR Guard Time ****/
    if (!set_sstcs(0x02, TPI_GVAL)) return 0;

    /*** Check TPIIR code : Fixed 0x80 ***/
    while (!(get_sldcs(0x0F) && (RXDATA == 0x80)));
    2b82:	93 eb       	ldi	r25, 0xB3	; 179
    2b84:	c9 2e       	mov	r12, r25
    2b86:	90 e6       	ldi	r25, 0x60	; 96
    2b88:	d9 2e       	mov	r13, r25
    2b8a:	ff 92       	push	r15
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:262
    bit_set(PGCONF, PGCONF_UPDI_bp);
    2b8c:	ef 92       	push	r14
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:266

    /*** Activate NVMPROG mode ***/
    do {
      D1PRINTF(" SKEY\r\n");
    2b8e:	df 92       	push	r13
    2b90:	cf 92       	push	r12
    2b92:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
    2b96:	03 e5       	ldi	r16, 0x53	; 83
    2b98:	10 e6       	ldi	r17, 0x60	; 96
    2b9a:	0f 90       	pop	r0
    2b9c:	0f 90       	pop	r0
    2b9e:	0f 90       	pop	r0
    2ba0:	0f 90       	pop	r0
    2ba2:	f8 01       	movw	r30, r16
    2ba4:	81 91       	ld	r24, Z+
    2ba6:	8f 01       	movw	r16, r30
    2ba8:	0e 94 db 05 	call	0xbb6	; 0xbb6 <PDI::send(unsigned char)>
    2bac:	88 23       	and	r24, r24
    2bae:	31 f2       	breq	.-116    	; 0x2b3c <TPI::connect()+0xf2>
    2bb0:	f0 e6       	ldi	r31, 0x60	; 96
    2bb2:	0c 35       	cpi	r16, 0x5C	; 92
    2bb4:	1f 07       	cpc	r17, r31
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:268
      for (uint8_t i = 0; i < (uint8_t)sizeof(nvmprog_key); i++) {
        if (!send(nvmprog_key[i])) return 0;
    2bb6:	a9 f7       	brne	.-22     	; 0x2ba2 <TPI::connect()+0x158>
    2bb8:	18 e0       	ldi	r17, 0x08	; 8
    2bba:	84 e1       	ldi	r24, 0x14	; 20
    2bbc:	90 e0       	ldi	r25, 0x00	; 0
    2bbe:	0e 94 a0 08 	call	0x1140	; 0x1140 <TPI::idle_clock(unsigned int)>
get_sldcs():
    2bc2:	80 e8       	ldi	r24, 0x80	; 128
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:267
    bit_set(PGCONF, PGCONF_UPDI_bp);

    /*** Activate NVMPROG mode ***/
    do {
      D1PRINTF(" SKEY\r\n");
      for (uint8_t i = 0; i < (uint8_t)sizeof(nvmprog_key); i++) {
    2bc4:	0e 94 db 05 	call	0xbb6	; 0xbb6 <PDI::send(unsigned char)>
    2bc8:	81 11       	cpse	r24, r1
    2bca:	03 c0       	rjmp	.+6      	; 0x2bd2 <TPI::connect()+0x188>
    2bcc:	11 50       	subi	r17, 0x01	; 1
connect():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:271
        if (!send(nvmprog_key[i])) return 0;
      }
      for (uint8_t _i = 0; _i < 8; _i++) {
        idle_clock(20);
    2bce:	a9 f7       	brne	.-22     	; 0x2bba <TPI::connect()+0x170>
    2bd0:	dc cf       	rjmp	.-72     	; 0x2b8a <TPI::connect()+0x140>
get_sldcs():
    2bd2:	0e 94 da 05 	call	0xbb4	; 0xbb4 <PDI::recv_byte() [clone .part.3]>
connect():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:72

  /*** TPI control and CSS area command ***/

  bool get_sldcs (const uint8_t _addr) {
    D2PRINTF("[SLDCS:%02X]\r\n", _addr);
    return send(0x80 | _addr) && recv();
    2bd6:	88 23       	and	r24, r24
    2bd8:	c9 f3       	breq	.-14     	; 0x2bcc <TPI::connect()+0x182>
    2bda:	8d b3       	in	r24, 0x1d	; 29
    2bdc:	82 30       	cpi	r24, 0x02	; 2
    2bde:	b1 f7       	brne	.-20     	; 0x2bcc <TPI::connect()+0x182>
    2be0:	19 82       	std	Y+1, r1	; 0x01
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:270
    do {
      D1PRINTF(" SKEY\r\n");
      for (uint8_t i = 0; i < (uint8_t)sizeof(nvmprog_key); i++) {
        if (!send(nvmprog_key[i])) return 0;
      }
      for (uint8_t _i = 0; _i < 8; _i++) {
    2be2:	1a 82       	std	Y+2, r1	; 0x02
    2be4:	81 ec       	ldi	r24, 0xC1	; 193
    2be6:	9f e3       	ldi	r25, 0x3F	; 63
    2be8:	0e 94 88 08 	call	0x1110	; 0x1110 <TPI::set_sstpr(unsigned int)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:272
        idle_clock(20);
        if (get_sldcs(0x00) && RXDATA == 0x02) {  /* get TPISR */
    2bec:	88 23       	and	r24, r24
    2bee:	81 f1       	breq	.+96     	; 0x2c50 <TPI::connect()+0x206>
    2bf0:	0e 94 82 08 	call	0x1104	; 0x1104 <TPI::get_sld()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:285
          * Other is written in 1 word chunks.
          *
          * The original PICKit4 probably does the same thing,
          * since the JTAG3 protocol does not include these notifications.
          */
          uint16_t _signature = 0;
    2bf4:	88 23       	and	r24, r24
    2bf6:	61 f1       	breq	.+88     	; 0x2c50 <TPI::connect()+0x206>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:286
          if (set_sstpr(0x3FC1) && get_sld()) {
    2bf8:	8d b3       	in	r24, 0x1d	; 29
    2bfa:	8a 83       	std	Y+2, r24	; 0x02
    2bfc:	0e 94 82 08 	call	0x1104	; 0x1104 <TPI::get_sld()>
    2c00:	88 23       	and	r24, r24
    2c02:	11 f0       	breq	.+4      	; 0x2c08 <TPI::connect()+0x1be>
    2c04:	8d b3       	in	r24, 0x1d	; 29
    2c06:	89 83       	std	Y+1, r24	; 0x01
    2c08:	29 81       	ldd	r18, Y+1	; 0x01
    2c0a:	3a 81       	ldd	r19, Y+2	; 0x02
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:287
            _CAPS16(_signature)->bytes[1] = RXDATA;
    2c0c:	2e 30       	cpi	r18, 0x0E	; 14
    2c0e:	82 e9       	ldi	r24, 0x92	; 146
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:288
            if (get_sld()) _CAPS16(_signature)->bytes[0] = RXDATA;
    2c10:	38 07       	cpc	r19, r24
    2c12:	39 f0       	breq	.+14     	; 0x2c22 <TPI::connect()+0x1d8>
    2c14:	84 e0       	ldi	r24, 0x04	; 4
    2c16:	2f 30       	cpi	r18, 0x0F	; 15
    2c18:	91 e9       	ldi	r25, 0x91	; 145
    2c1a:	39 07       	cpc	r19, r25
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:290
          }
          _tpi_chunks = _signature == 0x920E ? 8  /* ATtiny40 */
    2c1c:	19 f0       	breq	.+6      	; 0x2c24 <TPI::connect()+0x1da>
    2c1e:	82 e0       	ldi	r24, 0x02	; 2
    2c20:	01 c0       	rjmp	.+2      	; 0x2c24 <TPI::connect()+0x1da>
    2c22:	88 e0       	ldi	r24, 0x08	; 8
    2c24:	80 93 da 60 	sts	0x60DA, r24	; 0x8060da <_tpi_chunks>
    2c28:	1f 92       	push	r1
    2c2a:	8f 93       	push	r24
    2c2c:	3f 93       	push	r19
    2c2e:	2f 93       	push	r18
    2c30:	8c ed       	ldi	r24, 0xDC	; 220
    2c32:	97 e0       	ldi	r25, 0x07	; 7
    2c34:	9f 93       	push	r25
    2c36:	8f 93       	push	r24
    2c38:	83 eb       	ldi	r24, 0xB3	; 179
    2c3a:	90 e6       	ldi	r25, 0x60	; 96
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:293
                      : _signature == 0x910F ? 4  /* ATtiny20 */
                      : 2;                        /* Othres   */
          D1PRINTF(" SIG>%04X:%02X\r\n", _signature, _tpi_chunks);
    2c3c:	9f 93       	push	r25
    2c3e:	8f 93       	push	r24
    2c40:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
    2c44:	f9 9a       	sbi	0x1f, 1	; 31
    2c46:	cd bf       	out	0x3d, r28	; 61
    2c48:	de bf       	out	0x3e, r29	; 62
    2c4a:	81 e0       	ldi	r24, 0x01	; 1
    2c4c:	90 e0       	ldi	r25, 0x00	; 0
    2c4e:	78 cf       	rjmp	.-272    	; 0x2b40 <TPI::connect()+0xf6>
    2c50:	29 81       	ldd	r18, Y+1	; 0x01
    2c52:	3a 81       	ldd	r19, Y+2	; 0x02
    2c54:	e4 cf       	rjmp	.-56     	; 0x2c1e <TPI::connect()+0x1d4>

00002c56 <UPDI::connect()>:
    2c56:	cf 93       	push	r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:294
          bit_set(PGCONF, PGCONF_PROG_bp);
    2c58:	df 93       	push	r29
    2c5a:	d0 91 4d 63 	lds	r29, 0x634D	; 0x80634d <Device_Descriptor+0x2f>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:295
          return 1;
    2c5e:	80 91 1c 63 	lds	r24, 0x631C	; 0x80631c <_packet_length>
    2c62:	90 91 1d 63 	lds	r25, 0x631D	; 0x80631d <_packet_length+0x1>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:290
          uint16_t _signature = 0;
          if (set_sstpr(0x3FC1) && get_sld()) {
            _CAPS16(_signature)->bytes[1] = RXDATA;
            if (get_sld()) _CAPS16(_signature)->bytes[0] = RXDATA;
          }
          _tpi_chunks = _signature == 0x920E ? 8  /* ATtiny40 */
    2c66:	07 97       	sbiw	r24, 0x07	; 7
    2c68:	48 f0       	brcs	.+18     	; 0x2c7c <UPDI::connect()+0x26>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:378
   * For UPDI communication, first set the following:
   * - Keep forced reset for wakeup
   * - Ignore communication collisions
   * - Make guard time short enough
   */
  size_t connect (void) {
    2c6a:	80 91 07 61 	lds	r24, 0x6107	; 0x806107 <packet+0x7>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:388
      0x55, 0x82        /* LDCS CTRLA */
    };
    const static uint8_t _sib256[] = {
      0x55, 0xE6        /* SIB 256bits */
    };
    uint8_t _hvvar = Device_Descriptor.UPDI.hvupdi_variant;
    2c6e:	88 23       	and	r24, r24
    2c70:	29 f0       	breq	.+10     	; 0x2c7c <UPDI::connect()+0x26>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:390
    bool _hven = (_packet_length >= 7 && packet.out.bMType && _jtag_hvctrl)
              || bit_is_set(GPCONF, GPCONF_HLD_bp);
    2c72:	80 91 ff 60 	lds	r24, 0x60FF	; 0x8060ff <_jtag_hvctrl>
    2c76:	c1 e0       	ldi	r28, 0x01	; 1
    2c78:	81 11       	cpse	r24, r1
    2c7a:	04 c0       	rjmp	.+8      	; 0x2c84 <UPDI::connect()+0x2e>
    2c7c:	ce b3       	in	r28, 0x1e	; 30
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:389
    };
    const static uint8_t _sib256[] = {
      0x55, 0xE6        /* SIB 256bits */
    };
    uint8_t _hvvar = Device_Descriptor.UPDI.hvupdi_variant;
    bool _hven = (_packet_length >= 7 && packet.out.bMType && _jtag_hvctrl)
    2c7e:	c5 fb       	bst	r28, 5
    2c80:	cc 27       	eor	r28, r28
    2c82:	c0 f9       	bld	r28, 0
    2c84:	10 92 df 60 	sts	0x60DF, r1	; 0x8060df <_sib>
    2c88:	8f ef       	ldi	r24, 0xFF	; 255
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:390
              || bit_is_set(GPCONF, GPCONF_HLD_bp);
    2c8a:	9f ef       	ldi	r25, 0xFF	; 255
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:389
    };
    const static uint8_t _sib256[] = {
      0x55, 0xE6        /* SIB 256bits */
    };
    uint8_t _hvvar = Device_Descriptor.UPDI.hvupdi_variant;
    bool _hven = (_packet_length >= 7 && packet.out.bMType && _jtag_hvctrl)
    2c8c:	dc 01       	movw	r26, r24
    2c8e:	80 93 db 60 	sts	0x60DB, r24	; 0x8060db <_before_page>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:390
              || bit_is_set(GPCONF, GPCONF_HLD_bp);
    2c92:	90 93 dc 60 	sts	0x60DC, r25	; 0x8060dc <_before_page+0x1>
    2c96:	a0 93 dd 60 	sts	0x60DD, r26	; 0x8060dd <_before_page+0x2>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:391
    _sib[0] = 0;
    2c9a:	b0 93 de 60 	sts	0x60DE, r27	; 0x8060de <_before_page+0x3>
setup():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:392
    _before_page = -1L;
    2c9e:	86 ec       	ldi	r24, 0xC6	; 198
    2ca0:	95 e0       	ldi	r25, 0x05	; 5
    2ca2:	80 93 4e 63 	sts	0x634E, r24	; 0x80634e <Command_Table>
    2ca6:	90 93 4f 63 	sts	0x634F, r25	; 0x80634f <Command_Table+0x1>
    2caa:	81 eb       	ldi	r24, 0xB1	; 177
    2cac:	9b e0       	ldi	r25, 0x0B	; 11
    2cae:	80 93 50 63 	sts	0x6350, r24	; 0x806350 <Command_Table+0x2>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv1.cpp:68
    // else if (m_type == 0xD3)   /* MTYPE_SIB */ /* This is in its own memory space. */
    return 0;
  }

  bool setup (void) {
    Command_Table.prog_init    = &prog_init;
    2cb2:	90 93 51 63 	sts	0x6351, r25	; 0x806351 <Command_Table+0x3>
    2cb6:	84 eb       	ldi	r24, 0xB4	; 180
    2cb8:	9b e0       	ldi	r25, 0x0B	; 11
    2cba:	80 93 52 63 	sts	0x6352, r24	; 0x806352 <Command_Table+0x4>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv1.cpp:69
    Command_Table.read_memory  = &read_memory;
    2cbe:	90 93 53 63 	sts	0x6353, r25	; 0x806353 <Command_Table+0x5>
    2cc2:	8e ea       	ldi	r24, 0xAE	; 174
    2cc4:	9b e0       	ldi	r25, 0x0B	; 11
    2cc6:	80 93 54 63 	sts	0x6354, r24	; 0x806354 <Command_Table+0x6>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv1.cpp:70
    Command_Table.erase_memory = &erase_memory;
    2cca:	90 93 55 63 	sts	0x6355, r25	; 0x806355 <Command_Table+0x7>
connect():
    2cce:	0d d9       	rcall	.-3558   	; 0x1eea <USART::setup()>
    2cd0:	08 98       	cbi	0x01, 0	; 1
    2cd2:	09 98       	cbi	0x01, 1	; 1
    2cd4:	01 9a       	sbi	0x00, 1	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv1.cpp:71
    Command_Table.write_memory = &write_memory;
    2cd6:	61 e0       	ldi	r22, 0x01	; 1
    2cd8:	81 e0       	ldi	r24, 0x01	; 1
    2cda:	38 de       	rcall	.-912    	; 0x294c <SYS::power_reset(bool, bool)>
delay_micros():
    2cdc:	83 ed       	ldi	r24, 0xD3	; 211
    2cde:	90 e3       	ldi	r25, 0x30	; 48
    2ce0:	01 97       	sbiw	r24, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:394
    NVM::V1::setup();   /* default is dummy callback */
    USART::setup();
    2ce2:	f1 f7       	brne	.-4      	; 0x2ce0 <UPDI::connect()+0x8a>
    2ce4:	00 c0       	rjmp	.+0      	; 0x2ce6 <UPDI::connect()+0x90>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:397

    /* If possible, perform a hardware reset of the device. */
    digitalWriteMacro(PIN_PGM_TDAT, LOW);
    2ce6:	00 00       	nop
connect():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:398
    digitalWriteMacro(PIN_PGM_TRST, LOW);
    2ce8:	01 98       	cbi	0x00, 1	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:399
    pinLogicPush(PIN_PGM_TRST);
    2cea:	cc 23       	and	r28, r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:400
    SYS::power_reset();
    2cec:	01 f1       	breq	.+64     	; 0x2d2e <UPDI::connect()+0xd8>
    2cee:	d1 30       	cpi	r29, 0x01	; 1
    2cf0:	f1 f0       	breq	.+60     	; 0x2d2e <UPDI::connect()+0xd8>
    2cf2:	92 de       	rcall	.-732    	; 0x2a18 <SYS::hvc_enable()>
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/delay_busywait.h:33
static __inline__ __attribute__((__always_inline__)) void delay_micros (uint32_t _us);
static __inline__ __attribute__((__always_inline__)) void delay_millis (uint32_t _ms);

void delay_micros (uint32_t _us) {
  if (F_CPU >= 1000000L) {
    __builtin_avr_delay_cycles((F_CPU / 1000000L) * _us);
    2cf4:	d1 11       	cpse	r29, r1
    2cf6:	87 c0       	rjmp	.+270    	; 0x2e06 <UPDI::connect()+0x1b0>
    2cf8:	8f ee       	ldi	r24, 0xEF	; 239
    2cfa:	98 e0       	ldi	r25, 0x08	; 8
    2cfc:	9f 93       	push	r25
    2cfe:	8f 93       	push	r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:402
    SYS::delay_2500us();
    pinLogicOpen(PIN_PGM_TRST);
    2d00:	83 eb       	ldi	r24, 0xB3	; 179
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:406

    /* High-Voltage control */
    #ifdef CONFIG_HVC_ENABLE
    if (_hven && _hvvar != 1) {
    2d02:	90 e6       	ldi	r25, 0x60	; 96
    2d04:	9f 93       	push	r25
    2d06:	8f 93       	push	r24
    2d08:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:407
      SYS::hvc_enable();
    2d0c:	68 9a       	sbi	0x0d, 0	; 13
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:408
      if (_hvvar == 0) {
    2d0e:	0f 90       	pop	r0
    2d10:	0f 90       	pop	r0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:409
        D1PRINTF("<HVC:V0>");
    2d12:	0f 90       	pop	r0
    2d14:	0f 90       	pop	r0
delay_micros():
    2d16:	8f e9       	ldi	r24, 0x9F	; 159
    2d18:	9f e0       	ldi	r25, 0x0F	; 15
    2d1a:	01 97       	sbiw	r24, 0x01	; 1
    2d1c:	f1 f7       	brne	.-4      	; 0x2d1a <UPDI::connect()+0xc4>
    2d1e:	00 c0       	rjmp	.+0      	; 0x2d20 <UPDI::connect()+0xca>
    2d20:	00 00       	nop
hvc_leave():
    2d22:	10 92 01 0a 	sts	0x0A01, r1	; 0x800a01 <__TEXT_REGION_LENGTH__+0x7f0a01>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:410
        digitalWriteMacro(PIN_HVC_SELECT1, HIGH);
    2d26:	10 92 00 0a 	sts	0x0A00, r1	; 0x800a00 <__TEXT_REGION_LENGTH__+0x7f0a00>
connect():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:414
      }
      else if (_hvvar == 2) {
        D1PRINTF("<HVC:V2+>");
        digitalWriteMacro(PIN_HVC_SELECT3, HIGH);
    2d2a:	68 98       	cbi	0x0d, 0	; 13
    2d2c:	6a 98       	cbi	0x0d, 2	; 13
    2d2e:	00 9a       	sbi	0x00, 0	; 0
delay_micros():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/delay_busywait.h:33
    2d30:	83 ed       	ldi	r24, 0xD3	; 211
    2d32:	90 e3       	ldi	r25, 0x30	; 48
    2d34:	01 97       	sbiw	r24, 0x01	; 1
    2d36:	f1 f7       	brne	.-4      	; 0x2d34 <UPDI::connect()+0xde>
    2d38:	00 c0       	rjmp	.+0      	; 0x2d3a <UPDI::connect()+0xe4>
    2d3a:	00 00       	nop
connect():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:489

  void hvc_leave (void) {
  #ifdef CONFIG_HVC_ENABLE
    TCA0_SPLIT_CTRLB = 0;
    2d3c:	00 98       	cbi	0x00, 0	; 0
    2d3e:	10 9b       	sbis	0x02, 0	; 2
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:490
    TCA0_SPLIT_CTRLA = 0;
    2d40:	fe cf       	rjmp	.-4      	; 0x2d3e <UPDI::connect()+0xe8>
change_updi():
    2d42:	cf b7       	in	r28, 0x3f	; 63
__iCliRetVal():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:419
      }
      /* Most early silicon requires a pulse of 700us or more. */
      SYS::delay_800us();
      SYS::hvc_leave();
      digitalWriteMacro(PIN_HVC_SELECT1, LOW);
    2d44:	f8 94       	cli
change_updi():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:420
      digitalWriteMacro(PIN_HVC_SELECT3, LOW);
    2d46:	80 e1       	ldi	r24, 0x10	; 16
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:426
      /* From this point onwards, UPDI activation must be successful within 64ms. */
    }
    #endif

    /* In most cases, a 2.5 ms LOW signal is sufficient to initiate UPDI activation. */
    pinLogicPush(PIN_PGM_TDAT);
    2d48:	80 93 e2 05 	sts	0x05E2, r24	; 0x8005e2 <__TEXT_REGION_LENGTH__+0x7f05e2>
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/delay_busywait.h:33
    2d4c:	80 e2       	ldi	r24, 0x20	; 32
    2d4e:	80 93 04 08 	sts	0x0804, r24	; 0x800804 <__TEXT_REGION_LENGTH__+0x7f0804>
calk_baud_khz():
    2d52:	20 91 57 63 	lds	r18, 0x6357	; 0x806357 <_xclk>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:428
    SYS::delay_2500us();
    pinLogicOpen(PIN_PGM_TDAT);
    2d56:	30 91 58 63 	lds	r19, 0x6358	; 0x806358 <_xclk+0x1>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:431

    /* When UPDI is activated, it becomes a HIGH signal. */
    while (!digitalReadMacro(PIN_PGM_TDAT));
    2d5a:	50 e0       	ldi	r21, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:95
    }
  }

  /*** Sets up single-wire asynchronous mode for UPDI operation. ***/
  void change_updi (void) {
    ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    2d5c:	40 e0       	ldi	r20, 0x00	; 0
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:50
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    2d5e:	60 e0       	ldi	r22, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:96
      PORTMUX_USARTROUTEA = PORTMUX_USART_PGM;
    2d60:	71 e7       	ldi	r23, 0x71	; 113
    2d62:	82 e0       	ldi	r24, 0x02	; 2
    2d64:	90 e0       	ldi	r25, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:97
      USART0_STATUS = USART_DREIF_bm;
    2d66:	0e 94 fe 29 	call	0x53fc	; 0x53fc <__divmodsi4>
    2d6a:	da 01       	movw	r26, r20
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:46
  #endif
  }

  /*** Calculate the baud rate for VCP asynchronous mode. ***/
  uint16_t calk_baud_khz (uint16_t _khz) {
    uint32_t _baud = ((F_CPU / 1000L * 8L) / _khz + 1) / 2;
    2d6c:	c9 01       	movw	r24, r18
    2d6e:	01 96       	adiw	r24, 0x01	; 1
    2d70:	a1 1d       	adc	r26, r1
    2d72:	b1 1d       	adc	r27, r1
    2d74:	b5 95       	asr	r27
    2d76:	a7 95       	ror	r26
    2d78:	97 95       	ror	r25
    2d7a:	87 95       	ror	r24
    2d7c:	80 34       	cpi	r24, 0x40	; 64
    2d7e:	91 05       	cpc	r25, r1
    2d80:	a1 05       	cpc	r26, r1
    2d82:	b1 05       	cpc	r27, r1
    2d84:	0c f4       	brge	.+2      	; 0x2d88 <UPDI::connect()+0x132>
    2d86:	4e c0       	rjmp	.+156    	; 0x2e24 <UPDI::connect()+0x1ce>
    2d88:	00 97       	sbiw	r24, 0x00	; 0
    2d8a:	21 e0       	ldi	r18, 0x01	; 1
    2d8c:	a2 07       	cpc	r26, r18
    2d8e:	b1 05       	cpc	r27, r1
    2d90:	20 f0       	brcs	.+8      	; 0x2d9a <UPDI::connect()+0x144>
    2d92:	8f ef       	ldi	r24, 0xFF	; 255
    2d94:	9f ef       	ldi	r25, 0xFF	; 255
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:47
    if (_baud < 64) _baud = 64;
    2d96:	a0 e0       	ldi	r26, 0x00	; 0
    2d98:	b0 e0       	ldi	r27, 0x00	; 0
change_updi():
    2d9a:	80 93 08 08 	sts	0x0808, r24	; 0x800808 <__TEXT_REGION_LENGTH__+0x7f0808>
    2d9e:	90 93 09 08 	sts	0x0809, r25	; 0x800809 <__TEXT_REGION_LENGTH__+0x7f0809>
    2da2:	8b e2       	ldi	r24, 0x2B	; 43
    2da4:	80 93 07 08 	sts	0x0807, r24	; 0x800807 <__TEXT_REGION_LENGTH__+0x7f0807>
    2da8:	8a e0       	ldi	r24, 0x0A	; 10
    2daa:	80 93 05 08 	sts	0x0805, r24	; 0x800805 <__TEXT_REGION_LENGTH__+0x7f0805>
    2dae:	88 ec       	ldi	r24, 0xC8	; 200
    2db0:	80 93 06 08 	sts	0x0806, r24	; 0x800806 <__TEXT_REGION_LENGTH__+0x7f0806>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:98
  /*** Sets up single-wire asynchronous mode for UPDI operation. ***/
  void change_updi (void) {
    ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
      PORTMUX_USARTROUTEA = PORTMUX_USART_PGM;
      USART0_STATUS = USART_DREIF_bm;
      USART0_BAUD  = calk_baud_khz(_xclk);
    2db4:	80 91 08 08 	lds	r24, 0x0808	; 0x800808 <__TEXT_REGION_LENGTH__+0x7f0808>
    2db8:	90 91 09 08 	lds	r25, 0x0809	; 0x800809 <__TEXT_REGION_LENGTH__+0x7f0809>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:99
      USART0_CTRLC = USART_CHSIZE_8BIT_gc | USART_PMODE_EVEN_gc | USART_SBMODE_2BIT_gc;
    2dbc:	9f 93       	push	r25
    2dbe:	8f 93       	push	r24
    2dc0:	80 91 58 63 	lds	r24, 0x6358	; 0x806358 <_xclk+0x1>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:102
      /* The RS485_INT:_BV(1) attribute is undocumented but works fine.     */
      /* Without it, an additional delay is required before sending a byte. */
      USART0_CTRLA = USART_LBME_bm | USART_RS485_INT_gc;
    2dc4:	8f 93       	push	r24
    2dc6:	80 91 57 63 	lds	r24, 0x6357	; 0x806357 <_xclk>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:103
      USART0_CTRLB = USART_RXEN_bm | USART_TXEN_bm | USART_ODME_bm;
    2dca:	8f 93       	push	r24
    2dcc:	8e e9       	ldi	r24, 0x9E	; 158
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:104
      D1PRINTF(" USART=UPDI XCLK=%d BAUD=%04X\r\n", _xclk, USART0_BAUD);
    2dce:	98 e0       	ldi	r25, 0x08	; 8
    2dd0:	9f 93       	push	r25
    2dd2:	8f 93       	push	r24
    2dd4:	83 eb       	ldi	r24, 0xB3	; 179
    2dd6:	90 e6       	ldi	r25, 0x60	; 96
    2dd8:	9f 93       	push	r25
    2dda:	8f 93       	push	r24
    2ddc:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
__iRestore():
    2de0:	cf bf       	out	0x3f, r28	; 63
    2de2:	8d b7       	in	r24, 0x3d	; 61
    2de4:	9e b7       	in	r25, 0x3e	; 62
    2de6:	08 96       	adiw	r24, 0x08	; 8
    2de8:	8d bf       	out	0x3d, r24	; 61
    2dea:	9e bf       	out	0x3e, r25	; 62
connect():
    2dec:	6b e0       	ldi	r22, 0x0B	; 11
    2dee:	70 e0       	ldi	r23, 0x00	; 0
    2df0:	8c e8       	ldi	r24, 0x8C	; 140
    2df2:	90 e6       	ldi	r25, 0x60	; 96
    2df4:	0e 94 ec 05 	call	0xbd8	; 0xbd8 <UPDI::send_bytes(unsigned char const*, unsigned int)>
    2df8:	81 11       	cpse	r24, r1
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:70
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    2dfa:	19 c0       	rjmp	.+50     	; 0x2e2e <UPDI::connect()+0x1d8>
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:71
    __asm__ volatile ("" ::: "memory");
    2dfc:	0e 94 05 08 	call	0x100a	; 0x100a <UPDI::send_break()>
    2e00:	0e 94 05 08 	call	0x100a	; 0x100a <UPDI::send_break()>
    2e04:	f3 cf       	rjmp	.-26     	; 0x2dec <UPDI::connect()+0x196>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:437
    USART::change_updi();

    /* It will send a series of commands and check the response. */
    /* If the response is invalid, it will send a BREAK character and try again. */
    /* If UPDI does not respond, a timeout occurs. */
    while (!(send_bytes(_init, sizeof(_init)) && recv() && (RXDATA == UPDI_CTRLAV))) {
    2e06:	d2 30       	cpi	r29, 0x02	; 2
    2e08:	09 f0       	breq	.+2      	; 0x2e0c <UPDI::connect()+0x1b6>
    2e0a:	85 cf       	rjmp	.-246    	; 0x2d16 <UPDI::connect()+0xc0>
    2e0c:	85 ee       	ldi	r24, 0xE5	; 229
    2e0e:	98 e0       	ldi	r25, 0x08	; 8
    2e10:	9f 93       	push	r25
    2e12:	8f 93       	push	r24
    2e14:	83 eb       	ldi	r24, 0xB3	; 179
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:438
      send_break();
    2e16:	90 e6       	ldi	r25, 0x60	; 96
    2e18:	9f 93       	push	r25
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:439
      send_break();
    2e1a:	8f 93       	push	r24
    2e1c:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:412
      SYS::hvc_enable();
      if (_hvvar == 0) {
        D1PRINTF("<HVC:V0>");
        digitalWriteMacro(PIN_HVC_SELECT1, HIGH);
      }
      else if (_hvvar == 2) {
    2e20:	6a 9a       	sbi	0x0d, 2	; 13
    2e22:	75 cf       	rjmp	.-278    	; 0x2d0e <UPDI::connect()+0xb8>
    2e24:	80 e4       	ldi	r24, 0x40	; 64
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:413
        D1PRINTF("<HVC:V2+>");
    2e26:	90 e0       	ldi	r25, 0x00	; 0
    2e28:	a0 e0       	ldi	r26, 0x00	; 0
    2e2a:	b0 e0       	ldi	r27, 0x00	; 0
    2e2c:	b6 cf       	rjmp	.-148    	; 0x2d9a <UPDI::connect()+0x144>
    2e2e:	0e 94 c9 05 	call	0xb92	; 0xb92 <PDI::recv()>
    2e32:	88 23       	and	r24, r24
    2e34:	19 f3       	breq	.-58     	; 0x2dfc <UPDI::connect()+0x1a6>
    2e36:	8d b3       	in	r24, 0x1d	; 29
    2e38:	85 31       	cpi	r24, 0x15	; 21
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:414
        digitalWriteMacro(PIN_HVC_SELECT3, HIGH);
    2e3a:	01 f7       	brne	.-64     	; 0x2dfc <UPDI::connect()+0x1a6>
    2e3c:	62 e0       	ldi	r22, 0x02	; 2
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:47
  }

  /*** Calculate the baud rate for VCP asynchronous mode. ***/
  uint16_t calk_baud_khz (uint16_t _khz) {
    uint32_t _baud = ((F_CPU / 1000L * 8L) / _khz + 1) / 2;
    if (_baud < 64) _baud = 64;
    2e3e:	70 e0       	ldi	r23, 0x00	; 0
    2e40:	8a e8       	ldi	r24, 0x8A	; 138
    2e42:	90 e6       	ldi	r25, 0x60	; 96
    2e44:	0e 94 ec 05 	call	0xbd8	; 0xbd8 <UPDI::send_bytes(unsigned char const*, unsigned int)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:437
    USART::change_updi();

    /* It will send a series of commands and check the response. */
    /* If the response is invalid, it will send a BREAK character and try again. */
    /* If UPDI does not respond, a timeout occurs. */
    while (!(send_bytes(_init, sizeof(_init)) && recv() && (RXDATA == UPDI_CTRLAV))) {
    2e48:	88 23       	and	r24, r24
    2e4a:	09 f4       	brne	.+2      	; 0x2e4e <UPDI::connect()+0x1f8>
    2e4c:	ae c0       	rjmp	.+348    	; 0x2faa <UPDI::connect()+0x354>
    2e4e:	60 e2       	ldi	r22, 0x20	; 32
    2e50:	70 e0       	ldi	r23, 0x00	; 0
    2e52:	8f ed       	ldi	r24, 0xDF	; 223
    2e54:	90 e6       	ldi	r25, 0x60	; 96
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:444
      send_break();
    }

    /* Read the SIB from the ACC. */
    /* This can be done even on a locked device. */
    if (send_bytes(_sib256, sizeof(_sib256)) && recv_bytes(_sib, 32)) {
    2e56:	0e 94 00 07 	call	0xe00	; 0xe00 <UPDI::recv_bytes(unsigned char*, unsigned int)>
    2e5a:	88 23       	and	r24, r24
    2e5c:	09 f4       	brne	.+2      	; 0x2e60 <UPDI::connect()+0x20a>
    2e5e:	a5 c0       	rjmp	.+330    	; 0x2faa <UPDI::connect()+0x354>
    2e60:	8f ed       	ldi	r24, 0xDF	; 223
    2e62:	90 e6       	ldi	r25, 0x60	; 96
    2e64:	9f 93       	push	r25
    2e66:	8f 93       	push	r24
    2e68:	80 91 e9 60 	lds	r24, 0x60E9	; 0x8060e9 <_sib+0xa>
    2e6c:	1f 92       	push	r1
    2e6e:	8f 93       	push	r24
    2e70:	80 ed       	ldi	r24, 0xD0	; 208
    2e72:	98 e0       	ldi	r25, 0x08	; 8
    2e74:	9f 93       	push	r25
    2e76:	8f 93       	push	r24
    2e78:	83 eb       	ldi	r24, 0xB3	; 179
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:446
      size_t _result = 0;
      D1PRINTF(" NVM:%02X,SIB=\"%s\"\r\n", _sib[10], _sib);
    2e7a:	90 e6       	ldi	r25, 0x60	; 96
    2e7c:	9f 93       	push	r25
    2e7e:	8f 93       	push	r24
    2e80:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
    2e84:	80 91 e9 60 	lds	r24, 0x60E9	; 0x8060e9 <_sib+0xa>
    2e88:	2d b7       	in	r18, 0x3d	; 61
    2e8a:	3e b7       	in	r19, 0x3e	; 62
    2e8c:	28 5f       	subi	r18, 0xF8	; 248
    2e8e:	3f 4f       	sbci	r19, 0xFF	; 255
    2e90:	2d bf       	out	0x3d, r18	; 61
    2e92:	3e bf       	out	0x3e, r19	; 62
    2e94:	85 33       	cpi	r24, 0x35	; 53
    2e96:	69 f5       	brne	.+90     	; 0x2ef2 <UPDI::connect()+0x29c>
setup():
    2e98:	84 ef       	ldi	r24, 0xF4	; 244
    2e9a:	9a e0       	ldi	r25, 0x0A	; 10
    2e9c:	80 93 4e 63 	sts	0x634E, r24	; 0x80634e <Command_Table>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:448
      /* Depending on the SIB, different low-level methods are executed. */
      if      (_sib[10] == '5') _result = NVM::V5::setup();
    2ea0:	90 93 4f 63 	sts	0x634F, r25	; 0x80634f <Command_Table+0x1>
    2ea4:	84 e0       	ldi	r24, 0x04	; 4
    2ea6:	98 e0       	ldi	r25, 0x08	; 8
    2ea8:	80 93 50 63 	sts	0x6350, r24	; 0x806350 <Command_Table+0x2>
    2eac:	90 93 51 63 	sts	0x6351, r25	; 0x806351 <Command_Table+0x3>
    2eb0:	8a e4       	ldi	r24, 0x4A	; 74
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv5.cpp:165
    }
  }

  bool setup (void) {
    Command_Table.prog_init    = &prog_init;
    2eb2:	94 e1       	ldi	r25, 0x14	; 20
    2eb4:	80 93 52 63 	sts	0x6352, r24	; 0x806352 <Command_Table+0x4>
    2eb8:	90 93 53 63 	sts	0x6353, r25	; 0x806353 <Command_Table+0x5>
    2ebc:	89 e4       	ldi	r24, 0x49	; 73
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv5.cpp:166
    Command_Table.read_memory  = &read_memory;
    2ebe:	93 e1       	ldi	r25, 0x13	; 19
    2ec0:	80 93 54 63 	sts	0x6354, r24	; 0x806354 <Command_Table+0x6>
    2ec4:	90 93 55 63 	sts	0x6355, r25	; 0x806355 <Command_Table+0x7>
connect():
    2ec8:	80 91 df 60 	lds	r24, 0x60DF	; 0x8060df <_sib>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv5.cpp:167
    Command_Table.erase_memory = &erase_memory;
    2ecc:	ef ed       	ldi	r30, 0xDF	; 223
    2ece:	f0 e6       	ldi	r31, 0x60	; 96
    2ed0:	80 32       	cpi	r24, 0x20	; 32
    2ed2:	11 f4       	brne	.+4      	; 0x2ed8 <UPDI::connect()+0x282>
    2ed4:	e3 ee       	ldi	r30, 0xE3	; 227
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv5.cpp:168
    Command_Table.write_memory = &write_memory;
    2ed6:	f0 e6       	ldi	r31, 0x60	; 96
    2ed8:	84 e0       	ldi	r24, 0x04	; 4
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:174

  bool setup (void) {
    Command_Table.prog_init    = &prog_init;
    Command_Table.read_memory  = &read_memory;
    Command_Table.erase_memory = &erase_memory;
    Command_Table.write_memory = &write_memory;
    2eda:	a7 e0       	ldi	r26, 0x07	; 7
    2edc:	b1 e6       	ldi	r27, 0x61	; 97
    2ede:	01 90       	ld	r0, Z+
    2ee0:	0d 92       	st	X+, r0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:456
      else if (_sib[10] == '2') _result = NVM::V2::setup();
      else if (_sib[10] == '0') _result = NVM::V0::setup();
      if (_result) {
        /* If the SIB is obtained, the first 4-characters are returned. */
        /* If the 1st character is blank, the next 4-characters are returned. */
        memcpy(&packet.in.data[0], _sib[0] == ' ' ? &_sib[4] : &_sib[0], 4);
    2ee2:	8a 95       	dec	r24
    2ee4:	e1 f7       	brne	.-8      	; 0x2ede <UPDI::connect()+0x288>
    2ee6:	f8 9a       	sbi	0x1f, 0	; 31
    2ee8:	85 e0       	ldi	r24, 0x05	; 5
    2eea:	90 e0       	ldi	r25, 0x00	; 0
    2eec:	df 91       	pop	r29
    2eee:	cf 91       	pop	r28
    2ef0:	08 95       	ret
    2ef2:	84 33       	cpi	r24, 0x34	; 52
    2ef4:	a9 f4       	brne	.+42     	; 0x2f20 <UPDI::connect()+0x2ca>
setup():
    2ef6:	86 ee       	ldi	r24, 0xE6	; 230
    2ef8:	9a e0       	ldi	r25, 0x0A	; 10
    2efa:	80 93 4e 63 	sts	0x634E, r24	; 0x80634e <Command_Table>
    2efe:	90 93 4f 63 	sts	0x634F, r25	; 0x80634f <Command_Table+0x1>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:458
        bit_set(PGCONF, PGCONF_UPDI_bp);
        return 5;
    2f02:	85 ed       	ldi	r24, 0xD5	; 213
    2f04:	97 e0       	ldi	r25, 0x07	; 7
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:463
      }
    }
    D1PRINTF(" FAIL:%02X,%02X\r\n", RXSTAT, RXDATA);
    return 0;
  }
    2f06:	80 93 50 63 	sts	0x6350, r24	; 0x806350 <Command_Table+0x2>
    2f0a:	90 93 51 63 	sts	0x6351, r25	; 0x806351 <Command_Table+0x3>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:449
    if (send_bytes(_sib256, sizeof(_sib256)) && recv_bytes(_sib, 32)) {
      size_t _result = 0;
      D1PRINTF(" NVM:%02X,SIB=\"%s\"\r\n", _sib[10], _sib);
      /* Depending on the SIB, different low-level methods are executed. */
      if      (_sib[10] == '5') _result = NVM::V5::setup();
      else if (_sib[10] == '4') _result = NVM::V4::setup();
    2f0e:	82 e6       	ldi	r24, 0x62	; 98
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:187
      return UPDI::send_bytes_block(_dwAddr, _wLength);
    }
  }

  bool setup (void) {
    Command_Table.prog_init    = &prog_init;
    2f10:	94 e1       	ldi	r25, 0x14	; 20
    2f12:	80 93 52 63 	sts	0x6352, r24	; 0x806352 <Command_Table+0x4>
    2f16:	90 93 53 63 	sts	0x6353, r25	; 0x806353 <Command_Table+0x5>
    2f1a:	81 ec       	ldi	r24, 0xC1	; 193
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:188
    Command_Table.read_memory  = &read_memory;
    2f1c:	92 e1       	ldi	r25, 0x12	; 18
    2f1e:	d0 cf       	rjmp	.-96     	; 0x2ec0 <UPDI::connect()+0x26a>
connect():
    2f20:	83 33       	cpi	r24, 0x33	; 51
    2f22:	a9 f4       	brne	.+42     	; 0x2f4e <UPDI::connect()+0x2f8>
setup():
    2f24:	8c ee       	ldi	r24, 0xEC	; 236
    2f26:	9a e0       	ldi	r25, 0x0A	; 10
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:189
    Command_Table.erase_memory = &erase_memory;
    2f28:	80 93 4e 63 	sts	0x634E, r24	; 0x80634e <Command_Table>
    2f2c:	90 93 4f 63 	sts	0x634F, r25	; 0x80634f <Command_Table+0x1>
    2f30:	84 ed       	ldi	r24, 0xD4	; 212
    2f32:	97 e0       	ldi	r25, 0x07	; 7
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv4.cpp:190
    Command_Table.write_memory = &write_memory;
    2f34:	80 93 50 63 	sts	0x6350, r24	; 0x806350 <Command_Table+0x2>
    2f38:	90 93 51 63 	sts	0x6351, r25	; 0x806351 <Command_Table+0x3>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:450
      else if (_sib[10] == '3') _result = NVM::V3::setup();
    2f3c:	89 e4       	ldi	r24, 0x49	; 73
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:162
    }
  }

  bool setup (void) {
    Command_Table.prog_init    = &prog_init;
    2f3e:	94 e1       	ldi	r25, 0x14	; 20
    2f40:	80 93 52 63 	sts	0x6352, r24	; 0x806352 <Command_Table+0x4>
    2f44:	90 93 53 63 	sts	0x6353, r25	; 0x806353 <Command_Table+0x5>
    2f48:	8f e6       	ldi	r24, 0x6F	; 111
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:163
    Command_Table.read_memory  = &read_memory;
    2f4a:	92 e1       	ldi	r25, 0x12	; 18
    2f4c:	b9 cf       	rjmp	.-142    	; 0x2ec0 <UPDI::connect()+0x26a>
connect():
    2f4e:	82 33       	cpi	r24, 0x32	; 50
    2f50:	a9 f4       	brne	.+42     	; 0x2f7c <UPDI::connect()+0x326>
setup():
    2f52:	8a e8       	ldi	r24, 0x8A	; 138
    2f54:	9b e0       	ldi	r25, 0x0B	; 11
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:164
    Command_Table.erase_memory = &erase_memory;
    2f56:	80 93 4e 63 	sts	0x634E, r24	; 0x80634e <Command_Table>
    2f5a:	90 93 4f 63 	sts	0x634F, r25	; 0x80634f <Command_Table+0x1>
    2f5e:	86 ea       	ldi	r24, 0xA6	; 166
    2f60:	97 e0       	ldi	r25, 0x07	; 7
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv3.cpp:165
    Command_Table.write_memory = &write_memory;
    2f62:	80 93 50 63 	sts	0x6350, r24	; 0x806350 <Command_Table+0x2>
    2f66:	90 93 51 63 	sts	0x6351, r25	; 0x806351 <Command_Table+0x3>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:451
      else if (_sib[10] == '2') _result = NVM::V2::setup();
    2f6a:	8b e4       	ldi	r24, 0x4B	; 75
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:184
      return UPDI::send_bytes_block(_dwAddr, _wLength);
    }
  }

  bool setup (void) {
    Command_Table.prog_init    = &prog_init;
    2f6c:	94 e1       	ldi	r25, 0x14	; 20
    2f6e:	80 93 52 63 	sts	0x6352, r24	; 0x806352 <Command_Table+0x4>
    2f72:	90 93 53 63 	sts	0x6353, r25	; 0x806353 <Command_Table+0x5>
    2f76:	80 ef       	ldi	r24, 0xF0	; 240
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:185
    Command_Table.read_memory  = &read_memory;
    2f78:	91 e1       	ldi	r25, 0x11	; 17
    2f7a:	a2 cf       	rjmp	.-188    	; 0x2ec0 <UPDI::connect()+0x26a>
connect():
    2f7c:	80 33       	cpi	r24, 0x30	; 48
    2f7e:	a9 f4       	brne	.+42     	; 0x2faa <UPDI::connect()+0x354>
setup():
    2f80:	89 e6       	ldi	r24, 0x69	; 105
    2f82:	9b e0       	ldi	r25, 0x0B	; 11
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:186
    Command_Table.erase_memory = &erase_memory;
    2f84:	80 93 4e 63 	sts	0x634E, r24	; 0x80634e <Command_Table>
    2f88:	90 93 4f 63 	sts	0x634F, r25	; 0x80634f <Command_Table+0x1>
    2f8c:	8b e7       	ldi	r24, 0x7B	; 123
    2f8e:	97 e0       	ldi	r25, 0x07	; 7
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv2.cpp:187
    Command_Table.write_memory = &write_memory;
    2f90:	80 93 50 63 	sts	0x6350, r24	; 0x806350 <Command_Table+0x2>
    2f94:	90 93 51 63 	sts	0x6351, r25	; 0x806351 <Command_Table+0x3>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:452
      else if (_sib[10] == '0') _result = NVM::V0::setup();
    2f98:	8f e3       	ldi	r24, 0x3F	; 63
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:171
      return UPDI::send_bytes_block(_wAddr, _wLength);
    }
  }

  bool setup (void) {
    Command_Table.prog_init    = &prog_init;
    2f9a:	94 e1       	ldi	r25, 0x14	; 20
    2f9c:	80 93 52 63 	sts	0x6352, r24	; 0x806352 <Command_Table+0x4>
    2fa0:	90 93 53 63 	sts	0x6353, r25	; 0x806353 <Command_Table+0x5>
    2fa4:	8e e2       	ldi	r24, 0x2E	; 46
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:172
    Command_Table.read_memory  = &read_memory;
    2fa6:	91 e1       	ldi	r25, 0x11	; 17
    2fa8:	8b cf       	rjmp	.-234    	; 0x2ec0 <UPDI::connect()+0x26a>
connect():
    2faa:	9d b3       	in	r25, 0x1d	; 29
    2fac:	8c b3       	in	r24, 0x1c	; 28
    2fae:	1f 92       	push	r1
    2fb0:	9f 93       	push	r25
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:173
    Command_Table.erase_memory = &erase_memory;
    2fb2:	1f 92       	push	r1
    2fb4:	8f 93       	push	r24
    2fb6:	8e eb       	ldi	r24, 0xBE	; 190
    2fb8:	98 e0       	ldi	r25, 0x08	; 8
    2fba:	9f 93       	push	r25
    2fbc:	8f 93       	push	r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/nvmv0.cpp:174
    Command_Table.write_memory = &write_memory;
    2fbe:	83 eb       	ldi	r24, 0xB3	; 179
    2fc0:	90 e6       	ldi	r25, 0x60	; 96
    2fc2:	9f 93       	push	r25
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:461
        memcpy(&packet.in.data[0], _sib[0] == ' ' ? &_sib[4] : &_sib[0], 4);
        bit_set(PGCONF, PGCONF_UPDI_bp);
        return 5;
      }
    }
    D1PRINTF(" FAIL:%02X,%02X\r\n", RXSTAT, RXDATA);
    2fc4:	8f 93       	push	r24
    2fc6:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
    2fca:	8d b7       	in	r24, 0x3d	; 61
    2fcc:	9e b7       	in	r25, 0x3e	; 62
    2fce:	08 96       	adiw	r24, 0x08	; 8
    2fd0:	8d bf       	out	0x3d, r24	; 61
    2fd2:	9e bf       	out	0x3e, r25	; 62
    2fd4:	90 e0       	ldi	r25, 0x00	; 0
    2fd6:	80 e0       	ldi	r24, 0x00	; 0
    2fd8:	89 cf       	rjmp	.-238    	; 0x2eec <UPDI::connect()+0x296>

00002fda <TPI::write_memory()>:
write_memory():
    2fda:	4f 92       	push	r4
    2fdc:	5f 92       	push	r5
    2fde:	6f 92       	push	r6
    2fe0:	7f 92       	push	r7
    2fe2:	8f 92       	push	r8
    2fe4:	9f 92       	push	r9
    2fe6:	af 92       	push	r10
    2fe8:	bf 92       	push	r11
    2fea:	cf 92       	push	r12
    2fec:	df 92       	push	r13
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:462
    return 0;
    2fee:	ef 92       	push	r14
    2ff0:	ff 92       	push	r15
    2ff2:	0f 93       	push	r16
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:167
      ++_cnt;
    }
    return _wLength + 1;
  }

  size_t write_memory (void) {
    2ff4:	1f 93       	push	r17
    2ff6:	cf 93       	push	r28
    2ff8:	df 93       	push	r29
    2ffa:	20 91 06 61 	lds	r18, 0x6106	; 0x806106 <packet+0x6>
bswap16():
    2ffe:	c0 90 0a 61 	lds	r12, 0x610A	; 0x80610a <packet+0xa>
    3002:	d0 90 0b 61 	lds	r13, 0x610B	; 0x80610b <packet+0xb>
    3006:	dc 24       	eor	r13, r12
    3008:	cd 24       	eor	r12, r13
    300a:	dc 24       	eor	r13, r12
    300c:	e0 90 0c 61 	lds	r14, 0x610C	; 0x80610c <packet+0xc>
    3010:	f0 90 0d 61 	lds	r15, 0x610D	; 0x80610d <packet+0xd>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:168
    uint8_t   m_type = packet.out.tpi.read.bMType;
    3014:	fe 24       	eor	r15, r14
    3016:	ef 24       	eor	r14, r15
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/btools.cpp:45
//
// Byte convert
//

uint16_t bswap16 (uint16_t _word) {
  return __builtin_bswap16(_word);
    3018:	fe 24       	eor	r15, r14
write_memory():
    301a:	40 90 da 60 	lds	r4, 0x60DA	; 0x8060da <_tpi_chunks>
    301e:	64 2c       	mov	r6, r4
    3020:	71 2c       	mov	r7, r1
    3022:	c3 01       	movw	r24, r6
    3024:	01 97       	sbiw	r24, 0x01	; 1
    3026:	ce e0       	ldi	r28, 0x0E	; 14
    3028:	d1 e6       	ldi	r29, 0x61	; 97
    302a:	3f ef       	ldi	r19, 0xFF	; 255
    302c:	ac 01       	movw	r20, r24
    302e:	4c 21       	and	r20, r12
    3030:	5d 21       	and	r21, r13
    3032:	45 2b       	or	r20, r21
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:176
    uint8_t *_p = &packet.out.tpi.write.memData[0];
    bool _result = true;

    /* To accommodate older host programs, */
    /* the address must be aligned to the top of the page. */
    while (_dwAddr & (_tpi_chunks - 1)) {
    3034:	79 f4       	brne	.+30     	; 0x3054 <TPI::write_memory()+0x7a>
    3036:	3f ef       	ldi	r19, 0xFF	; 255
    3038:	4c 01       	movw	r8, r24
    303a:	8e 20       	and	r8, r14
    303c:	9f 20       	and	r9, r15
    303e:	81 14       	cp	r8, r1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:171

  size_t write_memory (void) {
    uint8_t   m_type = packet.out.tpi.read.bMType;
    uint16_t _dwAddr = bswap16(_CAPS32(packet.out.tpi.write.dwAddr)->words[1]);
    size_t  _wLength = bswap16(packet.out.tpi.write.wLength);
    uint8_t *_p = &packet.out.tpi.write.memData[0];
    3040:	91 04       	cpc	r9, r1
    3042:	81 f0       	breq	.+32     	; 0x3064 <TPI::write_memory()+0x8a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:179
    /* To accommodate older host programs, */
    /* the address must be aligned to the top of the page. */
    while (_dwAddr & (_tpi_chunks - 1)) {
      _dwAddr--;
      _wLength++;
      *--_p = 0xFF;   /* NAND masked dummy bytes */
    3044:	f6 01       	movw	r30, r12
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:176
    uint8_t *_p = &packet.out.tpi.write.memData[0];
    bool _result = true;

    /* To accommodate older host programs, */
    /* the address must be aligned to the top of the page. */
    while (_dwAddr & (_tpi_chunks - 1)) {
    3046:	ee 0d       	add	r30, r14
    3048:	ff 1d       	adc	r31, r15
    304a:	30 83       	st	Z, r19
    304c:	ff ef       	ldi	r31, 0xFF	; 255
    304e:	ef 1a       	sub	r14, r31
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:182
      _dwAddr--;
      _wLength++;
      *--_p = 0xFF;   /* NAND masked dummy bytes */
    }
    while (_wLength & (_tpi_chunks - 1)) {
      *((uint8_t*)(_dwAddr + _wLength++)) = 0xFF;
    3050:	ff 0a       	sbc	r15, r31
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:181
    while (_dwAddr & (_tpi_chunks - 1)) {
      _dwAddr--;
      _wLength++;
      *--_p = 0xFF;   /* NAND masked dummy bytes */
    }
    while (_wLength & (_tpi_chunks - 1)) {
    3052:	f2 cf       	rjmp	.-28     	; 0x3038 <TPI::write_memory()+0x5e>
    3054:	41 e0       	ldi	r20, 0x01	; 1
    3056:	c4 1a       	sub	r12, r20
    3058:	d1 08       	sbc	r13, r1
    305a:	ef ef       	ldi	r30, 0xFF	; 255
    305c:	ee 1a       	sub	r14, r30
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:182
      *((uint8_t*)(_dwAddr + _wLength++)) = 0xFF;
    305e:	fe 0a       	sbc	r15, r30
    3060:	3a 93       	st	-Y, r19
    3062:	e4 cf       	rjmp	.-56     	; 0x302c <TPI::write_memory()+0x52>
    3064:	21 30       	cpi	r18, 0x01	; 1
    3066:	21 f5       	brne	.+72     	; 0x30b0 <TPI::write_memory()+0xd6>
    3068:	b1 2c       	mov	r11, r1
    306a:	a1 2c       	mov	r10, r1
    306c:	86 01       	movw	r16, r12
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:177
    bool _result = true;

    /* To accommodate older host programs, */
    /* the address must be aligned to the top of the page. */
    while (_dwAddr & (_tpi_chunks - 1)) {
      _dwAddr--;
    306e:	0a 0d       	add	r16, r10
    3070:	1b 1d       	adc	r17, r11
    3072:	ae 14       	cp	r10, r14
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:178
      _wLength++;
    3074:	bf 04       	cpc	r11, r15
    3076:	08 f0       	brcs	.+2      	; 0x307a <TPI::write_memory()+0xa0>
    3078:	9d c0       	rjmp	.+314    	; 0x31b4 <TPI::write_memory()+0x1da>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:179
      *--_p = 0xFF;   /* NAND masked dummy bytes */
    307a:	0e 94 6a 08 	call	0x10d4	; 0x10d4 <TPI::nvm_wait()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:189
    D2PRINTF(" FIXED_WRITE=%08X:%04X\r\n", _dwAddr, _wLength);

    /* For the flash code area, the page erase can be */
    /* omitted if the chip has already been erased.   */
    /* 0x01: XPRG_MEM_TYPE_APPL */
    if (m_type != 0x01) {
    307e:	88 23       	and	r24, r24
    3080:	81 f0       	breq	.+32     	; 0x30a2 <TPI::write_memory()+0xc8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:171

  size_t write_memory (void) {
    uint8_t   m_type = packet.out.tpi.read.bMType;
    uint16_t _dwAddr = bswap16(_CAPS32(packet.out.tpi.write.dwAddr)->words[1]);
    size_t  _wLength = bswap16(packet.out.tpi.write.wLength);
    uint8_t *_p = &packet.out.tpi.write.memData[0];
    3082:	c8 01       	movw	r24, r16
    3084:	0e 94 88 08 	call	0x1110	; 0x1110 <TPI::set_sstpr(unsigned int)>
    3088:	88 23       	and	r24, r24
    308a:	59 f0       	breq	.+22     	; 0x30a2 <TPI::write_memory()+0xc8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:202
        && nvm_ctrl(0x00);
      if (!_result) return 0;
    }

    /* WRITE_PAGE */
    for (size_t _i = 0; _i < _wLength; _i += _tpi_chunks) {
    308c:	8d e1       	ldi	r24, 0x1D	; 29
    308e:	0e 94 5e 08 	call	0x10bc	; 0x10bc <TPI::nvm_ctrl(unsigned char)>
    3092:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:204
      D2PRINTF(" CODE_WRITE=%08X:%04X\r\n", _dwAddr, _tpi_chunks);
      _result &= nvm_wait()
    3094:	31 f0       	breq	.+12     	; 0x30a2 <TPI::write_memory()+0xc8>
    3096:	88 81       	ld	r24, Y
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:208
              && set_sstpr(_dwAddr)
              && nvm_ctrl(0x1D)
              && set_sst(*_p++)
              && set_sst(*_p++);
    3098:	0e 94 76 08 	call	0x10ec	; 0x10ec <TPI::set_sst(unsigned char)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:205

    /* WRITE_PAGE */
    for (size_t _i = 0; _i < _wLength; _i += _tpi_chunks) {
      D2PRINTF(" CODE_WRITE=%08X:%04X\r\n", _dwAddr, _tpi_chunks);
      _result &= nvm_wait()
              && set_sstpr(_dwAddr)
    309c:	81 11       	cpse	r24, r1
    309e:	37 c0       	rjmp	.+110    	; 0x310e <TPI::write_memory()+0x134>
    30a0:	21 96       	adiw	r28, 0x01	; 1
    30a2:	f3 e0       	ldi	r31, 0x03	; 3
    30a4:	f4 15       	cp	r31, r4
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:206
              && nvm_ctrl(0x1D)
    30a6:	08 f4       	brcc	.+2      	; 0x30aa <TPI::write_memory()+0xd0>
    30a8:	47 c0       	rjmp	.+142    	; 0x3138 <TPI::write_memory()+0x15e>
    30aa:	0e 94 6a 08 	call	0x10d4	; 0x10d4 <TPI::nvm_wait()>
    30ae:	1d c0       	rjmp	.+58     	; 0x30ea <TPI::write_memory()+0x110>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:207
              && set_sst(*_p++)
    30b0:	0e 94 6a 08 	call	0x10d4	; 0x10d4 <TPI::nvm_wait()>
    30b4:	88 23       	and	r24, r24
    30b6:	c9 f0       	breq	.+50     	; 0x30ea <TPI::write_memory()+0x110>
    30b8:	c6 01       	movw	r24, r12
    30ba:	81 60       	ori	r24, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:210
              && set_sst(*_p++);
      /* The 2-word or 4-word write model requires a 12-bit wait for each word written. */
      if (_tpi_chunks >= 4) {
    30bc:	0e 94 88 08 	call	0x1110	; 0x1110 <TPI::set_sstpr(unsigned int)>
    30c0:	88 23       	and	r24, r24
    30c2:	99 f0       	breq	.+38     	; 0x30ea <TPI::write_memory()+0x110>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:220
        idle_clock(16);
        _result &= set_sst(*_p++) && set_sst(*_p++);
        idle_clock(16);
        _result &= set_sst(*_p++) && set_sst(*_p++);
      }
      _result &= nvm_wait();
    30c4:	84 e1       	ldi	r24, 0x14	; 20
    30c6:	0e 94 5e 08 	call	0x10bc	; 0x10bc <TPI::nvm_ctrl(unsigned char)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:192
    /* omitted if the chip has already been erased.   */
    /* 0x01: XPRG_MEM_TYPE_APPL */
    if (m_type != 0x01) {
      /* SECTION_ERASE */
      D2PRINTF(" SECTION_ERASE=%04X>%04X\r\n", _dwAddr | 1, _CAPS16(_before_page)->word);
      _result &= nvm_wait()
    30ca:	88 23       	and	r24, r24
    30cc:	71 f0       	breq	.+28     	; 0x30ea <TPI::write_memory()+0x110>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:197
        && set_sstpr(_dwAddr | 1)
        && nvm_ctrl(0x14)
        && set_sst(0xFF)
        && nvm_wait()
        && nvm_ctrl(0x00);
    30ce:	8f ef       	ldi	r24, 0xFF	; 255
    30d0:	0e 94 76 08 	call	0x10ec	; 0x10ec <TPI::set_sst(unsigned char)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:193
    /* 0x01: XPRG_MEM_TYPE_APPL */
    if (m_type != 0x01) {
      /* SECTION_ERASE */
      D2PRINTF(" SECTION_ERASE=%04X>%04X\r\n", _dwAddr | 1, _CAPS16(_before_page)->word);
      _result &= nvm_wait()
        && set_sstpr(_dwAddr | 1)
    30d4:	88 23       	and	r24, r24
    30d6:	49 f0       	breq	.+18     	; 0x30ea <TPI::write_memory()+0x110>
    30d8:	0e 94 6a 08 	call	0x10d4	; 0x10d4 <TPI::nvm_wait()>
    30dc:	88 23       	and	r24, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:194
        && nvm_ctrl(0x14)
    30de:	29 f0       	breq	.+10     	; 0x30ea <TPI::write_memory()+0x110>
    30e0:	80 e0       	ldi	r24, 0x00	; 0
    30e2:	0e 94 5e 08 	call	0x10bc	; 0x10bc <TPI::nvm_ctrl(unsigned char)>
    30e6:	81 11       	cpse	r24, r1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:195
        && set_sst(0xFF)
    30e8:	bf cf       	rjmp	.-130    	; 0x3068 <TPI::write_memory()+0x8e>
    30ea:	c4 01       	movw	r24, r8
    30ec:	df 91       	pop	r29
    30ee:	cf 91       	pop	r28
    30f0:	1f 91       	pop	r17
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:196
        && nvm_wait()
    30f2:	0f 91       	pop	r16
    30f4:	ff 90       	pop	r15
    30f6:	ef 90       	pop	r14
    30f8:	df 90       	pop	r13
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:197
        && nvm_ctrl(0x00);
    30fa:	cf 90       	pop	r12
    30fc:	bf 90       	pop	r11
    30fe:	af 90       	pop	r10
    3100:	9f 90       	pop	r9
    3102:	8f 90       	pop	r8
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:225
      _result &= nvm_wait();
      if (!_result) return 0;
      _dwAddr += _tpi_chunks;
    }
    return nvm_ctrl(0x00);
  }
    3104:	7f 90       	pop	r7
    3106:	6f 90       	pop	r6
    3108:	5f 90       	pop	r5
    310a:	4f 90       	pop	r4
    310c:	08 95       	ret
    310e:	8e 01       	movw	r16, r28
    3110:	0e 5f       	subi	r16, 0xFE	; 254
    3112:	1f 4f       	sbci	r17, 0xFF	; 255
    3114:	89 81       	ldd	r24, Y+1	; 0x01
    3116:	0e 94 76 08 	call	0x10ec	; 0x10ec <TPI::set_sst(unsigned char)>
    311a:	58 2e       	mov	r5, r24
    311c:	43 e0       	ldi	r20, 0x03	; 3
    311e:	e8 01       	movw	r28, r16
    3120:	44 15       	cp	r20, r4
    3122:	58 f0       	brcs	.+22     	; 0x313a <TPI::write_memory()+0x160>
    3124:	0e 94 6a 08 	call	0x10d4	; 0x10d4 <TPI::nvm_wait()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:208
      D2PRINTF(" CODE_WRITE=%08X:%04X\r\n", _dwAddr, _tpi_chunks);
      _result &= nvm_wait()
              && set_sstpr(_dwAddr)
              && nvm_ctrl(0x1D)
              && set_sst(*_p++)
              && set_sst(*_p++);
    3128:	55 20       	and	r5, r5
    312a:	f9 f2       	breq	.-66     	; 0x30ea <TPI::write_memory()+0x110>
    312c:	88 23       	and	r24, r24
    312e:	e9 f2       	breq	.-70     	; 0x30ea <TPI::write_memory()+0x110>
    3130:	a6 0c       	add	r10, r6
    3132:	b7 1c       	adc	r11, r7
    3134:	e8 01       	movw	r28, r16
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:210
      /* The 2-word or 4-word write model requires a 12-bit wait for each word written. */
      if (_tpi_chunks >= 4) {
    3136:	9a cf       	rjmp	.-204    	; 0x306c <TPI::write_memory()+0x92>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:208
      D2PRINTF(" CODE_WRITE=%08X:%04X\r\n", _dwAddr, _tpi_chunks);
      _result &= nvm_wait()
              && set_sstpr(_dwAddr)
              && nvm_ctrl(0x1D)
              && set_sst(*_p++)
              && set_sst(*_p++);
    3138:	51 2c       	mov	r5, r1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:210
      /* The 2-word or 4-word write model requires a 12-bit wait for each word written. */
      if (_tpi_chunks >= 4) {
    313a:	80 e1       	ldi	r24, 0x10	; 16
    313c:	90 e0       	ldi	r25, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:220
        idle_clock(16);
        _result &= set_sst(*_p++) && set_sst(*_p++);
        idle_clock(16);
        _result &= set_sst(*_p++) && set_sst(*_p++);
      }
      _result &= nvm_wait();
    313e:	0e 94 a0 08 	call	0x1140	; 0x1140 <TPI::idle_clock(unsigned int)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:221
      if (!_result) return 0;
    3142:	88 81       	ld	r24, Y
    3144:	0e 94 76 08 	call	0x10ec	; 0x10ec <TPI::set_sst(unsigned char)>
    3148:	8e 01       	movw	r16, r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:202
        && nvm_ctrl(0x00);
      if (!_result) return 0;
    }

    /* WRITE_PAGE */
    for (size_t _i = 0; _i < _wLength; _i += _tpi_chunks) {
    314a:	81 11       	cpse	r24, r1
    314c:	21 c0       	rjmp	.+66     	; 0x3190 <TPI::write_memory()+0x1b6>
    314e:	0f 5f       	subi	r16, 0xFF	; 255
    3150:	1f 4f       	sbci	r17, 0xFF	; 255
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:210
              && set_sstpr(_dwAddr)
              && nvm_ctrl(0x1D)
              && set_sst(*_p++)
              && set_sst(*_p++);
      /* The 2-word or 4-word write model requires a 12-bit wait for each word written. */
      if (_tpi_chunks >= 4) {
    3152:	58 22       	and	r5, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:211
        idle_clock(16);
    3154:	88 e0       	ldi	r24, 0x08	; 8
    3156:	48 12       	cpse	r4, r24
    3158:	e5 cf       	rjmp	.-54     	; 0x3124 <TPI::write_memory()+0x14a>
    315a:	80 e1       	ldi	r24, 0x10	; 16
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:212
        _result &= set_sst(*_p++) && set_sst(*_p++);
    315c:	90 e0       	ldi	r25, 0x00	; 0
    315e:	0e 94 a0 08 	call	0x1140	; 0x1140 <TPI::idle_clock(unsigned int)>
    3162:	f8 01       	movw	r30, r16
    3164:	80 81       	ld	r24, Z
    3166:	0e 94 76 08 	call	0x10ec	; 0x10ec <TPI::set_sst(unsigned char)>
    316a:	e8 01       	movw	r28, r16
    316c:	81 11       	cpse	r24, r1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:214
      }
      if (_tpi_chunks == 8) {
    316e:	16 c0       	rjmp	.+44     	; 0x319c <TPI::write_memory()+0x1c2>
    3170:	21 96       	adiw	r28, 0x01	; 1
    3172:	58 22       	and	r5, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:215
        idle_clock(16);
    3174:	80 e1       	ldi	r24, 0x10	; 16
    3176:	90 e0       	ldi	r25, 0x00	; 0
    3178:	0e 94 a0 08 	call	0x1140	; 0x1140 <TPI::idle_clock(unsigned int)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:216
        _result &= set_sst(*_p++) && set_sst(*_p++);
    317c:	88 81       	ld	r24, Y
    317e:	0e 94 76 08 	call	0x10ec	; 0x10ec <TPI::set_sst(unsigned char)>
    3182:	8e 01       	movw	r16, r28
    3184:	81 11       	cpse	r24, r1
    3186:	10 c0       	rjmp	.+32     	; 0x31a8 <TPI::write_memory()+0x1ce>
    3188:	0f 5f       	subi	r16, 0xFF	; 255
    318a:	1f 4f       	sbci	r17, 0xFF	; 255
    318c:	58 22       	and	r5, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:217
        idle_clock(16);
    318e:	ca cf       	rjmp	.-108    	; 0x3124 <TPI::write_memory()+0x14a>
    3190:	0e 5f       	subi	r16, 0xFE	; 254
    3192:	1f 4f       	sbci	r17, 0xFF	; 255
    3194:	89 81       	ldd	r24, Y+1	; 0x01
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:218
        _result &= set_sst(*_p++) && set_sst(*_p++);
    3196:	0e 94 76 08 	call	0x10ec	; 0x10ec <TPI::set_sst(unsigned char)>
    319a:	db cf       	rjmp	.-74     	; 0x3152 <TPI::write_memory()+0x178>
    319c:	22 96       	adiw	r28, 0x02	; 2
    319e:	f8 01       	movw	r30, r16
    31a0:	81 81       	ldd	r24, Z+1	; 0x01
    31a2:	0e 94 76 08 	call	0x10ec	; 0x10ec <TPI::set_sst(unsigned char)>
    31a6:	e5 cf       	rjmp	.-54     	; 0x3172 <TPI::write_memory()+0x198>
    31a8:	0e 5f       	subi	r16, 0xFE	; 254
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:212
              && set_sst(*_p++)
              && set_sst(*_p++);
      /* The 2-word or 4-word write model requires a 12-bit wait for each word written. */
      if (_tpi_chunks >= 4) {
        idle_clock(16);
        _result &= set_sst(*_p++) && set_sst(*_p++);
    31aa:	1f 4f       	sbci	r17, 0xFF	; 255
    31ac:	89 81       	ldd	r24, Y+1	; 0x01
    31ae:	0e 94 76 08 	call	0x10ec	; 0x10ec <TPI::set_sst(unsigned char)>
    31b2:	ec cf       	rjmp	.-40     	; 0x318c <TPI::write_memory()+0x1b2>
    31b4:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:216
      }
      if (_tpi_chunks == 8) {
        idle_clock(16);
        _result &= set_sst(*_p++) && set_sst(*_p++);
    31b6:	0e 94 5e 08 	call	0x10bc	; 0x10bc <TPI::nvm_ctrl(unsigned char)>
    31ba:	88 2e       	mov	r8, r24
    31bc:	91 2c       	mov	r9, r1
    31be:	95 cf       	rjmp	.-214    	; 0x30ea <TPI::write_memory()+0x110>

000031c0 <TPI::read_memory()>:
read_memory():
    31c0:	0f 93       	push	r16
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:218
        idle_clock(16);
        _result &= set_sst(*_p++) && set_sst(*_p++);
    31c2:	1f 93       	push	r17
    31c4:	cf 93       	push	r28
    31c6:	df 93       	push	r29
bswap16():
    31c8:	80 91 09 61 	lds	r24, 0x6109	; 0x806109 <packet+0x9>
    31cc:	90 91 0a 61 	lds	r25, 0x610A	; 0x80610a <packet+0xa>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:224
      }
      _result &= nvm_wait();
      if (!_result) return 0;
      _dwAddr += _tpi_chunks;
    }
    return nvm_ctrl(0x00);
    31d0:	c0 91 0b 61 	lds	r28, 0x610B	; 0x80610b <packet+0xb>
    31d4:	d0 91 0c 61 	lds	r29, 0x610C	; 0x80610c <packet+0xc>
    31d8:	dc 27       	eor	r29, r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:151
        }
    }
    return 0;
  }

  size_t read_memory (void) {
    31da:	cd 27       	eor	r28, r29
    31dc:	dc 27       	eor	r29, r28
read_memory():
    31de:	98 27       	eor	r25, r24
    31e0:	89 27       	eor	r24, r25
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/btools.cpp:45
    31e2:	98 27       	eor	r25, r24
    31e4:	0e 94 88 08 	call	0x1110	; 0x1110 <TPI::set_sstpr(unsigned int)>
    31e8:	00 e0       	ldi	r16, 0x00	; 0
    31ea:	11 e6       	ldi	r17, 0x61	; 97
    31ec:	c8 01       	movw	r24, r16
    31ee:	80 50       	subi	r24, 0x00	; 0
    31f0:	91 46       	sbci	r25, 0x61	; 97
    31f2:	8c 17       	cp	r24, r28
    31f4:	9d 07       	cpc	r25, r29
    31f6:	50 f4       	brcc	.+20     	; 0x320c <TPI::read_memory()+0x4c>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:158
    uint16_t _dwAddr = bswap16(_CAPS32(packet.out.tpi.read.dwAddr)->words[1]);
    size_t  _wLength = bswap16(packet.out.tpi.read.wLength);
    uint8_t *_q = &packet.in.data[0];
    size_t _cnt = 0;
    D2PRINTF(" READ=%08X:%04X\r\n", _dwAddr, _wLength);
    set_sstpr(_dwAddr);
    31f8:	0e 94 82 08 	call	0x1104	; 0x1104 <TPI::get_sld()>
    31fc:	0f 5f       	subi	r16, 0xFF	; 255
    31fe:	1f 4f       	sbci	r17, 0xFF	; 255
    3200:	88 23       	and	r24, r24
    3202:	59 f0       	breq	.+22     	; 0x321a <TPI::read_memory()+0x5a>
    3204:	8d b3       	in	r24, 0x1d	; 29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:159
    while (_cnt < _wLength) {
    3206:	f8 01       	movw	r30, r16
    3208:	86 83       	std	Z+6, r24	; 0x06
    320a:	f0 cf       	rjmp	.-32     	; 0x31ec <TPI::read_memory()+0x2c>
    320c:	ce 01       	movw	r24, r28
    320e:	01 96       	adiw	r24, 0x01	; 1
    3210:	df 91       	pop	r29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:160
      if (!get_sld()) return 0;
    3212:	cf 91       	pop	r28
    3214:	1f 91       	pop	r17
    3216:	0f 91       	pop	r16
    3218:	08 95       	ret
    321a:	90 e0       	ldi	r25, 0x00	; 0
    321c:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:161
      *_q++ = RXDATA;
    321e:	f8 cf       	rjmp	.-16     	; 0x3210 <TPI::read_memory()+0x50>

00003220 <TPI::erase_memory()>:
erase_memory():
    3220:	cf 93       	push	r28
    3222:	df 93       	push	r29
bswap16():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:164
      ++_cnt;
    }
    return _wLength + 1;
    3224:	c0 91 09 61 	lds	r28, 0x6109	; 0x806109 <packet+0x9>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:165
  }
    3228:	d0 91 0a 61 	lds	r29, 0x610A	; 0x80610a <packet+0xa>
    322c:	dc 27       	eor	r29, r28
    322e:	cd 27       	eor	r28, r29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:160
    uint8_t *_q = &packet.in.data[0];
    size_t _cnt = 0;
    D2PRINTF(" READ=%08X:%04X\r\n", _dwAddr, _wLength);
    set_sstpr(_dwAddr);
    while (_cnt < _wLength) {
      if (!get_sld()) return 0;
    3230:	dc 27       	eor	r29, r28
erase_memory():
    3232:	80 91 06 61 	lds	r24, 0x6106	; 0x806106 <packet+0x6>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:120

  bool nvm_ctrl (const uint8_t _nvmcmd) {
    return set_sout(0x63, _nvmcmd);   /* NVMCMD_REG: IO=0x33 */
  }

  size_t erase_memory (void) {
    3236:	81 30       	cpi	r24, 0x01	; 1
    3238:	79 f5       	brne	.+94     	; 0x3298 <TPI::erase_memory()+0x78>
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/btools.cpp:45
    323a:	df 93       	push	r29
    323c:	cf 93       	push	r28
    323e:	82 eb       	ldi	r24, 0xB2	; 178
    3240:	97 e0       	ldi	r25, 0x07	; 7
    3242:	9f 93       	push	r25
    3244:	8f 93       	push	r24
    3246:	83 eb       	ldi	r24, 0xB3	; 179
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:123
    uint8_t   m_type = packet.out.tpi.read.bMType;
    uint16_t _dwAddr = bswap16(_CAPS32(packet.out.tpi.read.dwAddr)->words[1]);
    if (m_type == 0x01) {
    3248:	90 e6       	ldi	r25, 0x60	; 96
    324a:	9f 93       	push	r25
    324c:	8f 93       	push	r24
    324e:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:125
      /* XPRG_ERASE_CHIP */
      D1PRINTF(" CHIP_ERASE=%04X\r\n", _dwAddr);
    3252:	0e 94 6a 08 	call	0x10d4	; 0x10d4 <TPI::nvm_wait()>
    3256:	0f 90       	pop	r0
    3258:	0f 90       	pop	r0
    325a:	0f 90       	pop	r0
    325c:	0f 90       	pop	r0
    325e:	0f 90       	pop	r0
    3260:	0f 90       	pop	r0
    3262:	81 11       	cpse	r24, r1
    3264:	05 c0       	rjmp	.+10     	; 0x3270 <TPI::erase_memory()+0x50>
    3266:	90 e0       	ldi	r25, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:126
      if (nvm_wait()
    3268:	80 e0       	ldi	r24, 0x00	; 0
    326a:	df 91       	pop	r29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:130
        && set_sstpr(_dwAddr | 1)
        && nvm_ctrl(0x10)
        && set_sst(0xFF)
        && nvm_wait()) {
    326c:	cf 91       	pop	r28
    326e:	08 95       	ret
    3270:	ce 01       	movw	r24, r28
    3272:	81 60       	ori	r24, 0x01	; 1
    3274:	0e 94 88 08 	call	0x1110	; 0x1110 <TPI::set_sstpr(unsigned int)>
    3278:	88 23       	and	r24, r24
    327a:	a9 f3       	breq	.-22     	; 0x3266 <TPI::erase_memory()+0x46>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:148
        && set_sst(0xFF)
        && nvm_wait()) {
          return 1;
        }
    }
    return 0;
    327c:	80 e1       	ldi	r24, 0x10	; 16
    327e:	0e 94 5e 08 	call	0x10bc	; 0x10bc <TPI::nvm_ctrl(unsigned char)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:149
  }
    3282:	88 23       	and	r24, r24
    3284:	81 f3       	breq	.-32     	; 0x3266 <TPI::erase_memory()+0x46>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:127
    uint16_t _dwAddr = bswap16(_CAPS32(packet.out.tpi.read.dwAddr)->words[1]);
    if (m_type == 0x01) {
      /* XPRG_ERASE_CHIP */
      D1PRINTF(" CHIP_ERASE=%04X\r\n", _dwAddr);
      if (nvm_wait()
        && set_sstpr(_dwAddr | 1)
    3286:	8f ef       	ldi	r24, 0xFF	; 255
    3288:	0e 94 76 08 	call	0x10ec	; 0x10ec <TPI::set_sst(unsigned char)>
    328c:	88 23       	and	r24, r24
    328e:	59 f3       	breq	.-42     	; 0x3266 <TPI::erase_memory()+0x46>
    3290:	0e 94 6a 08 	call	0x10d4	; 0x10d4 <TPI::nvm_wait()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:142
      /* Currently not called on AVRDUDE<=8.0. */
      /* It may be called from terminal mode.  */
      D1PRINTF(" SECTION_ERASE=%04X\r\n", _dwAddr);
      if (nvm_wait()
        && set_sstpr(_dwAddr | 1)
        && nvm_ctrl(0x14)
    3294:	90 e0       	ldi	r25, 0x00	; 0
    3296:	e9 cf       	rjmp	.-46     	; 0x326a <TPI::erase_memory()+0x4a>
    3298:	df 93       	push	r29
    329a:	cf 93       	push	r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:143
        && set_sst(0xFF)
    329c:	8c e9       	ldi	r24, 0x9C	; 156
    329e:	97 e0       	ldi	r25, 0x07	; 7
    32a0:	9f 93       	push	r25
    32a2:	8f 93       	push	r24
    32a4:	83 eb       	ldi	r24, 0xB3	; 179
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:144
        && nvm_wait()) {
    32a6:	90 e6       	ldi	r25, 0x60	; 96
    32a8:	9f 93       	push	r25
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:148
          return 1;
        }
    }
    return 0;
    32aa:	8f 93       	push	r24
    32ac:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:139
    else {
      /* 0x02: XPRG_ERASE_APP */
      /* 0x09: XPRG_ERASE_CONFIG */
      /* Currently not called on AVRDUDE<=8.0. */
      /* It may be called from terminal mode.  */
      D1PRINTF(" SECTION_ERASE=%04X\r\n", _dwAddr);
    32b0:	0e 94 6a 08 	call	0x10d4	; 0x10d4 <TPI::nvm_wait()>
    32b4:	0f 90       	pop	r0
    32b6:	0f 90       	pop	r0
    32b8:	0f 90       	pop	r0
    32ba:	0f 90       	pop	r0
    32bc:	0f 90       	pop	r0
    32be:	0f 90       	pop	r0
    32c0:	88 23       	and	r24, r24
    32c2:	89 f2       	breq	.-94     	; 0x3266 <TPI::erase_memory()+0x46>
    32c4:	ce 01       	movw	r24, r28
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:140
      if (nvm_wait()
    32c6:	81 60       	ori	r24, 0x01	; 1
    32c8:	0e 94 88 08 	call	0x1110	; 0x1110 <TPI::set_sstpr(unsigned int)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:144
        && set_sstpr(_dwAddr | 1)
        && nvm_ctrl(0x14)
        && set_sst(0xFF)
        && nvm_wait()) {
    32cc:	88 23       	and	r24, r24
    32ce:	59 f2       	breq	.-106    	; 0x3266 <TPI::erase_memory()+0x46>
    32d0:	84 e1       	ldi	r24, 0x14	; 20
    32d2:	d5 cf       	rjmp	.-86     	; 0x327e <TPI::erase_memory()+0x5e>

000032d4 <__vector_19>:
__vector_19():
    32d4:	1f 92       	push	r1
    32d6:	0f 92       	push	r0
    32d8:	0f b6       	in	r0, 0x3f	; 63
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:141
      /* 0x09: XPRG_ERASE_CONFIG */
      /* Currently not called on AVRDUDE<=8.0. */
      /* It may be called from terminal mode.  */
      D1PRINTF(" SECTION_ERASE=%04X\r\n", _dwAddr);
      if (nvm_wait()
        && set_sstpr(_dwAddr | 1)
    32da:	0f 92       	push	r0
    32dc:	11 24       	eor	r1, r1
    32de:	2f 93       	push	r18
    32e0:	3f 93       	push	r19
    32e2:	4f 93       	push	r20
    32e4:	5f 93       	push	r21
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:142
        && nvm_ctrl(0x14)
    32e6:	6f 93       	push	r22
    32e8:	7f 93       	push	r23
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:248
  }

};

/*** CMSIS-DAP VCOM,VCP transceiver ***/
ISR(USART0_RXC_vect) {
    32ea:	8f 93       	push	r24
    32ec:	9f 93       	push	r25
    32ee:	af 93       	push	r26
    32f0:	bf 93       	push	r27
    32f2:	cf 93       	push	r28
    32f4:	ef 93       	push	r30
    32f6:	ff 93       	push	r31
vcp_receiver():
    32f8:	c0 91 01 08 	lds	r28, 0x0801	; 0x800801 <__TEXT_REGION_LENGTH__+0x7f0801>
    32fc:	20 91 00 08 	lds	r18, 0x0800	; 0x800800 <__TEXT_REGION_LENGTH__+0x7f0800>
    3300:	8c 2f       	mov	r24, r28
    3302:	86 74       	andi	r24, 0x46	; 70
    3304:	a9 f4       	brne	.+42     	; 0x3330 <__vector_19+0x5c>
write_byte():
    3306:	f2 99       	sbic	0x1e, 2	; 30
    3308:	28 c0       	rjmp	.+80     	; 0x335a <__vector_19+0x86>
__vector_19():
    330a:	82 ef       	ldi	r24, 0xF2	; 242
    330c:	93 e6       	ldi	r25, 0x63	; 99
write_byte():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:447
  void read_drop (void) {
    if (bit_is_set(EP_CDO.STATUS, USB_BUSNAK_bp)) ep_cdo_listen();
  }

  void vcp_receiver (void) {
    uint8_t _d = USART0_RXDATAH;
    330e:	e0 91 75 64 	lds	r30, 0x6475	; 0x806475 <_send_count>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:448
    uint8_t _c = USART0_RXDATAL;
    3312:	31 e0       	ldi	r19, 0x01	; 1
    3314:	3e 0f       	add	r19, r30
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:449
    if (!(_d & (USART_BUFOVF_bm | USART_FERR_bm | USART_PERR_bm))) {
    3316:	30 93 75 64 	sts	0x6475, r19	; 0x806475 <_send_count>
    331a:	e8 0f       	add	r30, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:411
  // MARK: VCP

  void write_byte (const uint8_t _c) {
    /* The double buffer consists of two blocks. */
    uint8_t* _buf = bit_is_set(GPCONF, GPCONF_DBL_bp)
      ? &EP_MEM.cdi_data[64]
    331c:	f9 2f       	mov	r31, r25
    331e:	f1 1d       	adc	r31, r1
    3320:	20 83       	st	Z, r18
    3322:	80 91 75 64 	lds	r24, 0x6475	; 0x806475 <_send_count>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:413
      : &EP_MEM.cdi_data[0];
    _buf[_send_count++] = _c;
    3326:	80 34       	cpi	r24, 0x40	; 64
    3328:	d8 f4       	brcc	.+54     	; 0x3360 <__vector_19+0x8c>
    332a:	8e e1       	ldi	r24, 0x1E	; 30
    332c:	80 93 72 64 	sts	0x6472, r24	; 0x806472 <_sof_count>
vcp_receiver():
    3330:	8c b3       	in	r24, 0x1c	; 28
    3332:	c8 2b       	or	r28, r24
    3334:	cc bb       	out	0x1c, r28	; 28
__vector_19():
    3336:	ff 91       	pop	r31
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:414
    if (_send_count < 64) _sof_count = 30;
    3338:	ef 91       	pop	r30
    333a:	cf 91       	pop	r28
    333c:	bf 91       	pop	r27
    333e:	af 91       	pop	r26
    3340:	9f 91       	pop	r25
    3342:	8f 91       	pop	r24
    3344:	7f 91       	pop	r23
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:452
    uint8_t _d = USART0_RXDATAH;
    uint8_t _c = USART0_RXDATAL;
    if (!(_d & (USART_BUFOVF_bm | USART_FERR_bm | USART_PERR_bm))) {
      write_byte(_c);
    }
    RXSTAT |= _d;
    3346:	6f 91       	pop	r22
    3348:	5f 91       	pop	r21
    334a:	4f 91       	pop	r20
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:254
#if defined(CONFIG_VCP_9BIT_SUPPORT)
  usart_receiver();
#else
  USB::vcp_receiver();
#endif
}
    334c:	3f 91       	pop	r19
    334e:	2f 91       	pop	r18
    3350:	0f 90       	pop	r0
    3352:	0f be       	out	0x3f, r0	; 63
    3354:	0f 90       	pop	r0
    3356:	1f 90       	pop	r1
    3358:	18 95       	reti
    335a:	82 e3       	ldi	r24, 0x32	; 50
    335c:	94 e6       	ldi	r25, 0x64	; 100
    335e:	d7 cf       	rjmp	.-82     	; 0x330e <__vector_19+0x3a>
write_byte():
    3360:	0e 94 75 05 	call	0xaea	; 0xaea <USB::ep_cdi_listen()>
    3364:	e5 cf       	rjmp	.-54     	; 0x3330 <__vector_19+0x5c>

00003366 <__vector_15>:
__vector_15():
    3366:	11 24       	eor	r1, r1
    3368:	10 92 00 0b 	sts	0x0B00, r1	; 0x800b00 <__TEXT_REGION_LENGTH__+0x7f0b00>
    336c:	81 e0       	ldi	r24, 0x01	; 1
    336e:	80 93 06 0b 	sts	0x0B06, r24	; 0x800b06 <__TEXT_REGION_LENGTH__+0x7f0b06>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:411
  // MARK: VCP

  void write_byte (const uint8_t _c) {
    /* The double buffer consists of two blocks. */
    uint8_t* _buf = bit_is_set(GPCONF, GPCONF_DBL_bp)
      ? &EP_MEM.cdi_data[64]
    3372:	62 e0       	ldi	r22, 0x02	; 2
    3374:	70 e0       	ldi	r23, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:415
      : &EP_MEM.cdi_data[0];
    _buf[_send_count++] = _c;
    if (_send_count < 64) _sof_count = 30;
    else ep_cdi_listen();
    3376:	83 ec       	ldi	r24, 0xC3	; 195
    3378:	90 e6       	ldi	r25, 0x60	; 96
    337a:	0e 94 f1 26 	call	0x4de2	; 0x4de2 <longjmp>

0000337e <Timeout::stop()>:
_ZN7Timeout4stopEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:104
  /***
    This interrupt is a global escape due to timeout.
    There is no return to the source of the interrupt.
  ***/
  __asm__ __volatile__ ("EOR R1,R1");
  TCB0_CTRLA = 0;
    337e:	8f b7       	in	r24, 0x3f	; 63
__iCliRetVal():
    3380:	f8 94       	cli
_ZN7Timeout4stopEv():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:105
  TCB0_INTFLAGS = TCB_CAPT_bm;
    3382:	10 92 00 0b 	sts	0x0B00, r1	; 0x800b00 <__TEXT_REGION_LENGTH__+0x7f0b00>
    3386:	91 e0       	ldi	r25, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:106
  longjmp(TIMEOUT_CONTEXT, 2);
    3388:	90 93 06 0b 	sts	0x0B06, r25	; 0x800b06 <__TEXT_REGION_LENGTH__+0x7f0b06>
__iRestore():
    338c:	8f bf       	out	0x3f, r24	; 63
_ZN7Timeout4stopEv():
    338e:	18 95       	reti

00003390 <Timeout::command(unsigned int (*)(), unsigned int (*)(), unsigned int)>:
command():
    3390:	cf 93       	push	r28
    3392:	df 93       	push	r29
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:53
   * Exit from the timeout block.
   * The last RETI is required.
   */
  __attribute__((used, naked, noinline))
  void stop (void) {
    ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    3394:	cd b7       	in	r28, 0x3d	; 61
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:50
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    3396:	de b7       	in	r29, 0x3e	; 62
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:54
      TCB0_CTRLA = 0;
    3398:	28 97       	sbiw	r28, 0x08	; 8
    339a:	cd bf       	out	0x3d, r28	; 61
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:55
      TCB0_INTFLAGS = TCB_CAPT_bm;
    339c:	de bf       	out	0x3e, r29	; 62
    339e:	8d 83       	std	Y+5, r24	; 0x05
    33a0:	9e 83       	std	Y+6, r25	; 0x06
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:70
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    33a2:	6b 83       	std	Y+3, r22	; 0x03
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:57
    }
    reti();
    33a4:	7c 83       	std	Y+4, r23	; 0x04
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:74
  /*
   * Timeout block.
   * Does not work with interrupts disabled.
   * RETI must be called after the interrupt is suspended.
   */
  size_t command (size_t (*func_p)(void), size_t (*fail_p)(void), uint16_t _ms) {
    33a6:	4f 83       	std	Y+7, r20	; 0x07
    33a8:	58 87       	std	Y+8, r21	; 0x08
    33aa:	19 82       	std	Y+1, r1	; 0x01
    33ac:	1a 82       	std	Y+2, r1	; 0x02
    33ae:	89 81       	ldd	r24, Y+1	; 0x01
    33b0:	9a 81       	ldd	r25, Y+2	; 0x02
    33b2:	89 2b       	or	r24, r25
    33b4:	09 f5       	brne	.+66     	; 0x33f8 <Timeout::command(unsigned int (*)(), unsigned int (*)(), unsigned int)+0x68>
    33b6:	83 ec       	ldi	r24, 0xC3	; 195
    33b8:	90 e6       	ldi	r25, 0x60	; 96
    33ba:	0e 94 d1 26 	call	0x4da2	; 0x4da2 <setjmp>
    33be:	89 2b       	or	r24, r25
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:75
    volatile size_t _result = 0;
    33c0:	19 f5       	brne	.+70     	; 0x3408 <Timeout::command(unsigned int (*)(), unsigned int (*)(), unsigned int)+0x78>
start():
    33c2:	9f b7       	in	r25, 0x3f	; 63
__iCliRetVal():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:76
    while (_result == 0) {
    33c4:	f8 94       	cli
start():
    33c6:	10 92 0a 0b 	sts	0x0B0A, r1	; 0x800b0a <__TEXT_REGION_LENGTH__+0x7f0b0a>
    33ca:	10 92 0b 0b 	sts	0x0B0B, r1	; 0x800b0b <__TEXT_REGION_LENGTH__+0x7f0b0b>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:77
      if (setjmp(TIMEOUT_CONTEXT) == 0) {
    33ce:	2f 81       	ldd	r18, Y+7	; 0x07
    33d0:	38 85       	ldd	r19, Y+8	; 0x08
    33d2:	20 93 0c 0b 	sts	0x0B0C, r18	; 0x800b0c <__TEXT_REGION_LENGTH__+0x7f0b0c>
    33d6:	30 93 0d 0b 	sts	0x0B0D, r19	; 0x800b0d <__TEXT_REGION_LENGTH__+0x7f0b0d>
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:50
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    33da:	81 e0       	ldi	r24, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:39
   * Timeout after the specified time.
   * To be precise, in 1/1024 sec units.
   */
  void start (uint16_t _ms) {
    ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
      TCB0_CNT = 0;
    33dc:	80 93 05 0b 	sts	0x0B05, r24	; 0x800b05 <__TEXT_REGION_LENGTH__+0x7f0b05>
    33e0:	80 93 06 0b 	sts	0x0B06, r24	; 0x800b06 <__TEXT_REGION_LENGTH__+0x7f0b06>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:40
      TCB0_CCMP = _ms;
    33e4:	8f e0       	ldi	r24, 0x0F	; 15
    33e6:	80 93 00 0b 	sts	0x0B00, r24	; 0x800b00 <__TEXT_REGION_LENGTH__+0x7f0b00>
__iRestore():
    33ea:	9f bf       	out	0x3f, r25	; 63
command():
    33ec:	ed 81       	ldd	r30, Y+5	; 0x05
    33ee:	fe 81       	ldd	r31, Y+6	; 0x06
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:41
      TCB0_INTCTRL = TCB_CAPT_bm;
    33f0:	09 95       	icall
    33f2:	89 83       	std	Y+1, r24	; 0x01
    33f4:	9a 83       	std	Y+2, r25	; 0x02
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:42
      TCB0_INTFLAGS = TCB_CAPT_bm;
    33f6:	c3 df       	rcall	.-122    	; 0x337e <Timeout::stop()>
    33f8:	89 81       	ldd	r24, Y+1	; 0x01
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:43
      TCB0_CTRLA = TCB_ENABLE_bm | TCB_CLKSEL_EVENT_gc; /* for EVSYS_USERTCB0COUNT */
    33fa:	9a 81       	ldd	r25, Y+2	; 0x02
    33fc:	28 96       	adiw	r28, 0x08	; 8
    33fe:	cd bf       	out	0x3d, r28	; 61
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:70
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    3400:	de bf       	out	0x3e, r29	; 62
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:79
  size_t command (size_t (*func_p)(void), size_t (*fail_p)(void), uint16_t _ms) {
    volatile size_t _result = 0;
    while (_result == 0) {
      if (setjmp(TIMEOUT_CONTEXT) == 0) {
        Timeout::start(_ms);
        _result = (*func_p)();
    3402:	df 91       	pop	r29
    3404:	cf 91       	pop	r28
    3406:	08 95       	ret
    3408:	ba df       	rcall	.-140    	; 0x337e <Timeout::stop()>
    340a:	27 e9       	ldi	r18, 0x97	; 151
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:80
        Timeout::stop();
    340c:	37 e0       	ldi	r19, 0x07	; 7
    340e:	3f 93       	push	r19
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:89
      D1PRINTF("[TO]");
      if (!fail_p) break;
      wdt_reset();
      if (!(*fail_p)()) break;
    }
    return _result;
    3410:	2f 93       	push	r18
    3412:	e3 eb       	ldi	r30, 0xB3	; 179
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:90
  }
    3414:	f0 e6       	ldi	r31, 0x60	; 96
    3416:	ff 93       	push	r31
    3418:	ef 93       	push	r30
    341a:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
    341e:	0f 90       	pop	r0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:83
        Timeout::start(_ms);
        _result = (*func_p)();
        Timeout::stop();
        break;
      }
      Timeout::stop();
    3420:	0f 90       	pop	r0
    3422:	0f 90       	pop	r0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:84
      D1PRINTF("[TO]");
    3424:	0f 90       	pop	r0
    3426:	8b 81       	ldd	r24, Y+3	; 0x03
    3428:	9c 81       	ldd	r25, Y+4	; 0x04
    342a:	89 2b       	or	r24, r25
    342c:	29 f3       	breq	.-54     	; 0x33f8 <Timeout::command(unsigned int (*)(), unsigned int (*)(), unsigned int)+0x68>
    342e:	a8 95       	wdr
    3430:	eb 81       	ldd	r30, Y+3	; 0x03
    3432:	fc 81       	ldd	r31, Y+4	; 0x04
    3434:	09 95       	icall
    3436:	89 2b       	or	r24, r25
    3438:	09 f0       	breq	.+2      	; 0x343c <Timeout::command(unsigned int (*)(), unsigned int (*)(), unsigned int)+0xac>
    343a:	b9 cf       	rjmp	.-142    	; 0x33ae <Timeout::command(unsigned int (*)(), unsigned int (*)(), unsigned int)+0x1e>
    343c:	dd cf       	rjmp	.-70     	; 0x33f8 <Timeout::command(unsigned int (*)(), unsigned int (*)(), unsigned int)+0x68>

0000343e <__vector_6>:
__vector_6():
    343e:	1f 92       	push	r1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:85
      if (!fail_p) break;
    3440:	0f 92       	push	r0
    3442:	0f b6       	in	r0, 0x3f	; 63
    3444:	0f 92       	push	r0
    3446:	11 24       	eor	r1, r1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:86
      wdt_reset();
    3448:	8f 93       	push	r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:87
      if (!(*fail_p)()) break;
    344a:	8f ef       	ldi	r24, 0xFF	; 255
    344c:	80 93 c7 01 	sts	0x01C7, r24	; 0x8001c7 <__TEXT_REGION_LENGTH__+0x7f01c7>
    3450:	f7 9a       	sbi	0x1e, 7	; 30
    3452:	8f 91       	pop	r24
    3454:	0f 90       	pop	r0
    3456:	0f be       	out	0x3f, r0	; 63
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:524
  /* SW0 Raising Interrupt */
  vportRegister(PIN_SYS_SW0).INTFLAGS = ~0;
  bit_set(GPCONF, GPCONF_RIS_bp);
}

ISR(CCL_CCL_vect) {
    3458:	0f 90       	pop	r0
    345a:	1f 90       	pop	r1
    345c:	18 95       	reti

0000345e <__vector_24>:
__vector_24():
    345e:	1f 92       	push	r1
    3460:	0f 92       	push	r0
    3462:	0f b6       	in	r0, 0x3f	; 63
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:526
  /* SW0 Falling Intrrupt from CCL2 */
  CCL_INTFLAGS = ~0;
    3464:	0f 92       	push	r0
    3466:	11 24       	eor	r1, r1
    3468:	8f 93       	push	r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:527
  bit_set(GPCONF, GPCONF_FAL_bp);
    346a:	8f ef       	ldi	r24, 0xFF	; 255
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:528
}
    346c:	87 bb       	out	0x17, r24	; 23
    346e:	f6 9a       	sbi	0x1e, 6	; 30
    3470:	8f 91       	pop	r24
    3472:	0f 90       	pop	r0
    3474:	0f be       	out	0x3f, r0	; 63
    3476:	0f 90       	pop	r0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:518

};

#if defined(PIN_SYS_SW0)
/* If the level is not maintained for a sufficient period of time it will not function properly. */
ISR(portIntrruptVector(PIN_SYS_SW0)) {
    3478:	1f 90       	pop	r1
    347a:	18 95       	reti

0000347c <_GLOBAL__sub_I_Serial0A>:
_ZN14UsartBaseClassC2EP12USART_struct():
    347c:	e3 eb       	ldi	r30, 0xB3	; 179
    347e:	f0 e6       	ldi	r31, 0x60	; 96
    3480:	80 e2       	ldi	r24, 0x20	; 32
    3482:	98 e0       	ldi	r25, 0x08	; 8
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:520
  /* SW0 Raising Interrupt */
  vportRegister(PIN_SYS_SW0).INTFLAGS = ~0;
    3484:	82 83       	std	Z+2, r24	; 0x02
    3486:	93 83       	std	Z+3, r25	; 0x03
_ZN14HarfUART_ClassC2EP12USART_structPK14UART_portmux_t():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:521
  bit_set(GPCONF, GPCONF_RIS_bp);
    3488:	84 ea       	ldi	r24, 0xA4	; 164
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:522
}
    348a:	90 e6       	ldi	r25, 0x60	; 96
    348c:	80 83       	st	Z, r24
    348e:	91 83       	std	Z+1, r25	; 0x01
    3490:	8c e8       	ldi	r24, 0x8C	; 140
    3492:	99 e0       	ldi	r25, 0x09	; 9
    3494:	85 83       	std	Z+5, r24	; 0x05
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/HarfUART.h:28
private:
  const UART_portmux_t* portmux;

public:
  inline HarfUART_Class (USART_t* _usart, const UART_portmux_t* _portmux) :
    UsartBaseClass(_usart), portmux(_portmux) {}
    3496:	96 83       	std	Z+6, r25	; 0x06
_GLOBAL__sub_I_Serial0A():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/Portmux_USART.cpp:69
HarfUART_Class Serial1B {&USART1, &_portmux_usart1b};
#endif

#ifdef _PORTMUX_USART1C
const UART_portmux_t PROGMEM _portmux_usart1c = _PORTMUX_USART1C;
HarfUART_Class Serial1C {&USART1, &_portmux_usart1c};
    3498:	08 95       	ret

0000349a <main>:
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/main.cpp:82
} /* NAMELESS */;

__attribute__((used, naked, section(".init3")))
void setup_mcu (void) { initVariant(); }

int main (void) {
    349a:	cf 93       	push	r28
    349c:	df 93       	push	r29
    349e:	cd b7       	in	r28, 0x3d	; 61
    34a0:	de b7       	in	r29, 0x3e	; 62
    34a2:	27 97       	sbiw	r28, 0x07	; 7
    34a4:	cd bf       	out	0x3d, r28	; 61
    34a6:	de bf       	out	0x3e, r29	; 62
setup():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:157
    CCL_LUT2CTRLA = CCL_ENABLE_bm      | CCL_OUTEN_bm;            /* -> PIN_PD6 */

  #elif (CONFIG_HAL_TYPE == HAL_CNANO)

    /* Output GPIO */
    VPORTA_DIR = 0b01110000;    /* 6:PCLK 5:VPW 4:PDAT */
    34a8:	80 e7       	ldi	r24, 0x70	; 112
    34aa:	80 b9       	out	0x00, r24	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:158
    VPORTD_DIR = 0b00110111;    /* 5:HVCP2 4:HVCP1 2:HVSL3 1:HVSL2 0:HVSL1 */
    34ac:	57 e3       	ldi	r21, 0x37	; 55
    34ae:	5c b9       	out	0x0c, r21	; 12
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:159
    VPORTF_DIR = 0b00000100;    /* 2:LED0 */
    34b0:	84 e0       	ldi	r24, 0x04	; 4
    34b2:	84 bb       	out	0x14, r24	; 20
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:162

    /* Pull-Up GPIO */
    pinControlRegister(PIN_VCP_TXD)      = PORT_PULLUPEN_bm;
    34b4:	28 e0       	ldi	r18, 0x08	; 8
    34b6:	20 93 12 04 	sts	0x0412, r18	; 0x800412 <__TEXT_REGION_LENGTH__+0x7f0412>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:163
    pinControlRegister(PIN_VCP_RXD)      = PORT_PULLUPEN_bm;
    34ba:	20 93 13 04 	sts	0x0413, r18	; 0x800413 <__TEXT_REGION_LENGTH__+0x7f0413>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:164
    pinControlRegister(PIN_PGM_TDAT)     = PORT_PULLUPEN_bm;
    34be:	20 93 10 04 	sts	0x0410, r18	; 0x800410 <__TEXT_REGION_LENGTH__+0x7f0410>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:165
    pinControlRegister(PIN_PGM_TRST)     = PORT_PULLUPEN_bm;
    34c2:	20 93 11 04 	sts	0x0411, r18	; 0x800411 <__TEXT_REGION_LENGTH__+0x7f0411>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:166
    pinControlRegister(PIN_PGM_PDAT)     = 0;
    34c6:	10 92 14 04 	sts	0x0414, r1	; 0x800414 <__TEXT_REGION_LENGTH__+0x7f0414>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:167
    pinControlRegister(PIN_PGM_PCLK)     = 0;
    34ca:	10 92 16 04 	sts	0x0416, r1	; 0x800416 <__TEXT_REGION_LENGTH__+0x7f0416>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:168
    pinControlRegister(PIN_SYS_SW0)      = PORT_PULLUPEN_bm | PORT_ISC_RISING_gc;
    34ce:	9a e0       	ldi	r25, 0x0A	; 10
    34d0:	90 93 b6 04 	sts	0x04B6, r25	; 0x8004b6 <__TEXT_REGION_LENGTH__+0x7f04b6>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:169
    pinControlRegister(PIN_SYS_LED0)     = PORT_INVEN_bm    | PORT_ISC_INPUT_DISABLE_gc;
    34d4:	94 e8       	ldi	r25, 0x84	; 132
    34d6:	90 93 b2 04 	sts	0x04B2, r25	; 0x8004b2 <__TEXT_REGION_LENGTH__+0x7f04b2>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:170
    pinControlRegister(PIN_HVC_CHGPUMP1) = PORT_INVEN_bm    | PORT_ISC_INPUT_DISABLE_gc;
    34da:	90 93 74 04 	sts	0x0474, r25	; 0x800474 <__TEXT_REGION_LENGTH__+0x7f0474>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:173

    /* PORTx event generator */
    portRegister(PIN_SYS_SW0).EVGENCTRLA = pinPosition(PIN_SYS_SW0);
    34de:	96 e0       	ldi	r25, 0x06	; 6
    34e0:	90 93 b8 04 	sts	0x04B8, r25	; 0x8004b8 <__TEXT_REGION_LENGTH__+0x7f04b8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:174
    portRegister(PIN_VCP_RXD).EVGENCTRLA = pinPosition(PIN_VCP_RXD) << 4;
    34e4:	30 e3       	ldi	r19, 0x30	; 48
    34e6:	30 93 18 04 	sts	0x0418, r19	; 0x800418 <__TEXT_REGION_LENGTH__+0x7f0418>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:177

    /*** Multiplexer ***/
    PORTMUX_TCAROUTEA     = PORTMUX_TCA0_PORTD_gc;          /* TCA0_WOn_ALT3 -> PORTD */
    34ea:	43 e0       	ldi	r20, 0x03	; 3
    34ec:	40 93 e7 05 	sts	0x05E7, r20	; 0x8005e7 <__TEXT_REGION_LENGTH__+0x7f05e7>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:178
    EVSYS_CHANNEL3        = EVSYS_CHANNEL_CCL_LUT2_gc;      /* <- LED0 */
    34f0:	32 e1       	ldi	r19, 0x12	; 18
    34f2:	30 93 13 02 	sts	0x0213, r19	; 0x800213 <__TEXT_REGION_LENGTH__+0x7f0213>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:179
    EVSYS_CHANNEL4        = EVSYS_CHANNEL_PORTA_EVGEN1_gc;  /* <- VRxD */
    34f6:	31 e4       	ldi	r19, 0x41	; 65
    34f8:	30 93 14 02 	sts	0x0214, r19	; 0x800214 <__TEXT_REGION_LENGTH__+0x7f0214>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:180
    EVSYS_CHANNEL5        = EVSYS_CHANNEL_PORTF_EVGEN0_gc;  /* <- SW0  */
    34fc:	6a e4       	ldi	r22, 0x4A	; 74
    34fe:	60 93 15 02 	sts	0x0215, r22	; 0x800215 <__TEXT_REGION_LENGTH__+0x7f0215>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:181
    EVSYS_USEREVSYSEVOUTF = EVSYS_USER_CHANNEL3_gc;         /* LED0 -> EVOUTF:PIN_PF2 */
    3502:	80 93 2b 02 	sts	0x022B, r24	; 0x80022b <__TEXT_REGION_LENGTH__+0x7f022b>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:182
    EVSYS_USERCCLLUT3A    = EVSYS_USER_CHANNEL4_gc;         /* <- VRxD */
    3506:	85 e0       	ldi	r24, 0x05	; 5
    3508:	80 93 26 02 	sts	0x0226, r24	; 0x800226 <__TEXT_REGION_LENGTH__+0x7f0226>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:183
    EVSYS_USERCCLLUT0A    = EVSYS_USER_CHANNEL5_gc;         /* <- SW0 */
    350c:	90 93 20 02 	sts	0x0220, r25	; 0x800220 <__TEXT_REGION_LENGTH__+0x7f0220>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:186

    /*** SW0 FALLING Interrupt generator ***/
    CCL_TRUTH0    = CCL_TRUTH_1_bm;
    3510:	82 e0       	ldi	r24, 0x02	; 2
    3512:	80 93 cb 01 	sts	0x01CB, r24	; 0x8001cb <__TEXT_REGION_LENGTH__+0x7f01cb>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:187
    CCL_LUT0CTRLB = CCL_INSEL0_EVENTA_gc;                         /* <- CH5 */
    3516:	40 93 c9 01 	sts	0x01C9, r20	; 0x8001c9 <__TEXT_REGION_LENGTH__+0x7f01c9>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:188
    CCL_LUT0CTRLA = CCL_ENABLE_bm | CCL_FILTSEL_FILTER_gc;
    351a:	61 e2       	ldi	r22, 0x21	; 33
    351c:	60 93 c8 01 	sts	0x01C8, r22	; 0x8001c8 <__TEXT_REGION_LENGTH__+0x7f01c8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:189
    CCL_INTCTRL0  = CCL_INTMODE0_FALLING_gc;
    3520:	80 93 c5 01 	sts	0x01C5, r24	; 0x8001c5 <__TEXT_REGION_LENGTH__+0x7f01c5>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:192

    /*** LED1 generator ***/
    CCL_TRUTH3    = CCL_TRUTH_0_bm       | CCL_TRUTH_1_bm | CCL_TRUTH_2_bm;
    3524:	67 e0       	ldi	r22, 0x07	; 7
    3526:	60 93 d7 01 	sts	0x01D7, r22	; 0x8001d7 <__TEXT_REGION_LENGTH__+0x7f01d7>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:193
    CCL_LUT3CTRLB = CCL_INSEL0_USART0_gc | CCL_INSEL1_EVENTA_gc;  /* <- CH4 */
    352a:	50 93 d5 01 	sts	0x01D5, r21	; 0x8001d5 <__TEXT_REGION_LENGTH__+0x7f01d5>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:194
    CCL_LUT3CTRLA = CCL_ENABLE_bm        | CCL_OUTEN_bm;          /* -> PIN_PF3 */
    352e:	30 93 d4 01 	sts	0x01D4, r19	; 0x8001d4 <__TEXT_REGION_LENGTH__+0x7f01d4>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:197

    /*** LED0 Heart-Beat generator ***/
    CCL_TRUTH2    = CCL_TRUTH_1_bm     | CCL_TRUTH_2_bm;
    3532:	90 93 d3 01 	sts	0x01D3, r25	; 0x8001d3 <__TEXT_REGION_LENGTH__+0x7f01d3>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:198
    CCL_LUT2CTRLB = CCL_INSEL0_TCA0_gc | CCL_INSEL1_TCB1_gc;
    3536:	99 ea       	ldi	r25, 0xA9	; 169
    3538:	90 93 d1 01 	sts	0x01D1, r25	; 0x8001d1 <__TEXT_REGION_LENGTH__+0x7f01d1>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:199
    CCL_LUT2CTRLA = CCL_ENABLE_bm;                                /* -> CH3 */
    353c:	ff 24       	eor	r15, r15
    353e:	f3 94       	inc	r15
    3540:	f0 92 d0 01 	sts	0x01D0, r15	; 0x8001d0 <__TEXT_REGION_LENGTH__+0x7f01d0>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:248

  #endif

    /*** CCL enable ***/
    /* One of the CCL's is the LED output control. */
    CCL_CTRLA = CCL_ENABLE_bm;
    3544:	f0 92 c0 01 	sts	0x01C0, r15	; 0x8001c0 <__TEXT_REGION_LENGTH__+0x7f01c0>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:255
    /*** TCA0 ***/
    /* TCA0 is split into two 8-bit timers. */
    /* The lower timer controls the blinking rate of the LED. */
    /* The top timer is used as a period timer */
    /* and as the output for the charge pump.  */
    TCA0_SPLIT_CTRLD = TCA_SPLIT_SPLITM_bm;
    3548:	f0 92 03 0a 	sts	0x0A03, r15	; 0x800a03 <__TEXT_REGION_LENGTH__+0x7f0a03>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:256
    TCA0_SPLIT_LPER  = TCA0_STEP - 2;
    354c:	93 ec       	ldi	r25, 0xC3	; 195
    354e:	90 93 26 0a 	sts	0x0A26, r25	; 0x800a26 <__TEXT_REGION_LENGTH__+0x7f0a26>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:257
    TCA0_SPLIT_LCMP0 = TCA0_STEP / 2;
    3552:	92 e6       	ldi	r25, 0x62	; 98
    3554:	90 93 28 0a 	sts	0x0A28, r25	; 0x800a28 <__TEXT_REGION_LENGTH__+0x7f0a28>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:264
    /*** TCB0 ***/
    /* The TCB0 timer is configured in the <timeout.cpp> module. */

    /*** TCB1 ***/
    /* TCB1 is used to control the LED blinking rate. */
    TCB1_CTRLB = TCB_ASYNC_bm | TCB_CNTMODE_PWM8_gc;
    3558:	97 e4       	ldi	r25, 0x47	; 71
    355a:	90 93 11 0b 	sts	0x0B11, r25	; 0x800b11 <__TEXT_REGION_LENGTH__+0x7f0b11>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:265
    TCB1_CCMP  = TCB1_FLASH;
    355e:	69 ea       	ldi	r22, 0xA9	; 169
    3560:	75 e0       	ldi	r23, 0x05	; 5
    3562:	60 93 1c 0b 	sts	0x0B1C, r22	; 0x800b1c <__TEXT_REGION_LENGTH__+0x7f0b1c>
    3566:	70 93 1d 0b 	sts	0x0B1D, r23	; 0x800b1d <__TEXT_REGION_LENGTH__+0x7f0b1d>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:266
    TCB1_CTRLA = TCB_ENABLE_bm | TCB_CLKSEL_EVENT_gc;
    356a:	9f e0       	ldi	r25, 0x0F	; 15
    356c:	90 93 10 0b 	sts	0x0B10, r25	; 0x800b10 <__TEXT_REGION_LENGTH__+0x7f0b10>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:25
#include "prototype.h"

namespace Timeout {

  void setup (void) {
    RTC_PITEVGENCTRLA = RTC_EVGEN0SEL_DIV32_gc | RTC_EVGEN1SEL_DIV128_gc;
    3570:	94 e6       	ldi	r25, 0x64	; 100
    3572:	90 93 56 01 	sts	0x0156, r25	; 0x800156 <__TEXT_REGION_LENGTH__+0x7f0156>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:26
    EVSYS_CHANNEL0 = EVSYS_CHANNEL_RTC_EVGEN0_gc; /* 1024Hz periodic.  */
    3576:	20 93 10 02 	sts	0x0210, r18	; 0x800210 <__TEXT_REGION_LENGTH__+0x7f0210>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:27
    EVSYS_CHANNEL1 = EVSYS_CHANNEL_RTC_EVGEN1_gc; /* 32Hz periodic.    */
    357a:	99 e0       	ldi	r25, 0x09	; 9
    357c:	90 93 11 02 	sts	0x0211, r25	; 0x800211 <__TEXT_REGION_LENGTH__+0x7f0211>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:28
    EVSYS_USERTCB0COUNT = EVSYS_USER_CHANNEL0_gc; /* TCB0_CLK = 1024Hz */
    3580:	f0 92 31 02 	sts	0x0231, r15	; 0x800231 <__TEXT_REGION_LENGTH__+0x7f0231>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:29
    EVSYS_USERTCB1COUNT = EVSYS_USER_CHANNEL1_gc; /* TCB1_CLK = 32Hz   */
    3584:	80 93 33 02 	sts	0x0233, r24	; 0x800233 <__TEXT_REGION_LENGTH__+0x7f0233>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/timeout.cpp:30
    RTC_PITCTRLA = RTC_PITEN_bm;
    3588:	f0 92 50 01 	sts	0x0150, r15	; 0x800150 <__TEXT_REGION_LENGTH__+0x7f0150>
initiate():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/HarfUART.cpp:26
  uint8_t _baud2x = 0;
  if (_baudrate <= 63) {
    _baud2x = 1;
    _usart_ctrl_b = USART_RXEN_bm | USART_TXEN_bm | USART_RXMODE_CLK2X_gc;
  }
  const UART_portmux_t* _mux = portmux;
    358c:	03 eb       	ldi	r16, 0xB3	; 179
    358e:	10 e6       	ldi	r17, 0x60	; 96
    3590:	80 91 b8 60 	lds	r24, 0x60B8	; 0x8060b8 <Serial1C+0x5>
    3594:	90 91 b9 60 	lds	r25, 0x60B9	; 0x8060b9 <Serial1C+0x6>
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/HarfUART.cpp:27
  register8_t *_portmux = (register8_t*)pgm_read_ptr(&_mux->portmux_reg);
    3598:	fc 01       	movw	r30, r24
    359a:	a5 91       	lpm	r26, Z+
    359c:	b4 91       	lpm	r27, Z
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/HarfUART.cpp:28
  *_portmux = (*_portmux & pgm_read_byte(&_mux->portmux_mask))
    359e:	3c 91       	ld	r19, X
    35a0:	fc 01       	movw	r30, r24
    35a2:	32 96       	adiw	r30, 0x02	; 2
    35a4:	54 91       	lpm	r21, Z
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/HarfUART.cpp:29
                         | pgm_read_byte(&_mux->portmux_set);
    35a6:	31 96       	adiw	r30, 0x01	; 1
    35a8:	e4 91       	lpm	r30, Z
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/HarfUART.cpp:28
    _baud2x = 1;
    _usart_ctrl_b = USART_RXEN_bm | USART_TXEN_bm | USART_RXMODE_CLK2X_gc;
  }
  const UART_portmux_t* _mux = portmux;
  register8_t *_portmux = (register8_t*)pgm_read_ptr(&_mux->portmux_reg);
  *_portmux = (*_portmux & pgm_read_byte(&_mux->portmux_mask))
    35aa:	35 23       	and	r19, r21
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/HarfUART.cpp:29
                         | pgm_read_byte(&_mux->portmux_set);
    35ac:	3e 2b       	or	r19, r30
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/HarfUART.cpp:28
    _baud2x = 1;
    _usart_ctrl_b = USART_RXEN_bm | USART_TXEN_bm | USART_RXMODE_CLK2X_gc;
  }
  const UART_portmux_t* _mux = portmux;
  register8_t *_portmux = (register8_t*)pgm_read_ptr(&_mux->portmux_reg);
  *_portmux = (*_portmux & pgm_read_byte(&_mux->portmux_mask))
    35ae:	3c 93       	st	X, r19
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/HarfUART.cpp:30
                         | pgm_read_byte(&_mux->portmux_set);
  PORT_t *_port = pgm_read_ptr(&_mux->port_reg);
    35b0:	fc 01       	movw	r30, r24
    35b2:	34 96       	adiw	r30, 0x04	; 4
    35b4:	a5 91       	lpm	r26, Z+
    35b6:	b4 91       	lpm	r27, Z
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/HarfUART.cpp:31
  _port->DIRSET = pgm_read_byte(&_mux->tx_pin);
    35b8:	fc 01       	movw	r30, r24
    35ba:	36 96       	adiw	r30, 0x06	; 6
    35bc:	e4 91       	lpm	r30, Z
    35be:	11 96       	adiw	r26, 0x01	; 1
    35c0:	ec 93       	st	X, r30
    35c2:	11 97       	sbiw	r26, 0x01	; 1
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/HarfUART.cpp:32
  _port->DIRCLR = pgm_read_byte(&_mux->rx_pin);
    35c4:	fc 01       	movw	r30, r24
    35c6:	37 96       	adiw	r30, 0x07	; 7
    35c8:	e4 91       	lpm	r30, Z
    35ca:	12 96       	adiw	r26, 0x02	; 2
    35cc:	ec 93       	st	X, r30
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/HarfUART.cpp:33
  (*(register8_t*)pgm_read_ptr(&_mux->rx_pin_ctrl)) = PORT_PULLUPEN_bm
    35ce:	fc 01       	movw	r30, r24
    35d0:	38 96       	adiw	r30, 0x08	; 8
    35d2:	a5 91       	lpm	r26, Z+
    35d4:	b4 91       	lpm	r27, Z
    35d6:	2c 93       	st	X, r18
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/HarfUART.cpp:35
                                                    | PORT_ISC_INTDISABLE_gc;
  USART_t* _usart = usart;
    35d8:	e0 91 b5 60 	lds	r30, 0x60B5	; 0x8060b5 <Serial1C+0x2>
    35dc:	f0 91 b6 60 	lds	r31, 0x60B6	; 0x8060b6 <Serial1C+0x3>
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/HarfUART.cpp:36
  _usart->BAUD = (_baudrate << _baud2x);
    35e0:	80 ea       	ldi	r24, 0xA0	; 160
    35e2:	90 e0       	ldi	r25, 0x00	; 0
    35e4:	80 87       	std	Z+8, r24	; 0x08
    35e6:	91 87       	std	Z+9, r25	; 0x09
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/HarfUART.cpp:37
  _usart->CTRLA = 0;
    35e8:	15 82       	std	Z+5, r1	; 0x05
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/HarfUART.cpp:38
  _usart->CTRLC = USART_CHSIZE_8BIT_gc
    35ea:	47 83       	std	Z+7, r20	; 0x07
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/HarfUART.cpp:42
                | USART_PMODE_DISABLED_gc
                | USART_CMODE_ASYNCHRONOUS_gc
                | USART_SBMODE_1BIT_gc;
  _usart->CTRLB = _usart_ctrl_b;
    35ec:	80 ec       	ldi	r24, 0xC0	; 192
    35ee:	86 83       	std	Z+6, r24	; 0x06
delay_millis():
  }
}

void delay_millis (uint32_t _ms) {
  if (F_CPU >= 1000000L) {
    __builtin_avr_delay_cycles((F_CPU / 1000L) * _ms);
    35f0:	2f ef       	ldi	r18, 0xFF	; 255
    35f2:	3e e9       	ldi	r19, 0x9E	; 158
    35f4:	44 e2       	ldi	r20, 0x24	; 36
    35f6:	21 50       	subi	r18, 0x01	; 1
    35f8:	30 40       	sbci	r19, 0x00	; 0
    35fa:	40 40       	sbci	r20, 0x00	; 0
    35fc:	e1 f7       	brne	.-8      	; 0x35f6 <main+0x15c>
    35fe:	00 c0       	rjmp	.+0      	; 0x3600 <main+0x166>
    3600:	00 00       	nop
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/main.cpp:90
  Timeout::setup();

#if defined(DEBUG)
  Serial.begin(CONSOLE_BAUD);
  delay_millis(600);
  D1PRINTF("\n<startup>\r\n");
    3602:	8e e3       	ldi	r24, 0x3E	; 62
    3604:	97 e0       	ldi	r25, 0x07	; 7
    3606:	9f 93       	push	r25
    3608:	8f 93       	push	r24
    360a:	1f 93       	push	r17
    360c:	0f 93       	push	r16
    360e:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/main.cpp:91
  D1PRINTF("F_CPU = %ld\r\n", F_CPU);
    3612:	ff 92       	push	r15
    3614:	81 e3       	ldi	r24, 0x31	; 49
    3616:	8f 93       	push	r24
    3618:	8d e2       	ldi	r24, 0x2D	; 45
    361a:	8f 93       	push	r24
    361c:	1f 92       	push	r1
    361e:	80 e3       	ldi	r24, 0x30	; 48
    3620:	97 e0       	ldi	r25, 0x07	; 7
    3622:	9f 93       	push	r25
    3624:	8f 93       	push	r24
    3626:	1f 93       	push	r17
    3628:	0f 93       	push	r16
    362a:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/main.cpp:92
  D1PRINTF("_AVR_IOXXX_H_ = " _AVR_IOXXX_H_ "\r\n");
    362e:	80 e1       	ldi	r24, 0x10	; 16
    3630:	97 e0       	ldi	r25, 0x07	; 7
    3632:	9f 93       	push	r25
    3634:	8f 93       	push	r24
    3636:	1f 93       	push	r17
    3638:	0f 93       	push	r16
    363a:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/main.cpp:93
  D1PRINTF("__AVR_ARCH__ = %d\r\n", __AVR_ARCH__);
    363e:	1f 92       	push	r1
    3640:	86 e6       	ldi	r24, 0x66	; 102
    3642:	8f 93       	push	r24
    3644:	8c ef       	ldi	r24, 0xFC	; 252
    3646:	96 e0       	ldi	r25, 0x06	; 6
    3648:	9f 93       	push	r25
    364a:	8f 93       	push	r24
    364c:	1f 93       	push	r17
    364e:	0f 93       	push	r16
    3650:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/main.cpp:94
  DFLUSH();
    3654:	80 91 b5 60 	lds	r24, 0x60B5	; 0x8060b5 <Serial1C+0x2>
    3658:	90 91 b6 60 	lds	r25, 0x60B6	; 0x8060b6 <Serial1C+0x3>
    365c:	0e 94 c1 05 	call	0xb82	; 0xb82 <UsartBaseClass::flush() [clone .isra.0] [clone .lto_priv.18]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/main.cpp:97
#endif

  USART::setup();
    3660:	0e 94 75 0f 	call	0x1eea	; 0x1eea <USART::setup()>
    3664:	cd bf       	out	0x3d, r28	; 61
    3666:	de bf       	out	0x3e, r29	; 62
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/main.cpp:99

  loop_until_bit_is_clear(WDT_STATUS, WDT_SYNCBUSY_bp);
    3668:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <__TEXT_REGION_LENGTH__+0x7f0101>
    366c:	80 fd       	sbrc	r24, 0
    366e:	fc cf       	rjmp	.-8      	; 0x3668 <main+0x1ce>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/main.cpp:100
  _PROTECTED_WRITE(WDT_CTRLA, WDT_PERIOD_1KCLK_gc);
    3670:	88 ed       	ldi	r24, 0xD8	; 216
    3672:	98 e0       	ldi	r25, 0x08	; 8
    3674:	84 bf       	out	0x34, r24	; 52
    3676:	90 93 00 01 	sts	0x0100, r25	; 0x800100 <__TEXT_REGION_LENGTH__+0x7f0100>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/main.cpp:104

  #if defined(PIN_SYS_SW0)
  /* Clear the dirty flag before enabling interrupts. */
  vportRegister(PIN_SYS_SW0).INTFLAGS = ~0;
    367a:	8f ef       	ldi	r24, 0xFF	; 255
    367c:	87 bb       	out	0x17, r24	; 23
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/main.cpp:105
  CCL_INTFLAGS = ~0;
    367e:	80 93 c7 01 	sts	0x01C7, r24	; 0x8001c7 <__TEXT_REGION_LENGTH__+0x7f01c7>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/main.cpp:107
  #endif
  interrupts();
    3682:	78 94       	sei
delay_millis():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/delay_busywait.h:42
    3684:	9f e1       	ldi	r25, 0x1F	; 31
    3686:	e1 ea       	ldi	r30, 0xA1	; 161
    3688:	f7 e0       	ldi	r31, 0x07	; 7
    368a:	91 50       	subi	r25, 0x01	; 1
    368c:	e0 40       	sbci	r30, 0x00	; 0
    368e:	f0 40       	sbci	r31, 0x00	; 0
    3690:	e1 f7       	brne	.-8      	; 0x368a <main+0x1f0>
    3692:	00 c0       	rjmp	.+0      	; 0x3694 <main+0x1fa>
    3694:	00 00       	nop
    3696:	2f e1       	ldi	r18, 0x1F	; 31
    3698:	31 ea       	ldi	r19, 0xA1	; 161
    369a:	47 e0       	ldi	r20, 0x07	; 7
    369c:	21 50       	subi	r18, 0x01	; 1
    369e:	30 40       	sbci	r19, 0x00	; 0
    36a0:	40 40       	sbci	r20, 0x00	; 0
    36a2:	e1 f7       	brne	.-8      	; 0x369c <main+0x202>
    36a4:	00 c0       	rjmp	.+0      	; 0x36a6 <main+0x20c>
    36a6:	00 00       	nop
setup_device():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:237
    EP_MEM.cci_header.wLength       = 2;
    EP_MEM.cci_wValue               = _state;
  }

  void setup_device (bool _force) {
    if (_led_mode != 3) SYS::LED_Flash();
    36a8:	80 91 ab 60 	lds	r24, 0x60AB	; 0x8060ab <_led_mode>
    36ac:	83 30       	cpi	r24, 0x03	; 3
    36ae:	11 f0       	breq	.+4      	; 0x36b4 <main+0x21a>
    36b0:	0e 94 1b 09 	call	0x1236	; 0x1236 <SYS::LED_Flash()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:238
    USB0_ADDR = 0;
    36b4:	10 92 03 0c 	sts	0x0C03, r1	; 0x800c03 <__TEXT_REGION_LENGTH__+0x7f0c03>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:239
    if (USB0_CTRLA || _force) {
    36b8:	80 91 00 0c 	lds	r24, 0x0C00	; 0x800c00 <__TEXT_REGION_LENGTH__+0x7f0c00>
    36bc:	0e 94 20 0f 	call	0x1e40	; 0x1e40 <USB::setup_device(bool) [clone .part.2]>
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/main.cpp:119
  #else
  SYS::LED_Flash();
  #endif

  /* From here on, it's an endless loop. */
  D1PRINTF("<WAITING>\r\n");
    36c0:	80 ef       	ldi	r24, 0xF0	; 240
    36c2:	96 e0       	ldi	r25, 0x06	; 6
    36c4:	9f 93       	push	r25
    36c6:	8f 93       	push	r24
    36c8:	83 eb       	ldi	r24, 0xB3	; 179
    36ca:	90 e6       	ldi	r25, 0x60	; 96
    36cc:	9f 93       	push	r25
    36ce:	8f 93       	push	r24
    36d0:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
    36d4:	0f 90       	pop	r0
    36d6:	0f 90       	pop	r0
    36d8:	0f 90       	pop	r0
    36da:	0f 90       	pop	r0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/main.cpp:120
  bool _wdt = true;
    36dc:	dd 24       	eor	r13, r13
    36de:	d3 94       	inc	r13
handling_control_transactions():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:637
  /* This process is equivalent to a endpoint interrupt. */
  /* The reason for using polling is to prioritize VCP performance. */
  void handling_control_transactions (void) {
    bool _listen = false;
    uint8_t bmRequestType = EP_MEM.req_data.bmRequestType;
    D1PRINTF("RQ=%02X:%04X:%02X:%02X:%04X:%04X:%04X\r\n",
    36e0:	03 eb       	ldi	r16, 0xB3	; 179
    36e2:	10 e6       	ldi	r17, 0x60	; 96
request_class():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:603
    else if (bRequest == 0x21) {  /* GET_LINE_ENCODING */
      memcpy(&EP_MEM.res_encoding, &_set_line_encoding, sizeof(LineEncoding_t));
      if (EP_MEM.res_encoding.dwDTERate == 0) {
        /* Parameters that, if incorrectly accepted,           */
        /* would result in division by zero must be corrected. */
        EP_MEM.res_encoding.dwDTERate = 9600UL;
    36e4:	b0 e8       	ldi	r27, 0x80	; 128
    36e6:	8b 2e       	mov	r8, r27
    36e8:	b5 e2       	ldi	r27, 0x25	; 37
    36ea:	9b 2e       	mov	r9, r27
    36ec:	a1 2c       	mov	r10, r1
    36ee:	b1 2c       	mov	r11, r1
request_standard():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:558
    }
    else if (bRequest == 0x0A) {  /* GET_INTREFACE */
      /* It seems not to be used. */
      D1PRINTF("<SI:0>\r\n");
      EP_MEM.res_data[0] = 0;
      EP_RES.CNT = 1;
    36f0:	66 24       	eor	r6, r6
    36f2:	63 94       	inc	r6
    36f4:	71 2c       	mov	r7, r1
    36f6:	ce 01       	movw	r24, r28
    36f8:	05 96       	adiw	r24, 0x05	; 5
    36fa:	8d 83       	std	Y+5, r24	; 0x05
    36fc:	9e 83       	std	Y+6, r25	; 0x06
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/main.cpp:122
  while (true) {
    if (_wdt) wdt_reset();
    36fe:	dd 20       	and	r13, r13
    3700:	19 f0       	breq	.+6      	; 0x3708 <main+0x26e>
    3702:	a8 95       	wdr
    3704:	dd 24       	eor	r13, r13
    3706:	d3 94       	inc	r13
handling_bus_events():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:665

  /*** This process is equivalent to a bus interrupt. ***/
  /* The reason for using polling is to prioritize VCP performance. */
  /* The trade-off is that power standby is not available. */
  void handling_bus_events (void) {
    uint8_t busstate = USB0_INTFLAGSA;
    3708:	f0 90 0a 0c 	lds	r15, 0x0C0A	; 0x800c0a <__TEXT_REGION_LENGTH__+0x7f0c0a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:666
    USB0_INTFLAGSA = busstate;
    370c:	f0 92 0a 0c 	sts	0x0C0A, r15	; 0x800c0a <__TEXT_REGION_LENGTH__+0x7f0c0a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:691
    }
    if (bit_is_set(busstate, USB_RESUME_bp)) {
      D1PRINTF("<RESUME:%04X>\r\n", USB0_ADDR);
    }
  #endif
    if (bit_is_set(busstate, USB_SOF_bp)) {
    3710:	f7 fe       	sbrs	r15, 7
    3712:	14 c0       	rjmp	.+40     	; 0x373c <main+0x2a2>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:693
      /* If there is deferred data for a block transfer, it is sent here. */
      if (_sof_count > 0 && 0 == (--_sof_count)) {
    3714:	80 91 72 64 	lds	r24, 0x6472	; 0x806472 <_sof_count>
    3718:	88 23       	and	r24, r24
    371a:	81 f0       	breq	.+32     	; 0x373c <main+0x2a2>
    371c:	80 91 72 64 	lds	r24, 0x6472	; 0x806472 <_sof_count>
    3720:	81 50       	subi	r24, 0x01	; 1
    3722:	80 93 72 64 	sts	0x6472, r24	; 0x806472 <_sof_count>
    3726:	81 11       	cpse	r24, r1
    3728:	09 c0       	rjmp	.+18     	; 0x373c <main+0x2a2>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:694
        if (bit_is_set(EP_CDI.STATUS, USB_BUSNAK_bp) && _send_count > 0) {
    372a:	80 91 b8 64 	lds	r24, 0x64B8	; 0x8064b8 <EP_TABLE+0x40>
    372e:	81 ff       	sbrs	r24, 1
    3730:	05 c0       	rjmp	.+10     	; 0x373c <main+0x2a2>
    3732:	80 91 75 64 	lds	r24, 0x6475	; 0x806475 <_send_count>
    3736:	81 11       	cpse	r24, r1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:695
          ep_cdi_listen();
    3738:	0e 94 75 05 	call	0xaea	; 0xaea <USB::ep_cdi_listen()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:700
        }
      }
    }
    if (bit_is_set(busstate, USB_SUSPEND_bp)
     || bit_is_set(busstate, USB_RESUME_bp)) {
    373c:	8f 2d       	mov	r24, r15
    373e:	80 76       	andi	r24, 0x60	; 96
    3740:	29 f0       	breq	.+10     	; 0x374c <main+0x2b2>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:703
      /* This implementation does not transition to power saving mode. */
      /* This is only passed when the USB cable is unplugged. */
      if (bit_is_set(GPCONF, GPCONF_USB_bp)) {
    3742:	f0 99       	sbic	0x1e, 0	; 30
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:705
        /* System reboot */
        SYS::reboot();
    3744:	0e 94 83 0d 	call	0x1b06	; 0x1b06 <SYS::reboot()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:707
      }
      bit_set(busstate, USB_RESET_bp);
    3748:	68 94       	set
    374a:	f4 f8       	bld	r15, 4
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:709
    }
    if (bit_is_set(busstate, USB_RESET_bp)) {
    374c:	f4 fe       	sbrs	r15, 4
    374e:	0d c0       	rjmp	.+26     	; 0x376a <main+0x2d0>
setup_device():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:237
    EP_MEM.cci_header.wLength       = 2;
    EP_MEM.cci_wValue               = _state;
  }

  void setup_device (bool _force) {
    if (_led_mode != 3) SYS::LED_Flash();
    3750:	80 91 ab 60 	lds	r24, 0x60AB	; 0x8060ab <_led_mode>
    3754:	83 30       	cpi	r24, 0x03	; 3
    3756:	11 f0       	breq	.+4      	; 0x375c <main+0x2c2>
    3758:	0e 94 1b 09 	call	0x1236	; 0x1236 <SYS::LED_Flash()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:238
    USB0_ADDR = 0;
    375c:	10 92 03 0c 	sts	0x0C03, r1	; 0x800c03 <__TEXT_REGION_LENGTH__+0x7f0c03>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:239
    if (USB0_CTRLA || _force) {
    3760:	80 91 00 0c 	lds	r24, 0x0C00	; 0x800c00 <__TEXT_REGION_LENGTH__+0x7f0c00>
    3764:	81 11       	cpse	r24, r1
    3766:	0e 94 20 0f 	call	0x1e40	; 0x1e40 <USB::setup_device(bool) [clone .part.2]>
is_ep_setup():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:260
    }
  }

  // MARK: Endpoint

  bool is_ep_setup (void) { return bit_is_set(EP_REQ.STATUS, USB_EPSETUP_bp); }
    376a:	80 91 80 64 	lds	r24, 0x6480	; 0x806480 <EP_TABLE+0x8>
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/main.cpp:126

    /*** USB control handling ***/
    USB::handling_bus_events();
    if (USB::is_ep_setup()) USB::handling_control_transactions();
    376e:	84 ff       	sbrs	r24, 4
    3770:	06 c1       	rjmp	.+524    	; 0x397e <main+0x4e4>
handling_control_transactions():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:636
  /*** Accept the EP0 setup packet. ***/
  /* This process is equivalent to a endpoint interrupt. */
  /* The reason for using polling is to prioritize VCP performance. */
  void handling_control_transactions (void) {
    bool _listen = false;
    uint8_t bmRequestType = EP_MEM.req_data.bmRequestType;
    3772:	f0 90 5a 63 	lds	r15, 0x635A	; 0x80635a <EP_MEM>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:637
    D1PRINTF("RQ=%02X:%04X:%02X:%02X:%04X:%04X:%04X\r\n",
    3776:	80 91 82 64 	lds	r24, 0x6482	; 0x806482 <EP_TABLE+0xa>
    377a:	90 91 83 64 	lds	r25, 0x6483	; 0x806483 <EP_TABLE+0xb>
    377e:	20 91 80 64 	lds	r18, 0x6480	; 0x806480 <EP_TABLE+0x8>
    3782:	30 91 61 63 	lds	r19, 0x6361	; 0x806361 <EP_MEM+0x7>
    3786:	3f 93       	push	r19
    3788:	30 91 60 63 	lds	r19, 0x6360	; 0x806360 <EP_MEM+0x6>
    378c:	3f 93       	push	r19
    378e:	30 91 5f 63 	lds	r19, 0x635F	; 0x80635f <EP_MEM+0x5>
    3792:	3f 93       	push	r19
    3794:	30 91 5e 63 	lds	r19, 0x635E	; 0x80635e <EP_MEM+0x4>
    3798:	3f 93       	push	r19
    379a:	30 91 5d 63 	lds	r19, 0x635D	; 0x80635d <EP_MEM+0x3>
    379e:	3f 93       	push	r19
    37a0:	30 91 5c 63 	lds	r19, 0x635C	; 0x80635c <EP_MEM+0x2>
    37a4:	3f 93       	push	r19
    37a6:	30 91 5b 63 	lds	r19, 0x635B	; 0x80635b <EP_MEM+0x1>
    37aa:	1f 92       	push	r1
    37ac:	3f 93       	push	r19
    37ae:	1f 92       	push	r1
    37b0:	ff 92       	push	r15
    37b2:	9f 93       	push	r25
    37b4:	8f 93       	push	r24
    37b6:	1f 92       	push	r1
    37b8:	2f 93       	push	r18
    37ba:	e5 e6       	ldi	r30, 0x65	; 101
    37bc:	f2 e0       	ldi	r31, 0x02	; 2
    37be:	ff 93       	push	r31
    37c0:	ef 93       	push	r30
    37c2:	1f 93       	push	r17
    37c4:	0f 93       	push	r16
    37c6:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:641
      EP_REQ.STATUS, EP_REQ.CNT, EP_MEM.req_data.bmRequestType, EP_MEM.req_data.bRequest,
      EP_MEM.req_data.wValue, EP_MEM.req_data.wIndex, EP_MEM.req_data.wLength);
    /* Accepts subsequent EP0_DATA packets as needed. */
    if (bit_is_clear(bmRequestType, 7)) ep_req_listen();
    37ca:	cd bf       	out	0x3d, r28	; 61
    37cc:	de bf       	out	0x3e, r29	; 62
    37ce:	f7 fe       	sbrs	r15, 7
    37d0:	0e 94 b5 05 	call	0xb6a	; 0xb6a <USB::ep_req_listen()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:642
    bmRequestType &= (3 << 5);
    37d4:	8f 2d       	mov	r24, r15
    37d6:	80 76       	andi	r24, 0x60	; 96
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:643
    if (bmRequestType == (0 << 5)) {
    37d8:	09 f0       	breq	.+2      	; 0x37dc <main+0x342>
    37da:	8d c2       	rjmp	.+1306   	; 0x3cf6 <main+0x85c>
request_standard():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:505
  // MARK: USB Session

  /*** USB Standard Request Enumeration. ***/
  bool request_standard (void) {
    bool _listen = true;
    uint8_t bRequest = EP_MEM.req_data.bRequest;
    37dc:	80 91 5b 63 	lds	r24, 0x635B	; 0x80635b <EP_MEM+0x1>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:506
    if (bRequest == 0x00) {       /* GET_STATUS */
    37e0:	81 11       	cpse	r24, r1
    37e2:	0f c0       	rjmp	.+30     	; 0x3802 <main+0x368>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:507
      EP_MEM.res_data[0] = 0;
    37e4:	10 92 62 63 	sts	0x6362, r1	; 0x806362 <EP_MEM+0x8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:508
      EP_MEM.res_data[1] = 0;
    37e8:	10 92 63 63 	sts	0x6363, r1	; 0x806363 <EP_MEM+0x9>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:509
      EP_RES.CNT = 2;
    37ec:	82 e0       	ldi	r24, 0x02	; 2
    37ee:	90 e0       	ldi	r25, 0x00	; 0
    37f0:	80 93 8a 64 	sts	0x648A, r24	; 0x80648a <EP_TABLE+0x12>
    37f4:	90 93 8b 64 	sts	0x648B, r25	; 0x80648b <EP_TABLE+0x13>
handling_control_transactions():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:655
    else if (bmRequestType == (2 << 5)) {
      _listen = request_vendor();
    }
  #endif
    if (_listen) {
      ep_res_listen();
    37f8:	0e 94 a9 05 	call	0xb52	; 0xb52 <USB::ep_res_listen()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:656
      ep_req_listen();
    37fc:	0e 94 b5 05 	call	0xb6a	; 0xb6a <USB::ep_req_listen()>
    3800:	b9 c0       	rjmp	.+370    	; 0x3974 <main+0x4da>
request_standard():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:511
    if (bRequest == 0x00) {       /* GET_STATUS */
      EP_MEM.res_data[0] = 0;
      EP_MEM.res_data[1] = 0;
      EP_RES.CNT = 2;
    }
    else if (bRequest == 0x01) {  /* CLEAR_FEATURE */
    3802:	81 30       	cpi	r24, 0x01	; 1
    3804:	79 f5       	brne	.+94     	; 0x3864 <main+0x3ca>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:512
      D1PRINTF(" CF=%02X:%02X\r\n", EP_MEM.req_data.wValue, EP_MEM.req_data.wIndex);
    3806:	80 91 5f 63 	lds	r24, 0x635F	; 0x80635f <EP_MEM+0x5>
    380a:	8f 93       	push	r24
    380c:	80 91 5e 63 	lds	r24, 0x635E	; 0x80635e <EP_MEM+0x4>
    3810:	8f 93       	push	r24
    3812:	80 91 5d 63 	lds	r24, 0x635D	; 0x80635d <EP_MEM+0x3>
    3816:	8f 93       	push	r24
    3818:	80 91 5c 63 	lds	r24, 0x635C	; 0x80635c <EP_MEM+0x2>
    381c:	8f 93       	push	r24
    381e:	86 e2       	ldi	r24, 0x26	; 38
    3820:	92 e0       	ldi	r25, 0x02	; 2
    3822:	9f 93       	push	r25
    3824:	8f 93       	push	r24
    3826:	1f 93       	push	r17
    3828:	0f 93       	push	r16
    382a:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:513
      if (0 == (uint8_t)EP_MEM.req_data.wValue) {
    382e:	cd bf       	out	0x3d, r28	; 61
    3830:	de bf       	out	0x3e, r29	; 62
    3832:	80 91 5c 63 	lds	r24, 0x635C	; 0x80635c <EP_MEM+0x2>
    3836:	81 11       	cpse	r24, r1
    3838:	10 c0       	rjmp	.+32     	; 0x385a <main+0x3c0>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:516
        /* Expects an endpoint number to be passed in. Swaps the high and low */
        /* nibbles to make it a representation of the USB controller. */
        uint8_t _EP = USB_EP_ID_SWAP(EP_MEM.req_data.wIndex);
    383a:	e0 91 5e 63 	lds	r30, 0x635E	; 0x80635e <EP_MEM+0x4>
    383e:	e2 95       	swap	r30
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:517
        loop_until_bit_is_clear(USB0_INTFLAGSB, USB_RMWBUSY_bp);
    3840:	80 91 0b 0c 	lds	r24, 0x0C0B	; 0x800c0b <__TEXT_REGION_LENGTH__+0x7f0c0b>
    3844:	82 fd       	sbrc	r24, 2
    3846:	fc cf       	rjmp	.-8      	; 0x3840 <main+0x3a6>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:518
        USB_EP_STATUS_CLR(_EP) = USB_STALLED_bm | USB_BUSNAK_bm | USB_TOGGLE_bm;
    3848:	f0 e0       	ldi	r31, 0x00	; 0
    384a:	f5 95       	asr	r31
    384c:	e7 95       	ror	r30
    384e:	f5 95       	asr	r31
    3850:	e7 95       	ror	r30
    3852:	e0 5c       	subi	r30, 0xC0	; 192
    3854:	f3 4f       	sbci	r31, 0xF3	; 243
    3856:	8b e0       	ldi	r24, 0x0B	; 11
    3858:	80 83       	st	Z, r24
request_class():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:623
      /* Nothing else is used unless programmed by the application. */
      D1PRINTF(" SB=%04X\r\n", EP_MEM.req_data.wValue);
      _send_break = EP_MEM.req_data.wValue;
      if (_send_break) break_on();
      else break_off();
      EP_RES.CNT = 0;
    385a:	10 92 8a 64 	sts	0x648A, r1	; 0x80648a <EP_TABLE+0x12>
    385e:	10 92 8b 64 	sts	0x648B, r1	; 0x80648b <EP_TABLE+0x13>
    3862:	ca cf       	rjmp	.-108    	; 0x37f8 <main+0x35e>
request_standard():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:522
        loop_until_bit_is_clear(USB0_INTFLAGSB, USB_RMWBUSY_bp);
        USB_EP_STATUS_CLR(_EP) = USB_STALLED_bm | USB_BUSNAK_bm | USB_TOGGLE_bm;
      }
      EP_RES.CNT = 0;
    }
    else if (bRequest == 0x04) {  /* SET_FEATURE */
    3864:	84 30       	cpi	r24, 0x04	; 4
    3866:	d9 f4       	brne	.+54     	; 0x389e <main+0x404>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:524
      /* If used, it will be ignored. */
      D1PRINTF(" SF=%02X:%02X\r\n", EP_MEM.req_data.wValue, EP_MEM.req_data.wIndex);
    3868:	80 91 5f 63 	lds	r24, 0x635F	; 0x80635f <EP_MEM+0x5>
    386c:	8f 93       	push	r24
    386e:	80 91 5e 63 	lds	r24, 0x635E	; 0x80635e <EP_MEM+0x4>
    3872:	8f 93       	push	r24
    3874:	80 91 5d 63 	lds	r24, 0x635D	; 0x80635d <EP_MEM+0x3>
    3878:	8f 93       	push	r24
    387a:	80 91 5c 63 	lds	r24, 0x635C	; 0x80635c <EP_MEM+0x2>
    387e:	8f 93       	push	r24
    3880:	86 e1       	ldi	r24, 0x16	; 22
    3882:	92 e0       	ldi	r25, 0x02	; 2
    3884:	9f 93       	push	r25
    3886:	8f 93       	push	r24
    3888:	1f 93       	push	r17
    388a:	0f 93       	push	r16
    388c:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:525
      EP_RES.CNT = 0;
    3890:	10 92 8a 64 	sts	0x648A, r1	; 0x80648a <EP_TABLE+0x12>
    3894:	10 92 8b 64 	sts	0x648B, r1	; 0x80648b <EP_TABLE+0x13>
    3898:	cd bf       	out	0x3d, r28	; 61
    389a:	de bf       	out	0x3e, r29	; 62
    389c:	ad cf       	rjmp	.-166    	; 0x37f8 <main+0x35e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:527
    }
    else if (bRequest == 0x05) {  /* SET_ADDRESS */
    389e:	85 30       	cpi	r24, 0x05	; 5
    38a0:	a1 f4       	brne	.+40     	; 0x38ca <main+0x430>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:528
      uint8_t _addr = EP_MEM.req_data.wValue & 0x7F;
    38a2:	80 91 5c 63 	lds	r24, 0x635C	; 0x80635c <EP_MEM+0x2>
    38a6:	f8 2e       	mov	r15, r24
    38a8:	e8 94       	clt
    38aa:	f7 f8       	bld	r15, 7
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:529
      ep_res_listen();
    38ac:	0e 94 a9 05 	call	0xb52	; 0xb52 <USB::ep_res_listen()>
ep_res_pending():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:263
  // MARK: Endpoint

  bool is_ep_setup (void) { return bit_is_set(EP_REQ.STATUS, USB_EPSETUP_bp); }
  bool is_not_dap (void) { return bit_is_clear(EP_DPO.STATUS, USB_BUSNAK_bp); }
  void ep_req_pending (void) { loop_until_bit_is_set(EP_REQ.STATUS, USB_BUSNAK_bp); }
  void ep_res_pending (void) { loop_until_bit_is_set(EP_RES.STATUS, USB_BUSNAK_bp); }
    38b0:	80 91 88 64 	lds	r24, 0x6488	; 0x806488 <EP_TABLE+0x10>
    38b4:	81 ff       	sbrs	r24, 1
    38b6:	fc cf       	rjmp	.-8      	; 0x38b0 <main+0x416>
request_standard():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:531
    }
    else if (bRequest == 0x05) {  /* SET_ADDRESS */
      uint8_t _addr = EP_MEM.req_data.wValue & 0x7F;
      ep_res_listen();
      ep_res_pending();
      USB0_ADDR = _addr;
    38b8:	f0 92 03 0c 	sts	0x0C03, r15	; 0x800c03 <__TEXT_REGION_LENGTH__+0x7f0c03>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:532
      D1PRINTF(" USB0_ADDR=%d\r\n", _addr);
    38bc:	1f 92       	push	r1
    38be:	ff 92       	push	r15
    38c0:	86 e0       	ldi	r24, 0x06	; 6
    38c2:	92 e0       	ldi	r25, 0x02	; 2
    38c4:	9f 93       	push	r25
request_class():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:578
    bool _listen = true;
    uint8_t bRequest = EP_MEM.req_data.bRequest;
    if (bRequest == 0x0A) {       /* SET_IDLE */
      /* This is a HID Compliance Class Request. */
      /* It is called but not used. */
      D1PRINTF(" IDL=%02X\r\n", (uint8_t)EP_MEM.req_data.wValue);
    38c6:	8f 93       	push	r24
    38c8:	ea c1       	rjmp	.+980    	; 0x3c9e <main+0x804>
request_standard():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:535
      ep_res_pending();
      USB0_ADDR = _addr;
      D1PRINTF(" USB0_ADDR=%d\r\n", _addr);
      EP_RES.CNT = 0;
    }
    else if (bRequest == 0x06) {  /* GET_DESCRIPTOR */
    38ca:	86 30       	cpi	r24, 0x06	; 6
    38cc:	09 f0       	breq	.+2      	; 0x38d0 <main+0x436>
    38ce:	bb c1       	rjmp	.+886    	; 0x3c46 <main+0x7ac>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:536
      size_t _length = EP_MEM.req_data.wLength;
    38d0:	30 91 60 63 	lds	r19, 0x6360	; 0x806360 <EP_MEM+0x6>
    38d4:	3f 83       	std	Y+7, r19	; 0x07
    38d6:	c0 90 61 63 	lds	r12, 0x6361	; 0x806361 <EP_MEM+0x7>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:537
      size_t _size = get_descriptor((uint8_t*)&EP_MEM.res_data, EP_MEM.req_data.wValue);
    38da:	80 91 5c 63 	lds	r24, 0x635C	; 0x80635c <EP_MEM+0x2>
    38de:	90 91 5d 63 	lds	r25, 0x635D	; 0x80635d <EP_MEM+0x3>
get_descriptor():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:156

  size_t get_descriptor (uint8_t* _buffer, uint16_t _index) {
    uint8_t* _pgmem = 0;
    size_t   _size = 0;
    uint8_t  _type = _index >> 8;
    if (_type == 0x01) {          /* DEVICE */
    38e2:	91 30       	cpi	r25, 0x01	; 1
    38e4:	09 f0       	breq	.+2      	; 0x38e8 <main+0x44e>
    38e6:	cc c0       	rjmp	.+408    	; 0x3a80 <main+0x5e6>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:159
      _pgmem = (uint8_t*)&device_descriptor;
      _size = sizeof(device_descriptor);
      memcpy_P(_buffer, _pgmem, _size);
    38e8:	42 e1       	ldi	r20, 0x12	; 18
    38ea:	50 e0       	ldi	r21, 0x00	; 0
    38ec:	67 ec       	ldi	r22, 0xC7	; 199
    38ee:	71 e0       	ldi	r23, 0x01	; 1
    38f0:	82 e6       	ldi	r24, 0x62	; 98
    38f2:	93 e6       	ldi	r25, 0x63	; 99
    38f4:	0e 94 11 27 	call	0x4e22	; 0x4e22 <memcpy_P>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:160
      uint32_t _vidpid = *((uint32_t*)EEPROM_START);
    38f8:	80 91 00 14 	lds	r24, 0x1400	; 0x801400 <__TEXT_REGION_LENGTH__+0x7f1400>
    38fc:	90 91 01 14 	lds	r25, 0x1401	; 0x801401 <__TEXT_REGION_LENGTH__+0x7f1401>
    3900:	a0 91 02 14 	lds	r26, 0x1402	; 0x801402 <__TEXT_REGION_LENGTH__+0x7f1402>
    3904:	b0 91 03 14 	lds	r27, 0x1403	; 0x801403 <__TEXT_REGION_LENGTH__+0x7f1403>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:161
      if (_vidpid + 1) _CAPS32(_buffer[8])->dword = _vidpid;
    3908:	8f 3f       	cpi	r24, 0xFF	; 255
    390a:	4f ef       	ldi	r20, 0xFF	; 255
    390c:	94 07       	cpc	r25, r20
    390e:	a4 07       	cpc	r26, r20
    3910:	b4 07       	cpc	r27, r20
    3912:	41 f0       	breq	.+16     	; 0x3924 <main+0x48a>
    3914:	80 93 6a 63 	sts	0x636A, r24	; 0x80636a <EP_MEM+0x10>
    3918:	90 93 6b 63 	sts	0x636B, r25	; 0x80636b <EP_MEM+0x11>
    391c:	a0 93 6c 63 	sts	0x636C, r26	; 0x80636c <EP_MEM+0x12>
    3920:	b0 93 6d 63 	sts	0x636D, r27	; 0x80636d <EP_MEM+0x13>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:162
      D1PRINTF(" VID:PID=%04X:%04X\r\n", _CAPS16(_buffer[8])->word, _CAPS16(_buffer[10])->word);
    3924:	80 91 6d 63 	lds	r24, 0x636D	; 0x80636d <EP_MEM+0x13>
    3928:	8f 93       	push	r24
    392a:	80 91 6c 63 	lds	r24, 0x636C	; 0x80636c <EP_MEM+0x12>
    392e:	8f 93       	push	r24
    3930:	80 91 6b 63 	lds	r24, 0x636B	; 0x80636b <EP_MEM+0x11>
    3934:	8f 93       	push	r24
    3936:	80 91 6a 63 	lds	r24, 0x636A	; 0x80636a <EP_MEM+0x10>
    393a:	8f 93       	push	r24
    393c:	82 eb       	ldi	r24, 0xB2	; 178
    393e:	91 e0       	ldi	r25, 0x01	; 1
    3940:	9f 93       	push	r25
    3942:	8f 93       	push	r24
    3944:	1f 93       	push	r17
    3946:	0f 93       	push	r16
    3948:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
    394c:	cd bf       	out	0x3d, r28	; 61
    394e:	de bf       	out	0x3e, r29	; 62
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:163
      return _size;
    3950:	72 e1       	ldi	r23, 0x12	; 18
    3952:	e7 2e       	mov	r14, r23
    3954:	f1 2c       	mov	r15, r1
    3956:	8f 81       	ldd	r24, Y+7	; 0x07
    3958:	9c 2d       	mov	r25, r12
    395a:	e8 16       	cp	r14, r24
    395c:	f9 06       	cpc	r15, r25
    395e:	08 f4       	brcc	.+2      	; 0x3962 <main+0x4c8>
    3960:	c7 01       	movw	r24, r14
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:187
      _size = 4;
      *_buffer++ = 4;
      *_buffer++ = 3;
      *_buffer++ = 0x09;
      *_buffer++ = 0x04;
      return _size;
    3962:	97 01       	movw	r18, r14
    3964:	7c 01       	movw	r14, r24
request_standard():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:538
      EP_RES.CNT = 0;
    }
    else if (bRequest == 0x06) {  /* GET_DESCRIPTOR */
      size_t _length = EP_MEM.req_data.wLength;
      size_t _size = get_descriptor((uint8_t*)&EP_MEM.res_data, EP_MEM.req_data.wValue);
      EP_RES.CNT = (_size > _length) ? _length : _size;
    3966:	e0 92 8a 64 	sts	0x648A, r14	; 0x80648a <EP_TABLE+0x12>
    396a:	f0 92 8b 64 	sts	0x648B, r15	; 0x80648b <EP_TABLE+0x13>
handling_control_transactions():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:654
  #ifdef _Not_being_used_STUB_
    else if (bmRequestType == (2 << 5)) {
      _listen = request_vendor();
    }
  #endif
    if (_listen) {
    396e:	23 2b       	or	r18, r19
    3970:	09 f0       	breq	.+2      	; 0x3974 <main+0x4da>
    3972:	42 cf       	rjmp	.-380    	; 0x37f8 <main+0x35e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:658
      ep_res_listen();
      ep_req_listen();
    }
    USB0_INTFLAGSB |= USB_EPSETUP_bp;
    3974:	80 91 0b 0c 	lds	r24, 0x0C0B	; 0x800c0b <__TEXT_REGION_LENGTH__+0x7f0c0b>
    3978:	84 60       	ori	r24, 0x04	; 4
    397a:	80 93 0b 0c 	sts	0x0C0B, r24	; 0x800c0b <__TEXT_REGION_LENGTH__+0x7f0c0b>
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/main.cpp:129

    /* If SW0 was used, work here. */
    if (bit_is_clear(PGCONF, PGCONF_UPDI_bp)) {
    397e:	f8 99       	sbic	0x1f, 0	; 31
    3980:	31 c0       	rjmp	.+98     	; 0x39e4 <main+0x54a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/main.cpp:130
      if      (bit_is_set(GPCONF, GPCONF_FAL_bp)) SYS::reset_enter();
    3982:	f7 9b       	sbis	0x1e, 7	; 30
    3984:	97 c2       	rjmp	.+1326   	; 0x3eb4 <main+0xa1a>
reset_enter():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:380
  /*
   * Executed when SW0 is detected as being pressed.
   * May be called multiple times due to chattering.
   */
  void reset_enter (void) {
    if (bit_is_clear(GPCONF, GPCONF_HLD_bp)) {
    3986:	f5 99       	sbic	0x1e, 5	; 30
    3988:	2c c0       	rjmp	.+88     	; 0x39e2 <main+0x548>
LED_TCB1():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:286
      _led_mode = 1;
    }
  }

  void LED_TCB1 (uint8_t _mode, uint16_t _ccmp) {
    if (_led_mode != _mode) {
    398a:	80 91 ab 60 	lds	r24, 0x60AB	; 0x8060ab <_led_mode>
    398e:	83 30       	cpi	r24, 0x03	; 3
    3990:	81 f0       	breq	.+32     	; 0x39b2 <main+0x518>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:287
      TCA0_SPLIT_CTRLA = 0;
    3992:	10 92 00 0a 	sts	0x0A00, r1	; 0x800a00 <__TEXT_REGION_LENGTH__+0x7f0a00>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:288
      TCB1_CNTL = 0;
    3996:	10 92 1a 0b 	sts	0x0B1A, r1	; 0x800b1a <__TEXT_REGION_LENGTH__+0x7f0b1a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:289
      TCB1_CCMP = _ccmp;
    399a:	89 ea       	ldi	r24, 0xA9	; 169
    399c:	95 e5       	ldi	r25, 0x55	; 85
    399e:	80 93 1c 0b 	sts	0x0B1C, r24	; 0x800b1c <__TEXT_REGION_LENGTH__+0x7f0b1c>
    39a2:	90 93 1d 0b 	sts	0x0B1D, r25	; 0x800b1d <__TEXT_REGION_LENGTH__+0x7f0b1d>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:290
      TCB1_CTRLA = TCB_ENABLE_bm | TCB_CLKSEL_EVENT_gc;
    39a6:	8f e0       	ldi	r24, 0x0F	; 15
    39a8:	80 93 10 0b 	sts	0x0B10, r24	; 0x800b10 <__TEXT_REGION_LENGTH__+0x7f0b10>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:291
      _led_mode = _mode;
    39ac:	83 e0       	ldi	r24, 0x03	; 3
    39ae:	80 93 ab 60 	sts	0x60AB, r24	; 0x8060ab <_led_mode>
reset_enter():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:382
   * May be called multiple times due to chattering.
   */
  void reset_enter (void) {
    if (bit_is_clear(GPCONF, GPCONF_HLD_bp)) {
      LED_Blink();
      pinLogicPush(PIN_PGM_TRST);
    39b2:	01 9a       	sbi	0x00, 1	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:388
      /*
      * Puts a tinyAVR-0 which does not have a reset pad into reset state.
      * This applies to all chips which have an enabled UPDI pad.
      * Does not affect chips with an active reset pad or TPI/PDI type chips.
      */
      send_bitmap(_updi_bitmap_reset, sizeof(_updi_bitmap_reset) * 8);
    39b4:	8e e2       	ldi	r24, 0x2E	; 46
    39b6:	90 e6       	ldi	r25, 0x60	; 96
    39b8:	0e 94 23 05 	call	0xa46	; 0xa46 <SYS::send_bitmap(unsigned char const*, unsigned int) [clone .constprop.12]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:389
      D1PRINTF("<RST:IN>\r\n");
    39bc:	8d e8       	ldi	r24, 0x8D	; 141
    39be:	92 e0       	ldi	r25, 0x02	; 2
    39c0:	9f 93       	push	r25
    39c2:	8f 93       	push	r24
    39c4:	1f 93       	push	r17
    39c6:	0f 93       	push	r16
    39c8:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:390
      DFLUSH();
    39cc:	80 91 b5 60 	lds	r24, 0x60B5	; 0x8060b5 <Serial1C+0x2>
    39d0:	90 91 b6 60 	lds	r25, 0x60B6	; 0x8060b6 <Serial1C+0x3>
    39d4:	0e 94 c1 05 	call	0xb82	; 0xb82 <UsartBaseClass::flush() [clone .isra.0] [clone .lto_priv.18]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:391
      bit_set(GPCONF, GPCONF_HLD_bp);
    39d8:	f5 9a       	sbi	0x1e, 5	; 30
    39da:	0f 90       	pop	r0
    39dc:	0f 90       	pop	r0
    39de:	0f 90       	pop	r0
    39e0:	0f 90       	pop	r0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:393
    }
    bit_clear(GPCONF, GPCONF_FAL_bp);
    39e2:	f7 98       	cbi	0x1e, 7	; 30
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/main.cpp:135
      else if (bit_is_set(GPCONF, GPCONF_RIS_bp)) SYS::reset_leave();
    }

    /* If the USB port is not open, go back to the loop beginning. */
    if (bit_is_clear(GPCONF, GPCONF_USB_bp)) continue;
    39e4:	f0 9b       	sbis	0x1e, 0	; 30
    39e6:	8b ce       	rjmp	.-746    	; 0x36fe <main+0x264>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/main.cpp:145
    /* character arrives every 400 clocks on a 20MHz reference. */
    /* So we avoid using interrupts here and use polling to gain speed. */
  #if defined(CONFIG_VCP_9BIT_SUPPORT)
    if (bit_is_set(GPCONF, GPCONF_VCP_bp)) usart_transmitter();
  #else
    if (bit_is_set(GPCONF, GPCONF_VCP_bp)) USB::vcp_transceiver();
    39e8:	f1 9b       	sbis	0x1e, 1	; 30
    39ea:	b7 c2       	rjmp	.+1390   	; 0x3f5a <main+0xac0>
vcp_transceiver():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:479
    if (bit_is_clear(GPCONF, GPCONF_BRK_bp)
  #if defined(CONFIG_VCP_CTS_ENABLE)
     && !digitalReadMacro(PIN_VCP_CTS)
  #endif
     && bit_is_set(USART0_STATUS, USART_DREIF_bp)
     && read_available()) {
    39ec:	f3 99       	sbic	0x1e, 3	; 30
    39ee:	14 c0       	rjmp	.+40     	; 0x3a18 <main+0x57e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:478
  void vcp_transceiver (void) {
    if (bit_is_clear(GPCONF, GPCONF_BRK_bp)
  #if defined(CONFIG_VCP_CTS_ENABLE)
     && !digitalReadMacro(PIN_VCP_CTS)
  #endif
     && bit_is_set(USART0_STATUS, USART_DREIF_bp)
    39f0:	80 91 04 08 	lds	r24, 0x0804	; 0x800804 <__TEXT_REGION_LENGTH__+0x7f0804>
    39f4:	85 ff       	sbrs	r24, 5
    39f6:	10 c0       	rjmp	.+32     	; 0x3a18 <main+0x57e>
read_available():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:435
    return _c;
  }

  bool read_available (void) {
    uint8_t _s = 0;
    if (bit_is_set(EP_CDO.STATUS, USB_BUSNAK_bp) && bit_is_set(GPCONF, GPCONF_VCP_bp)) {
    39f8:	80 91 b0 64 	lds	r24, 0x64B0	; 0x8064b0 <EP_TABLE+0x38>
    39fc:	81 ff       	sbrs	r24, 1
    39fe:	0c c0       	rjmp	.+24     	; 0x3a18 <main+0x57e>
    3a00:	f1 9b       	sbis	0x1e, 1	; 30
    3a02:	0a c0       	rjmp	.+20     	; 0x3a18 <main+0x57e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:436
      _s = EP_CDO.CNT - _recv_count;
    3a04:	20 91 b2 64 	lds	r18, 0x64B2	; 0x8064b2 <EP_TABLE+0x3a>
    3a08:	30 91 b3 64 	lds	r19, 0x64B3	; 0x8064b3 <EP_TABLE+0x3b>
    3a0c:	80 91 74 64 	lds	r24, 0x6474	; 0x806474 <_recv_count>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:437
      if (_s == 0) ep_cdo_listen();
    3a10:	82 13       	cpse	r24, r18
    3a12:	84 c2       	rjmp	.+1288   	; 0x3f1c <main+0xa82>
    3a14:	0e 94 64 05 	call	0xac8	; 0xac8 <USB::ep_cdo_listen()>
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/main.cpp:150
  #endif
    else USB::read_drop();

    /*** If the break value is between 1 and 65534, it will count down. ***/
    if (bit_is_set(GPCONF, GPCONF_BRK_bp)) USB::cci_break_count();
    3a18:	f3 9b       	sbis	0x1e, 3	; 30
    3a1a:	28 c0       	rjmp	.+80     	; 0x3a6c <main+0x5d2>
cci_break_count():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:374
    bit_clear(GPCONF, GPCONF_BRK_bp);
  }

  void cci_break_count (void) {
    /* If the break value is between 1 and 65534, it will count down. */
    if ((_send_break + 1) > 1) {
    3a1c:	80 91 76 64 	lds	r24, 0x6476	; 0x806476 <_send_break>
    3a20:	90 91 77 64 	lds	r25, 0x6477	; 0x806477 <_send_break+0x1>
    3a24:	9c 01       	movw	r18, r24
    3a26:	2f 5f       	subi	r18, 0xFF	; 255
    3a28:	3f 4f       	sbci	r19, 0xFF	; 255
    3a2a:	22 30       	cpi	r18, 0x02	; 2
    3a2c:	31 05       	cpc	r19, r1
    3a2e:	f0 f0       	brcs	.+60     	; 0x3a6c <main+0x5d2>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:375
      if (_send_break > USB_CCI_INTERVAL) {
    3a30:	85 30       	cpi	r24, 0x05	; 5
    3a32:	91 05       	cpc	r25, r1
    3a34:	08 f4       	brcc	.+2      	; 0x3a38 <main+0x59e>
    3a36:	96 c2       	rjmp	.+1324   	; 0x3f64 <main+0xaca>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:376
        if (bit_is_set(EP_CCI.STATUS, USB_BUSNAK_bp)) ep_cci_listen();
    3a38:	20 91 a8 64 	lds	r18, 0x64A8	; 0x8064a8 <EP_TABLE+0x30>
    3a3c:	21 ff       	sbrs	r18, 1
    3a3e:	16 c0       	rjmp	.+44     	; 0x3a6c <main+0x5d2>
ep_cci_listen():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:297
    USB_EP_STATUS_CLR(USB_EP_DPO) = ~USB_TOGGLE_bm;
  }

  void ep_cci_listen (void) {
    if ((_send_break + 1) > 1 && _send_break > USB_CCI_INTERVAL) {
      _send_break -= USB_CCI_INTERVAL;
    3a40:	04 97       	sbiw	r24, 0x04	; 4
    3a42:	80 93 76 64 	sts	0x6476, r24	; 0x806476 <_send_break>
    3a46:	90 93 77 64 	sts	0x6477, r25	; 0x806477 <_send_break+0x1>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:299
    }
    EP_CCI.CNT = 10;
    3a4a:	8a e0       	ldi	r24, 0x0A	; 10
    3a4c:	90 e0       	ldi	r25, 0x00	; 0
    3a4e:	80 93 aa 64 	sts	0x64AA, r24	; 0x8064aa <EP_TABLE+0x32>
    3a52:	90 93 ab 64 	sts	0x64AB, r25	; 0x8064ab <EP_TABLE+0x33>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:300
    EP_CCI.MCNT = 0;
    3a56:	10 92 ae 64 	sts	0x64AE, r1	; 0x8064ae <EP_TABLE+0x36>
    3a5a:	10 92 af 64 	sts	0x64AF, r1	; 0x8064af <EP_TABLE+0x37>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:301
    loop_until_bit_is_clear(USB0_INTFLAGSB, USB_RMWBUSY_bp);
    3a5e:	80 91 0b 0c 	lds	r24, 0x0C0B	; 0x800c0b <__TEXT_REGION_LENGTH__+0x7f0c0b>
    3a62:	82 fd       	sbrc	r24, 2
    3a64:	fc cf       	rjmp	.-8      	; 0x3a5e <main+0x5c4>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:302
    USB_EP_STATUS_CLR(USB_EP_CCI) = ~USB_TOGGLE_bm;
    3a66:	8e ef       	ldi	r24, 0xFE	; 254
    3a68:	80 93 4a 0c 	sts	0x0C4A, r24	; 0x800c4a <__TEXT_REGION_LENGTH__+0x7f0c4a>
is_not_dap():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:261
  }

  // MARK: Endpoint

  bool is_ep_setup (void) { return bit_is_set(EP_REQ.STATUS, USB_EPSETUP_bp); }
  bool is_not_dap (void) { return bit_is_clear(EP_DPO.STATUS, USB_BUSNAK_bp); }
    3a6c:	80 91 a0 64 	lds	r24, 0x64A0	; 0x8064a0 <EP_TABLE+0x28>
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/main.cpp:153

    /*** If CMSIS-DAP is not received, return to the top. ***/
    if (USB::is_not_dap()) {
    3a70:	81 fd       	sbrc	r24, 1
    3a72:	7f c2       	rjmp	.+1278   	; 0x3f72 <main+0xad8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/main.cpp:155
      /* To force exit from a non-responsive terminal mode, press SW0. */
      if (bit_is_set(PGCONF, PGCONF_PROG_bp)) {
    3a74:	f9 9b       	sbis	0x1f, 1	; 31
    3a76:	43 ce       	rjmp	.-890    	; 0x36fe <main+0x264>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/main.cpp:156
        if (bit_is_set(GPCONF, GPCONF_RIS_bp)) _wdt = false;
    3a78:	f6 99       	sbic	0x1e, 6	; 30
    3a7a:	d1 2c       	mov	r13, r1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/main.cpp:157
        bit_clear(GPCONF, GPCONF_RIS_bp);
    3a7c:	f6 98       	cbi	0x1e, 6	; 30
    3a7e:	3f ce       	rjmp	.-898    	; 0x36fe <main+0x264>
get_descriptor():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:165
      uint32_t _vidpid = *((uint32_t*)EEPROM_START);
      if (_vidpid + 1) _CAPS32(_buffer[8])->dword = _vidpid;
      D1PRINTF(" VID:PID=%04X:%04X\r\n", _CAPS16(_buffer[8])->word, _CAPS16(_buffer[10])->word);
      return _size;
    }
    else if (_type == 0x02) {     /* CONFIGURATION */
    3a80:	92 30       	cpi	r25, 0x02	; 2
    3a82:	09 f4       	brne	.+2      	; 0x3a86 <main+0x5ec>
    3a84:	c3 c0       	rjmp	.+390    	; 0x3c0c <main+0x772>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:169
      _pgmem = (uint8_t*)&current_descriptor;
      _size = sizeof(current_descriptor);
    }
    else if (_type == 0x06) {     /* QUALIFIER */
    3a86:	96 30       	cpi	r25, 0x06	; 6
    3a88:	09 f4       	brne	.+2      	; 0x3a8c <main+0x5f2>
    3a8a:	cb c0       	rjmp	.+406    	; 0x3c22 <main+0x788>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:173
      _pgmem = (uint8_t*)&qualifier_descriptor;
      _size = sizeof(qualifier_descriptor);
    }
    else if (_type == 0x21) {     /* HID */
    3a8c:	91 32       	cpi	r25, 0x21	; 33
    3a8e:	09 f4       	brne	.+2      	; 0x3a92 <main+0x5f8>
    3a90:	ce c0       	rjmp	.+412    	; 0x3c2e <main+0x794>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:177
      _pgmem = (uint8_t*)&current_descriptor + 18;
      _size = 9;
    }
    else if (_type == 0x22) {     /* REPORT */
    3a92:	92 32       	cpi	r25, 0x22	; 34
    3a94:	09 f4       	brne	.+2      	; 0x3a98 <main+0x5fe>
    3a96:	d1 c0       	rjmp	.+418    	; 0x3c3a <main+0x7a0>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:181
      _pgmem = (uint8_t*)&report_descriptor;
      _size = sizeof(report_descriptor);
    }
    else if (_index == 0x0300) {  /* LANGUAGE */
    3a98:	81 15       	cp	r24, r1
    3a9a:	e3 e0       	ldi	r30, 0x03	; 3
    3a9c:	9e 07       	cpc	r25, r30
    3a9e:	79 f4       	brne	.+30     	; 0x3abe <main+0x624>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:183
      _size = 4;
      *_buffer++ = 4;
    3aa0:	84 e0       	ldi	r24, 0x04	; 4
    3aa2:	80 93 62 63 	sts	0x6362, r24	; 0x806362 <EP_MEM+0x8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:184
      *_buffer++ = 3;
    3aa6:	93 e0       	ldi	r25, 0x03	; 3
    3aa8:	90 93 63 63 	sts	0x6363, r25	; 0x806363 <EP_MEM+0x9>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:185
      *_buffer++ = 0x09;
    3aac:	99 e0       	ldi	r25, 0x09	; 9
    3aae:	90 93 64 63 	sts	0x6364, r25	; 0x806364 <EP_MEM+0xa>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:186
      *_buffer++ = 0x04;
    3ab2:	80 93 65 63 	sts	0x6365, r24	; 0x806365 <EP_MEM+0xb>
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:187
      return _size;
    3ab6:	64 e0       	ldi	r22, 0x04	; 4
    3ab8:	e6 2e       	mov	r14, r22
    3aba:	f1 2c       	mov	r15, r1
    3abc:	4c cf       	rjmp	.-360    	; 0x3956 <main+0x4bc>
get_descriptor():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:190
    }
    else {
      switch (_index) {
    3abe:	82 30       	cpi	r24, 0x02	; 2
    3ac0:	f3 e0       	ldi	r31, 0x03	; 3
    3ac2:	9f 07       	cpc	r25, r31
    3ac4:	51 f1       	breq	.+84     	; 0x3b1a <main+0x680>
    3ac6:	68 f4       	brcc	.+26     	; 0x3ae2 <main+0x648>
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:191
        case 0x0301: _pgmem = (uint8_t*)&vstring; _size = sizeof(vstring); break;
    3ac8:	f4 e3       	ldi	r31, 0x34	; 52
    3aca:	ef 2e       	mov	r14, r31
    3acc:	f1 2c       	mov	r15, r1
    3ace:	66 ee       	ldi	r22, 0xE6	; 230
    3ad0:	70 e0       	ldi	r23, 0x00	; 0
get_descriptor():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:190
      *_buffer++ = 0x09;
      *_buffer++ = 0x04;
      return _size;
    }
    else {
      switch (_index) {
    3ad2:	81 30       	cpi	r24, 0x01	; 1
    3ad4:	93 40       	sbci	r25, 0x03	; 3
    3ad6:	81 f0       	breq	.+32     	; 0x3af8 <main+0x65e>
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:154
    { /* FRAMENUM */ }
  };

  size_t get_descriptor (uint8_t* _buffer, uint16_t _index) {
    uint8_t* _pgmem = 0;
    size_t   _size = 0;
    3ad8:	f1 2c       	mov	r15, r1
    3ada:	e1 2c       	mov	r14, r1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:153
    },
    { /* FRAMENUM */ }
  };

  size_t get_descriptor (uint8_t* _buffer, uint16_t _index) {
    uint8_t* _pgmem = 0;
    3adc:	70 e0       	ldi	r23, 0x00	; 0
    3ade:	60 e0       	ldi	r22, 0x00	; 0
    3ae0:	0b c0       	rjmp	.+22     	; 0x3af8 <main+0x65e>
get_descriptor():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:190
      *_buffer++ = 0x09;
      *_buffer++ = 0x04;
      return _size;
    }
    else {
      switch (_index) {
    3ae2:	83 30       	cpi	r24, 0x03	; 3
    3ae4:	98 07       	cpc	r25, r24
    3ae6:	f9 f0       	breq	.+62     	; 0x3b26 <main+0x68c>
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:193
        case 0x0301: _pgmem = (uint8_t*)&vstring; _size = sizeof(vstring); break;
        case 0x0302: _pgmem = (uint8_t*)&mstring; _size = sizeof(mstring); break;
        case 0x0304: _pgmem = (uint8_t*)&istring; _size = sizeof(istring); break;
    3ae8:	48 e1       	ldi	r20, 0x18	; 24
    3aea:	e4 2e       	mov	r14, r20
    3aec:	f1 2c       	mov	r15, r1
    3aee:	68 e8       	ldi	r22, 0x88	; 136
    3af0:	70 e0       	ldi	r23, 0x00	; 0
get_descriptor():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:190
      *_buffer++ = 0x09;
      *_buffer++ = 0x04;
      return _size;
    }
    else {
      switch (_index) {
    3af2:	84 30       	cpi	r24, 0x04	; 4
    3af4:	93 40       	sbci	r25, 0x03	; 3
    3af6:	81 f7       	brne	.-32     	; 0x3ad8 <main+0x63e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:217
            *_buffer++ = btoh(_c     ); *_buffer++ = 0;
          }
          return 22;
        }
      }
      *_buffer++ = (uint8_t)_size;
    3af8:	e0 92 62 63 	sts	0x6362, r14	; 0x806362 <EP_MEM+0x8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:218
      *_buffer++ = 3;
    3afc:	83 e0       	ldi	r24, 0x03	; 3
    3afe:	80 93 63 63 	sts	0x6363, r24	; 0x806363 <EP_MEM+0x9>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:219
      if (_size) memcpy_P(_buffer, _pgmem, _size - 2);
    3b02:	a7 01       	movw	r20, r14
    3b04:	42 50       	subi	r20, 0x02	; 2
    3b06:	51 09       	sbc	r21, r1
    3b08:	84 e6       	ldi	r24, 0x64	; 100
    3b0a:	93 e6       	ldi	r25, 0x63	; 99
    3b0c:	e1 14       	cp	r14, r1
    3b0e:	f1 04       	cpc	r15, r1
    3b10:	09 f0       	breq	.+2      	; 0x3b14 <main+0x67a>
    3b12:	84 c0       	rjmp	.+264    	; 0x3c1c <main+0x782>
    3b14:	30 e0       	ldi	r19, 0x00	; 0
    3b16:	20 e0       	ldi	r18, 0x00	; 0
    3b18:	26 cf       	rjmp	.-436    	; 0x3966 <main+0x4cc>
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:192
      return _size;
    }
    else {
      switch (_index) {
        case 0x0301: _pgmem = (uint8_t*)&vstring; _size = sizeof(vstring); break;
        case 0x0302: _pgmem = (uint8_t*)&mstring; _size = sizeof(mstring); break;
    3b1a:	56 e4       	ldi	r21, 0x46	; 70
    3b1c:	e5 2e       	mov	r14, r21
    3b1e:	f1 2c       	mov	r15, r1
    3b20:	60 ea       	ldi	r22, 0xA0	; 160
    3b22:	70 e0       	ldi	r23, 0x00	; 0
    3b24:	e9 cf       	rjmp	.-46     	; 0x3af8 <main+0x65e>
get_descriptor():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:203
           *
           * If the 4 bytes from offset 4 of the EEPROM are anything other
           * than 0xFFFF:FFFF, use them, otherwise generate a 32-bit random
           * serial number using CRC32 from the factory information.
           */
          uint32_t _sn = ((User_EEP_t*)EEPROM_START)->dwSerialNumber;
    3b26:	40 91 04 14 	lds	r20, 0x1404	; 0x801404 <__TEXT_REGION_LENGTH__+0x7f1404>
    3b2a:	50 91 05 14 	lds	r21, 0x1405	; 0x801405 <__TEXT_REGION_LENGTH__+0x7f1405>
    3b2e:	60 91 06 14 	lds	r22, 0x1406	; 0x801406 <__TEXT_REGION_LENGTH__+0x7f1406>
    3b32:	70 91 07 14 	lds	r23, 0x1407	; 0x801407 <__TEXT_REGION_LENGTH__+0x7f1407>
    3b36:	49 83       	std	Y+1, r20	; 0x01
    3b38:	5a 83       	std	Y+2, r21	; 0x02
    3b3a:	6b 83       	std	Y+3, r22	; 0x03
    3b3c:	7c 83       	std	Y+4, r23	; 0x04
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:204
          if (!(_sn + 1)) _sn = crc32((uint8_t*)SIGNATURES_START, 32);
    3b3e:	4f 3f       	cpi	r20, 0xFF	; 255
    3b40:	ff ef       	ldi	r31, 0xFF	; 255
    3b42:	5f 07       	cpc	r21, r31
    3b44:	6f 07       	cpc	r22, r31
    3b46:	7f 07       	cpc	r23, r31
    3b48:	51 f5       	brne	.+84     	; 0x3b9e <main+0x704>
main():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/btools.cpp:210
  return _crc;
}

uint32_t crc32 (void* _data, size_t _len) {
  uint32_t _crc = ~0;
  uint8_t* _p = (uint8_t*)_data;
    3b4a:	e0 e8       	ldi	r30, 0x80	; 128
    3b4c:	f0 e1       	ldi	r31, 0x10	; 16
crc32():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/btools.cpp:211
  while (_len--) _crc = _crc32_update(_crc, *_p++);
    3b4e:	cf 01       	movw	r24, r30
    3b50:	01 96       	adiw	r24, 0x01	; 1
_crc32_update():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/btools.cpp:201
}

/* x32 + x26 + x23 + x22 + x16 + x12 + x11 + x10 + x8 + x7 + x5 + x4 + x2 + x + 1 */
/* (0xEDB88320 rev) init -1 */
uint32_t _crc32_update (uint32_t _crc, uint8_t _data) {
  _crc ^= _data;
    3b52:	20 81       	ld	r18, Z
    3b54:	42 27       	eor	r20, r18
    3b56:	28 e0       	ldi	r18, 0x08	; 8
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/btools.cpp:203
  for (uint8_t j = 0; j < 8; j++) {
    _crc = (_crc >> 1) ^ (0xEDB88320UL & -(_crc & 1));
    3b58:	1a 01       	movw	r2, r20
    3b5a:	2b 01       	movw	r4, r22
    3b5c:	56 94       	lsr	r5
    3b5e:	47 94       	ror	r4
    3b60:	37 94       	ror	r3
    3b62:	27 94       	ror	r2
    3b64:	41 70       	andi	r20, 0x01	; 1
    3b66:	55 27       	eor	r21, r21
    3b68:	66 27       	eor	r22, r22
    3b6a:	77 27       	eor	r23, r23
    3b6c:	70 95       	com	r23
    3b6e:	60 95       	com	r22
    3b70:	50 95       	com	r21
    3b72:	41 95       	neg	r20
    3b74:	5f 4f       	sbci	r21, 0xFF	; 255
    3b76:	6f 4f       	sbci	r22, 0xFF	; 255
    3b78:	7f 4f       	sbci	r23, 0xFF	; 255
    3b7a:	40 72       	andi	r20, 0x20	; 32
    3b7c:	53 78       	andi	r21, 0x83	; 131
    3b7e:	68 7b       	andi	r22, 0xB8	; 184
    3b80:	7d 7e       	andi	r23, 0xED	; 237
    3b82:	42 25       	eor	r20, r2
    3b84:	53 25       	eor	r21, r3
    3b86:	64 25       	eor	r22, r4
    3b88:	75 25       	eor	r23, r5
    3b8a:	21 50       	subi	r18, 0x01	; 1
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/btools.cpp:202

/* x32 + x26 + x23 + x22 + x16 + x12 + x11 + x10 + x8 + x7 + x5 + x4 + x2 + x + 1 */
/* (0xEDB88320 rev) init -1 */
uint32_t _crc32_update (uint32_t _crc, uint8_t _data) {
  _crc ^= _data;
  for (uint8_t j = 0; j < 8; j++) {
    3b8c:	29 f7       	brne	.-54     	; 0x3b58 <main+0x6be>
    3b8e:	fc 01       	movw	r30, r24
crc32():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/btools.cpp:211
}

uint32_t crc32 (void* _data, size_t _len) {
  uint32_t _crc = ~0;
  uint8_t* _p = (uint8_t*)_data;
  while (_len--) _crc = _crc32_update(_crc, *_p++);
    3b90:	80 3a       	cpi	r24, 0xA0	; 160
    3b92:	90 41       	sbci	r25, 0x10	; 16
    3b94:	e1 f6       	brne	.-72     	; 0x3b4e <main+0x6b4>
get_descriptor():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:204
    3b96:	49 83       	std	Y+1, r20	; 0x01
    3b98:	5a 83       	std	Y+2, r21	; 0x02
    3b9a:	6b 83       	std	Y+3, r22	; 0x03
    3b9c:	7c 83       	std	Y+4, r23	; 0x04
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:206
          uint8_t* _p = (uint8_t*)&_sn;
          *_buffer++ = 22;  *_buffer++ = 3;
    3b9e:	86 e1       	ldi	r24, 0x16	; 22
    3ba0:	80 93 62 63 	sts	0x6362, r24	; 0x806362 <EP_MEM+0x8>
    3ba4:	83 e0       	ldi	r24, 0x03	; 3
    3ba6:	80 93 63 63 	sts	0x6363, r24	; 0x806363 <EP_MEM+0x9>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:207
          *_buffer++ = 'M'; *_buffer++ = 0;
    3baa:	8d e4       	ldi	r24, 0x4D	; 77
    3bac:	80 93 64 63 	sts	0x6364, r24	; 0x806364 <EP_MEM+0xa>
    3bb0:	10 92 65 63 	sts	0x6365, r1	; 0x806365 <EP_MEM+0xb>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:208
          *_buffer++ = 'X'; *_buffer++ = 0;
    3bb4:	88 e5       	ldi	r24, 0x58	; 88
    3bb6:	80 93 66 63 	sts	0x6366, r24	; 0x806366 <EP_MEM+0xc>
    3bba:	10 92 67 63 	sts	0x6367, r1	; 0x806367 <EP_MEM+0xd>
    3bbe:	e8 e6       	ldi	r30, 0x68	; 104
    3bc0:	f3 e6       	ldi	r31, 0x63	; 99
    3bc2:	de 01       	movw	r26, r28
    3bc4:	11 96       	adiw	r26, 0x01	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:210
          for (uint8_t _i = 0; _i < 4; _i++) {
            uint8_t _c = *_p++;
    3bc6:	8d 91       	ld	r24, X+
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:211
            *_buffer++ = btoh(_c >> 4); *_buffer++ = 0;
    3bc8:	28 2f       	mov	r18, r24
    3bca:	30 e0       	ldi	r19, 0x00	; 0
    3bcc:	94 e0       	ldi	r25, 0x04	; 4
    3bce:	35 95       	asr	r19
    3bd0:	27 95       	ror	r18
    3bd2:	9a 95       	dec	r25
    3bd4:	e1 f7       	brne	.-8      	; 0x3bce <main+0x734>
btoh():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/btools.cpp:69
    _p++; _r--;
  }
}

char btoh (uint8_t _x) {
  _x = (_x & 15) + '0';
    3bd6:	90 e3       	ldi	r25, 0x30	; 48
    3bd8:	92 0f       	add	r25, r18
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/btools.cpp:70
  if (_x > '9') _x += 7;
    3bda:	9a 33       	cpi	r25, 0x3A	; 58
    3bdc:	10 f0       	brcs	.+4      	; 0x3be2 <main+0x748>
    3bde:	97 e3       	ldi	r25, 0x37	; 55
    3be0:	92 0f       	add	r25, r18
get_descriptor():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:211
    3be2:	90 83       	st	Z, r25
    3be4:	11 82       	std	Z+1, r1	; 0x01
btoh():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/btools.cpp:69
    _p++; _r--;
  }
}

char btoh (uint8_t _x) {
  _x = (_x & 15) + '0';
    3be6:	8f 70       	andi	r24, 0x0F	; 15
    3be8:	90 e3       	ldi	r25, 0x30	; 48
    3bea:	98 0f       	add	r25, r24
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/btools.cpp:70
  if (_x > '9') _x += 7;
    3bec:	9a 33       	cpi	r25, 0x3A	; 58
    3bee:	10 f0       	brcs	.+4      	; 0x3bf4 <main+0x75a>
    3bf0:	97 e3       	ldi	r25, 0x37	; 55
    3bf2:	98 0f       	add	r25, r24
get_descriptor():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:212
            *_buffer++ = btoh(_c     ); *_buffer++ = 0;
    3bf4:	92 83       	std	Z+2, r25	; 0x02
    3bf6:	13 82       	std	Z+3, r1	; 0x03
    3bf8:	34 96       	adiw	r30, 0x04	; 4
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:209
          if (!(_sn + 1)) _sn = crc32((uint8_t*)SIGNATURES_START, 32);
          uint8_t* _p = (uint8_t*)&_sn;
          *_buffer++ = 22;  *_buffer++ = 3;
          *_buffer++ = 'M'; *_buffer++ = 0;
          *_buffer++ = 'X'; *_buffer++ = 0;
          for (uint8_t _i = 0; _i < 4; _i++) {
    3bfa:	8d 81       	ldd	r24, Y+5	; 0x05
    3bfc:	9e 81       	ldd	r25, Y+6	; 0x06
    3bfe:	8a 17       	cp	r24, r26
    3c00:	9b 07       	cpc	r25, r27
    3c02:	09 f7       	brne	.-62     	; 0x3bc6 <main+0x72c>
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:214
            uint8_t _c = *_p++;
            *_buffer++ = btoh(_c >> 4); *_buffer++ = 0;
            *_buffer++ = btoh(_c     ); *_buffer++ = 0;
          }
          return 22;
    3c04:	a6 e1       	ldi	r26, 0x16	; 22
    3c06:	ea 2e       	mov	r14, r26
    3c08:	f1 2c       	mov	r15, r1
    3c0a:	a5 ce       	rjmp	.-694    	; 0x3956 <main+0x4bc>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:167
      D1PRINTF(" VID:PID=%04X:%04X\r\n", _CAPS16(_buffer[8])->word, _CAPS16(_buffer[10])->word);
      return _size;
    }
    else if (_type == 0x02) {     /* CONFIGURATION */
      _pgmem = (uint8_t*)&current_descriptor;
      _size = sizeof(current_descriptor);
    3c0c:	eb e6       	ldi	r30, 0x6B	; 107
    3c0e:	ee 2e       	mov	r14, r30
    3c10:	f1 2c       	mov	r15, r1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:166
      if (_vidpid + 1) _CAPS32(_buffer[8])->dword = _vidpid;
      D1PRINTF(" VID:PID=%04X:%04X\r\n", _CAPS16(_buffer[8])->word, _CAPS16(_buffer[10])->word);
      return _size;
    }
    else if (_type == 0x02) {     /* CONFIGURATION */
      _pgmem = (uint8_t*)&current_descriptor;
    3c12:	6d e3       	ldi	r22, 0x3D	; 61
    3c14:	71 e0       	ldi	r23, 0x01	; 1
get_descriptor():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:222
      *_buffer++ = (uint8_t)_size;
      *_buffer++ = 3;
      if (_size) memcpy_P(_buffer, _pgmem, _size - 2);
      return _size;
    }
    if (_size) memcpy_P(_buffer, _pgmem, _size);
    3c16:	a7 01       	movw	r20, r14
    3c18:	82 e6       	ldi	r24, 0x62	; 98
    3c1a:	93 e6       	ldi	r25, 0x63	; 99
    3c1c:	0e 94 11 27 	call	0x4e22	; 0x4e22 <memcpy_P>
    3c20:	9a ce       	rjmp	.-716    	; 0x3956 <main+0x4bc>
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:171
      _pgmem = (uint8_t*)&current_descriptor;
      _size = sizeof(current_descriptor);
    }
    else if (_type == 0x06) {     /* QUALIFIER */
      _pgmem = (uint8_t*)&qualifier_descriptor;
      _size = sizeof(qualifier_descriptor);
    3c22:	7a e0       	ldi	r23, 0x0A	; 10
    3c24:	e7 2e       	mov	r14, r23
    3c26:	f1 2c       	mov	r15, r1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:170
    else if (_type == 0x02) {     /* CONFIGURATION */
      _pgmem = (uint8_t*)&current_descriptor;
      _size = sizeof(current_descriptor);
    }
    else if (_type == 0x06) {     /* QUALIFIER */
      _pgmem = (uint8_t*)&qualifier_descriptor;
    3c28:	68 ea       	ldi	r22, 0xA8	; 168
    3c2a:	71 e0       	ldi	r23, 0x01	; 1
    3c2c:	f4 cf       	rjmp	.-24     	; 0x3c16 <main+0x77c>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:175
      _size = sizeof(qualifier_descriptor);
    }
    else if (_type == 0x21) {     /* HID */
      _pgmem = (uint8_t*)&current_descriptor + 18;
      _size = 9;
    3c2e:	69 e0       	ldi	r22, 0x09	; 9
    3c30:	e6 2e       	mov	r14, r22
    3c32:	f1 2c       	mov	r15, r1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:174
    else if (_type == 0x06) {     /* QUALIFIER */
      _pgmem = (uint8_t*)&qualifier_descriptor;
      _size = sizeof(qualifier_descriptor);
    }
    else if (_type == 0x21) {     /* HID */
      _pgmem = (uint8_t*)&current_descriptor + 18;
    3c34:	6f e4       	ldi	r22, 0x4F	; 79
    3c36:	71 e0       	ldi	r23, 0x01	; 1
    3c38:	ee cf       	rjmp	.-36     	; 0x3c16 <main+0x77c>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:179
      _size = 9;
    }
    else if (_type == 0x22) {     /* REPORT */
      _pgmem = (uint8_t*)&report_descriptor;
      _size = sizeof(report_descriptor);
    3c3a:	53 e2       	ldi	r21, 0x23	; 35
    3c3c:	e5 2e       	mov	r14, r21
    3c3e:	f1 2c       	mov	r15, r1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:178
    else if (_type == 0x21) {     /* HID */
      _pgmem = (uint8_t*)&current_descriptor + 18;
      _size = 9;
    }
    else if (_type == 0x22) {     /* REPORT */
      _pgmem = (uint8_t*)&report_descriptor;
    3c40:	6a e1       	ldi	r22, 0x1A	; 26
    3c42:	71 e0       	ldi	r23, 0x01	; 1
    3c44:	e8 cf       	rjmp	.-48     	; 0x3c16 <main+0x77c>
request_standard():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:541
      size_t _length = EP_MEM.req_data.wLength;
      size_t _size = get_descriptor((uint8_t*)&EP_MEM.res_data, EP_MEM.req_data.wValue);
      EP_RES.CNT = (_size > _length) ? _length : _size;
      _listen = !!_size;
    }
    else if (bRequest == 0x08) {  /* GET_CONFIGURATION */
    3c46:	88 30       	cpi	r24, 0x08	; 8
    3c48:	c9 f4       	brne	.+50     	; 0x3c7c <main+0x7e2>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:542
      EP_MEM.res_data[0] = _set_config;
    3c4a:	80 91 73 64 	lds	r24, 0x6473	; 0x806473 <_set_config>
    3c4e:	80 93 62 63 	sts	0x6362, r24	; 0x806362 <EP_MEM+0x8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:543
      D1PRINTF("<GC:%02X>\r\n", _set_config);
    3c52:	1f 92       	push	r1
    3c54:	8f 93       	push	r24
    3c56:	8a ef       	ldi	r24, 0xFA	; 250
    3c58:	91 e0       	ldi	r25, 0x01	; 1
    3c5a:	9f 93       	push	r25
    3c5c:	8f 93       	push	r24
    3c5e:	1f 93       	push	r17
    3c60:	0f 93       	push	r16
    3c62:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:544
      EP_RES.CNT = 1;
    3c66:	60 92 8a 64 	sts	0x648A, r6	; 0x80648a <EP_TABLE+0x12>
    3c6a:	70 92 8b 64 	sts	0x648B, r7	; 0x80648b <EP_TABLE+0x13>
    3c6e:	0f 90       	pop	r0
    3c70:	0f 90       	pop	r0
    3c72:	0f 90       	pop	r0
    3c74:	0f 90       	pop	r0
    3c76:	0f 90       	pop	r0
    3c78:	0f 90       	pop	r0
    3c7a:	be cd       	rjmp	.-1156   	; 0x37f8 <main+0x35e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:546
    }
    else if (bRequest == 0x09) {  /* SET_CONFIGURATION */
    3c7c:	89 30       	cpi	r24, 0x09	; 9
    3c7e:	c1 f4       	brne	.+48     	; 0x3cb0 <main+0x816>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:548
      /* Once the USB connection is fully initiated, it will go through here. */
      _set_config = (uint8_t)EP_MEM.req_data.wValue;
    3c80:	80 91 5c 63 	lds	r24, 0x635C	; 0x80635c <EP_MEM+0x2>
    3c84:	80 93 73 64 	sts	0x6473, r24	; 0x806473 <_set_config>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:549
      bit_set(GPCONF, GPCONF_USB_bp);
    3c88:	f0 9a       	sbi	0x1e, 0	; 30
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:550
      SYS::LED_HeartBeat();
    3c8a:	0e 94 30 09 	call	0x1260	; 0x1260 <SYS::LED_HeartBeat()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:551
      D1PRINTF("<SC:%02X>\r\n", _set_config);
    3c8e:	80 91 73 64 	lds	r24, 0x6473	; 0x806473 <_set_config>
    3c92:	1f 92       	push	r1
    3c94:	8f 93       	push	r24
    3c96:	ee ee       	ldi	r30, 0xEE	; 238
    3c98:	f1 e0       	ldi	r31, 0x01	; 1
    3c9a:	ff 93       	push	r31
    3c9c:	ef 93       	push	r30
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:562
      EP_MEM.res_data[0] = 0;
      EP_RES.CNT = 1;
    }
    else if (bRequest == 0x0B) {  /* SET_INTREFACE */
      /* It seems not to be used. */
      D1PRINTF("<GI:%02X>\r\n", EP_MEM.req_data.wValue);
    3c9e:	1f 93       	push	r17
    3ca0:	0f 93       	push	r16
    3ca2:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:563
      EP_RES.CNT = 0;
    3ca6:	10 92 8a 64 	sts	0x648A, r1	; 0x80648a <EP_TABLE+0x12>
    3caa:	10 92 8b 64 	sts	0x648B, r1	; 0x80648b <EP_TABLE+0x13>
    3cae:	df cf       	rjmp	.-66     	; 0x3c6e <main+0x7d4>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:554
      bit_set(GPCONF, GPCONF_USB_bp);
      SYS::LED_HeartBeat();
      D1PRINTF("<SC:%02X>\r\n", _set_config);
      EP_RES.CNT = 0;
    }
    else if (bRequest == 0x0A) {  /* GET_INTREFACE */
    3cb0:	8a 30       	cpi	r24, 0x0A	; 10
    3cb2:	99 f4       	brne	.+38     	; 0x3cda <main+0x840>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:556
      /* It seems not to be used. */
      D1PRINTF("<SI:0>\r\n");
    3cb4:	85 ee       	ldi	r24, 0xE5	; 229
    3cb6:	91 e0       	ldi	r25, 0x01	; 1
    3cb8:	9f 93       	push	r25
    3cba:	8f 93       	push	r24
    3cbc:	1f 93       	push	r17
    3cbe:	0f 93       	push	r16
    3cc0:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:557
      EP_MEM.res_data[0] = 0;
    3cc4:	10 92 62 63 	sts	0x6362, r1	; 0x806362 <EP_MEM+0x8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:558
      EP_RES.CNT = 1;
    3cc8:	60 92 8a 64 	sts	0x648A, r6	; 0x80648a <EP_TABLE+0x12>
    3ccc:	70 92 8b 64 	sts	0x648B, r7	; 0x80648b <EP_TABLE+0x13>
request_class():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:608
        EP_MEM.res_encoding.dwDTERate = 9600UL;
        EP_MEM.res_encoding.bDataBits = 8;
      }
      D1PRINTF(" GLE=");
      D1PRINTHEX(&EP_MEM.res_encoding, sizeof(LineEncoding_t));
      EP_RES.CNT = sizeof(LineEncoding_t);
    3cd0:	0f 90       	pop	r0
    3cd2:	0f 90       	pop	r0
    3cd4:	0f 90       	pop	r0
    3cd6:	0f 90       	pop	r0
    3cd8:	8f cd       	rjmp	.-1250   	; 0x37f8 <main+0x35e>
request_standard():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:560
      /* It seems not to be used. */
      D1PRINTF("<SI:0>\r\n");
      EP_MEM.res_data[0] = 0;
      EP_RES.CNT = 1;
    }
    else if (bRequest == 0x0B) {  /* SET_INTREFACE */
    3cda:	8b 30       	cpi	r24, 0x0B	; 11
    3cdc:	09 f0       	breq	.+2      	; 0x3ce0 <main+0x846>
    3cde:	4a ce       	rjmp	.-876    	; 0x3974 <main+0x4da>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:562
      /* It seems not to be used. */
      D1PRINTF("<GI:%02X>\r\n", EP_MEM.req_data.wValue);
    3ce0:	80 91 5d 63 	lds	r24, 0x635D	; 0x80635d <EP_MEM+0x3>
    3ce4:	8f 93       	push	r24
    3ce6:	80 91 5c 63 	lds	r24, 0x635C	; 0x80635c <EP_MEM+0x2>
    3cea:	8f 93       	push	r24
    3cec:	29 ed       	ldi	r18, 0xD9	; 217
    3cee:	31 e0       	ldi	r19, 0x01	; 1
    3cf0:	3f 93       	push	r19
    3cf2:	2f 93       	push	r18
    3cf4:	d4 cf       	rjmp	.-88     	; 0x3c9e <main+0x804>
handling_control_transactions():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:646
    if (bit_is_clear(bmRequestType, 7)) ep_req_listen();
    bmRequestType &= (3 << 5);
    if (bmRequestType == (0 << 5)) {
      _listen = request_standard();
    }
    else if (bmRequestType == (1 << 5)) {
    3cf6:	80 32       	cpi	r24, 0x20	; 32
    3cf8:	09 f0       	breq	.+2      	; 0x3cfc <main+0x862>
    3cfa:	3c ce       	rjmp	.-904    	; 0x3974 <main+0x4da>
request_class():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:574
  }

  /*** CDC-ACM request processing. ***/
  bool request_class (void) {
    bool _listen = true;
    uint8_t bRequest = EP_MEM.req_data.bRequest;
    3cfc:	80 91 5b 63 	lds	r24, 0x635B	; 0x80635b <EP_MEM+0x1>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:575
    if (bRequest == 0x0A) {       /* SET_IDLE */
    3d00:	8a 30       	cpi	r24, 0x0A	; 10
    3d02:	59 f4       	brne	.+22     	; 0x3d1a <main+0x880>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:578
      /* This is a HID Compliance Class Request. */
      /* It is called but not used. */
      D1PRINTF(" IDL=%02X\r\n", (uint8_t)EP_MEM.req_data.wValue);
    3d04:	80 91 5c 63 	lds	r24, 0x635C	; 0x80635c <EP_MEM+0x2>
    3d08:	90 91 5d 63 	lds	r25, 0x635D	; 0x80635d <EP_MEM+0x3>
    3d0c:	99 27       	eor	r25, r25
    3d0e:	9f 93       	push	r25
    3d10:	8f 93       	push	r24
    3d12:	89 e5       	ldi	r24, 0x59	; 89
    3d14:	92 e0       	ldi	r25, 0x02	; 2
    3d16:	9f 93       	push	r25
    3d18:	d6 cd       	rjmp	.-1108   	; 0x38c6 <main+0x42c>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:581
      EP_RES.CNT = 0;
    }
    else if (bRequest == 0x20) {  /* SET_LINE_ENCODING */
    3d1a:	80 32       	cpi	r24, 0x20	; 32
    3d1c:	e1 f5       	brne	.+120    	; 0x3d96 <main+0x8fc>
ep_req_pending():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:262

  // MARK: Endpoint

  bool is_ep_setup (void) { return bit_is_set(EP_REQ.STATUS, USB_EPSETUP_bp); }
  bool is_not_dap (void) { return bit_is_clear(EP_DPO.STATUS, USB_BUSNAK_bp); }
  void ep_req_pending (void) { loop_until_bit_is_set(EP_REQ.STATUS, USB_BUSNAK_bp); }
    3d1e:	80 91 80 64 	lds	r24, 0x6480	; 0x806480 <EP_TABLE+0x8>
    3d22:	81 ff       	sbrs	r24, 1
    3d24:	fc cf       	rjmp	.-8      	; 0x3d1e <main+0x884>
set_line_encoding():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:201
      SYS::LED_Flash();
  }

  void set_line_encoding (LineEncoding_t* _buff) {
    /* The USART will not change unless a different setting is given. */
    if (0 == memcmp(&_set_line_encoding, _buff, sizeof(LineEncoding_t))) return;
    3d26:	47 e0       	ldi	r20, 0x07	; 7
    3d28:	50 e0       	ldi	r21, 0x00	; 0
    3d2a:	62 e6       	ldi	r22, 0x62	; 98
    3d2c:	73 e6       	ldi	r23, 0x63	; 99
    3d2e:	8c ea       	ldi	r24, 0xAC	; 172
    3d30:	90 e6       	ldi	r25, 0x60	; 96
    3d32:	0e 94 27 2a 	call	0x544e	; 0x544e <memcmp>
    3d36:	89 2b       	or	r24, r25
    3d38:	91 f0       	breq	.+36     	; 0x3d5e <main+0x8c4>
read_drop():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:443
    }
    return _s != 0;
  }

  void read_drop (void) {
    if (bit_is_set(EP_CDO.STATUS, USB_BUSNAK_bp)) ep_cdo_listen();
    3d3a:	80 91 b0 64 	lds	r24, 0x64B0	; 0x8064b0 <EP_TABLE+0x38>
    3d3e:	81 fd       	sbrc	r24, 1
    3d40:	0e 94 64 05 	call	0xac8	; 0xac8 <USB::ep_cdo_listen()>
set_line_encoding():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:203
    USB::read_drop();
    USART::setup();
    3d44:	0e 94 75 0f 	call	0x1eea	; 0x1eea <USART::setup()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:204
    memcpy(&_set_line_encoding, _buff, sizeof(LineEncoding_t));
    3d48:	87 e0       	ldi	r24, 0x07	; 7
    3d4a:	e2 e6       	ldi	r30, 0x62	; 98
    3d4c:	f3 e6       	ldi	r31, 0x63	; 99
    3d4e:	ac ea       	ldi	r26, 0xAC	; 172
    3d50:	b0 e6       	ldi	r27, 0x60	; 96
    3d52:	01 90       	ld	r0, Z+
    3d54:	0d 92       	st	X+, r0
    3d56:	8a 95       	dec	r24
    3d58:	e1 f7       	brne	.-8      	; 0x3d52 <main+0x8b8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:205
    change_vcp();
    3d5a:	0e 94 3c 0c 	call	0x1878	; 0x1878 <USART::change_vcp()>
request_class():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:590
      /* In any case, this isn't a one-off thing. */
      /* If the same parameter settings persist,  */
      /* it's probably best to do nothing.        */
      ep_req_pending();
      USART::set_line_encoding(&EP_MEM.res_encoding);
      D1PRINTF(" SLE=");
    3d5e:	23 e5       	ldi	r18, 0x53	; 83
    3d60:	32 e0       	ldi	r19, 0x02	; 2
    3d62:	3f 93       	push	r19
    3d64:	2f 93       	push	r18
    3d66:	1f 93       	push	r17
    3d68:	0f 93       	push	r16
    3d6a:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:591
      D1PRINTHEX(&_set_line_encoding, sizeof(LineEncoding_t));
    3d6e:	67 e0       	ldi	r22, 0x07	; 7
    3d70:	70 e0       	ldi	r23, 0x00	; 0
    3d72:	8c ea       	ldi	r24, 0xAC	; 172
    3d74:	90 e6       	ldi	r25, 0x60	; 96
    3d76:	0e 94 be 0b 	call	0x177c	; 0x177c <Print::printHex(void const*, unsigned int, char, unsigned int, char const*) [clone .constprop.14]>
    3d7a:	0e 94 0c 0c 	call	0x1818	; 0x1818 <Print::ln()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:592
      bit_set(GPCONF, GPCONF_OPN_bp);
    3d7e:	f4 9a       	sbi	0x1e, 4	; 30
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:593
      _send_count = 0;
    3d80:	10 92 75 64 	sts	0x6475, r1	; 0x806475 <_send_count>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:594
      _recv_count = 0;
    3d84:	10 92 74 64 	sts	0x6474, r1	; 0x806474 <_recv_count>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:595
      _sof_count = 0;
    3d88:	10 92 72 64 	sts	0x6472, r1	; 0x806472 <_sof_count>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:596
      EP_RES.CNT = 0;
    3d8c:	10 92 8a 64 	sts	0x648A, r1	; 0x80648a <EP_TABLE+0x12>
    3d90:	10 92 8b 64 	sts	0x648B, r1	; 0x80648b <EP_TABLE+0x13>
    3d94:	9d cf       	rjmp	.-198    	; 0x3cd0 <main+0x836>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:598
    }
    else if (bRequest == 0x21) {  /* GET_LINE_ENCODING */
    3d96:	81 32       	cpi	r24, 0x21	; 33
    3d98:	b9 f5       	brne	.+110    	; 0x3e08 <main+0x96e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:599
      memcpy(&EP_MEM.res_encoding, &_set_line_encoding, sizeof(LineEncoding_t));
    3d9a:	87 e0       	ldi	r24, 0x07	; 7
    3d9c:	ec ea       	ldi	r30, 0xAC	; 172
    3d9e:	f0 e6       	ldi	r31, 0x60	; 96
    3da0:	a2 e6       	ldi	r26, 0x62	; 98
    3da2:	b3 e6       	ldi	r27, 0x63	; 99
    3da4:	01 90       	ld	r0, Z+
    3da6:	0d 92       	st	X+, r0
    3da8:	8a 95       	dec	r24
    3daa:	e1 f7       	brne	.-8      	; 0x3da4 <main+0x90a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:600
      if (EP_MEM.res_encoding.dwDTERate == 0) {
    3dac:	80 91 62 63 	lds	r24, 0x6362	; 0x806362 <EP_MEM+0x8>
    3db0:	90 91 63 63 	lds	r25, 0x6363	; 0x806363 <EP_MEM+0x9>
    3db4:	a0 91 64 63 	lds	r26, 0x6364	; 0x806364 <EP_MEM+0xa>
    3db8:	b0 91 65 63 	lds	r27, 0x6365	; 0x806365 <EP_MEM+0xb>
    3dbc:	89 2b       	or	r24, r25
    3dbe:	8a 2b       	or	r24, r26
    3dc0:	8b 2b       	or	r24, r27
    3dc2:	59 f4       	brne	.+22     	; 0x3dda <main+0x940>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:603
        /* Parameters that, if incorrectly accepted,           */
        /* would result in division by zero must be corrected. */
        EP_MEM.res_encoding.dwDTERate = 9600UL;
    3dc4:	80 92 62 63 	sts	0x6362, r8	; 0x806362 <EP_MEM+0x8>
    3dc8:	90 92 63 63 	sts	0x6363, r9	; 0x806363 <EP_MEM+0x9>
    3dcc:	a0 92 64 63 	sts	0x6364, r10	; 0x806364 <EP_MEM+0xa>
    3dd0:	b0 92 65 63 	sts	0x6365, r11	; 0x806365 <EP_MEM+0xb>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:604
        EP_MEM.res_encoding.bDataBits = 8;
    3dd4:	88 e0       	ldi	r24, 0x08	; 8
    3dd6:	80 93 68 63 	sts	0x6368, r24	; 0x806368 <EP_MEM+0xe>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:606
      }
      D1PRINTF(" GLE=");
    3dda:	8d e4       	ldi	r24, 0x4D	; 77
    3ddc:	92 e0       	ldi	r25, 0x02	; 2
    3dde:	9f 93       	push	r25
    3de0:	8f 93       	push	r24
    3de2:	1f 93       	push	r17
    3de4:	0f 93       	push	r16
    3de6:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:607
      D1PRINTHEX(&EP_MEM.res_encoding, sizeof(LineEncoding_t));
    3dea:	67 e0       	ldi	r22, 0x07	; 7
    3dec:	70 e0       	ldi	r23, 0x00	; 0
    3dee:	82 e6       	ldi	r24, 0x62	; 98
    3df0:	93 e6       	ldi	r25, 0x63	; 99
    3df2:	0e 94 be 0b 	call	0x177c	; 0x177c <Print::printHex(void const*, unsigned int, char, unsigned int, char const*) [clone .constprop.14]>
    3df6:	0e 94 0c 0c 	call	0x1818	; 0x1818 <Print::ln()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:608
      EP_RES.CNT = sizeof(LineEncoding_t);
    3dfa:	87 e0       	ldi	r24, 0x07	; 7
    3dfc:	90 e0       	ldi	r25, 0x00	; 0
    3dfe:	80 93 8a 64 	sts	0x648A, r24	; 0x80648a <EP_TABLE+0x12>
    3e02:	90 93 8b 64 	sts	0x648B, r25	; 0x80648b <EP_TABLE+0x13>
    3e06:	64 cf       	rjmp	.-312    	; 0x3cd0 <main+0x836>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:610
    }
    else if (bRequest == 0x22) {  /* SET_LINE_STATE */
    3e08:	82 32       	cpi	r24, 0x22	; 34
    3e0a:	11 f5       	brne	.+68     	; 0x3e50 <main+0x9b6>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:612
      /* This includes the DTR and RTS settings. */
      D1PRINTF(" SLS=%02X\r\n", (uint8_t)EP_MEM.req_data.wValue);
    3e0c:	80 91 5c 63 	lds	r24, 0x635C	; 0x80635c <EP_MEM+0x2>
    3e10:	90 91 5d 63 	lds	r25, 0x635D	; 0x80635d <EP_MEM+0x3>
    3e14:	99 27       	eor	r25, r25
    3e16:	9f 93       	push	r25
    3e18:	8f 93       	push	r24
    3e1a:	21 e4       	ldi	r18, 0x41	; 65
    3e1c:	32 e0       	ldi	r19, 0x02	; 2
    3e1e:	3f 93       	push	r19
    3e20:	2f 93       	push	r18
    3e22:	1f 93       	push	r17
    3e24:	0f 93       	push	r16
    3e26:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:613
      USART::set_line_state((uint8_t)EP_MEM.req_data.wValue);
    3e2a:	80 91 5c 63 	lds	r24, 0x635C	; 0x80635c <EP_MEM+0x2>
set_line_state():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:232
      digitalWriteMacro(PIN_VCP_RTS, HIGH);
  #endif

  #if defined(CONFIG_VCP_DTR_RESET)
    /* If DTR is set, the device will reboot assuming the host has opened the port. */
    if (!_set_line_state.bStateDTR && bit_is_set(_line_state, 0)) {
    3e2e:	90 91 aa 60 	lds	r25, 0x60AA	; 0x8060aa <__data_end>
    3e32:	0f 90       	pop	r0
    3e34:	0f 90       	pop	r0
    3e36:	0f 90       	pop	r0
    3e38:	0f 90       	pop	r0
    3e3a:	0f 90       	pop	r0
    3e3c:	0f 90       	pop	r0
    3e3e:	90 fd       	sbrc	r25, 0
    3e40:	04 c0       	rjmp	.+8      	; 0x3e4a <main+0x9b0>
    3e42:	80 ff       	sbrs	r24, 0
    3e44:	02 c0       	rjmp	.+4      	; 0x3e4a <main+0x9b0>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:233
      bit_set(GPCONF, GPCONF_FAL_bp);
    3e46:	f7 9a       	sbi	0x1e, 7	; 30
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:234
      bit_set(GPCONF, GPCONF_RIS_bp);
    3e48:	f6 9a       	sbi	0x1e, 6	; 30
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:238
    }
  #endif

    _set_line_state.bValue = _line_state;
    3e4a:	80 93 aa 60 	sts	0x60AA, r24	; 0x8060aa <__data_end>
    3e4e:	05 cd       	rjmp	.-1526   	; 0x385a <main+0x3c0>
request_class():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:616
      EP_RES.CNT = 0;
    }
    else if (bRequest == 0x23) {  /* SET_SEND_BREAK */
    3e50:	83 32       	cpi	r24, 0x23	; 35
    3e52:	09 f0       	breq	.+2      	; 0x3e56 <main+0x9bc>
    3e54:	8f cd       	rjmp	.-1250   	; 0x3974 <main+0x4da>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:619
      /* When the host application closes the port, it may send a BREAK=0. */
      /* Nothing else is used unless programmed by the application. */
      D1PRINTF(" SB=%04X\r\n", EP_MEM.req_data.wValue);
    3e56:	80 91 5d 63 	lds	r24, 0x635D	; 0x80635d <EP_MEM+0x3>
    3e5a:	8f 93       	push	r24
    3e5c:	80 91 5c 63 	lds	r24, 0x635C	; 0x80635c <EP_MEM+0x2>
    3e60:	8f 93       	push	r24
    3e62:	86 e3       	ldi	r24, 0x36	; 54
    3e64:	92 e0       	ldi	r25, 0x02	; 2
    3e66:	9f 93       	push	r25
    3e68:	8f 93       	push	r24
    3e6a:	1f 93       	push	r17
    3e6c:	0f 93       	push	r16
    3e6e:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:620
      _send_break = EP_MEM.req_data.wValue;
    3e72:	80 91 5c 63 	lds	r24, 0x635C	; 0x80635c <EP_MEM+0x2>
    3e76:	90 91 5d 63 	lds	r25, 0x635D	; 0x80635d <EP_MEM+0x3>
    3e7a:	80 93 76 64 	sts	0x6476, r24	; 0x806476 <_send_break>
    3e7e:	90 93 77 64 	sts	0x6477, r25	; 0x806477 <_send_break+0x1>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:621
      if (_send_break) break_on();
    3e82:	0f 90       	pop	r0
    3e84:	0f 90       	pop	r0
    3e86:	0f 90       	pop	r0
    3e88:	0f 90       	pop	r0
    3e8a:	0f 90       	pop	r0
    3e8c:	0f 90       	pop	r0
    3e8e:	89 2b       	or	r24, r25
    3e90:	71 f0       	breq	.+28     	; 0x3eae <main+0xa14>
break_on():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:350
    ep_dpo_listen();  /* continue transaction */
  }

  void break_on (void) {
    if (bit_is_set(GPCONF, GPCONF_VCP_bp)
     && bit_is_clear(GPCONF, GPCONF_BRK_bp)) {
    3e92:	f1 9b       	sbis	0x1e, 1	; 30
    3e94:	0a c0       	rjmp	.+20     	; 0x3eaa <main+0xa10>
    3e96:	f3 99       	sbic	0x1e, 3	; 30
    3e98:	08 c0       	rjmp	.+16     	; 0x3eaa <main+0xa10>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:352
      /* SET_SEND_BREAK is called when the port is closed successfully. */
      bit_clear(GPCONF, GPCONF_OPN_bp);
    3e9a:	f4 98       	cbi	0x1e, 4	; 30
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:353
      _sof_count = 0;
    3e9c:	10 92 72 64 	sts	0x6472, r1	; 0x806472 <_sof_count>
disable_vcp():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usart.cpp:73
    } while (--_delay);
  }

  /*** Stop the VCP and release the ports in use. ***/
  void disable_vcp (void) {
    if (USART0_CTRLB) {
    3ea0:	80 91 06 08 	lds	r24, 0x0806	; 0x800806 <__TEXT_REGION_LENGTH__+0x7f0806>
    3ea4:	81 11       	cpse	r24, r1
    3ea6:	0e 94 5e 0f 	call	0x1ebc	; 0x1ebc <USART::disable_vcp() [clone .part.1]>
break_on():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:360
  #ifdef CONFIG_VCP_TXD_ODM
      /* During Break, VCP-TxD is pulled LOW. */
      pinModeMacro(PIN_VCP_TXD, OUTPUT);
  #endif
    }
    bit_set(GPCONF, GPCONF_BRK_bp);
    3eaa:	f3 9a       	sbi	0x1e, 3	; 30
    3eac:	d6 cc       	rjmp	.-1620   	; 0x385a <main+0x3c0>
request_class():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:622
      /* When the host application closes the port, it may send a BREAK=0. */
      /* Nothing else is used unless programmed by the application. */
      D1PRINTF(" SB=%04X\r\n", EP_MEM.req_data.wValue);
      _send_break = EP_MEM.req_data.wValue;
      if (_send_break) break_on();
      else break_off();
    3eae:	0e 94 02 0d 	call	0x1a04	; 0x1a04 <USB::break_off()>
    3eb2:	d3 cc       	rjmp	.-1626   	; 0x385a <main+0x3c0>
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/main.cpp:131
    if (USB::is_ep_setup()) USB::handling_control_transactions();

    /* If SW0 was used, work here. */
    if (bit_is_clear(PGCONF, PGCONF_UPDI_bp)) {
      if      (bit_is_set(GPCONF, GPCONF_FAL_bp)) SYS::reset_enter();
      else if (bit_is_set(GPCONF, GPCONF_RIS_bp)) SYS::reset_leave();
    3eb4:	f6 9b       	sbis	0x1e, 6	; 30
    3eb6:	96 cd       	rjmp	.-1236   	; 0x39e4 <main+0x54a>
reset_leave():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:402
   * This will be executed when SW0 is released.
   * If the VCP is operating, it will return to normal operation,
   * but if the USB is stopped, it will reboot at the end.
   */
  void reset_leave (void) {
    if (bit_is_set(GPCONF, GPCONF_HLD_bp)) {
    3eb8:	f5 9b       	sbis	0x1e, 5	; 30
    3eba:	24 c0       	rjmp	.+72     	; 0x3f04 <main+0xa6a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:403
      send_bitmap(_updi_bitmap_leave, sizeof(_updi_bitmap_leave) * 8);
    3ebc:	8c e3       	ldi	r24, 0x3C	; 60
    3ebe:	90 e6       	ldi	r25, 0x60	; 96
    3ec0:	0e 94 23 05 	call	0xa46	; 0xa46 <SYS::send_bitmap(unsigned char const*, unsigned int) [clone .constprop.12]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:404
      pinLogicOpen(PIN_PGM_TRST);
    3ec4:	01 98       	cbi	0x00, 1	; 0
delay_millis():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/delay_busywait.h:42
    3ec6:	ff e1       	ldi	r31, 0x1F	; 31
    3ec8:	21 ea       	ldi	r18, 0xA1	; 161
    3eca:	37 e0       	ldi	r19, 0x07	; 7
    3ecc:	f1 50       	subi	r31, 0x01	; 1
    3ece:	20 40       	sbci	r18, 0x00	; 0
    3ed0:	30 40       	sbci	r19, 0x00	; 0
    3ed2:	e1 f7       	brne	.-8      	; 0x3ecc <main+0xa32>
    3ed4:	00 c0       	rjmp	.+0      	; 0x3ed6 <main+0xa3c>
    3ed6:	00 00       	nop
reset_leave():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:409
  #ifdef CONFIG_VCP_DTR_RESET
      /* A delay of 64ms or more between when the bootloader starts and when RxD opens. */
      delay_125ms();
  #endif
      D1PRINTF("<RST:OUT>\r\n");
    3ed8:	88 e9       	ldi	r24, 0x98	; 152
    3eda:	92 e0       	ldi	r25, 0x02	; 2
    3edc:	9f 93       	push	r25
    3ede:	8f 93       	push	r24
    3ee0:	1f 93       	push	r17
    3ee2:	0f 93       	push	r16
    3ee4:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:410
      DFLUSH();
    3ee8:	80 91 b5 60 	lds	r24, 0x60B5	; 0x8060b5 <Serial1C+0x2>
    3eec:	90 91 b6 60 	lds	r25, 0x60B6	; 0x8060b6 <Serial1C+0x3>
    3ef0:	0e 94 c1 05 	call	0xb82	; 0xb82 <UsartBaseClass::flush() [clone .isra.0] [clone .lto_priv.18]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:411
      if (bit_is_set(GPCONF, GPCONF_USB_bp))
    3ef4:	0f 90       	pop	r0
    3ef6:	0f 90       	pop	r0
    3ef8:	0f 90       	pop	r0
    3efa:	0f 90       	pop	r0
    3efc:	f0 9b       	sbis	0x1e, 0	; 30
    3efe:	06 c0       	rjmp	.+12     	; 0x3f0c <main+0xa72>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:412
        LED_HeartBeat();  /* The USB is ready. */
    3f00:	0e 94 30 09 	call	0x1260	; 0x1260 <SYS::LED_HeartBeat()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:418
      else if (!USB0_ADDR)
        reboot();         /* USB disconnected, System reboot. */
      else
        LED_Flash();      /* USB is not yet enabled. */
    }
    GPCONF &= ~(GPCONF_HLD_bm | GPCONF_RIS_bm | GPCONF_FAL_bm);
    3f04:	8e b3       	in	r24, 0x1e	; 30
    3f06:	8f 71       	andi	r24, 0x1F	; 31
    3f08:	8e bb       	out	0x1e, r24	; 30
    3f0a:	6c cd       	rjmp	.-1320   	; 0x39e4 <main+0x54a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:413
  #endif
      D1PRINTF("<RST:OUT>\r\n");
      DFLUSH();
      if (bit_is_set(GPCONF, GPCONF_USB_bp))
        LED_HeartBeat();  /* The USB is ready. */
      else if (!USB0_ADDR)
    3f0c:	80 91 03 0c 	lds	r24, 0x0C03	; 0x800c03 <__TEXT_REGION_LENGTH__+0x7f0c03>
    3f10:	88 23       	and	r24, r24
    3f12:	09 f4       	brne	.+2      	; 0x3f16 <main+0xa7c>
    3f14:	17 cc       	rjmp	.-2002   	; 0x3744 <main+0x2aa>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:416
        reboot();         /* USB disconnected, System reboot. */
      else
        LED_Flash();      /* USB is not yet enabled. */
    3f16:	0e 94 1b 09 	call	0x1236	; 0x1236 <SYS::LED_Flash()>
    3f1a:	f4 cf       	rjmp	.-24     	; 0x3f04 <main+0xa6a>
read_byte():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:420
    else ep_cdi_listen();
  }

  uint8_t read_byte (void) {
    uint8_t _c = 0;
    if (EP_CDO.CNT != _recv_count) {
    3f1c:	40 91 b2 64 	lds	r20, 0x64B2	; 0x8064b2 <EP_TABLE+0x3a>
    3f20:	50 91 b3 64 	lds	r21, 0x64B3	; 0x8064b3 <EP_TABLE+0x3b>
    3f24:	28 2f       	mov	r18, r24
    3f26:	30 e0       	ldi	r19, 0x00	; 0
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:419
    if (_send_count < 64) _sof_count = 30;
    else ep_cdi_listen();
  }

  uint8_t read_byte (void) {
    uint8_t _c = 0;
    3f28:	f1 2c       	mov	r15, r1
read_byte():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:420
    if (EP_CDO.CNT != _recv_count) {
    3f2a:	42 17       	cp	r20, r18
    3f2c:	53 07       	cpc	r21, r19
    3f2e:	39 f0       	breq	.+14     	; 0x3f3e <main+0xaa4>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:427
      if (_recv_count == 0) {
        D2PRINTF(" VO=%02X:", EP_CDO.CNT);
        D2PRINTHEX(&EP_MEM.cdo_data, EP_CDO.CNT);
      }
  #endif
      _c = EP_MEM.cdo_data[_recv_count++];
    3f30:	8f 5f       	subi	r24, 0xFF	; 255
    3f32:	80 93 74 64 	sts	0x6474, r24	; 0x806474 <_recv_count>
    3f36:	2e 54       	subi	r18, 0x4E	; 78
    3f38:	3c 49       	sbci	r19, 0x9C	; 156
    3f3a:	f9 01       	movw	r30, r18
    3f3c:	f0 80       	ld	r15, Z
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:429
    }
    if (EP_CDO.CNT == _recv_count) ep_cdo_listen();
    3f3e:	80 91 b2 64 	lds	r24, 0x64B2	; 0x8064b2 <EP_TABLE+0x3a>
    3f42:	90 91 b3 64 	lds	r25, 0x64B3	; 0x8064b3 <EP_TABLE+0x3b>
    3f46:	20 91 74 64 	lds	r18, 0x6474	; 0x806474 <_recv_count>
    3f4a:	28 17       	cp	r18, r24
    3f4c:	19 06       	cpc	r1, r25
    3f4e:	11 f4       	brne	.+4      	; 0x3f54 <main+0xaba>
    3f50:	0e 94 64 05 	call	0xac8	; 0xac8 <USB::ep_cdo_listen()>
vcp_transceiver():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:480
  #if defined(CONFIG_VCP_CTS_ENABLE)
     && !digitalReadMacro(PIN_VCP_CTS)
  #endif
     && bit_is_set(USART0_STATUS, USART_DREIF_bp)
     && read_available()) {
      USART0_TXDATAL = read_byte();
    3f54:	f0 92 02 08 	sts	0x0802, r15	; 0x800802 <__TEXT_REGION_LENGTH__+0x7f0802>
    3f58:	5f cd       	rjmp	.-1346   	; 0x3a18 <main+0x57e>
read_drop():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:443
    }
    return _s != 0;
  }

  void read_drop (void) {
    if (bit_is_set(EP_CDO.STATUS, USB_BUSNAK_bp)) ep_cdo_listen();
    3f5a:	80 91 b0 64 	lds	r24, 0x64B0	; 0x8064b0 <EP_TABLE+0x38>
    3f5e:	81 ff       	sbrs	r24, 1
    3f60:	5b cd       	rjmp	.-1354   	; 0x3a18 <main+0x57e>
    3f62:	58 cd       	rjmp	.-1360   	; 0x3a14 <main+0x57a>
cci_break_count():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:379
    if ((_send_break + 1) > 1) {
      if (_send_break > USB_CCI_INTERVAL) {
        if (bit_is_set(EP_CCI.STATUS, USB_BUSNAK_bp)) ep_cci_listen();
      }
      else {
        _send_break = 0;
    3f64:	10 92 76 64 	sts	0x6476, r1	; 0x806476 <_send_break>
    3f68:	10 92 77 64 	sts	0x6477, r1	; 0x806477 <_send_break+0x1>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:380
        break_off();
    3f6c:	0e 94 02 0d 	call	0x1a04	; 0x1a04 <USB::break_off()>
    3f70:	7d cd       	rjmp	.-1286   	; 0x3a6c <main+0x5d2>
dap_command_check():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:52
   * Command numbers 0x80 and above are vendor extensions, EDBG Payload uses 0x80 and x81.
   * Additionally, 0x82 is reserved for device event notification.
   */
  bool dap_command_check (void) {
    bool _result = false;
    uint8_t _cmd = EP_MEM.dap_data[0];
    3f72:	90 91 72 63 	lds	r25, 0x6372	; 0x806372 <EP_MEM+0x18>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:53
    uint8_t _sub = EP_MEM.dap_data[1];
    3f76:	80 91 73 63 	lds	r24, 0x6373	; 0x806373 <EP_MEM+0x19>
ep_dpi_pending():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:264

  bool is_ep_setup (void) { return bit_is_set(EP_REQ.STATUS, USB_EPSETUP_bp); }
  bool is_not_dap (void) { return bit_is_clear(EP_DPO.STATUS, USB_BUSNAK_bp); }
  void ep_req_pending (void) { loop_until_bit_is_set(EP_REQ.STATUS, USB_BUSNAK_bp); }
  void ep_res_pending (void) { loop_until_bit_is_set(EP_RES.STATUS, USB_BUSNAK_bp); }
  void ep_dpi_pending (void) { loop_until_bit_is_set(EP_DPI.STATUS, USB_BUSNAK_bp); }
    3f7a:	20 91 98 64 	lds	r18, 0x6498	; 0x806498 <EP_TABLE+0x20>
    3f7e:	21 ff       	sbrs	r18, 1
    3f80:	fc cf       	rjmp	.-8      	; 0x3f7a <main+0xae0>
dap_command_check():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:65
     * and the data is sent and received with a fixed length of 64 bytes,
     * determined by the value specified in the HID Report.
     * A maximum of 15 chunks is possible,
     * resulting in a maximum payload length of 900 bytes.
     */
    if (_cmd == 0x80) {             /* DAP_EDBG_VENDOR_AVR_CMD */
    3f82:	90 38       	cpi	r25, 0x80	; 128
    3f84:	09 f0       	breq	.+2      	; 0x3f88 <main+0xaee>
    3f86:	f4 c0       	rjmp	.+488    	; 0x4170 <main+0xcd6>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:66
      uint8_t _endf = _sub & 0x0F;
    3f88:	f8 2f       	mov	r31, r24
    3f8a:	ff 70       	andi	r31, 0x0F	; 15
    3f8c:	4f 2e       	mov	r4, r31
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:70
      uint8_t _frag = _sub >> 4;
      uint8_t _size = EP_MEM.dap_data[3];
      size_t  _ofst = (_frag - 1) * 60;
      if (_endf >= 10) {
    3f8e:	29 e0       	ldi	r18, 0x09	; 9
    3f90:	2f 17       	cp	r18, r31
    3f92:	78 f4       	brcc	.+30     	; 0x3fb2 <main+0xb18>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:72
        /* Only a maximum of 540 bytes : 9 fragment records is accepted. */
        D1PRINTF("<EDBG_FAIL>\r\n");
    3f94:	81 ec       	ldi	r24, 0xC1	; 193
    3f96:	92 e0       	ldi	r25, 0x02	; 2
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:94
            _packet_endfrag = 0;
            _result = true;
          }
          else {
            /* A missing chunk is detected, so an error is returned. */
            D1PRINTF("<EDBG_FAIL>\r\n");
    3f98:	9f 93       	push	r25
    3f9a:	8f 93       	push	r24
    3f9c:	1f 93       	push	r17
    3f9e:	0f 93       	push	r16
    3fa0:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:95
            EP_MEM.dap_data[1] = 0x00;  /* EDBG_RSP_FAIL */
    3fa4:	10 92 73 63 	sts	0x6373, r1	; 0x806373 <EP_MEM+0x19>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:105
    else if (_cmd == 0x81) {        /* DAP_EDBG_VENDOR_AVR_RSP */
      EP_MEM.dap_data[2] = 0;       /* Always zero */
      if (_packet_endfrag == 0) {
        D1PRINTF("<EDBG_EMPTY>\r\n");
        EP_MEM.dap_data[1] = 0;
        EP_MEM.dap_data[3] = 0;
    3fa8:	0f 90       	pop	r0
    3faa:	0f 90       	pop	r0
    3fac:	0f 90       	pop	r0
    3fae:	0f 90       	pop	r0
    3fb0:	28 c0       	rjmp	.+80     	; 0x4002 <main+0xb68>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:67
     * A maximum of 15 chunks is possible,
     * resulting in a maximum payload length of 900 bytes.
     */
    if (_cmd == 0x80) {             /* DAP_EDBG_VENDOR_AVR_CMD */
      uint8_t _endf = _sub & 0x0F;
      uint8_t _frag = _sub >> 4;
    3fb2:	90 e0       	ldi	r25, 0x00	; 0
    3fb4:	44 e0       	ldi	r20, 0x04	; 4
    3fb6:	95 95       	asr	r25
    3fb8:	87 95       	ror	r24
    3fba:	4a 95       	dec	r20
    3fbc:	e1 f7       	brne	.-8      	; 0x3fb6 <main+0xb1c>
    3fbe:	38 2e       	mov	r3, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:68
      uint8_t _size = EP_MEM.dap_data[3];
    3fc0:	c0 90 75 63 	lds	r12, 0x6375	; 0x806375 <EP_MEM+0x1b>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:77
        D1PRINTF("<EDBG_FAIL>\r\n");
        EP_MEM.dap_data[1] = 0x00;  /* EDBG_RSP_FAIL */
      }
      else {
        /* Detect the first chunk. */
        if (_frag == 1) _packet_chunks = 0;
    3fc4:	31 e0       	ldi	r19, 0x01	; 1
    3fc6:	83 13       	cpse	r24, r19
    3fc8:	02 c0       	rjmp	.+4      	; 0x3fce <main+0xb34>
    3fca:	10 92 ba 60 	sts	0x60BA, r1	; 0x8060ba <__bss_end>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:69
     */
    if (_cmd == 0x80) {             /* DAP_EDBG_VENDOR_AVR_CMD */
      uint8_t _endf = _sub & 0x0F;
      uint8_t _frag = _sub >> 4;
      uint8_t _size = EP_MEM.dap_data[3];
      size_t  _ofst = (_frag - 1) * 60;
    3fce:	01 97       	sbiw	r24, 0x01	; 1
    3fd0:	2c e3       	ldi	r18, 0x3C	; 60
    3fd2:	28 9f       	mul	r18, r24
    3fd4:	70 01       	movw	r14, r0
    3fd6:	29 9f       	mul	r18, r25
    3fd8:	f0 0c       	add	r15, r0
    3fda:	11 24       	eor	r1, r1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:78
        EP_MEM.dap_data[1] = 0x00;  /* EDBG_RSP_FAIL */
      }
      else {
        /* Detect the first chunk. */
        if (_frag == 1) _packet_chunks = 0;
        ++_packet_chunks;
    3fdc:	50 90 ba 60 	lds	r5, 0x60BA	; 0x8060ba <__bss_end>
    3fe0:	53 94       	inc	r5
    3fe2:	50 92 ba 60 	sts	0x60BA, r5	; 0x8060ba <__bss_end>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:79
        memcpy(&packet.rawData[_ofst], &EP_MEM.dap_data[4], _size);
    3fe6:	d1 2c       	mov	r13, r1
    3fe8:	a6 01       	movw	r20, r12
    3fea:	66 e7       	ldi	r22, 0x76	; 118
    3fec:	73 e6       	ldi	r23, 0x63	; 99
    3fee:	c7 01       	movw	r24, r14
    3ff0:	80 50       	subi	r24, 0x00	; 0
    3ff2:	9f 49       	sbci	r25, 0x9F	; 159
    3ff4:	0e 94 34 2a 	call	0x5468	; 0x5468 <memcpy>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:80
        EP_MEM.dap_data[1] = 0x01;  /* EDBG_RSP_OK */
    3ff8:	81 e0       	ldi	r24, 0x01	; 1
    3ffa:	80 93 73 63 	sts	0x6373, r24	; 0x806373 <EP_MEM+0x19>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:82
        D3PRINTHEX(&EP_MEM.dap_data, _size + 4);
        if (_endf == _frag) {       /* end of defragment */
    3ffe:	43 14       	cp	r4, r3
    4000:	11 f0       	breq	.+4      	; 0x4006 <main+0xb6c>
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:51
  /*
   * Command numbers 0x80 and above are vendor extensions, EDBG Payload uses 0x80 and x81.
   * Additionally, 0x82 is reserved for device event notification.
   */
  bool dap_command_check (void) {
    bool _result = false;
    4002:	e1 2c       	mov	r14, r1
    4004:	0c c0       	rjmp	.+24     	; 0x401e <main+0xb84>
dap_command_check():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:83
        ++_packet_chunks;
        memcpy(&packet.rawData[_ofst], &EP_MEM.dap_data[4], _size);
        EP_MEM.dap_data[1] = 0x01;  /* EDBG_RSP_OK */
        D3PRINTHEX(&EP_MEM.dap_data, _size + 4);
        if (_endf == _frag) {       /* end of defragment */
          _packet_length = _ofst + _size;
    4006:	ec 0c       	add	r14, r12
    4008:	fd 1c       	adc	r15, r13
    400a:	e0 92 1c 63 	sts	0x631C, r14	; 0x80631c <_packet_length>
    400e:	f0 92 1d 63 	sts	0x631D, r15	; 0x80631d <_packet_length+0x1>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:86
          D2PRINTF(" SQ=%03X:%03X<", packet.out.sequence, _packet_length);
          D2PRINTHEX(&packet, _packet_length);
          if (_packet_chunks == _endf) {
    4012:	45 10       	cpse	r4, r5
    4014:	aa c0       	rjmp	.+340    	; 0x416a <main+0xcd0>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:89
            /* True if an EDBG Payload is received. */
            D2PRINTF("<EDBG_OK>\r\n");
            _packet_endfrag = 0;
    4016:	10 92 c1 60 	sts	0x60C1, r1	; 0x8060c1 <_packet_endfrag>
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:90
            _result = true;
    401a:	ee 24       	eor	r14, r14
    401c:	e3 94       	inc	r14
ep_dpi_listen():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:283
    loop_until_bit_is_clear(USB0_INTFLAGSB, USB_RMWBUSY_bp);
    USB_EP_STATUS_CLR(USB_EP_RES) = ~USB_TOGGLE_bm;
  }

  void ep_dpi_listen (void) {
    EP_DPI.CNT = 64;
    401e:	80 e4       	ldi	r24, 0x40	; 64
    4020:	90 e0       	ldi	r25, 0x00	; 0
    4022:	80 93 9a 64 	sts	0x649A, r24	; 0x80649a <EP_TABLE+0x22>
    4026:	90 93 9b 64 	sts	0x649B, r25	; 0x80649b <EP_TABLE+0x23>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:284
    EP_DPI.MCNT = 0;
    402a:	10 92 9e 64 	sts	0x649E, r1	; 0x80649e <EP_TABLE+0x26>
    402e:	10 92 9f 64 	sts	0x649F, r1	; 0x80649f <EP_TABLE+0x27>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:285
    loop_until_bit_is_clear(USB0_INTFLAGSB, USB_RMWBUSY_bp);
    4032:	80 91 0b 0c 	lds	r24, 0x0C0B	; 0x800c0b <__TEXT_REGION_LENGTH__+0x7f0c0b>
    4036:	82 fd       	sbrc	r24, 2
    4038:	fc cf       	rjmp	.-8      	; 0x4032 <main+0xb98>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:286
    USB_EP_STATUS_CLR(USB_EP_DPI) = ~USB_TOGGLE_bm;
    403a:	8e ef       	ldi	r24, 0xFE	; 254
    403c:	80 93 46 0c 	sts	0x0C46, r24	; 0x800c46 <__TEXT_REGION_LENGTH__+0x7f0c46>
ep_dpo_listen():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:290
  }

  void ep_dpo_listen (void) {
    EP_DPO.CNT = 0;
    4040:	10 92 a2 64 	sts	0x64A2, r1	; 0x8064a2 <EP_TABLE+0x2a>
    4044:	10 92 a3 64 	sts	0x64A3, r1	; 0x8064a3 <EP_TABLE+0x2b>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:291
    loop_until_bit_is_clear(USB0_INTFLAGSB, USB_RMWBUSY_bp);
    4048:	80 91 0b 0c 	lds	r24, 0x0C0B	; 0x800c0b <__TEXT_REGION_LENGTH__+0x7f0c0b>
    404c:	82 fd       	sbrc	r24, 2
    404e:	fc cf       	rjmp	.-8      	; 0x4048 <main+0xbae>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/usb.cpp:292
    USB_EP_STATUS_CLR(USB_EP_DPO) = ~USB_TOGGLE_bm;
    4050:	8e ef       	ldi	r24, 0xFE	; 254
    4052:	80 93 48 0c 	sts	0x0C48, r24	; 0x800c48 <__TEXT_REGION_LENGTH__+0x7f0c48>
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/main.cpp:165
      continue;
    }
    _wdt = true;

    /*** CMSIS-DAP and JTAG3 packet receiver ***/
    if (JTAG::dap_command_check()) JTAG::jtag_scope_branch();
    4056:	ee 20       	and	r14, r14
    4058:	09 f4       	brne	.+2      	; 0x405c <main+0xbc2>
    405a:	53 cb       	rjmp	.-2394   	; 0x3702 <main+0x268>
jtag_scope_branch():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:402

  /* Processing branches depending on the scope specifier. */
  /* Currently, four types of scope are known: */
  void jtag_scope_branch (void) {
    size_t _rspsize = 0;
    uint8_t _scope  = packet.out.scope;
    405c:	f0 90 04 61 	lds	r15, 0x6104	; 0x806104 <packet+0x4>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:403
    D1PRINTF("SQ=%d:%d>SCOPE=%02X,C=%02X,S=%02X,L=%02X\r\n",
    4060:	80 91 08 61 	lds	r24, 0x6108	; 0x806108 <packet+0x8>
    4064:	1f 92       	push	r1
    4066:	8f 93       	push	r24
    4068:	80 91 07 61 	lds	r24, 0x6107	; 0x806107 <packet+0x7>
    406c:	1f 92       	push	r1
    406e:	8f 93       	push	r24
    4070:	80 91 05 61 	lds	r24, 0x6105	; 0x806105 <packet+0x5>
    4074:	1f 92       	push	r1
    4076:	8f 93       	push	r24
    4078:	1f 92       	push	r1
    407a:	ff 92       	push	r15
    407c:	80 91 1d 63 	lds	r24, 0x631D	; 0x80631d <_packet_length+0x1>
    4080:	8f 93       	push	r24
    4082:	80 91 1c 63 	lds	r24, 0x631C	; 0x80631c <_packet_length>
    4086:	8f 93       	push	r24
    4088:	80 91 03 61 	lds	r24, 0x6103	; 0x806103 <packet+0x3>
    408c:	8f 93       	push	r24
    408e:	80 91 02 61 	lds	r24, 0x6102	; 0x806102 <packet+0x2>
    4092:	8f 93       	push	r24
    4094:	85 ec       	ldi	r24, 0xC5	; 197
    4096:	96 e0       	ldi	r25, 0x06	; 6
    4098:	9f 93       	push	r25
    409a:	8f 93       	push	r24
    409c:	1f 93       	push	r17
    409e:	0f 93       	push	r16
    40a0:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:410
      _packet_length,
      _scope,
      packet.out.cmd,
      packet.out.section,
      packet.out.index);
    if      (_scope == 0x01) _rspsize = jtag_scope_general();       /* SCOPE_GENERAL */
    40a4:	cd bf       	out	0x3d, r28	; 61
    40a6:	de bf       	out	0x3e, r29	; 62
    40a8:	91 e0       	ldi	r25, 0x01	; 1
    40aa:	f9 12       	cpse	r15, r25
    40ac:	43 c1       	rjmp	.+646    	; 0x4334 <main+0xe9a>
jtag_scope_general():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:175
  }

  /*** Only a subset of JTAGICE3 commands are implemented. ***/
  size_t jtag_scope_general (void) {
    size_t  _rspsize = 0;
    uint8_t _cmd     = packet.out.cmd;
    40ae:	80 91 05 61 	lds	r24, 0x6105	; 0x806105 <packet+0x5>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:176
    uint8_t _section = packet.out.section;
    40b2:	40 90 07 61 	lds	r4, 0x6107	; 0x806107 <packet+0x7>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:177
    uint8_t _index   = packet.out.index;
    40b6:	50 90 08 61 	lds	r5, 0x6108	; 0x806108 <packet+0x8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:178
    uint8_t _length  = packet.out.length;
    40ba:	30 90 09 61 	lds	r3, 0x6109	; 0x806109 <packet+0x9>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:179
    if (_cmd == 0x02) {             /* CMD3_GET_PARAMETER */
    40be:	82 30       	cpi	r24, 0x02	; 2
    40c0:	09 f0       	breq	.+2      	; 0x40c4 <main+0xc2a>
    40c2:	e8 c0       	rjmp	.+464    	; 0x4294 <main+0xdfa>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:180
      D1PRINTF(" GEN_GET_PARAM=%02X:%02X:%02X\r\n", _section, _index, _length);
    40c4:	e3 2c       	mov	r14, r3
    40c6:	f1 2c       	mov	r15, r1
    40c8:	c5 2c       	mov	r12, r5
    40ca:	d1 2c       	mov	r13, r1
    40cc:	1f 92       	push	r1
    40ce:	3f 92       	push	r3
    40d0:	1f 92       	push	r1
    40d2:	5f 92       	push	r5
    40d4:	1f 92       	push	r1
    40d6:	4f 92       	push	r4
    40d8:	8f e3       	ldi	r24, 0x3F	; 63
    40da:	93 e0       	ldi	r25, 0x03	; 3
    40dc:	9f 93       	push	r25
    40de:	8f 93       	push	r24
    40e0:	1f 93       	push	r17
    40e2:	0f 93       	push	r16
    40e4:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:181
      if (_section == 0) {          /* SET_GET_CTXT_CONFIG */
    40e8:	cd bf       	out	0x3d, r28	; 61
    40ea:	de bf       	out	0x3e, r29	; 62
    40ec:	41 10       	cpse	r4, r1
    40ee:	ab c0       	rjmp	.+342    	; 0x4246 <main+0xdac>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:183
        /* _index == 0-5 */
        memcpy_P(&packet.in.data[0], &jtag_version[_index], _length);
    40f0:	b6 01       	movw	r22, r12
    40f2:	66 5c       	subi	r22, 0xC6	; 198
    40f4:	7c 4f       	sbci	r23, 0xFC	; 252
    40f6:	a7 01       	movw	r20, r14
    40f8:	87 e0       	ldi	r24, 0x07	; 7
    40fa:	91 e6       	ldi	r25, 0x61	; 97
    40fc:	92 d6       	rcall	.+3364   	; 0x4e22 <memcpy_P>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:184
        D1PRINTF(" VESRION=");
    40fe:	80 e3       	ldi	r24, 0x30	; 48
    4100:	93 e0       	ldi	r25, 0x03	; 3
    4102:	9f 93       	push	r25
    4104:	8f 93       	push	r24
    4106:	1f 93       	push	r17
    4108:	0f 93       	push	r16
    410a:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:185
        D1PRINTHEX(&packet.in.data[0], _length);
    410e:	b7 01       	movw	r22, r14
    4110:	87 e0       	ldi	r24, 0x07	; 7
    4112:	91 e6       	ldi	r25, 0x61	; 97
    4114:	0e 94 be 0b 	call	0x177c	; 0x177c <Print::printHex(void const*, unsigned int, char, unsigned int, char const*) [clone .constprop.14]>
    4118:	0e 94 0c 0c 	call	0x1818	; 0x1818 <Print::ln()>
    411c:	0f 90       	pop	r0
    411e:	0f 90       	pop	r0
    4120:	0f 90       	pop	r0
    4122:	0f 90       	pop	r0
jtag_scope_avr_core():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:383
          /* `-B <num>khz` : "khz" units are required. */
          D1PRINTF(" XCLK=%d\r\n", _xclk);
          packet.in.wValue = _xclk;
        }
      }
      packet.in.res = 0x184;        /* RSP3_DATA */
    4124:	84 e8       	ldi	r24, 0x84	; 132
    4126:	91 e0       	ldi	r25, 0x01	; 1
    4128:	80 93 05 61 	sts	0x6105, r24	; 0x806105 <packet+0x5>
    412c:	90 93 06 61 	sts	0x6106, r25	; 0x806106 <packet+0x6>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:384
      _rspsize = _length + 1;
    4130:	3f ef       	ldi	r19, 0xFF	; 255
    4132:	e3 1a       	sub	r14, r19
    4134:	f3 0a       	sbc	r15, r19
complete_jtag_transactions():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:163
    return _result; /* True if an EDBG Payload is received. */
  }

  /*** Prepare for EDBG payload request from device to host ***/
  void complete_jtag_transactions (size_t _length) {
    _packet_length = _length + 6; /* TOKEN + SEQ[2] + EOT + PAD */
    4136:	97 01       	movw	r18, r14
    4138:	2a 5f       	subi	r18, 0xFA	; 250
    413a:	3f 4f       	sbci	r19, 0xFF	; 255
    413c:	20 93 1c 63 	sts	0x631C, r18	; 0x80631c <_packet_length>
    4140:	30 93 1d 63 	sts	0x631D, r19	; 0x80631d <_packet_length+0x1>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:164
    _packet_fragment = 0;
    4144:	10 92 c2 60 	sts	0x60C2, r1	; 0x8060c2 <_packet_fragment>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:165
    _packet_endfrag = (_length + 65) / 60;  /* 1 to 15 */
    4148:	c7 01       	movw	r24, r14
    414a:	8f 5b       	subi	r24, 0xBF	; 191
    414c:	9f 4f       	sbci	r25, 0xFF	; 255
    414e:	6c e3       	ldi	r22, 0x3C	; 60
    4150:	70 e0       	ldi	r23, 0x00	; 0
    4152:	0e 94 c8 29 	call	0x5390	; 0x5390 <__udivmodhi4>
    4156:	60 93 c1 60 	sts	0x60C1, r22	; 0x8060c1 <_packet_endfrag>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:166
    packet.in.token = 0x0E;                 /* TOKEN */
    415a:	8e e0       	ldi	r24, 0x0E	; 14
    415c:	80 93 01 61 	sts	0x6101, r24	; 0x806101 <packet+0x1>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:167
    packet.rawData[_packet_length] = 0;     /* EOT */
    4160:	20 50       	subi	r18, 0x00	; 0
    4162:	3f 49       	sbci	r19, 0x9F	; 159
    4164:	f9 01       	movw	r30, r18
    4166:	10 82       	st	Z, r1
    4168:	cc ca       	rjmp	.-2664   	; 0x3702 <main+0x268>
dap_command_check():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:94
            _packet_endfrag = 0;
            _result = true;
          }
          else {
            /* A missing chunk is detected, so an error is returned. */
            D1PRINTF("<EDBG_FAIL>\r\n");
    416a:	83 eb       	ldi	r24, 0xB3	; 179
    416c:	92 e0       	ldi	r25, 0x02	; 2
    416e:	14 cf       	rjmp	.-472    	; 0x3f98 <main+0xafe>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:100
            EP_MEM.dap_data[1] = 0x00;  /* EDBG_RSP_FAIL */
          }
        }
      }
    }
    else if (_cmd == 0x81) {        /* DAP_EDBG_VENDOR_AVR_RSP */
    4170:	91 38       	cpi	r25, 0x81	; 129
    4172:	e9 f5       	brne	.+122    	; 0x41ee <main+0xd54>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:101
      EP_MEM.dap_data[2] = 0;       /* Always zero */
    4174:	10 92 74 63 	sts	0x6374, r1	; 0x806374 <EP_MEM+0x1a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:102
      if (_packet_endfrag == 0) {
    4178:	90 91 c1 60 	lds	r25, 0x60C1	; 0x8060c1 <_packet_endfrag>
    417c:	91 11       	cpse	r25, r1
    417e:	0d c0       	rjmp	.+26     	; 0x419a <main+0xd00>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:103
        D1PRINTF("<EDBG_EMPTY>\r\n");
    4180:	84 ea       	ldi	r24, 0xA4	; 164
    4182:	92 e0       	ldi	r25, 0x02	; 2
    4184:	9f 93       	push	r25
    4186:	8f 93       	push	r24
    4188:	1f 93       	push	r17
    418a:	0f 93       	push	r16
    418c:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:104
        EP_MEM.dap_data[1] = 0;
    4190:	10 92 73 63 	sts	0x6373, r1	; 0x806373 <EP_MEM+0x19>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:105
        EP_MEM.dap_data[3] = 0;
    4194:	10 92 75 63 	sts	0x6375, r1	; 0x806375 <EP_MEM+0x1b>
    4198:	07 cf       	rjmp	.-498    	; 0x3fa8 <main+0xb0e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:108
      }
      else {
        memcpy(&EP_MEM.dap_data[4], &packet.in.token + (_packet_fragment * 60), 60);
    419a:	80 91 c2 60 	lds	r24, 0x60C2	; 0x8060c2 <_packet_fragment>
    419e:	2c e3       	ldi	r18, 0x3C	; 60
    41a0:	82 9f       	mul	r24, r18
    41a2:	f0 01       	movw	r30, r0
    41a4:	11 24       	eor	r1, r1
    41a6:	ef 5f       	subi	r30, 0xFF	; 255
    41a8:	fe 49       	sbci	r31, 0x9E	; 158
    41aa:	a6 e7       	ldi	r26, 0x76	; 118
    41ac:	b3 e6       	ldi	r27, 0x63	; 99
    41ae:	01 90       	ld	r0, Z+
    41b0:	0d 92       	st	X+, r0
    41b2:	2a 95       	dec	r18
    41b4:	e1 f7       	brne	.-8      	; 0x41ae <main+0xd14>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:109
        EP_MEM.dap_data[1] = ((++_packet_fragment) << 4) | _packet_endfrag;
    41b6:	8f 5f       	subi	r24, 0xFF	; 255
    41b8:	80 93 c2 60 	sts	0x60C2, r24	; 0x8060c2 <_packet_fragment>
    41bc:	40 e1       	ldi	r20, 0x10	; 16
    41be:	84 9f       	mul	r24, r20
    41c0:	90 01       	movw	r18, r0
    41c2:	11 24       	eor	r1, r1
    41c4:	29 2b       	or	r18, r25
    41c6:	20 93 73 63 	sts	0x6373, r18	; 0x806373 <EP_MEM+0x19>
    41ca:	20 91 1c 63 	lds	r18, 0x631C	; 0x80631c <_packet_length>
    41ce:	30 91 1d 63 	lds	r19, 0x631D	; 0x80631d <_packet_length+0x1>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:110
        EP_MEM.dap_data[3] = _packet_fragment == _packet_endfrag ? _packet_length : 60;
    41d2:	98 17       	cp	r25, r24
    41d4:	51 f0       	breq	.+20     	; 0x41ea <main+0xd50>
    41d6:	8c e3       	ldi	r24, 0x3C	; 60
    41d8:	80 93 75 63 	sts	0x6375, r24	; 0x806375 <EP_MEM+0x1b>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:111
        _packet_length -= 60;
    41dc:	2c 53       	subi	r18, 0x3C	; 60
    41de:	31 09       	sbc	r19, r1
    41e0:	20 93 1c 63 	sts	0x631C, r18	; 0x80631c <_packet_length>
    41e4:	30 93 1d 63 	sts	0x631D, r19	; 0x80631d <_packet_length+0x1>
    41e8:	0c cf       	rjmp	.-488    	; 0x4002 <main+0xb68>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:110
        EP_MEM.dap_data[3] = 0;
      }
      else {
        memcpy(&EP_MEM.dap_data[4], &packet.in.token + (_packet_fragment * 60), 60);
        EP_MEM.dap_data[1] = ((++_packet_fragment) << 4) | _packet_endfrag;
        EP_MEM.dap_data[3] = _packet_fragment == _packet_endfrag ? _packet_length : 60;
    41ea:	82 2f       	mov	r24, r18
    41ec:	f5 cf       	rjmp	.-22     	; 0x41d8 <main+0xd3e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:118
        D3PRINTHEX(&EP_MEM.dap_data, EP_MEM.dap_data[3] + 4);
      }
    }

    /*** DAP Standard ***/
    else if (_cmd == 0x00) {        /* DAP_CMD_INFO */
    41ee:	91 11       	cpse	r25, r1
    41f0:	1c c0       	rjmp	.+56     	; 0x422a <main+0xd90>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:119
      if (_sub == 0xFF              /* DAP_INFO_PACKET_SIZE      */
    41f2:	8f 3f       	cpi	r24, 0xFF	; 255
    41f4:	21 f0       	breq	.+8      	; 0x41fe <main+0xd64>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:120
       || _sub == 0xFB              /* UART Receive Buffer Size  */
    41f6:	95 e0       	ldi	r25, 0x05	; 5
    41f8:	98 0f       	add	r25, r24
    41fa:	92 30       	cpi	r25, 0x02	; 2
    41fc:	48 f4       	brcc	.+18     	; 0x4210 <main+0xd76>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:122
       || _sub == 0xFC) {           /* UART Transmit Buffer Size */
        EP_MEM.dap_data[1] = 0x02;  /* length=2 */
    41fe:	82 e0       	ldi	r24, 0x02	; 2
    4200:	80 93 73 63 	sts	0x6373, r24	; 0x806373 <EP_MEM+0x19>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:123
        EP_MEM.dap_data[2] = 0x40;  /* MaxPacketSize = 64 */
    4204:	80 e4       	ldi	r24, 0x40	; 64
    4206:	80 93 74 63 	sts	0x6374, r24	; 0x806374 <EP_MEM+0x1a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:124
        EP_MEM.dap_data[3] = 0x00;
    420a:	10 92 75 63 	sts	0x6375, r1	; 0x806375 <EP_MEM+0x1b>
    420e:	f9 ce       	rjmp	.-526    	; 0x4002 <main+0xb68>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:128
        D3PRINTF(" PI=");
        D3PRINTHEX(&EP_MEM.dap_data, 4);
      }
      else if (_sub == 0xF1) {      /* DAP_INFO_Capabilities */
    4210:	81 3f       	cpi	r24, 0xF1	; 241
    4212:	09 f0       	breq	.+2      	; 0x4216 <main+0xd7c>
    4214:	f6 ce       	rjmp	.-532    	; 0x4002 <main+0xb68>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:129
        EP_MEM.dap_data[1] = 0x02;  /* length=2 */
    4216:	82 e0       	ldi	r24, 0x02	; 2
    4218:	80 93 73 63 	sts	0x6373, r24	; 0x806373 <EP_MEM+0x19>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:130
        EP_MEM.dap_data[2] = 0x80;  /* 7:UART Communication Port */
    421c:	80 e8       	ldi	r24, 0x80	; 128
    421e:	80 93 74 63 	sts	0x6374, r24	; 0x806374 <EP_MEM+0x1a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:131
        EP_MEM.dap_data[3] = 0x01;  /* 1:USB COM Port */
    4222:	81 e0       	ldi	r24, 0x01	; 1
    4224:	80 93 75 63 	sts	0x6375, r24	; 0x806375 <EP_MEM+0x1b>
    4228:	ec ce       	rjmp	.-552    	; 0x4002 <main+0xb68>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:136
        D3PRINTF(" PI=");
        D3PRINTHEX(&EP_MEM.dap_data, 4);
      }
    }
    else if (_cmd == 0x02) {        /* DAP_CMD_CONNECT */
    422a:	92 30       	cpi	r25, 0x02	; 2
    422c:	09 f4       	brne	.+2      	; 0x4230 <main+0xd96>
    422e:	e9 ce       	rjmp	.-558    	; 0x4002 <main+0xb68>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:142
      /* EP_MEM.dap_data[1] == CONN_TYPE */
      /* Here, the response is returned without processing. */
      D3PRINTF(" PI=");
      D3PRINTHEX(&EP_MEM.dap_data, 2);
    }
    else if (_cmd == 0x01           /* DAP_CMD_HOSTSTATUS */
    4230:	91 30       	cpi	r25, 0x01	; 1
    4232:	31 f4       	brne	.+12     	; 0x4240 <main+0xda6>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:143
          && _sub == 0x00) {        /* DAP_LED_CONNECT */
    4234:	88 23       	and	r24, r24
    4236:	09 f4       	brne	.+2      	; 0x423a <main+0xda0>
    4238:	e4 ce       	rjmp	.-568    	; 0x4002 <main+0xb68>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:155
      /* Here, the response is returned without processing. */
      D3PRINTF(" PI=");
      D3PRINTHEX(&EP_MEM.dap_data, 2);
    }
    else {
      EP_MEM.dap_data[1] = 0x00;    /* other 0 length result */
    423a:	10 92 73 63 	sts	0x6373, r1	; 0x806373 <EP_MEM+0x19>
    423e:	e1 ce       	rjmp	.-574    	; 0x4002 <main+0xb68>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:149
      /* EP_MEM.dap_data[2] == LED_ON/OFF */
      /* Here, the response is returned without processing. */
      D3PRINTF(" PI=");
      D3PRINTHEX(&EP_MEM.dap_data, 3);
    }
    else if (_cmd == 0x03) {        /* DAP_CMD_DISCONNECT */
    4240:	93 30       	cpi	r25, 0x03	; 3
    4242:	d9 f7       	brne	.-10     	; 0x423a <main+0xda0>
    4244:	de ce       	rjmp	.-580    	; 0x4002 <main+0xb68>
jtag_scope_general():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:187
        /* _index == 0-5 */
        memcpy_P(&packet.in.data[0], &jtag_version[_index], _length);
        D1PRINTF(" VESRION=");
        D1PRINTHEX(&packet.in.data[0], _length);
      }
      else if (_section == 1) {     /* SET_GET_CTXT_PHYSICAL */
    4246:	f1 e0       	ldi	r31, 0x01	; 1
    4248:	4f 12       	cpse	r4, r31
    424a:	6c cf       	rjmp	.-296    	; 0x4124 <main+0xc8a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:188
        if (_index == 0 || _index == 0x20) {  /* PARM3_VTARGET */
    424c:	85 2d       	mov	r24, r5
    424e:	8f 7d       	andi	r24, 0xDF	; 223
    4250:	49 f4       	brne	.+18     	; 0x4264 <main+0xdca>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:190
          /* Called with `-xvtarget` HAS_VTARG_READ */
          packet.in.wValue = _vtarget;
    4252:	80 91 be 60 	lds	r24, 0x60BE	; 0x8060be <_vtarget>
    4256:	90 91 bf 60 	lds	r25, 0x60BF	; 0x8060bf <_vtarget+0x1>
    425a:	80 93 07 61 	sts	0x6107, r24	; 0x806107 <packet+0x7>
    425e:	90 93 08 61 	sts	0x6108, r25	; 0x806108 <packet+0x8>
    4262:	60 cf       	rjmp	.-320    	; 0x4124 <main+0xc8a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:194
        }
        else {                      /* PARM3_ANALOG_XXXX */
          /* Called with PowerDebugger HAS_VTARG_ADJ */
          D1PRINTF(" PHYSICAL=%02X:%02X\r\n", _index, _length);
    4264:	1f 92       	push	r1
    4266:	3f 92       	push	r3
    4268:	1f 92       	push	r1
    426a:	5f 92       	push	r5
    426c:	8a e1       	ldi	r24, 0x1A	; 26
    426e:	93 e0       	ldi	r25, 0x03	; 3
    4270:	9f 93       	push	r25
    4272:	8f 93       	push	r24
    4274:	1f 93       	push	r17
    4276:	0f 93       	push	r16
    4278:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:195
          memcpy_P(&packet.in.data[0], &jtag_physical[_index & 7], _length);
    427c:	65 2d       	mov	r22, r5
    427e:	67 70       	andi	r22, 0x07	; 7
    4280:	70 e0       	ldi	r23, 0x00	; 0
    4282:	6e 5e       	subi	r22, 0xEE	; 238
    4284:	7c 4f       	sbci	r23, 0xFC	; 252
    4286:	a7 01       	movw	r20, r14
    4288:	87 e0       	ldi	r24, 0x07	; 7
    428a:	91 e6       	ldi	r25, 0x61	; 97
    428c:	ca d5       	rcall	.+2964   	; 0x4e22 <memcpy_P>
    428e:	cd bf       	out	0x3d, r28	; 61
    4290:	de bf       	out	0x3e, r29	; 62
    4292:	48 cf       	rjmp	.-368    	; 0x4124 <main+0xc8a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:201
        }
      }
      packet.in.res = 0x184;        /* RSP3_DATA */
      _rspsize = _length + 1;
    }
    else if (_cmd == 0x10) {        /* CMD3_SIGN_ON */
    4294:	80 31       	cpi	r24, 0x10	; 16
    4296:	41 f5       	brne	.+80     	; 0x42e8 <main+0xe4e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:202
      D1PRINTF(" GEN_SIGN_ON\r\n");
    4298:	83 e0       	ldi	r24, 0x03	; 3
    429a:	93 e0       	ldi	r25, 0x03	; 3
    429c:	9f 93       	push	r25
    429e:	8f 93       	push	r24
    42a0:	1f 93       	push	r17
    42a2:	0f 93       	push	r16
    42a4:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:203
      PGCONF = 0;
    42a8:	1f ba       	out	0x1f, r1	; 31
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:204
      _jtag_hvctrl = 0;
    42aa:	10 92 ff 60 	sts	0x60FF, r1	; 0x8060ff <_jtag_hvctrl>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:206
      _jtag_unlock = 0;   /* This is not used. */
      _jtag_arch = 0;
    42ae:	10 92 56 63 	sts	0x6356, r1	; 0x806356 <_jtag_arch>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:207
      _jtag_vpow = 1;
    42b2:	f0 92 c0 60 	sts	0x60C0, r15	; 0x8060c0 <_jtag_vpow>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:208
      _vtarget = SYS::get_vdd();
    42b6:	0e 94 b0 08 	call	0x1160	; 0x1160 <SYS::get_vdd()>
    42ba:	80 93 be 60 	sts	0x60BE, r24	; 0x8060be <_vtarget>
    42be:	90 93 bf 60 	sts	0x60BF, r25	; 0x8060bf <_vtarget+0x1>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:209
      D1PRINTF(" VTARGET=%d\r\n", _vtarget);
    42c2:	9f 93       	push	r25
    42c4:	8f 93       	push	r24
    42c6:	85 ef       	ldi	r24, 0xF5	; 245
    42c8:	92 e0       	ldi	r25, 0x02	; 2
    42ca:	9f 93       	push	r25
    42cc:	8f 93       	push	r24
    42ce:	1f 93       	push	r17
    42d0:	0f 93       	push	r16
    42d2:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:210
      packet.in.res = 0x80;         /* RSP3_OK */
    42d6:	80 e8       	ldi	r24, 0x80	; 128
    42d8:	90 e0       	ldi	r25, 0x00	; 0
    42da:	80 93 05 61 	sts	0x6105, r24	; 0x806105 <packet+0x5>
    42de:	90 93 06 61 	sts	0x6106, r25	; 0x806106 <packet+0x6>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:217
    else if (_cmd == 0x11) {        /* CMD3_SIGN_OFF */
      D1PRINTF(" GEN_SIGN_OFF\r\n");
      packet.in.res = 0x80;         /* RSP3_OK */
    }
    else {
      D1PRINTF(" GEN=%02X:%02X:%02X\r\n", _section, _index, _length);
    42e2:	cd bf       	out	0x3d, r28	; 61
    42e4:	de bf       	out	0x3e, r29	; 62
    42e6:	14 c0       	rjmp	.+40     	; 0x4310 <main+0xe76>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:212
      _jtag_vpow = 1;
      _vtarget = SYS::get_vdd();
      D1PRINTF(" VTARGET=%d\r\n", _vtarget);
      packet.in.res = 0x80;         /* RSP3_OK */
    }
    else if (_cmd == 0x11) {        /* CMD3_SIGN_OFF */
    42e8:	81 31       	cpi	r24, 0x11	; 17
    42ea:	a9 f4       	brne	.+42     	; 0x4316 <main+0xe7c>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:213
      D1PRINTF(" GEN_SIGN_OFF\r\n");
    42ec:	85 ee       	ldi	r24, 0xE5	; 229
    42ee:	92 e0       	ldi	r25, 0x02	; 2
    42f0:	9f 93       	push	r25
    42f2:	8f 93       	push	r24
    42f4:	1f 93       	push	r17
    42f6:	0f 93       	push	r16
    42f8:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:214
      packet.in.res = 0x80;         /* RSP3_OK */
    42fc:	80 e8       	ldi	r24, 0x80	; 128
    42fe:	90 e0       	ldi	r25, 0x00	; 0
    4300:	80 93 05 61 	sts	0x6105, r24	; 0x806105 <packet+0x5>
    4304:	90 93 06 61 	sts	0x6106, r25	; 0x806106 <packet+0x6>
    4308:	0f 90       	pop	r0
    430a:	0f 90       	pop	r0
    430c:	0f 90       	pop	r0
    430e:	0f 90       	pop	r0
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:401
  } /* jtag_scope_avr_core */

  /* Processing branches depending on the scope specifier. */
  /* Currently, four types of scope are known: */
  void jtag_scope_branch (void) {
    size_t _rspsize = 0;
    4310:	f1 2c       	mov	r15, r1
    4312:	e1 2c       	mov	r14, r1
    4314:	10 cf       	rjmp	.-480    	; 0x4136 <main+0xc9c>
jtag_scope_general():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:217
    else if (_cmd == 0x11) {        /* CMD3_SIGN_OFF */
      D1PRINTF(" GEN_SIGN_OFF\r\n");
      packet.in.res = 0x80;         /* RSP3_OK */
    }
    else {
      D1PRINTF(" GEN=%02X:%02X:%02X\r\n", _section, _index, _length);
    4316:	1f 92       	push	r1
    4318:	3f 92       	push	r3
    431a:	1f 92       	push	r1
    431c:	5f 92       	push	r5
    431e:	1f 92       	push	r1
    4320:	4f 92       	push	r4
    4322:	8f ec       	ldi	r24, 0xCF	; 207
    4324:	92 e0       	ldi	r25, 0x02	; 2
    4326:	9f 93       	push	r25
    4328:	8f 93       	push	r24
    432a:	1f 93       	push	r17
    432c:	0f 93       	push	r16
    432e:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
    4332:	d7 cf       	rjmp	.-82     	; 0x42e2 <main+0xe48>
jtag_scope_branch():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:416
  #ifdef _Not_yet_implemented_stub_
    else if (_scope == 0x00) _rspsize = jtag_scope_info();          /* SCOPE_INFO */ /* Not used with EDBG/CMSIS-DAP type */
    else if (_scope == 0x11) _rspsize = ISP::jtag_scope_isp();      /* SCOPE_AVR_ISP */
    else if (_scope == 0x13) _rspsize = AVR32::jtag_scope_avr32();  /* SCOPE_AVR32 */
  #endif
    else if (_scope == 0x12) _rspsize = jtag_scope_avr_core();      /* SCOPE_AVR */
    4334:	f2 e1       	ldi	r31, 0x12	; 18
    4336:	ff 12       	cpse	r15, r31
    4338:	93 c3       	rjmp	.+1830   	; 0x4a60 <main+0x15c6>
jtag_scope_avr_core():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:264
  }

  /* The AVR scope is further branched by the ARCH designator. */
  size_t jtag_scope_avr_core (void) {
    size_t  _rspsize = 0;
    uint8_t _cmd     = packet.out.cmd;
    433a:	80 91 05 61 	lds	r24, 0x6105	; 0x806105 <packet+0x5>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:265
    uint8_t _section = packet.out.section;
    433e:	d0 90 07 61 	lds	r13, 0x6107	; 0x806107 <packet+0x7>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:266
    uint8_t _index   = packet.out.index;
    4342:	c0 90 08 61 	lds	r12, 0x6108	; 0x806108 <packet+0x8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:267
    uint8_t _length  = packet.out.length;
    4346:	50 90 09 61 	lds	r5, 0x6109	; 0x806109 <packet+0x9>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:268
    if (_cmd == 0x01) {             /* CMD3_SET_PARAMETER */
    434a:	81 30       	cpi	r24, 0x01	; 1
    434c:	09 f0       	breq	.+2      	; 0x4350 <main+0xeb6>
    434e:	ce c0       	rjmp	.+412    	; 0x44ec <main+0x1052>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:269
      uint16_t _data = packet.out.wValue;
    4350:	e0 90 0a 61 	lds	r14, 0x610A	; 0x80610a <packet+0xa>
    4354:	f0 90 0b 61 	lds	r15, 0x610B	; 0x80610b <packet+0xb>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:270
      D1PRINTF(" AVR_SET_PARAM=%02X:%02X:%02X:%04X\r\n", _section, _index, _length, _data);
    4358:	ff 92       	push	r15
    435a:	ef 92       	push	r14
    435c:	1f 92       	push	r1
    435e:	5f 92       	push	r5
    4360:	1f 92       	push	r1
    4362:	cf 92       	push	r12
    4364:	1f 92       	push	r1
    4366:	df 92       	push	r13
    4368:	81 e8       	ldi	r24, 0x81	; 129
    436a:	95 e0       	ldi	r25, 0x05	; 5
    436c:	9f 93       	push	r25
    436e:	8f 93       	push	r24
    4370:	1f 93       	push	r17
    4372:	0f 93       	push	r16
    4374:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:271
      if (_section == 0) {          /* SET_GET_CTXT_CONFIG */
    4378:	cd bf       	out	0x3d, r28	; 61
    437a:	de bf       	out	0x3e, r29	; 62
    437c:	d1 10       	cpse	r13, r1
    437e:	3b c0       	rjmp	.+118    	; 0x43f6 <main+0xf5c>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:272
        if (_index == 0) {          /* PARM3_ARCH */
    4380:	c1 10       	cpse	r12, r1
    4382:	31 c0       	rjmp	.+98     	; 0x43e6 <main+0xf4c>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:273
          D1PRINTF(" ARCH=%02X\r\n", _data);
    4384:	ff 92       	push	r15
    4386:	ef 92       	push	r14
    4388:	84 e7       	ldi	r24, 0x74	; 116
    438a:	95 e0       	ldi	r25, 0x05	; 5
    438c:	9f 93       	push	r25
    438e:	8f 93       	push	r24
    4390:	1f 93       	push	r17
    4392:	0f 93       	push	r16
    4394:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:274
          _jtag_arch = _data;       /* 5:UPDI 3:PDI */
    4398:	e0 92 56 63 	sts	0x6356, r14	; 0x806356 <_jtag_arch>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:275
          if (_jtag_arch == 3) {
    439c:	0f 90       	pop	r0
    439e:	0f 90       	pop	r0
    43a0:	0f 90       	pop	r0
    43a2:	0f 90       	pop	r0
    43a4:	0f 90       	pop	r0
    43a6:	0f 90       	pop	r0
    43a8:	33 e0       	ldi	r19, 0x03	; 3
    43aa:	e3 12       	cpse	r14, r19
    43ac:	01 c0       	rjmp	.+2      	; 0x43b0 <main+0xf16>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:277
            #ifdef PIN_PGM_PDAT
            openDrainWriteMacro(PIN_PGM_PDAT, LOW);
    43ae:	04 9a       	sbi	0x00, 4	; 0
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:280
            #endif
          }
          _xclk = _data == 5 ? UPDI_CLK : PDI_CLK;
    43b0:	81 ee       	ldi	r24, 0xE1	; 225
    43b2:	90 e0       	ldi	r25, 0x00	; 0
jtag_scope_avr_core():
    43b4:	45 e0       	ldi	r20, 0x05	; 5
    43b6:	e4 16       	cp	r14, r20
    43b8:	f1 04       	cpc	r15, r1
    43ba:	11 f0       	breq	.+4      	; 0x43c0 <main+0xf26>
main():
    43bc:	84 ec       	ldi	r24, 0xC4	; 196
    43be:	99 e0       	ldi	r25, 0x09	; 9
jtag_scope_avr_core():
    43c0:	80 93 57 63 	sts	0x6357, r24	; 0x806357 <_xclk>
    43c4:	90 93 58 63 	sts	0x6358, r25	; 0x806358 <_xclk+0x1>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:281
          _xclk_bak = _xclk;
    43c8:	80 93 bc 60 	sts	0x60BC, r24	; 0x8060bc <_xclk_bak>
    43cc:	90 93 bd 60 	sts	0x60BD, r25	; 0x8060bd <_xclk_bak+0x1>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:282
          D1PRINTF(" XCLK=%d\r\n", _xclk);
    43d0:	9f 93       	push	r25
    43d2:	8f 93       	push	r24
    43d4:	89 e6       	ldi	r24, 0x69	; 105
    43d6:	95 e0       	ldi	r25, 0x05	; 5
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:357
        }
        else if (_index == 7) {     /* PARM3_OPT_CHIP_ERASE_TO_ENTER */
          /* This is a stub that shows no signs of being used. */
          /* force unlock chip-erase */
          /* This might be called having no `-e` or `-D`, but having `-F`. */
          D1PRINTF(" UNLOCKEN=%02X\r\n", _data);
    43d8:	9f 93       	push	r25
    43da:	8f 93       	push	r24
    43dc:	1f 93       	push	r17
    43de:	0f 93       	push	r16
    43e0:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
    43e4:	19 c0       	rjmp	.+50     	; 0x4418 <main+0xf7e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:284
          }
          _xclk = _data == 5 ? UPDI_CLK : PDI_CLK;
          _xclk_bak = _xclk;
          D1PRINTF(" XCLK=%d\r\n", _xclk);
        }
        else if (_index == 1) {     /* PARM3_SESS_PURPOSE */
    43e6:	81 e0       	ldi	r24, 0x01	; 1
    43e8:	c8 12       	cpse	r12, r24
    43ea:	46 c0       	rjmp	.+140    	; 0x4478 <main+0xfde>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:285
          D1PRINTF(" SESS_PURPOSE=%02X\r\n", _data);
    43ec:	ff 92       	push	r15
    43ee:	ef 92       	push	r14
    43f0:	84 e5       	ldi	r24, 0x54	; 84
    43f2:	95 e0       	ldi	r25, 0x05	; 5
    43f4:	f1 cf       	rjmp	.-30     	; 0x43d8 <main+0xf3e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:289
          _jtag_sess = _data;
        }
      }
      else if (_section == 1) {     /* SET_GET_CTXT_PHYSICAL */
    43f6:	91 e0       	ldi	r25, 0x01	; 1
    43f8:	d9 12       	cpse	r13, r25
    43fa:	45 c0       	rjmp	.+138    	; 0x4486 <main+0xfec>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:290
        if (_index == 0) {          /* PARM3_CONNECTION */
    43fc:	c1 10       	cpse	r12, r1
    43fe:	13 c0       	rjmp	.+38     	; 0x4426 <main+0xf8c>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:291
          D1PRINTF(" CONNECTION=%02X\r\n", _data);
    4400:	ff 92       	push	r15
    4402:	ef 92       	push	r14
    4404:	81 e4       	ldi	r24, 0x41	; 65
    4406:	95 e0       	ldi	r25, 0x05	; 5
    4408:	9f 93       	push	r25
    440a:	8f 93       	push	r24
    440c:	1f 93       	push	r17
    440e:	0f 93       	push	r16
    4410:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:292
          _jtag_conn = _data;       /* 8:PARM3_CONN_UPDI */
    4414:	e0 92 bb 60 	sts	0x60BB, r14	; 0x8060bb <_jtag_conn>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:357
        }
        else if (_index == 7) {     /* PARM3_OPT_CHIP_ERASE_TO_ENTER */
          /* This is a stub that shows no signs of being used. */
          /* force unlock chip-erase */
          /* This might be called having no `-e` or `-D`, but having `-F`. */
          D1PRINTF(" UNLOCKEN=%02X\r\n", _data);
    4418:	0f 90       	pop	r0
    441a:	0f 90       	pop	r0
    441c:	0f 90       	pop	r0
    441e:	0f 90       	pop	r0
    4420:	0f 90       	pop	r0
    4422:	0f 90       	pop	r0
    4424:	29 c0       	rjmp	.+82     	; 0x4478 <main+0xfde>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:294
      else if (_section == 1) {     /* SET_GET_CTXT_PHYSICAL */
        if (_index == 0) {          /* PARM3_CONNECTION */
          D1PRINTF(" CONNECTION=%02X\r\n", _data);
          _jtag_conn = _data;       /* 8:PARM3_CONN_UPDI */
        }
        else if (_index == 0x31) {  /* PARM3_CLK_XMEGA_PDI */
    4426:	e1 e3       	ldi	r30, 0x31	; 49
    4428:	ce 12       	cpse	r12, r30
    442a:	26 c0       	rjmp	.+76     	; 0x4478 <main+0xfde>
    442c:	f8 e2       	ldi	r31, 0x28	; 40
    442e:	ef 16       	cp	r14, r31
    4430:	f1 04       	cpc	r15, r1
    4432:	18 f4       	brcc	.+6      	; 0x443a <main+0xfa0>
    4434:	38 e2       	ldi	r19, 0x28	; 40
    4436:	e3 2e       	mov	r14, r19
    4438:	f1 2c       	mov	r15, r1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:299
          /* Called with `-B xclk[unit]`. */
          /* XCLK Range Limitation : LSB=kHz */
          if (_data < 40) _data = 40;
  #if defined(DEBUG)
          if (_xclk != _data) D1PRINTF(" FIX_XCLK=%d\r\n", _xclk);
    443a:	80 91 57 63 	lds	r24, 0x6357	; 0x806357 <_xclk>
    443e:	90 91 58 63 	lds	r25, 0x6358	; 0x806358 <_xclk+0x1>
    4442:	e8 16       	cp	r14, r24
    4444:	f9 06       	cpc	r15, r25
    4446:	81 f0       	breq	.+32     	; 0x4468 <main+0xfce>
    4448:	9f 93       	push	r25
    444a:	8f 93       	push	r24
    444c:	82 e3       	ldi	r24, 0x32	; 50
    444e:	95 e0       	ldi	r25, 0x05	; 5
    4450:	9f 93       	push	r25
    4452:	8f 93       	push	r24
    4454:	1f 93       	push	r17
    4456:	0f 93       	push	r16
    4458:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
    445c:	0f 90       	pop	r0
    445e:	0f 90       	pop	r0
    4460:	0f 90       	pop	r0
    4462:	0f 90       	pop	r0
    4464:	0f 90       	pop	r0
    4466:	0f 90       	pop	r0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:301
  #endif
          _xclk = _xclk_bak = _data;
    4468:	e0 92 bc 60 	sts	0x60BC, r14	; 0x8060bc <_xclk_bak>
    446c:	f0 92 bd 60 	sts	0x60BD, r15	; 0x8060bd <_xclk_bak+0x1>
    4470:	e0 92 57 63 	sts	0x6357, r14	; 0x806357 <_xclk>
    4474:	f0 92 58 63 	sts	0x6358, r15	; 0x806358 <_xclk+0x1>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:361
          /* This might be called having no `-e` or `-D`, but having `-F`. */
          D1PRINTF(" UNLOCKEN=%02X\r\n", _data);
          _jtag_unlock = _data;     /* 1:ENABLE */
        }
      }
      packet.in.res = 0x80;         /* RSP3_OK */
    4478:	80 e8       	ldi	r24, 0x80	; 128
    447a:	90 e0       	ldi	r25, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:394
  #endif
  #ifdef CONFIG_PGM_PDI_ENABLE
    else if (_jtag_arch == 0x03) _rspsize = PDI::jtag_scope_xmega();    /* XMEGA support */
  #endif
    else if (_jtag_arch == 0x05) _rspsize = UPDI::jtag_scope_updi();    /* UPDI support */
    else packet.in.res = 0xA0;      /* RSP3_FAILED */
    447c:	80 93 05 61 	sts	0x6105, r24	; 0x806105 <packet+0x5>
    4480:	90 93 06 61 	sts	0x6106, r25	; 0x806106 <packet+0x6>
    4484:	45 cf       	rjmp	.-374    	; 0x4310 <main+0xe76>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:304
          if (_xclk != _data) D1PRINTF(" FIX_XCLK=%d\r\n", _xclk);
  #endif
          _xclk = _xclk_bak = _data;
        }
      }
      else if (_section == 2) {     /* SET_GET_CTXT_DEVICE */
    4486:	22 e0       	ldi	r18, 0x02	; 2
    4488:	d2 12       	cpse	r13, r18
    448a:	15 c0       	rjmp	.+42     	; 0x44b6 <main+0x101c>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:305
        if (_index == 0) {          /* PARM3_DEVICEDESC */
    448c:	c1 10       	cpse	r12, r1
    448e:	f4 cf       	rjmp	.-24     	; 0x4478 <main+0xfde>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:306
          D1PRINTF(" DEVICEDESC=%X\r\n", _length);
    4490:	1f 92       	push	r1
    4492:	5f 92       	push	r5
    4494:	81 e2       	ldi	r24, 0x21	; 33
    4496:	95 e0       	ldi	r25, 0x05	; 5
    4498:	9f 93       	push	r25
    449a:	8f 93       	push	r24
    449c:	1f 93       	push	r17
    449e:	0f 93       	push	r16
    44a0:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:307
          memcpy(&Device_Descriptor, &packet.out.setData[0], _length & 63);
    44a4:	45 2d       	mov	r20, r5
    44a6:	4f 73       	andi	r20, 0x3F	; 63
    44a8:	50 e0       	ldi	r21, 0x00	; 0
    44aa:	6a e0       	ldi	r22, 0x0A	; 10
    44ac:	71 e6       	ldi	r23, 0x61	; 97
    44ae:	8e e1       	ldi	r24, 0x1E	; 30
    44b0:	93 e6       	ldi	r25, 0x63	; 99
    44b2:	da d7       	rcall	.+4020   	; 0x5468 <memcpy>
    44b4:	b1 cf       	rjmp	.-158    	; 0x4418 <main+0xf7e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:347
          }
          /* STUB: And other descriptors. */
  #endif
        }
      }
      else if (_section == 3) {     /* SET_GET_CTXT_OPTIONS */
    44b6:	33 e0       	ldi	r19, 0x03	; 3
    44b8:	d3 12       	cpse	r13, r19
    44ba:	de cf       	rjmp	.-68     	; 0x4478 <main+0xfde>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:348
        if (_index == 6) {          /* PARM3_OPT_12V_UPDI_ENABLE */
    44bc:	46 e0       	ldi	r20, 0x06	; 6
    44be:	c4 12       	cpse	r12, r20
    44c0:	0d c0       	rjmp	.+26     	; 0x44dc <main+0x1042>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:350
          /* Called with `-xhvupdi` hvupdi_support */
          D1PRINTF(" HVCTRLEN=%02X\r\n", _data);
    44c2:	ff 92       	push	r15
    44c4:	ef 92       	push	r14
    44c6:	80 e1       	ldi	r24, 0x10	; 16
    44c8:	95 e0       	ldi	r25, 0x05	; 5
    44ca:	9f 93       	push	r25
    44cc:	8f 93       	push	r24
    44ce:	1f 93       	push	r17
    44d0:	0f 93       	push	r16
    44d2:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:351
          _jtag_hvctrl = _data;     /* 1:ENABLE */
    44d6:	e0 92 ff 60 	sts	0x60FF, r14	; 0x8060ff <_jtag_hvctrl>
    44da:	9e cf       	rjmp	.-196    	; 0x4418 <main+0xf7e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:353
        }
        else if (_index == 7) {     /* PARM3_OPT_CHIP_ERASE_TO_ENTER */
    44dc:	87 e0       	ldi	r24, 0x07	; 7
    44de:	c8 12       	cpse	r12, r24
    44e0:	cb cf       	rjmp	.-106    	; 0x4478 <main+0xfde>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:357
          /* This is a stub that shows no signs of being used. */
          /* force unlock chip-erase */
          /* This might be called having no `-e` or `-D`, but having `-F`. */
          D1PRINTF(" UNLOCKEN=%02X\r\n", _data);
    44e2:	ff 92       	push	r15
    44e4:	ef 92       	push	r14
    44e6:	8f ef       	ldi	r24, 0xFF	; 255
    44e8:	94 e0       	ldi	r25, 0x04	; 4
    44ea:	76 cf       	rjmp	.-276    	; 0x43d8 <main+0xf3e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:363
          _jtag_unlock = _data;     /* 1:ENABLE */
        }
      }
      packet.in.res = 0x80;         /* RSP3_OK */
    }
    else if (_cmd == 0x02) {        /* CMD3_GET_PARAMETER */
    44ec:	82 30       	cpi	r24, 0x02	; 2
    44ee:	09 f0       	breq	.+2      	; 0x44f2 <main+0x1058>
    44f0:	5b c0       	rjmp	.+182    	; 0x45a8 <main+0x110e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:364
      D1PRINTF(" AVR_GET_PARAMETER=%02X:%02X:%02X\r\n", _section, _index, _length);
    44f2:	e5 2c       	mov	r14, r5
    44f4:	f1 2c       	mov	r15, r1
    44f6:	1f 92       	push	r1
    44f8:	5f 92       	push	r5
    44fa:	1f 92       	push	r1
    44fc:	cf 92       	push	r12
    44fe:	1f 92       	push	r1
    4500:	df 92       	push	r13
    4502:	8b ed       	ldi	r24, 0xDB	; 219
    4504:	94 e0       	ldi	r25, 0x04	; 4
    4506:	9f 93       	push	r25
    4508:	8f 93       	push	r24
    450a:	1f 93       	push	r17
    450c:	0f 93       	push	r16
    450e:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:365
      if (_section == 0) {          /* SET_GET_CTXT_CONFIG */
    4512:	cd bf       	out	0x3d, r28	; 61
    4514:	de bf       	out	0x3e, r29	; 62
    4516:	d1 10       	cpse	r13, r1
    4518:	19 c0       	rjmp	.+50     	; 0x454c <main+0x10b2>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:366
        if (_index == 0) {          /* PARM3_ARCH */
    451a:	c1 10       	cpse	r12, r1
    451c:	03 ce       	rjmp	.-1018   	; 0x4124 <main+0xc8a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:367
          D1PRINTF(" ARCH=%02X\r\n", _jtag_arch);
    451e:	80 91 56 63 	lds	r24, 0x6356	; 0x806356 <_jtag_arch>
    4522:	1f 92       	push	r1
    4524:	8f 93       	push	r24
    4526:	8e ec       	ldi	r24, 0xCE	; 206
    4528:	94 e0       	ldi	r25, 0x04	; 4
    452a:	9f 93       	push	r25
    452c:	8f 93       	push	r24
    452e:	1f 93       	push	r17
    4530:	0f 93       	push	r16
    4532:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:368
          packet.in.data[0] = _jtag_arch;
    4536:	80 91 56 63 	lds	r24, 0x6356	; 0x806356 <_jtag_arch>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:375
      }
      else if (_section == 1) {     /* SET_GET_CTXT_PHYSICAL */
        if (_index == 0) {          /* PARM3_CONNECTION */
          /* This is a stub that is called but not used. */
          D1PRINTF(" CONNECTION=%02X\r\n", _jtag_conn);
          packet.in.data[0] = _jtag_conn;
    453a:	80 93 07 61 	sts	0x6107, r24	; 0x806107 <packet+0x7>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:380
        }
        else if (_index == 0x31) {  /* PARM3_CLK_XMEGA_PDI */
          /* `-B <num>khz` : "khz" units are required. */
          D1PRINTF(" XCLK=%d\r\n", _xclk);
          packet.in.wValue = _xclk;
    453e:	0f 90       	pop	r0
    4540:	0f 90       	pop	r0
    4542:	0f 90       	pop	r0
    4544:	0f 90       	pop	r0
    4546:	0f 90       	pop	r0
    4548:	0f 90       	pop	r0
    454a:	ec cd       	rjmp	.-1064   	; 0x4124 <main+0xc8a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:371
        if (_index == 0) {          /* PARM3_ARCH */
          D1PRINTF(" ARCH=%02X\r\n", _jtag_arch);
          packet.in.data[0] = _jtag_arch;
        }
      }
      else if (_section == 1) {     /* SET_GET_CTXT_PHYSICAL */
    454c:	f1 e0       	ldi	r31, 0x01	; 1
    454e:	df 12       	cpse	r13, r31
    4550:	e9 cd       	rjmp	.-1070   	; 0x4124 <main+0xc8a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:372
        if (_index == 0) {          /* PARM3_CONNECTION */
    4552:	c1 10       	cpse	r12, r1
    4554:	0f c0       	rjmp	.+30     	; 0x4574 <main+0x10da>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:374
          /* This is a stub that is called but not used. */
          D1PRINTF(" CONNECTION=%02X\r\n", _jtag_conn);
    4556:	80 91 bb 60 	lds	r24, 0x60BB	; 0x8060bb <_jtag_conn>
    455a:	1f 92       	push	r1
    455c:	8f 93       	push	r24
    455e:	8b eb       	ldi	r24, 0xBB	; 187
    4560:	94 e0       	ldi	r25, 0x04	; 4
    4562:	9f 93       	push	r25
    4564:	8f 93       	push	r24
    4566:	1f 93       	push	r17
    4568:	0f 93       	push	r16
    456a:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:375
          packet.in.data[0] = _jtag_conn;
    456e:	80 91 bb 60 	lds	r24, 0x60BB	; 0x8060bb <_jtag_conn>
    4572:	e3 cf       	rjmp	.-58     	; 0x453a <main+0x10a0>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:377
        }
        else if (_index == 0x31) {  /* PARM3_CLK_XMEGA_PDI */
    4574:	21 e3       	ldi	r18, 0x31	; 49
    4576:	c2 12       	cpse	r12, r18
    4578:	d5 cd       	rjmp	.-1110   	; 0x4124 <main+0xc8a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:379
          /* `-B <num>khz` : "khz" units are required. */
          D1PRINTF(" XCLK=%d\r\n", _xclk);
    457a:	80 91 58 63 	lds	r24, 0x6358	; 0x806358 <_xclk+0x1>
    457e:	8f 93       	push	r24
    4580:	80 91 57 63 	lds	r24, 0x6357	; 0x806357 <_xclk>
    4584:	8f 93       	push	r24
    4586:	80 eb       	ldi	r24, 0xB0	; 176
    4588:	94 e0       	ldi	r25, 0x04	; 4
    458a:	9f 93       	push	r25
    458c:	8f 93       	push	r24
    458e:	1f 93       	push	r17
    4590:	0f 93       	push	r16
    4592:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:380
          packet.in.wValue = _xclk;
    4596:	80 91 57 63 	lds	r24, 0x6357	; 0x806357 <_xclk>
    459a:	90 91 58 63 	lds	r25, 0x6358	; 0x806358 <_xclk+0x1>
    459e:	80 93 07 61 	sts	0x6107, r24	; 0x806107 <packet+0x7>
    45a2:	90 93 08 61 	sts	0x6108, r25	; 0x806108 <packet+0x8>
    45a6:	cb cf       	rjmp	.-106    	; 0x453e <main+0x10a4>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:391
  #ifdef _Not_yet_implemented_stub_
    else if (_jtag_arch == 0x01) _rspsize = DWI::jtag_scope_tiny();     /* dWire? */
    else if (_jtag_arch == 0x02) _rspsize = ISP::jtag_scope_mega();     /* MEGA */
  #endif
  #ifdef CONFIG_PGM_PDI_ENABLE
    else if (_jtag_arch == 0x03) _rspsize = PDI::jtag_scope_xmega();    /* XMEGA support */
    45a8:	90 91 56 63 	lds	r25, 0x6356	; 0x806356 <_jtag_arch>
    45ac:	93 30       	cpi	r25, 0x03	; 3
    45ae:	09 f0       	breq	.+2      	; 0x45b2 <main+0x1118>
    45b0:	0e c1       	rjmp	.+540    	; 0x47ce <main+0x1334>
jtag_scope_xmega():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:383
  }

  size_t jtag_scope_xmega (void) {
    size_t _rspsize = 0;
    uint8_t _cmd = packet.out.cmd;
    if (_cmd == 0x10) {             /* CMD3_SIGN_ON */
    45b2:	80 31       	cpi	r24, 0x10	; 16
    45b4:	19 f5       	brne	.+70     	; 0x45fc <main+0x1162>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:384
      D1PRINTF(" PDI_SIGN_ON=EXT:%02X\r\n", packet.out.bMType);
    45b6:	1f 92       	push	r1
    45b8:	df 92       	push	r13
    45ba:	84 ee       	ldi	r24, 0xE4	; 228
    45bc:	93 e0       	ldi	r25, 0x03	; 3
    45be:	9f 93       	push	r25
    45c0:	8f 93       	push	r24
    45c2:	1f 93       	push	r17
    45c4:	0f 93       	push	r16
    45c6:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:385
      _rspsize = Timeout::command(&connect);
    45ca:	40 e2       	ldi	r20, 0x20	; 32
    45cc:	53 e0       	ldi	r21, 0x03	; 3
    45ce:	70 e0       	ldi	r23, 0x00	; 0
    45d0:	60 e0       	ldi	r22, 0x00	; 0
    45d2:	8e ec       	ldi	r24, 0xCE	; 206
    45d4:	94 e1       	ldi	r25, 0x14	; 20
    45d6:	0e 94 c8 19 	call	0x3390	; 0x3390 <Timeout::command(unsigned int (*)(), unsigned int (*)(), unsigned int)>
    45da:	7c 01       	movw	r14, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:386
      packet.in.res = _rspsize ? 0x84 : 0xA0; /* RSP3_DATA : RSP3_FAILED */
    45dc:	0f 90       	pop	r0
    45de:	0f 90       	pop	r0
    45e0:	0f 90       	pop	r0
    45e2:	0f 90       	pop	r0
    45e4:	0f 90       	pop	r0
    45e6:	0f 90       	pop	r0
    45e8:	89 2b       	or	r24, r25
    45ea:	09 f4       	brne	.+2      	; 0x45ee <main+0x1154>
    45ec:	c7 c0       	rjmp	.+398    	; 0x477c <main+0x12e2>
jtag_scope_updi():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:498
    if (_cmd == 0x10) {             /* CMD3_SIGN_ON */
      D1PRINTF(" UPDI_SIGN_ON=EXT:%02X\r\n", packet.out.bMType);
      _xclk = _xclk_bak;
      while (!(_rspsize = Timeout::command(&connect, nullptr, 150))) _xclk -= 25;
      /* If it fails here, it is expected to try again, giving it a chance at HV control. */
      packet.in.res = _rspsize ? 0x84 : 0xA0; /* RSP3_DATA : RSP3_FAILED */
    45ee:	84 e8       	ldi	r24, 0x84	; 132
    45f0:	90 e0       	ldi	r25, 0x00	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:559
    else if (_cmd == 0x23) {        /* CMD3_WRITE_MEMORY */
      D1PRINTF(" UPDI_WRITE=%02X:%06lX:%04X\r\n", packet.out.bMType,
        packet.out.dwAddr, (size_t)packet.out.dwLength);
      _rspsize = Timeout::command(Command_Table.write_memory, &timeout_fallback);
    }
    packet.in.res = _rspsize ? 0x80 : 0xA0;     /* RSP3_OK : RSP3_FAILED */
    45f2:	80 93 05 61 	sts	0x6105, r24	; 0x806105 <packet+0x5>
    45f6:	90 93 06 61 	sts	0x6106, r25	; 0x806106 <packet+0x6>
    45fa:	9d cd       	rjmp	.-1222   	; 0x4136 <main+0xc9c>
jtag_scope_xmega():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:389
      return _rspsize;
    }
    else if (_cmd == 0x11) {        /* CMD3_SIGN_OFF */
    45fc:	81 31       	cpi	r24, 0x11	; 17
    45fe:	b9 f5       	brne	.+110    	; 0x466e <main+0x11d4>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:390
      D1PRINTF(" PDI_SIGN_OFF\r\n");
    4600:	84 ed       	ldi	r24, 0xD4	; 212
    4602:	93 e0       	ldi	r25, 0x03	; 3
    4604:	9f 93       	push	r25
    4606:	8f 93       	push	r24
    4608:	1f 93       	push	r17
    460a:	0f 93       	push	r16
    460c:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:392
      /* If UPDI control has failed, RSP3_OK is always returned. */
      _rspsize = Timeout::command(&disconnect);
    4610:	40 e2       	ldi	r20, 0x20	; 32
    4612:	53 e0       	ldi	r21, 0x03	; 3
    4614:	70 e0       	ldi	r23, 0x00	; 0
    4616:	60 e0       	ldi	r22, 0x00	; 0
    4618:	80 e1       	ldi	r24, 0x10	; 16
    461a:	9a e0       	ldi	r25, 0x0A	; 10
    461c:	0e 94 c8 19 	call	0x3390	; 0x3390 <Timeout::command(unsigned int (*)(), unsigned int (*)(), unsigned int)>
    4620:	7c 01       	movw	r14, r24
delay_micros():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/delay_busywait.h:33
static __inline__ __attribute__((__always_inline__)) void delay_micros (uint32_t _us);
static __inline__ __attribute__((__always_inline__)) void delay_millis (uint32_t _ms);

void delay_micros (uint32_t _us) {
  if (F_CPU >= 1000000L) {
    __builtin_avr_delay_cycles((F_CPU / 1000000L) * _us);
    4622:	83 ef       	ldi	r24, 0xF3	; 243
    4624:	91 e0       	ldi	r25, 0x01	; 1
    4626:	01 97       	sbiw	r24, 0x01	; 1
    4628:	f1 f7       	brne	.-4      	; 0x4626 <main+0x118c>
    462a:	00 c0       	rjmp	.+0      	; 0x462c <main+0x1192>
    462c:	00 00       	nop
jtag_scope_xmega():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:394
      SYS::delay_100us();
      USART::setup();
    462e:	0e 94 75 0f 	call	0x1eea	; 0x1eea <USART::setup()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:395
      pinLogicOpen(PIN_PGM_PDAT);
    4632:	04 98       	cbi	0x00, 4	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:396
      pinControlRegister(PIN_PGM_PCLK) = 0;
    4634:	10 92 16 04 	sts	0x0416, r1	; 0x800416 <__TEXT_REGION_LENGTH__+0x7f0416>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:397
      digitalWriteMacro(PIN_PGM_PCLK, LOW);
    4638:	0e 98       	cbi	0x01, 6	; 1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:398
      pinLogicPush(PIN_PGM_PCLK);
    463a:	06 9a       	sbi	0x00, 6	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:399
      if (bit_is_set(PGCONF, PGCONF_PROG_bp)) {
    463c:	0f 90       	pop	r0
    463e:	0f 90       	pop	r0
    4640:	0f 90       	pop	r0
    4642:	0f 90       	pop	r0
    4644:	f9 9b       	sbis	0x1f, 1	; 31
    4646:	0a c0       	rjmp	.+20     	; 0x465c <main+0x11c2>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:400
        SYS::power_reset();
    4648:	61 e0       	ldi	r22, 0x01	; 1
    464a:	81 e0       	ldi	r24, 0x01	; 1
    464c:	0e 94 a6 14 	call	0x294c	; 0x294c <SYS::power_reset(bool, bool)>
delay_micros():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/delay_busywait.h:33
    4650:	e3 ed       	ldi	r30, 0xD3	; 211
    4652:	f0 e3       	ldi	r31, 0x30	; 48
    4654:	31 97       	sbiw	r30, 0x01	; 1
    4656:	f1 f7       	brne	.-4      	; 0x4654 <main+0x11ba>
    4658:	00 c0       	rjmp	.+0      	; 0x465a <main+0x11c0>
    465a:	00 00       	nop
jtag_scope_xmega():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:403
        SYS::delay_2500us();
      }
      pinLogicOpen(PIN_PGM_PCLK);
    465c:	06 98       	cbi	0x00, 6	; 0
jtag_scope_updi():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:511
      USART::setup();
      pinLogicPush(PIN_PGM_TRST);
      SYS::power_reset();
      SYS::delay_2500us();
      pinLogicOpen(PIN_PGM_TRST);
      PGCONF = 0;
    465e:	1f ba       	out	0x1f, r1	; 31
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:512
      USART::change_vcp();
    4660:	0e 94 3c 0c 	call	0x1878	; 0x1878 <USART::change_vcp()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:559
    else if (_cmd == 0x23) {        /* CMD3_WRITE_MEMORY */
      D1PRINTF(" UPDI_WRITE=%02X:%06lX:%04X\r\n", packet.out.bMType,
        packet.out.dwAddr, (size_t)packet.out.dwLength);
      _rspsize = Timeout::command(Command_Table.write_memory, &timeout_fallback);
    }
    packet.in.res = _rspsize ? 0x80 : 0xA0;     /* RSP3_OK : RSP3_FAILED */
    4664:	e1 14       	cp	r14, r1
    4666:	f1 04       	cpc	r15, r1
    4668:	09 f4       	brne	.+2      	; 0x466c <main+0x11d2>
    466a:	88 c0       	rjmp	.+272    	; 0x477c <main+0x12e2>
    466c:	2f c0       	rjmp	.+94     	; 0x46cc <main+0x1232>
jtag_scope_xmega():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:407
      PGCONF = 0;
      USART::change_vcp();
    }
    else if (_cmd == 0x15) {        /* CMD3_ENTER_PROGMODE */
    466e:	85 31       	cpi	r24, 0x15	; 21
    4670:	e1 f4       	brne	.+56     	; 0x46aa <main+0x1210>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:408
      D1PRINTF(" PDI_ENTER_PROG\r\n");
    4672:	82 ec       	ldi	r24, 0xC2	; 194
    4674:	93 e0       	ldi	r25, 0x03	; 3
    4676:	9f 93       	push	r25
    4678:	8f 93       	push	r24
    467a:	1f 93       	push	r17
    467c:	0f 93       	push	r16
    467e:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:410
      /* On failure, RSP3_OK is returned if a PDI connection is available. */
      _rspsize = Timeout::command(&enter_progmode, &timeout_fallback) || bit_is_set(PGCONF, PGCONF_UPDI_bp);
    4682:	40 e2       	ldi	r20, 0x20	; 32
    4684:	53 e0       	ldi	r21, 0x03	; 3
    4686:	6a e6       	ldi	r22, 0x6A	; 106
    4688:	7d e0       	ldi	r23, 0x0D	; 13
    468a:	8b e9       	ldi	r24, 0x9B	; 155
    468c:	9d e0       	ldi	r25, 0x0D	; 13
jtag_scope_updi():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:518
    }
    else if (_cmd == 0x15) {        /* CMD3_ENTER_PROGMODE */
      D1PRINTF(" UPDI_ENTER_PROG\r\n");
      /* On failure, RSP3_OK is returned if a UPDI connection is available. */
      /* Locked devices are given the opportunity to write to USERROW and erase the chip. */
      _rspsize = Timeout::command(&enter_progmode, &timeout_fallback, 400)
    468e:	0e 94 c8 19 	call	0x3390	; 0x3390 <Timeout::command(unsigned int (*)(), unsigned int (*)(), unsigned int)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:519
              || bit_is_set(PGCONF, PGCONF_UPDI_bp);
    4692:	0f 90       	pop	r0
    4694:	0f 90       	pop	r0
    4696:	0f 90       	pop	r0
    4698:	0f 90       	pop	r0
    469a:	89 2b       	or	r24, r25
    469c:	21 f4       	brne	.+8      	; 0x46a6 <main+0x120c>
    469e:	ef b2       	in	r14, 0x1f	; 31
    46a0:	fe 2d       	mov	r31, r14
    46a2:	f1 70       	andi	r31, 0x01	; 1
    46a4:	ef 2e       	mov	r14, r31
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:518
    }
    else if (_cmd == 0x15) {        /* CMD3_ENTER_PROGMODE */
      D1PRINTF(" UPDI_ENTER_PROG\r\n");
      /* On failure, RSP3_OK is returned if a UPDI connection is available. */
      /* Locked devices are given the opportunity to write to USERROW and erase the chip. */
      _rspsize = Timeout::command(&enter_progmode, &timeout_fallback, 400)
    46a6:	f1 2c       	mov	r15, r1
    46a8:	dd cf       	rjmp	.-70     	; 0x4664 <main+0x11ca>
jtag_scope_xmega():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:412
    }
    else if (_cmd == 0x16) {        /* CMD3_LEAVE_PROGMODE */
    46aa:	86 31       	cpi	r24, 0x16	; 22
    46ac:	91 f4       	brne	.+36     	; 0x46d2 <main+0x1238>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:413
      D1PRINTF(" PDI_LEAVE_PROG\r\n");
    46ae:	80 eb       	ldi	r24, 0xB0	; 176
    46b0:	93 e0       	ldi	r25, 0x03	; 3
    46b2:	9f 93       	push	r25
    46b4:	8f 93       	push	r24
    46b6:	1f 93       	push	r17
    46b8:	0f 93       	push	r16
    46ba:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
    46be:	0f 90       	pop	r0
    46c0:	0f 90       	pop	r0
    46c2:	0f 90       	pop	r0
    46c4:	0f 90       	pop	r0
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:526
    else if (_cmd == 0x16) {        /* CMD3_LEAVE_PROGMODE */
      D1PRINTF(" UPDI_LEAVE_PROG\r\n");
      D1PRINTF(" LAST_XCLK=%d\r\n", _xclk);
      /* There is nothing to do. */
      /* The actual termination process is delayed until CMD3_SIGN_OFF. */
      _rspsize = 1;
    46c6:	ee 24       	eor	r14, r14
    46c8:	e3 94       	inc	r14
    46ca:	f1 2c       	mov	r15, r1
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:559
    else if (_cmd == 0x23) {        /* CMD3_WRITE_MEMORY */
      D1PRINTF(" UPDI_WRITE=%02X:%06lX:%04X\r\n", packet.out.bMType,
        packet.out.dwAddr, (size_t)packet.out.dwLength);
      _rspsize = Timeout::command(Command_Table.write_memory, &timeout_fallback);
    }
    packet.in.res = _rspsize ? 0x80 : 0xA0;     /* RSP3_OK : RSP3_FAILED */
    46cc:	80 e8       	ldi	r24, 0x80	; 128
    46ce:	90 e0       	ldi	r25, 0x00	; 0
    46d0:	90 cf       	rjmp	.-224    	; 0x45f2 <main+0x1158>
jtag_scope_xmega():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:418
      /* There is nothing to do. */
      /* The actual termination process is delayed until CMD3_SIGN_OFF. */
      _rspsize = 1;
    }
    else if (bit_is_clear(PGCONF, PGCONF_PROG_bp)) { /* empty */ }
    46d2:	f9 9b       	sbis	0x1f, 1	; 31
    46d4:	bf c1       	rjmp	.+894    	; 0x4a54 <main+0x15ba>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:419
    else if (_cmd == 0x20) {        /* CMD3_ERASE_MEMORY */
    46d6:	80 32       	cpi	r24, 0x20	; 32
    46d8:	11 f5       	brne	.+68     	; 0x471e <main+0x1284>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:420
      D1PRINTF(" PDI_ERASE=%02X:%08lX\r\n",
    46da:	80 91 0b 61 	lds	r24, 0x610B	; 0x80610b <packet+0xb>
    46de:	8f 93       	push	r24
    46e0:	80 91 0a 61 	lds	r24, 0x610A	; 0x80610a <packet+0xa>
    46e4:	8f 93       	push	r24
    46e6:	80 91 09 61 	lds	r24, 0x6109	; 0x806109 <packet+0x9>
    46ea:	8f 93       	push	r24
    46ec:	80 91 08 61 	lds	r24, 0x6108	; 0x806108 <packet+0x8>
    46f0:	8f 93       	push	r24
    46f2:	1f 92       	push	r1
    46f4:	df 92       	push	r13
    46f6:	88 e9       	ldi	r24, 0x98	; 152
    46f8:	93 e0       	ldi	r25, 0x03	; 3
    46fa:	9f 93       	push	r25
    46fc:	8f 93       	push	r24
    46fe:	1f 93       	push	r17
    4700:	0f 93       	push	r16
    4702:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:422
        packet.out.bEType, packet.out.dwPageAddr);
      _rspsize = Timeout::command(&erase_memory, &timeout_fallback);
    4706:	40 e2       	ldi	r20, 0x20	; 32
    4708:	53 e0       	ldi	r21, 0x03	; 3
    470a:	6a e6       	ldi	r22, 0x6A	; 106
    470c:	7d e0       	ldi	r23, 0x0D	; 13
    470e:	80 e7       	ldi	r24, 0x70	; 112
    4710:	9a e0       	ldi	r25, 0x0A	; 10
jtag_scope_updi():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:557
      return _rspsize;
    }
    else if (_cmd == 0x23) {        /* CMD3_WRITE_MEMORY */
      D1PRINTF(" UPDI_WRITE=%02X:%06lX:%04X\r\n", packet.out.bMType,
        packet.out.dwAddr, (size_t)packet.out.dwLength);
      _rspsize = Timeout::command(Command_Table.write_memory, &timeout_fallback);
    4712:	0e 94 c8 19 	call	0x3390	; 0x3390 <Timeout::command(unsigned int (*)(), unsigned int (*)(), unsigned int)>
    4716:	7c 01       	movw	r14, r24
    4718:	cd bf       	out	0x3d, r28	; 61
    471a:	de bf       	out	0x3e, r29	; 62
    471c:	a3 cf       	rjmp	.-186    	; 0x4664 <main+0x11ca>
jtag_scope_xmega():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:424
    }
    else if (_cmd == 0x21) {        /* CMD3_READ_MEMORY */
    471e:	81 32       	cpi	r24, 0x21	; 33
    4720:	81 f5       	brne	.+96     	; 0x4782 <main+0x12e8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:425
      D1PRINTF(" PDI_READ=%02X:%08lX:%04X\r\n", packet.out.bMType,
    4722:	80 91 0d 61 	lds	r24, 0x610D	; 0x80610d <packet+0xd>
    4726:	8f 93       	push	r24
    4728:	80 91 0c 61 	lds	r24, 0x610C	; 0x80610c <packet+0xc>
    472c:	8f 93       	push	r24
    472e:	80 91 0b 61 	lds	r24, 0x610B	; 0x80610b <packet+0xb>
    4732:	8f 93       	push	r24
    4734:	80 91 0a 61 	lds	r24, 0x610A	; 0x80610a <packet+0xa>
    4738:	8f 93       	push	r24
    473a:	80 91 09 61 	lds	r24, 0x6109	; 0x806109 <packet+0x9>
    473e:	8f 93       	push	r24
    4740:	80 91 08 61 	lds	r24, 0x6108	; 0x806108 <packet+0x8>
    4744:	8f 93       	push	r24
    4746:	1f 92       	push	r1
    4748:	df 92       	push	r13
    474a:	8c e7       	ldi	r24, 0x7C	; 124
    474c:	93 e0       	ldi	r25, 0x03	; 3
    474e:	9f 93       	push	r25
    4750:	8f 93       	push	r24
    4752:	1f 93       	push	r17
    4754:	0f 93       	push	r16
    4756:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:427
        packet.out.dwAddr, (size_t)packet.out.dwLength);
      _rspsize = Timeout::command(&read_memory, &timeout_fallback);
    475a:	40 e2       	ldi	r20, 0x20	; 32
    475c:	53 e0       	ldi	r21, 0x03	; 3
    475e:	6a e6       	ldi	r22, 0x6A	; 106
    4760:	7d e0       	ldi	r23, 0x0D	; 13
    4762:	8f e8       	ldi	r24, 0x8F	; 143
    4764:	9e e0       	ldi	r25, 0x0E	; 14
    4766:	0e 94 c8 19 	call	0x3390	; 0x3390 <Timeout::command(unsigned int (*)(), unsigned int (*)(), unsigned int)>
    476a:	7c 01       	movw	r14, r24
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:428
      packet.in.res = _rspsize ? 0x184 : 0xA0;  /* RSP3_DATA : RSP3_FAILED */
    476c:	cd bf       	out	0x3d, r28	; 61
    476e:	de bf       	out	0x3e, r29	; 62
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:551
      }
      /* If not in PROGMODE, respond with a dummy. */
      /* A dummy SIG will be returned for locked devices. */
      /* This will prevent AVRDUDE from displaying annoying errors. */
      else _rspsize = read_dummy();
      packet.in.res = _rspsize ? 0x184 : 0xA0;  /* RSP3_DATA : RSP3_FAILED */
    4770:	84 e8       	ldi	r24, 0x84	; 132
    4772:	91 e0       	ldi	r25, 0x01	; 1
jtag_scope_updi():
    4774:	e1 14       	cp	r14, r1
    4776:	f1 04       	cpc	r15, r1
    4778:	09 f0       	breq	.+2      	; 0x477c <main+0x12e2>
    477a:	3b cf       	rjmp	.-394    	; 0x45f2 <main+0x1158>
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:559
    else if (_cmd == 0x23) {        /* CMD3_WRITE_MEMORY */
      D1PRINTF(" UPDI_WRITE=%02X:%06lX:%04X\r\n", packet.out.bMType,
        packet.out.dwAddr, (size_t)packet.out.dwLength);
      _rspsize = Timeout::command(Command_Table.write_memory, &timeout_fallback);
    }
    packet.in.res = _rspsize ? 0x80 : 0xA0;     /* RSP3_OK : RSP3_FAILED */
    477c:	80 ea       	ldi	r24, 0xA0	; 160
    477e:	90 e0       	ldi	r25, 0x00	; 0
    4780:	38 cf       	rjmp	.-400    	; 0x45f2 <main+0x1158>
jtag_scope_xmega():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:431
      return _rspsize;
    }
    else if (_cmd == 0x23) {        /* CMD3_WRITE_MEMORY */
    4782:	83 32       	cpi	r24, 0x23	; 35
    4784:	09 f0       	breq	.+2      	; 0x4788 <main+0x12ee>
    4786:	66 c1       	rjmp	.+716    	; 0x4a54 <main+0x15ba>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:432
      D1PRINTF(" PDI_WRITE=%02X:%08lX:%04X\r\n", packet.out.bMType,
    4788:	80 91 0d 61 	lds	r24, 0x610D	; 0x80610d <packet+0xd>
    478c:	8f 93       	push	r24
    478e:	80 91 0c 61 	lds	r24, 0x610C	; 0x80610c <packet+0xc>
    4792:	8f 93       	push	r24
    4794:	80 91 0b 61 	lds	r24, 0x610B	; 0x80610b <packet+0xb>
    4798:	8f 93       	push	r24
    479a:	80 91 0a 61 	lds	r24, 0x610A	; 0x80610a <packet+0xa>
    479e:	8f 93       	push	r24
    47a0:	80 91 09 61 	lds	r24, 0x6109	; 0x806109 <packet+0x9>
    47a4:	8f 93       	push	r24
    47a6:	80 91 08 61 	lds	r24, 0x6108	; 0x806108 <packet+0x8>
    47aa:	8f 93       	push	r24
    47ac:	1f 92       	push	r1
    47ae:	df 92       	push	r13
    47b0:	8f e5       	ldi	r24, 0x5F	; 95
    47b2:	93 e0       	ldi	r25, 0x03	; 3
    47b4:	9f 93       	push	r25
    47b6:	8f 93       	push	r24
    47b8:	1f 93       	push	r17
    47ba:	0f 93       	push	r16
    47bc:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/pdi.cpp:434
        packet.out.dwAddr, (size_t)packet.out.dwLength);
      _rspsize = Timeout::command(&write_memory, &timeout_fallback);
    47c0:	40 e2       	ldi	r20, 0x20	; 32
    47c2:	53 e0       	ldi	r21, 0x03	; 3
    47c4:	6a e6       	ldi	r22, 0x6A	; 106
    47c6:	7d e0       	ldi	r23, 0x0D	; 13
    47c8:	80 ec       	ldi	r24, 0xC0	; 192
    47ca:	9d e0       	ldi	r25, 0x0D	; 13
    47cc:	a2 cf       	rjmp	.-188    	; 0x4712 <main+0x1278>
jtag_scope_avr_core():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:393
  #endif
    else if (_jtag_arch == 0x05) _rspsize = UPDI::jtag_scope_updi();    /* UPDI support */
    47ce:	95 30       	cpi	r25, 0x05	; 5
    47d0:	09 f0       	breq	.+2      	; 0x47d4 <main+0x133a>
    47d2:	43 c1       	rjmp	.+646    	; 0x4a5a <main+0x15c0>
jtag_scope_updi():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:493

  /* ARCH=UPDI scope Provides functionality. */
  size_t jtag_scope_updi (void) {
    size_t _rspsize = 0;
    uint8_t _cmd = packet.out.cmd;
    if (_cmd == 0x10) {             /* CMD3_SIGN_ON */
    47d4:	80 31       	cpi	r24, 0x10	; 16
    47d6:	71 f5       	brne	.+92     	; 0x4834 <main+0x139a>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:494
      D1PRINTF(" UPDI_SIGN_ON=EXT:%02X\r\n", packet.out.bMType);
    47d8:	1f 92       	push	r1
    47da:	df 92       	push	r13
    47dc:	87 e9       	ldi	r24, 0x97	; 151
    47de:	94 e0       	ldi	r25, 0x04	; 4
    47e0:	9f 93       	push	r25
    47e2:	8f 93       	push	r24
    47e4:	1f 93       	push	r17
    47e6:	0f 93       	push	r16
    47e8:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:495
      _xclk = _xclk_bak;
    47ec:	80 91 bc 60 	lds	r24, 0x60BC	; 0x8060bc <_xclk_bak>
    47f0:	90 91 bd 60 	lds	r25, 0x60BD	; 0x8060bd <_xclk_bak+0x1>
    47f4:	80 93 57 63 	sts	0x6357, r24	; 0x806357 <_xclk>
    47f8:	90 93 58 63 	sts	0x6358, r25	; 0x806358 <_xclk+0x1>
    47fc:	0f 90       	pop	r0
    47fe:	0f 90       	pop	r0
    4800:	0f 90       	pop	r0
    4802:	0f 90       	pop	r0
    4804:	0f 90       	pop	r0
    4806:	0f 90       	pop	r0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:496
      while (!(_rspsize = Timeout::command(&connect, nullptr, 150))) _xclk -= 25;
    4808:	46 e9       	ldi	r20, 0x96	; 150
    480a:	50 e0       	ldi	r21, 0x00	; 0
    480c:	70 e0       	ldi	r23, 0x00	; 0
    480e:	60 e0       	ldi	r22, 0x00	; 0
    4810:	8b e2       	ldi	r24, 0x2B	; 43
    4812:	96 e1       	ldi	r25, 0x16	; 22
    4814:	0e 94 c8 19 	call	0x3390	; 0x3390 <Timeout::command(unsigned int (*)(), unsigned int (*)(), unsigned int)>
    4818:	7c 01       	movw	r14, r24
    481a:	89 2b       	or	r24, r25
    481c:	09 f0       	breq	.+2      	; 0x4820 <main+0x1386>
    481e:	e7 ce       	rjmp	.-562    	; 0x45ee <main+0x1154>
    4820:	80 91 57 63 	lds	r24, 0x6357	; 0x806357 <_xclk>
    4824:	90 91 58 63 	lds	r25, 0x6358	; 0x806358 <_xclk+0x1>
    4828:	49 97       	sbiw	r24, 0x19	; 25
    482a:	80 93 57 63 	sts	0x6357, r24	; 0x806357 <_xclk>
    482e:	90 93 58 63 	sts	0x6358, r25	; 0x806358 <_xclk+0x1>
    4832:	ea cf       	rjmp	.-44     	; 0x4808 <main+0x136e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:501
      /* If it fails here, it is expected to try again, giving it a chance at HV control. */
      packet.in.res = _rspsize ? 0x84 : 0xA0; /* RSP3_DATA : RSP3_FAILED */
      return _rspsize;
    }
    else if (_cmd == 0x11) {        /* CMD3_SIGN_OFF */
    4834:	81 31       	cpi	r24, 0x11	; 17
    4836:	81 f5       	brne	.+96     	; 0x4898 <main+0x13fe>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:502
      D1PRINTF(" UPDI_SIGN_OFF\r\n");
    4838:	86 e8       	ldi	r24, 0x86	; 134
    483a:	94 e0       	ldi	r25, 0x04	; 4
    483c:	9f 93       	push	r25
    483e:	8f 93       	push	r24
    4840:	1f 93       	push	r17
    4842:	0f 93       	push	r16
    4844:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:504
      /* If UPDI control has failed, RSP3_OK is always returned. */
      _rspsize = bit_is_set(PGCONF, PGCONF_UPDI_bp) ? Timeout::command(&disconnect) : 1;
    4848:	0f 90       	pop	r0
    484a:	0f 90       	pop	r0
    484c:	0f 90       	pop	r0
    484e:	0f 90       	pop	r0
    4850:	f8 9b       	sbis	0x1f, 0	; 31
    4852:	1e c0       	rjmp	.+60     	; 0x4890 <main+0x13f6>
    4854:	40 e2       	ldi	r20, 0x20	; 32
    4856:	53 e0       	ldi	r21, 0x03	; 3
    4858:	70 e0       	ldi	r23, 0x00	; 0
    485a:	60 e0       	ldi	r22, 0x00	; 0
    485c:	8f ef       	ldi	r24, 0xFF	; 255
    485e:	95 e0       	ldi	r25, 0x05	; 5
    4860:	0e 94 c8 19 	call	0x3390	; 0x3390 <Timeout::command(unsigned int (*)(), unsigned int (*)(), unsigned int)>
    4864:	7c 01       	movw	r14, r24
delay_micros():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/delay_busywait.h:33
    4866:	83 ef       	ldi	r24, 0xF3	; 243
    4868:	91 e0       	ldi	r25, 0x01	; 1
    486a:	01 97       	sbiw	r24, 0x01	; 1
    486c:	f1 f7       	brne	.-4      	; 0x486a <main+0x13d0>
    486e:	00 c0       	rjmp	.+0      	; 0x4870 <main+0x13d6>
    4870:	00 00       	nop
jtag_scope_updi():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:506
      SYS::delay_100us();
      USART::setup();
    4872:	0e 94 75 0f 	call	0x1eea	; 0x1eea <USART::setup()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:507
      pinLogicPush(PIN_PGM_TRST);
    4876:	01 9a       	sbi	0x00, 1	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:508
      SYS::power_reset();
    4878:	61 e0       	ldi	r22, 0x01	; 1
    487a:	81 e0       	ldi	r24, 0x01	; 1
    487c:	0e 94 a6 14 	call	0x294c	; 0x294c <SYS::power_reset(bool, bool)>
delay_micros():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/delay_busywait.h:33
    4880:	e3 ed       	ldi	r30, 0xD3	; 211
    4882:	f0 e3       	ldi	r31, 0x30	; 48
    4884:	31 97       	sbiw	r30, 0x01	; 1
    4886:	f1 f7       	brne	.-4      	; 0x4884 <main+0x13ea>
    4888:	00 c0       	rjmp	.+0      	; 0x488a <main+0x13f0>
    488a:	00 00       	nop
jtag_scope_updi():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:510
      SYS::delay_2500us();
      pinLogicOpen(PIN_PGM_TRST);
    488c:	01 98       	cbi	0x00, 1	; 0
    488e:	e7 ce       	rjmp	.-562    	; 0x465e <main+0x11c4>
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:504
      return _rspsize;
    }
    else if (_cmd == 0x11) {        /* CMD3_SIGN_OFF */
      D1PRINTF(" UPDI_SIGN_OFF\r\n");
      /* If UPDI control has failed, RSP3_OK is always returned. */
      _rspsize = bit_is_set(PGCONF, PGCONF_UPDI_bp) ? Timeout::command(&disconnect) : 1;
    4890:	ee 24       	eor	r14, r14
    4892:	e3 94       	inc	r14
    4894:	f1 2c       	mov	r15, r1
    4896:	e7 cf       	rjmp	.-50     	; 0x4866 <main+0x13cc>
jtag_scope_updi():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:514
      SYS::delay_2500us();
      pinLogicOpen(PIN_PGM_TRST);
      PGCONF = 0;
      USART::change_vcp();
    }
    else if (_cmd == 0x15) {        /* CMD3_ENTER_PROGMODE */
    4898:	85 31       	cpi	r24, 0x15	; 21
    489a:	79 f4       	brne	.+30     	; 0x48ba <main+0x1420>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:515
      D1PRINTF(" UPDI_ENTER_PROG\r\n");
    489c:	83 e7       	ldi	r24, 0x73	; 115
    489e:	94 e0       	ldi	r25, 0x04	; 4
    48a0:	9f 93       	push	r25
    48a2:	8f 93       	push	r24
    48a4:	1f 93       	push	r17
    48a6:	0f 93       	push	r16
    48a8:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:518
      /* On failure, RSP3_OK is returned if a UPDI connection is available. */
      /* Locked devices are given the opportunity to write to USERROW and erase the chip. */
      _rspsize = Timeout::command(&enter_progmode, &timeout_fallback, 400)
    48ac:	40 e9       	ldi	r20, 0x90	; 144
    48ae:	51 e0       	ldi	r21, 0x01	; 1
    48b0:	65 e4       	ldi	r22, 0x45	; 69
    48b2:	78 e0       	ldi	r23, 0x08	; 8
    48b4:	81 e1       	ldi	r24, 0x11	; 17
    48b6:	90 e1       	ldi	r25, 0x10	; 16
    48b8:	ea ce       	rjmp	.-556    	; 0x468e <main+0x11f4>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:521
              || bit_is_set(PGCONF, PGCONF_UPDI_bp);
    }
    else if (_cmd == 0x16) {        /* CMD3_LEAVE_PROGMODE */
    48ba:	86 31       	cpi	r24, 0x16	; 22
    48bc:	c9 f4       	brne	.+50     	; 0x48f0 <main+0x1456>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:522
      D1PRINTF(" UPDI_LEAVE_PROG\r\n");
    48be:	80 e6       	ldi	r24, 0x60	; 96
    48c0:	94 e0       	ldi	r25, 0x04	; 4
    48c2:	9f 93       	push	r25
    48c4:	8f 93       	push	r24
    48c6:	1f 93       	push	r17
    48c8:	0f 93       	push	r16
    48ca:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:523
      D1PRINTF(" LAST_XCLK=%d\r\n", _xclk);
    48ce:	80 91 58 63 	lds	r24, 0x6358	; 0x806358 <_xclk+0x1>
    48d2:	8f 93       	push	r24
    48d4:	80 91 57 63 	lds	r24, 0x6357	; 0x806357 <_xclk>
    48d8:	8f 93       	push	r24
    48da:	80 e5       	ldi	r24, 0x50	; 80
    48dc:	94 e0       	ldi	r25, 0x04	; 4
    48de:	9f 93       	push	r25
    48e0:	8f 93       	push	r24
    48e2:	1f 93       	push	r17
    48e4:	0f 93       	push	r16
    48e6:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
    48ea:	cd bf       	out	0x3d, r28	; 61
    48ec:	de bf       	out	0x3e, r29	; 62
    48ee:	eb ce       	rjmp	.-554    	; 0x46c6 <main+0x122c>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:528
      /* There is nothing to do. */
      /* The actual termination process is delayed until CMD3_SIGN_OFF. */
      _rspsize = 1;
    }
    else if (_cmd == 0x20) {        /* CMD3_ERASE_MEMORY */
    48f0:	80 32       	cpi	r24, 0x20	; 32
    48f2:	f9 f4       	brne	.+62     	; 0x4932 <main+0x1498>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:529
      D1PRINTF(" UPDI_ERASE=%02X:%06lX\r\n",
    48f4:	80 91 0b 61 	lds	r24, 0x610B	; 0x80610b <packet+0xb>
    48f8:	8f 93       	push	r24
    48fa:	80 91 0a 61 	lds	r24, 0x610A	; 0x80610a <packet+0xa>
    48fe:	8f 93       	push	r24
    4900:	80 91 09 61 	lds	r24, 0x6109	; 0x806109 <packet+0x9>
    4904:	8f 93       	push	r24
    4906:	80 91 08 61 	lds	r24, 0x6108	; 0x806108 <packet+0x8>
    490a:	8f 93       	push	r24
    490c:	1f 92       	push	r1
    490e:	df 92       	push	r13
    4910:	87 e3       	ldi	r24, 0x37	; 55
    4912:	94 e0       	ldi	r25, 0x04	; 4
    4914:	9f 93       	push	r25
    4916:	8f 93       	push	r24
    4918:	1f 93       	push	r17
    491a:	0f 93       	push	r16
    491c:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:531
        packet.out.bEType, packet.out.dwPageAddr);
      _rspsize = Timeout::command(Command_Table.erase_memory, &timeout_fallback);
    4920:	40 e2       	ldi	r20, 0x20	; 32
    4922:	53 e0       	ldi	r21, 0x03	; 3
    4924:	65 e4       	ldi	r22, 0x45	; 69
    4926:	78 e0       	ldi	r23, 0x08	; 8
    4928:	80 91 52 63 	lds	r24, 0x6352	; 0x806352 <Command_Table+0x4>
    492c:	90 91 53 63 	lds	r25, 0x6353	; 0x806353 <Command_Table+0x5>
    4930:	f0 ce       	rjmp	.-544    	; 0x4712 <main+0x1278>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:533
    }
    else if (bit_is_clear(PGCONF, PGCONF_UPDI_bp)) { /* empty */ }
    4932:	f8 9b       	sbis	0x1f, 0	; 31
    4934:	8f c0       	rjmp	.+286    	; 0x4a54 <main+0x15ba>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:534
    else if (_cmd == 0x21) {        /* CMD3_READ_MEMORY */
    4936:	81 32       	cpi	r24, 0x21	; 33
    4938:	09 f0       	breq	.+2      	; 0x493c <main+0x14a2>
    493a:	65 c0       	rjmp	.+202    	; 0x4a06 <main+0x156c>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:535
      D1PRINTF(" UPDI_READ=%02X:%06lX:%04X\r\n", packet.out.bMType,
    493c:	80 91 0d 61 	lds	r24, 0x610D	; 0x80610d <packet+0xd>
    4940:	8f 93       	push	r24
    4942:	80 91 0c 61 	lds	r24, 0x610C	; 0x80610c <packet+0xc>
    4946:	8f 93       	push	r24
    4948:	80 91 0b 61 	lds	r24, 0x610B	; 0x80610b <packet+0xb>
    494c:	8f 93       	push	r24
    494e:	80 91 0a 61 	lds	r24, 0x610A	; 0x80610a <packet+0xa>
    4952:	8f 93       	push	r24
    4954:	80 91 09 61 	lds	r24, 0x6109	; 0x806109 <packet+0x9>
    4958:	8f 93       	push	r24
    495a:	80 91 08 61 	lds	r24, 0x6108	; 0x806108 <packet+0x8>
    495e:	8f 93       	push	r24
    4960:	1f 92       	push	r1
    4962:	df 92       	push	r13
    4964:	8a e1       	ldi	r24, 0x1A	; 26
    4966:	94 e0       	ldi	r25, 0x04	; 4
    4968:	9f 93       	push	r25
    496a:	8f 93       	push	r24
    496c:	1f 93       	push	r17
    496e:	0f 93       	push	r16
    4970:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:537
        packet.out.dwAddr, (size_t)packet.out.dwLength);
      uint8_t m_type = packet.out.bMType;
    4974:	80 91 07 61 	lds	r24, 0x6107	; 0x806107 <packet+0x7>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:538
      size_t _wLength = packet.out.dwLength;
    4978:	e0 90 0c 61 	lds	r14, 0x610C	; 0x80610c <packet+0xc>
    497c:	f0 90 0d 61 	lds	r15, 0x610D	; 0x80610d <packet+0xd>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:539
      if (m_type == 0xD3) {         /* MTYPE_SIB */
    4980:	cd bf       	out	0x3d, r28	; 61
    4982:	de bf       	out	0x3e, r29	; 62
    4984:	83 3d       	cpi	r24, 0xD3	; 211
    4986:	a1 f4       	brne	.+40     	; 0x49b0 <main+0x1516>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:541
        /* The SIB request occurs before ENTER_PROGMODE. */
        memcpy(&packet.in.data[(uint8_t)packet.out.dwAddr & 31], &_sib, ((_wLength - 1) & 31) + 1);
    4988:	80 91 08 61 	lds	r24, 0x6108	; 0x806108 <packet+0x8>
    498c:	8f 71       	andi	r24, 0x1F	; 31
    498e:	90 e0       	ldi	r25, 0x00	; 0
    4990:	a7 01       	movw	r20, r14
    4992:	41 50       	subi	r20, 0x01	; 1
    4994:	51 09       	sbc	r21, r1
    4996:	4f 71       	andi	r20, 0x1F	; 31
    4998:	55 27       	eor	r21, r21
    499a:	4f 5f       	subi	r20, 0xFF	; 255
    499c:	5f 4f       	sbci	r21, 0xFF	; 255
    499e:	6f ed       	ldi	r22, 0xDF	; 223
    49a0:	70 e6       	ldi	r23, 0x60	; 96
    49a2:	89 5f       	subi	r24, 0xF9	; 249
    49a4:	9e 49       	sbci	r25, 0x9E	; 158
    49a6:	60 d5       	rcall	.+2752   	; 0x5468 <memcpy>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:542
        _rspsize = _wLength + 1;
    49a8:	ff ef       	ldi	r31, 0xFF	; 255
    49aa:	ef 1a       	sub	r14, r31
    49ac:	ff 0a       	sbc	r15, r31
    49ae:	e0 ce       	rjmp	.-576    	; 0x4770 <main+0x12d6>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:544
      }
      else if (bit_is_set(PGCONF, PGCONF_PROG_bp)) {
    49b0:	f9 9b       	sbis	0x1f, 1	; 31
    49b2:	0c c0       	rjmp	.+24     	; 0x49cc <main+0x1532>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:545
        _rspsize = Timeout::command(Command_Table.read_memory, &timeout_fallback, 400);
    49b4:	40 e9       	ldi	r20, 0x90	; 144
    49b6:	51 e0       	ldi	r21, 0x01	; 1
    49b8:	65 e4       	ldi	r22, 0x45	; 69
    49ba:	78 e0       	ldi	r23, 0x08	; 8
    49bc:	80 91 50 63 	lds	r24, 0x6350	; 0x806350 <Command_Table+0x2>
    49c0:	90 91 51 63 	lds	r25, 0x6351	; 0x806351 <Command_Table+0x3>
    49c4:	0e 94 c8 19 	call	0x3390	; 0x3390 <Timeout::command(unsigned int (*)(), unsigned int (*)(), unsigned int)>
    49c8:	7c 01       	movw	r14, r24
    49ca:	d2 ce       	rjmp	.-604    	; 0x4770 <main+0x12d6>
read_dummy():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:350
   * Read dummy memory if necessary.
   */
  size_t read_dummy (void) {
    uint8_t  m_type = packet.out.bMType;
    size_t _wLength = packet.out.dwLength;
    if (m_type == 0xB4 && _sib[0]) {
    49cc:	84 3b       	cpi	r24, 0xB4	; 180
    49ce:	a1 f4       	brne	.+40     	; 0x49f8 <main+0x155e>
    49d0:	80 91 df 60 	lds	r24, 0x60DF	; 0x8060df <_sib>
    49d4:	88 23       	and	r24, r24
    49d6:	81 f0       	breq	.+32     	; 0x49f8 <main+0x155e>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:353
      /* The SIGNATURE of a locked device cannot be read.            */
      /* But, the SIB can be read, so a Dummy SIGNATURE is returned. */
      packet.in.data[0] = 0x1E;
    49d8:	9e e1       	ldi	r25, 0x1E	; 30
    49da:	90 93 07 61 	sts	0x6107, r25	; 0x806107 <packet+0x7>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:354
      packet.in.data[1] = _sib[0] == ' ' ? 'A' : _sib[0];
    49de:	80 32       	cpi	r24, 0x20	; 32
    49e0:	09 f4       	brne	.+2      	; 0x49e4 <main+0x154a>
main():
    49e2:	81 e4       	ldi	r24, 0x41	; 65
read_dummy():
    49e4:	80 93 08 61 	sts	0x6108, r24	; 0x806108 <packet+0x8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:355
      packet.in.data[2] = _sib[10];
    49e8:	80 91 e9 60 	lds	r24, 0x60E9	; 0x8060e9 <_sib+0xa>
    49ec:	80 93 09 61 	sts	0x6109, r24	; 0x806109 <packet+0x9>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:358
    }
    else memset(&packet.in.data[0], 0xFF, _wLength);
    return _wLength + 1;
    49f0:	2f ef       	ldi	r18, 0xFF	; 255
    49f2:	e2 1a       	sub	r14, r18
    49f4:	f2 0a       	sbc	r15, r18
    49f6:	bc ce       	rjmp	.-648    	; 0x4770 <main+0x12d6>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:357
      /* But, the SIB can be read, so a Dummy SIGNATURE is returned. */
      packet.in.data[0] = 0x1E;
      packet.in.data[1] = _sib[0] == ' ' ? 'A' : _sib[0];
      packet.in.data[2] = _sib[10];
    }
    else memset(&packet.in.data[0], 0xFF, _wLength);
    49f8:	a7 01       	movw	r20, r14
    49fa:	6f ef       	ldi	r22, 0xFF	; 255
    49fc:	70 e0       	ldi	r23, 0x00	; 0
    49fe:	87 e0       	ldi	r24, 0x07	; 7
    4a00:	91 e6       	ldi	r25, 0x61	; 97
    4a02:	3b d5       	rcall	.+2678   	; 0x547a <memset>
    4a04:	f5 cf       	rjmp	.-22     	; 0x49f0 <main+0x1556>
jtag_scope_updi():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:554
      /* This will prevent AVRDUDE from displaying annoying errors. */
      else _rspsize = read_dummy();
      packet.in.res = _rspsize ? 0x184 : 0xA0;  /* RSP3_DATA : RSP3_FAILED */
      return _rspsize;
    }
    else if (_cmd == 0x23) {        /* CMD3_WRITE_MEMORY */
    4a06:	83 32       	cpi	r24, 0x23	; 35
    4a08:	29 f5       	brne	.+74     	; 0x4a54 <main+0x15ba>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:555
      D1PRINTF(" UPDI_WRITE=%02X:%06lX:%04X\r\n", packet.out.bMType,
    4a0a:	80 91 0d 61 	lds	r24, 0x610D	; 0x80610d <packet+0xd>
    4a0e:	8f 93       	push	r24
    4a10:	80 91 0c 61 	lds	r24, 0x610C	; 0x80610c <packet+0xc>
    4a14:	8f 93       	push	r24
    4a16:	80 91 0b 61 	lds	r24, 0x610B	; 0x80610b <packet+0xb>
    4a1a:	8f 93       	push	r24
    4a1c:	80 91 0a 61 	lds	r24, 0x610A	; 0x80610a <packet+0xa>
    4a20:	8f 93       	push	r24
    4a22:	80 91 09 61 	lds	r24, 0x6109	; 0x806109 <packet+0x9>
    4a26:	8f 93       	push	r24
    4a28:	80 91 08 61 	lds	r24, 0x6108	; 0x806108 <packet+0x8>
    4a2c:	8f 93       	push	r24
    4a2e:	1f 92       	push	r1
    4a30:	df 92       	push	r13
    4a32:	8c ef       	ldi	r24, 0xFC	; 252
    4a34:	93 e0       	ldi	r25, 0x03	; 3
    4a36:	9f 93       	push	r25
    4a38:	8f 93       	push	r24
    4a3a:	1f 93       	push	r17
    4a3c:	0f 93       	push	r16
    4a3e:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:557
        packet.out.dwAddr, (size_t)packet.out.dwLength);
      _rspsize = Timeout::command(Command_Table.write_memory, &timeout_fallback);
    4a42:	40 e2       	ldi	r20, 0x20	; 32
    4a44:	53 e0       	ldi	r21, 0x03	; 3
    4a46:	65 e4       	ldi	r22, 0x45	; 69
    4a48:	78 e0       	ldi	r23, 0x08	; 8
    4a4a:	80 91 54 63 	lds	r24, 0x6354	; 0x806354 <Command_Table+0x6>
    4a4e:	90 91 55 63 	lds	r25, 0x6355	; 0x806355 <Command_Table+0x7>
    4a52:	5f ce       	rjmp	.-834    	; 0x4712 <main+0x1278>
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/updi.cpp:491

  // MARK: JTAG SCOPE

  /* ARCH=UPDI scope Provides functionality. */
  size_t jtag_scope_updi (void) {
    size_t _rspsize = 0;
    4a54:	f1 2c       	mov	r15, r1
    4a56:	e1 2c       	mov	r14, r1
    4a58:	91 ce       	rjmp	.-734    	; 0x477c <main+0x12e2>
jtag_scope_avr_core():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:394
    else packet.in.res = 0xA0;      /* RSP3_FAILED */
    4a5a:	80 ea       	ldi	r24, 0xA0	; 160
    4a5c:	90 e0       	ldi	r25, 0x00	; 0
    4a5e:	0e cd       	rjmp	.-1508   	; 0x447c <main+0xfe2>
jtag_scope_branch():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:417
    else if (_scope == 0x00) _rspsize = jtag_scope_info();          /* SCOPE_INFO */ /* Not used with EDBG/CMSIS-DAP type */
    else if (_scope == 0x11) _rspsize = ISP::jtag_scope_isp();      /* SCOPE_AVR_ISP */
    else if (_scope == 0x13) _rspsize = AVR32::jtag_scope_avr32();  /* SCOPE_AVR32 */
  #endif
    else if (_scope == 0x12) _rspsize = jtag_scope_avr_core();      /* SCOPE_AVR */
    else if (_scope == 0x14) _rspsize = TPI::jtag_scope_tpi();      /* SCOPE_AVR_TPI */
    4a60:	94 e1       	ldi	r25, 0x14	; 20
    4a62:	f9 12       	cpse	r15, r25
    4a64:	20 c1       	rjmp	.+576    	; 0x4ca6 <main+0x180c>
jtag_scope_tpi():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:330
   * It doesn't seem to be implemented in the "mEDBG".
   * which means it will start immediately with XPRG_CMD_ENTER_PROGMODE.
   */
  size_t jtag_scope_tpi (void) {
    size_t _rspsize = 0;  /* Make final adjustments. */
    uint8_t _cmd    = packet.out.cmd;
    4a66:	80 91 05 61 	lds	r24, 0x6105	; 0x806105 <packet+0x5>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:331
    if (_cmd == 0x01) {             /* XPRG_CMD_ENTER_PROGMODE */
    4a6a:	81 30       	cpi	r24, 0x01	; 1
    4a6c:	09 f0       	breq	.+2      	; 0x4a70 <main+0x15d6>
    4a6e:	40 c0       	rjmp	.+128    	; 0x4af0 <main+0x1656>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:332
      D1PRINTF(" TPI_ENTER_PROGMODE\r\n");
    4a70:	80 e4       	ldi	r24, 0x40	; 64
    4a72:	96 e0       	ldi	r25, 0x06	; 6
    4a74:	9f 93       	push	r25
    4a76:	8f 93       	push	r24
    4a78:	1f 93       	push	r17
    4a7a:	0f 93       	push	r16
    4a7c:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:333
      _vtarget = SYS::get_vdd();
    4a80:	0e 94 b0 08 	call	0x1160	; 0x1160 <SYS::get_vdd()>
    4a84:	80 93 be 60 	sts	0x60BE, r24	; 0x8060be <_vtarget>
    4a88:	90 93 bf 60 	sts	0x60BF, r25	; 0x8060bf <_vtarget+0x1>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:334
      D1PRINTF(" VTARGET=%d\r\n", _vtarget);
    4a8c:	9f 93       	push	r25
    4a8e:	8f 93       	push	r24
    4a90:	82 e3       	ldi	r24, 0x32	; 50
    4a92:	96 e0       	ldi	r25, 0x06	; 6
    4a94:	9f 93       	push	r25
    4a96:	8f 93       	push	r24
    4a98:	1f 93       	push	r17
    4a9a:	0f 93       	push	r16
    4a9c:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:335
      _jtag_arch = 0;
    4aa0:	10 92 56 63 	sts	0x6356, r1	; 0x806356 <_jtag_arch>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:336
      _rspsize = Timeout::command(&connect);
    4aa4:	40 e2       	ldi	r20, 0x20	; 32
    4aa6:	53 e0       	ldi	r21, 0x03	; 3
    4aa8:	70 e0       	ldi	r23, 0x00	; 0
    4aaa:	60 e0       	ldi	r22, 0x00	; 0
    4aac:	85 e2       	ldi	r24, 0x25	; 37
    4aae:	95 e1       	ldi	r25, 0x15	; 21
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:393
      D1PRINTF(" TPI_WRITE=%02X:%08lX:%04X\r\n",
        packet.out.tpi.write.bMType,
        bswap32(packet.out.tpi.write.dwAddr),
        bswap16(packet.out.tpi.write.wLength)
      );
      _rspsize = Timeout::command(&write_memory);
    4ab0:	0e 94 c8 19 	call	0x3390	; 0x3390 <Timeout::command(unsigned int (*)(), unsigned int (*)(), unsigned int)>
    4ab4:	7c 01       	movw	r14, r24
    4ab6:	cd bf       	out	0x3d, r28	; 61
    4ab8:	de bf       	out	0x3e, r29	; 62
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:395
    }
    packet.in.tpi_res = _rspsize ? 0x00 : 0x01; /* XPRG_ERR_OK : XPRG_ERR_FAILED */
    4aba:	81 e0       	ldi	r24, 0x01	; 1
    4abc:	e1 14       	cp	r14, r1
    4abe:	f1 04       	cpc	r15, r1
    4ac0:	09 f0       	breq	.+2      	; 0x4ac4 <main+0x162a>
    4ac2:	80 e0       	ldi	r24, 0x00	; 0
    4ac4:	80 93 06 61 	sts	0x6106, r24	; 0x806106 <packet+0x6>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:396
    D1PRINTF(" <RES:%02X>\r\n", _rspsize);
    4ac8:	ff 92       	push	r15
    4aca:	ef 92       	push	r14
    4acc:	82 eb       	ldi	r24, 0xB2	; 178
    4ace:	95 e0       	ldi	r25, 0x05	; 5
    4ad0:	9f 93       	push	r25
    4ad2:	8f 93       	push	r24
    4ad4:	1f 93       	push	r17
    4ad6:	0f 93       	push	r16
    4ad8:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:399

    /* Adds padding to XPRG responses to adjust the length of the payload. */
    return ++_rspsize;
    4adc:	9f ef       	ldi	r25, 0xFF	; 255
    4ade:	e9 1a       	sub	r14, r25
    4ae0:	f9 0a       	sbc	r15, r25
    4ae2:	0f 90       	pop	r0
    4ae4:	0f 90       	pop	r0
    4ae6:	0f 90       	pop	r0
    4ae8:	0f 90       	pop	r0
    4aea:	0f 90       	pop	r0
    4aec:	0f 90       	pop	r0
    4aee:	23 cb       	rjmp	.-2490   	; 0x4136 <main+0xc9c>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:338
      _vtarget = SYS::get_vdd();
      D1PRINTF(" VTARGET=%d\r\n", _vtarget);
      _jtag_arch = 0;
      _rspsize = Timeout::command(&connect);
    }
    else if (_cmd == 0x02) {        /* XPRG_CMD_LEAVE_PROGMODE */
    4af0:	82 30       	cpi	r24, 0x02	; 2
    4af2:	09 f0       	breq	.+2      	; 0x4af6 <main+0x165c>
    4af4:	43 c0       	rjmp	.+134    	; 0x4b7c <main+0x16e2>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:339
      D1PRINTF(" TPI_LEAVE_PROGMODE\r\n");
    4af6:	8c e1       	ldi	r24, 0x1C	; 28
    4af8:	96 e0       	ldi	r25, 0x06	; 6
    4afa:	9f 93       	push	r25
    4afc:	8f 93       	push	r24
    4afe:	1f 93       	push	r17
    4b00:	0f 93       	push	r16
    4b02:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:340
      _rspsize = bit_is_set(PGCONF, PGCONF_UPDI_bp) ? disconnect() : 1;
    4b06:	0f 90       	pop	r0
    4b08:	0f 90       	pop	r0
    4b0a:	0f 90       	pop	r0
    4b0c:	0f 90       	pop	r0
    4b0e:	f8 9b       	sbis	0x1f, 0	; 31
    4b10:	20 c0       	rjmp	.+64     	; 0x4b52 <main+0x16b8>
set_sstcs():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:77
    return send(0x80 | _addr) && recv();
  }

  bool set_sstcs (const uint8_t _addr, const uint8_t _data) {
    D2PRINTF("[SSTCS:%02X:%02X]\r\n", _addr, _data);
    return send(0xC0 | _addr) && send(_data);
    4b12:	80 ec       	ldi	r24, 0xC0	; 192
    4b14:	0e 94 db 05 	call	0xbb6	; 0xbb6 <PDI::send(unsigned char)>
    4b18:	88 23       	and	r24, r24
    4b1a:	19 f0       	breq	.+6      	; 0x4b22 <main+0x1688>
    4b1c:	80 e0       	ldi	r24, 0x00	; 0
    4b1e:	0e 94 5d 08 	call	0x10ba	; 0x10ba <PDI::send_byte(unsigned char) [clone .part.4]>
disconnect():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:305

  size_t disconnect (void) {
    /*** leave RESET (normal programing) ***/
    set_sstcs(0x00, 0x00);
    /* Send the NVM exit command, wait a short while and release RESET. */
    idle_clock(28);
    4b22:	8c e1       	ldi	r24, 0x1C	; 28
    4b24:	90 e0       	ldi	r25, 0x00	; 0
    4b26:	0e 94 a0 08 	call	0x1140	; 0x1140 <TPI::idle_clock(unsigned int)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:307
  #ifdef CONFIG_HVC_ENABLE
    if (bit_is_set(PGCONF, PGCONF_HVEN_bp)) {
    4b2a:	fe 9b       	sbis	0x1f, 6	; 31
    4b2c:	12 c0       	rjmp	.+36     	; 0x4b52 <main+0x16b8>
hvc_leave():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:489
  #endif
  }

  void hvc_leave (void) {
  #ifdef CONFIG_HVC_ENABLE
    TCA0_SPLIT_CTRLB = 0;
    4b2e:	10 92 01 0a 	sts	0x0A01, r1	; 0x800a01 <__TEXT_REGION_LENGTH__+0x7f0a01>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/sys.cpp:490
    TCA0_SPLIT_CTRLA = 0;
    4b32:	10 92 00 0a 	sts	0x0A00, r1	; 0x800a00 <__TEXT_REGION_LENGTH__+0x7f0a00>
disconnect():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:309
      SYS::hvc_leave();
      digitalWriteMacro(PIN_HVC_SELECT2, LOW);
    4b36:	69 98       	cbi	0x0d, 1	; 13
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:310
      bit_clear(PGCONF, PGCONF_HVEN_bp);
    4b38:	fe 98       	cbi	0x1f, 6	; 31
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:311
      D1PRINTF("<HVC:OFF>\r\n");
    4b3a:	86 ea       	ldi	r24, 0xA6	; 166
    4b3c:	95 e0       	ldi	r25, 0x05	; 5
    4b3e:	9f 93       	push	r25
    4b40:	8f 93       	push	r24
    4b42:	1f 93       	push	r17
    4b44:	0f 93       	push	r16
    4b46:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
    4b4a:	0f 90       	pop	r0
    4b4c:	0f 90       	pop	r0
    4b4e:	0f 90       	pop	r0
    4b50:	0f 90       	pop	r0
jtag_scope_tpi():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:341
      _rspsize = Timeout::command(&connect);
    }
    else if (_cmd == 0x02) {        /* XPRG_CMD_LEAVE_PROGMODE */
      D1PRINTF(" TPI_LEAVE_PROGMODE\r\n");
      _rspsize = bit_is_set(PGCONF, PGCONF_UPDI_bp) ? disconnect() : 1;
      pinLogicOpen(PIN_PGM_TCLK);
    4b52:	02 98       	cbi	0x00, 2	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:342
      pinLogicOpen(PIN_PGM_TRST);
    4b54:	01 98       	cbi	0x00, 1	; 0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:343
      SYS::power_reset();
    4b56:	61 e0       	ldi	r22, 0x01	; 1
    4b58:	81 e0       	ldi	r24, 0x01	; 1
    4b5a:	0e 94 a6 14 	call	0x294c	; 0x294c <SYS::power_reset(bool, bool)>
delay_micros():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/delay_busywait.h:33
    4b5e:	83 ed       	ldi	r24, 0xD3	; 211
    4b60:	90 e3       	ldi	r25, 0x30	; 48
    4b62:	01 97       	sbiw	r24, 0x01	; 1
    4b64:	f1 f7       	brne	.-4      	; 0x4b62 <main+0x16c8>
    4b66:	00 c0       	rjmp	.+0      	; 0x4b68 <main+0x16ce>
    4b68:	00 00       	nop
jtag_scope_tpi():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:345
      SYS::delay_2500us();
      PGCONF = 0;
    4b6a:	1f ba       	out	0x1f, r1	; 31
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:346
      USART::setup();
    4b6c:	0e 94 75 0f 	call	0x1eea	; 0x1eea <USART::setup()>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:347
      USART::change_vcp();
    4b70:	0e 94 3c 0c 	call	0x1878	; 0x1878 <USART::change_vcp()>
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:365
      else if (_bType == 0x04) {    /* XPRG_PARAM_NVMCSR_ADDR */
        _bValue = ((_bValue & 0xF0) << 1) + (_bValue & 0x0F);
        _tpi_csr_addr = _bValue;    /* XPRG_TPI_NVMCSR_ADDRESS */
      }
  #endif
      _rspsize = 1;
    4b74:	ee 24       	eor	r14, r14
    4b76:	e3 94       	inc	r14
    4b78:	f1 2c       	mov	r15, r1
    4b7a:	9f cf       	rjmp	.-194    	; 0x4aba <main+0x1620>
jtag_scope_tpi():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:349
      SYS::delay_2500us();
      PGCONF = 0;
      USART::setup();
      USART::change_vcp();
    }
    else if (_cmd == 0x07) {        /* XPRG_CMD_SET_PARAM */
    4b7c:	87 30       	cpi	r24, 0x07	; 7
    4b7e:	d1 f3       	breq	.-12     	; 0x4b74 <main+0x16da>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:367
        _tpi_csr_addr = _bValue;    /* XPRG_TPI_NVMCSR_ADDRESS */
      }
  #endif
      _rspsize = 1;
    }
    else if (_cmd == 0x06) {        /* XPRG_CMD_CRC */
    4b80:	86 30       	cpi	r24, 0x06	; 6
    4b82:	79 f4       	brne	.+30     	; 0x4ba2 <main+0x1708>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:368
      D1PRINTF(" TPI_CRC\r\n");     /* not used (Fail) */
    4b84:	81 e1       	ldi	r24, 0x11	; 17
    4b86:	96 e0       	ldi	r25, 0x06	; 6
    4b88:	9f 93       	push	r25
    4b8a:	8f 93       	push	r24
    4b8c:	1f 93       	push	r17
    4b8e:	0f 93       	push	r16
    4b90:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
    4b94:	0f 90       	pop	r0
    4b96:	0f 90       	pop	r0
    4b98:	0f 90       	pop	r0
    4b9a:	0f 90       	pop	r0
main():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:329
   * When this scope is used, CMD3_SIGN_ON will not be called,
   * It doesn't seem to be implemented in the "mEDBG".
   * which means it will start immediately with XPRG_CMD_ENTER_PROGMODE.
   */
  size_t jtag_scope_tpi (void) {
    size_t _rspsize = 0;  /* Make final adjustments. */
    4b9c:	f1 2c       	mov	r15, r1
    4b9e:	e1 2c       	mov	r14, r1
    4ba0:	8c cf       	rjmp	.-232    	; 0x4aba <main+0x1620>
jtag_scope_tpi():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:370
      _rspsize = 1;
    }
    else if (_cmd == 0x06) {        /* XPRG_CMD_CRC */
      D1PRINTF(" TPI_CRC\r\n");     /* not used (Fail) */
    }
    else if (bit_is_clear(PGCONF, PGCONF_UPDI_bp)) { /* empty */ }
    4ba2:	f8 9b       	sbis	0x1f, 0	; 31
    4ba4:	fb cf       	rjmp	.-10     	; 0x4b9c <main+0x1702>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:371
    else if (_cmd == 0x05) {        /* XPRG_CMD_READ_MEM */
    4ba6:	85 30       	cpi	r24, 0x05	; 5
    4ba8:	49 f5       	brne	.+82     	; 0x4bfc <main+0x1762>
bswap16():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/btools.cpp:45
//
// Byte convert
//

uint16_t bswap16 (uint16_t _word) {
  return __builtin_bswap16(_word);
    4baa:	20 91 0b 61 	lds	r18, 0x610B	; 0x80610b <packet+0xb>
    4bae:	30 91 0c 61 	lds	r19, 0x610C	; 0x80610c <packet+0xc>
    4bb2:	32 27       	eor	r19, r18
    4bb4:	23 27       	eor	r18, r19
    4bb6:	32 27       	eor	r19, r18
bswap32():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/btools.cpp:49
}

uint32_t bswap32 (uint32_t _dword) {
  return __builtin_bswap32(_dword);
    4bb8:	60 91 07 61 	lds	r22, 0x6107	; 0x806107 <packet+0x7>
    4bbc:	70 91 08 61 	lds	r23, 0x6108	; 0x806108 <packet+0x8>
    4bc0:	80 91 09 61 	lds	r24, 0x6109	; 0x806109 <packet+0x9>
    4bc4:	90 91 0a 61 	lds	r25, 0x610A	; 0x80610a <packet+0xa>
    4bc8:	35 d4       	rcall	.+2154   	; 0x5434 <__bswapsi2>
jtag_scope_tpi():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:372
      D1PRINTF(" TPI_READ=%02X:%08lX:%04X\r\n",
    4bca:	3f 93       	push	r19
    4bcc:	2f 93       	push	r18
    4bce:	9f 93       	push	r25
    4bd0:	8f 93       	push	r24
    4bd2:	7f 93       	push	r23
    4bd4:	6f 93       	push	r22
    4bd6:	80 91 06 61 	lds	r24, 0x6106	; 0x806106 <packet+0x6>
    4bda:	1f 92       	push	r1
    4bdc:	8f 93       	push	r24
    4bde:	85 ef       	ldi	r24, 0xF5	; 245
    4be0:	95 e0       	ldi	r25, 0x05	; 5
    4be2:	9f 93       	push	r25
    4be4:	8f 93       	push	r24
    4be6:	1f 93       	push	r17
    4be8:	0f 93       	push	r16
    4bea:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:377
        packet.out.tpi.read.bMType,
        bswap32(packet.out.tpi.read.dwAddr),
        bswap16(packet.out.tpi.read.wLength)
      );
      _rspsize = Timeout::command(&read_memory);
    4bee:	40 e2       	ldi	r20, 0x20	; 32
    4bf0:	53 e0       	ldi	r21, 0x03	; 3
    4bf2:	70 e0       	ldi	r23, 0x00	; 0
    4bf4:	60 e0       	ldi	r22, 0x00	; 0
    4bf6:	80 ee       	ldi	r24, 0xE0	; 224
    4bf8:	98 e1       	ldi	r25, 0x18	; 24
    4bfa:	5a cf       	rjmp	.-332    	; 0x4ab0 <main+0x1616>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:379
    }
    else if (_vtarget < 4500)     { /* empty */ }
    4bfc:	20 91 be 60 	lds	r18, 0x60BE	; 0x8060be <_vtarget>
    4c00:	30 91 bf 60 	lds	r19, 0x60BF	; 0x8060bf <_vtarget+0x1>
    4c04:	24 39       	cpi	r18, 0x94	; 148
    4c06:	31 41       	sbci	r19, 0x11	; 17
    4c08:	48 f2       	brcs	.-110    	; 0x4b9c <main+0x1702>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:380
    else if (_cmd == 0x03) {        /* XPRG_CMD_ERASE */
    4c0a:	83 30       	cpi	r24, 0x03	; 3
    4c0c:	01 f5       	brne	.+64     	; 0x4c4e <main+0x17b4>
bswap32():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/btools.cpp:49
    4c0e:	60 91 07 61 	lds	r22, 0x6107	; 0x806107 <packet+0x7>
    4c12:	70 91 08 61 	lds	r23, 0x6108	; 0x806108 <packet+0x8>
    4c16:	80 91 09 61 	lds	r24, 0x6109	; 0x806109 <packet+0x9>
    4c1a:	90 91 0a 61 	lds	r25, 0x610A	; 0x80610a <packet+0xa>
    4c1e:	0a d4       	rcall	.+2068   	; 0x5434 <__bswapsi2>
jtag_scope_tpi():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:381
      D1PRINTF(" TPI_ERASE=%02X:%08lX\r\n",
    4c20:	9f 93       	push	r25
    4c22:	8f 93       	push	r24
    4c24:	7f 93       	push	r23
    4c26:	6f 93       	push	r22
    4c28:	80 91 06 61 	lds	r24, 0x6106	; 0x806106 <packet+0x6>
    4c2c:	1f 92       	push	r1
    4c2e:	8f 93       	push	r24
    4c30:	8d ed       	ldi	r24, 0xDD	; 221
    4c32:	95 e0       	ldi	r25, 0x05	; 5
    4c34:	9f 93       	push	r25
    4c36:	8f 93       	push	r24
    4c38:	1f 93       	push	r17
    4c3a:	0f 93       	push	r16
    4c3c:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:385
        packet.out.tpi.read.bMType,
        bswap32(packet.out.tpi.read.dwAddr)
      );
      _rspsize = Timeout::command(&erase_memory);
    4c40:	40 e2       	ldi	r20, 0x20	; 32
    4c42:	53 e0       	ldi	r21, 0x03	; 3
    4c44:	70 e0       	ldi	r23, 0x00	; 0
    4c46:	60 e0       	ldi	r22, 0x00	; 0
    4c48:	80 e1       	ldi	r24, 0x10	; 16
    4c4a:	99 e1       	ldi	r25, 0x19	; 25
    4c4c:	31 cf       	rjmp	.-414    	; 0x4ab0 <main+0x1616>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:387
    }
    else if (_cmd == 0x04) {        /* XPRG_CMD_WRITE_MEM */
    4c4e:	84 30       	cpi	r24, 0x04	; 4
    4c50:	09 f0       	breq	.+2      	; 0x4c54 <main+0x17ba>
    4c52:	a4 cf       	rjmp	.-184    	; 0x4b9c <main+0x1702>
bswap16():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/btools.cpp:45
//
// Byte convert
//

uint16_t bswap16 (uint16_t _word) {
  return __builtin_bswap16(_word);
    4c54:	20 91 0c 61 	lds	r18, 0x610C	; 0x80610c <packet+0xc>
    4c58:	30 91 0d 61 	lds	r19, 0x610D	; 0x80610d <packet+0xd>
    4c5c:	32 27       	eor	r19, r18
    4c5e:	23 27       	eor	r18, r19
    4c60:	32 27       	eor	r19, r18
bswap32():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/modernAVR/0.3.0/cores/modernAVR/api/cpp/btools.cpp:49
}

uint32_t bswap32 (uint32_t _dword) {
  return __builtin_bswap32(_dword);
    4c62:	60 91 08 61 	lds	r22, 0x6108	; 0x806108 <packet+0x8>
    4c66:	70 91 09 61 	lds	r23, 0x6109	; 0x806109 <packet+0x9>
    4c6a:	80 91 0a 61 	lds	r24, 0x610A	; 0x80610a <packet+0xa>
    4c6e:	90 91 0b 61 	lds	r25, 0x610B	; 0x80610b <packet+0xb>
    4c72:	e0 d3       	rcall	.+1984   	; 0x5434 <__bswapsi2>
jtag_scope_tpi():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:388
      D1PRINTF(" TPI_WRITE=%02X:%08lX:%04X\r\n",
    4c74:	3f 93       	push	r19
    4c76:	2f 93       	push	r18
    4c78:	9f 93       	push	r25
    4c7a:	8f 93       	push	r24
    4c7c:	7f 93       	push	r23
    4c7e:	6f 93       	push	r22
    4c80:	80 91 06 61 	lds	r24, 0x6106	; 0x806106 <packet+0x6>
    4c84:	1f 92       	push	r1
    4c86:	8f 93       	push	r24
    4c88:	80 ec       	ldi	r24, 0xC0	; 192
    4c8a:	95 e0       	ldi	r25, 0x05	; 5
    4c8c:	9f 93       	push	r25
    4c8e:	8f 93       	push	r24
    4c90:	1f 93       	push	r17
    4c92:	0f 93       	push	r16
    4c94:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/tpi.cpp:393
        packet.out.tpi.write.bMType,
        bswap32(packet.out.tpi.write.dwAddr),
        bswap16(packet.out.tpi.write.wLength)
      );
      _rspsize = Timeout::command(&write_memory);
    4c98:	40 e2       	ldi	r20, 0x20	; 32
    4c9a:	53 e0       	ldi	r21, 0x03	; 3
    4c9c:	70 e0       	ldi	r23, 0x00	; 0
    4c9e:	60 e0       	ldi	r22, 0x00	; 0
    4ca0:	8d ee       	ldi	r24, 0xED	; 237
    4ca2:	97 e1       	ldi	r25, 0x17	; 23
    4ca4:	05 cf       	rjmp	.-502    	; 0x4ab0 <main+0x1616>
jtag_scope_branch():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:418
    else if (_scope == 0x20) _rspsize = jtag_scope_edbg();          /* SCOPE_EDBG */
    4ca6:	e0 e2       	ldi	r30, 0x20	; 32
    4ca8:	fe 12       	cpse	r15, r30
    4caa:	32 cb       	rjmp	.-2460   	; 0x4310 <main+0xe76>
jtag_scope_edbg():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:226

  /*** The EDBG scope provides access to the writer's hardware specifications. ***/
  /* There is no impact on operation if it is not called at all. */
  size_t jtag_scope_edbg (void) {
    size_t  _rspsize = 0;
    uint8_t _cmd     = packet.out.cmd;
    4cac:	90 91 05 61 	lds	r25, 0x6105	; 0x806105 <packet+0x5>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:227
    uint8_t _section = packet.out.section;
    4cb0:	c0 90 07 61 	lds	r12, 0x6107	; 0x806107 <packet+0x7>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:228
    uint8_t _index   = packet.out.index;
    4cb4:	d0 90 08 61 	lds	r13, 0x6108	; 0x806108 <packet+0x8>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:229
    uint8_t _length  = packet.out.length;
    4cb8:	80 91 09 61 	lds	r24, 0x6109	; 0x806109 <packet+0x9>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:230
    if (_cmd == 0x01) {             /* CMD3_SET_PARAMETER */
    4cbc:	91 30       	cpi	r25, 0x01	; 1
    4cbe:	b9 f5       	brne	.+110    	; 0x4d2e <main+0x1894>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:231
      uint16_t _data = packet.out.wValue;
    4cc0:	e0 90 0a 61 	lds	r14, 0x610A	; 0x80610a <packet+0xa>
    4cc4:	f0 90 0b 61 	lds	r15, 0x610B	; 0x80610b <packet+0xb>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:232
      D1PRINTF(" AVR_SET_PARAM=%02X:%02X:%02X:%02X\r\n", _section, _index, _length, _data);
    4cc8:	ff 92       	push	r15
    4cca:	ef 92       	push	r14
    4ccc:	1f 92       	push	r1
    4cce:	8f 93       	push	r24
    4cd0:	1f 92       	push	r1
    4cd2:	df 92       	push	r13
    4cd4:	1f 92       	push	r1
    4cd6:	cf 92       	push	r12
    4cd8:	80 ea       	ldi	r24, 0xA0	; 160
    4cda:	96 e0       	ldi	r25, 0x06	; 6
    4cdc:	9f 93       	push	r25
    4cde:	8f 93       	push	r24
    4ce0:	1f 93       	push	r17
    4ce2:	0f 93       	push	r16
    4ce4:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:233
      if (_section == 0) {          /* SET_GET_CTXT_CONFIG */
    4ce8:	cd bf       	out	0x3d, r28	; 61
    4cea:	de bf       	out	0x3e, r29	; 62
    4cec:	c1 10       	cpse	r12, r1
    4cee:	c4 cb       	rjmp	.-2168   	; 0x4478 <main+0xfde>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:234
        if (_index == 0x10) {       /* EDBG_CONTROL_TARGET_POWER */
    4cf0:	30 e1       	ldi	r19, 0x10	; 16
    4cf2:	d3 12       	cpse	r13, r19
    4cf4:	c1 cb       	rjmp	.-2174   	; 0x4478 <main+0xfde>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:236
          /* Called with `-xvtarget_switch=0,1` HAS_VTARG_SWITCH */
          D1PRINTF(" TARGET_POWER=%02X\r\n", _data);
    4cf6:	ff 92       	push	r15
    4cf8:	ef 92       	push	r14
    4cfa:	8b e8       	ldi	r24, 0x8B	; 139
    4cfc:	96 e0       	ldi	r25, 0x06	; 6
    4cfe:	9f 93       	push	r25
    4d00:	8f 93       	push	r24
    4d02:	1f 93       	push	r17
    4d04:	0f 93       	push	r16
    4d06:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:237
          _jtag_vpow = _data;       /* 0,1 */
    4d0a:	e0 92 c0 60 	sts	0x60C0, r14	; 0x8060c0 <_jtag_vpow>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:239
  #if defined(PIN_PGM_VPOWER)
          SYS::power_reset(true, false);              /* VPW off */
    4d0e:	60 e0       	ldi	r22, 0x00	; 0
    4d10:	81 e0       	ldi	r24, 0x01	; 1
    4d12:	0e 94 a6 14 	call	0x294c	; 0x294c <SYS::power_reset(bool, bool)>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:240
          if (_data) SYS::power_reset(false, true);   /* VPW on  */
    4d16:	0f 90       	pop	r0
    4d18:	0f 90       	pop	r0
    4d1a:	0f 90       	pop	r0
    4d1c:	0f 90       	pop	r0
    4d1e:	0f 90       	pop	r0
    4d20:	0f 90       	pop	r0
    4d22:	ef 28       	or	r14, r15
    4d24:	09 f4       	brne	.+2      	; 0x4d28 <main+0x188e>
    4d26:	a8 cb       	rjmp	.-2224   	; 0x4478 <main+0xfde>
power_reset():
    4d28:	0e 94 79 14 	call	0x28f2	; 0x28f2 <SYS::power_reset(bool, bool) [clone .part.3]>
    4d2c:	a5 cb       	rjmp	.-2230   	; 0x4478 <main+0xfde>
jtag_scope_edbg():
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:246
  #endif
        }
      }
      packet.in.res = 0x80;         /* RSP3_OK */
    }
    else if (_cmd == 0x02) {        /* CMD3_GET_PARAMETER */
    4d2e:	92 30       	cpi	r25, 0x02	; 2
    4d30:	09 f0       	breq	.+2      	; 0x4d34 <main+0x189a>
    4d32:	ee ca       	rjmp	.-2596   	; 0x4310 <main+0xe76>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:247
      D1PRINTF(" AVR_GET_PARAM=%02X:%02X:%02X\r\n", _section, _index, _length);
    4d34:	e8 2e       	mov	r14, r24
    4d36:	f1 2c       	mov	r15, r1
    4d38:	1f 92       	push	r1
    4d3a:	8f 93       	push	r24
    4d3c:	1f 92       	push	r1
    4d3e:	df 92       	push	r13
    4d40:	1f 92       	push	r1
    4d42:	cf 92       	push	r12
    4d44:	8b e6       	ldi	r24, 0x6B	; 107
    4d46:	96 e0       	ldi	r25, 0x06	; 6
    4d48:	9f 93       	push	r25
    4d4a:	8f 93       	push	r24
    4d4c:	1f 93       	push	r17
    4d4e:	0f 93       	push	r16
    4d50:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:248
      if (_section == 0) {          /* SET_GET_CTXT_CONFIG */
    4d54:	cd bf       	out	0x3d, r28	; 61
    4d56:	de bf       	out	0x3e, r29	; 62
    4d58:	c1 10       	cpse	r12, r1
    4d5a:	19 c0       	rjmp	.+50     	; 0x4d8e <main+0x18f4>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:249
        if (_index == 0x10) {       /* EDBG_CONTROL_TARGET_POWER */
    4d5c:	90 e1       	ldi	r25, 0x10	; 16
    4d5e:	d9 12       	cpse	r13, r25
    4d60:	16 c0       	rjmp	.+44     	; 0x4d8e <main+0x18f4>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:251
          /* Called with `-xvtarget_switch` HAS_VTARG_SWITCH */
          D1PRINTF(" TARGET_POWER=%02X\r\n", _jtag_vpow);
    4d62:	80 91 c0 60 	lds	r24, 0x60C0	; 0x8060c0 <_jtag_vpow>
    4d66:	1f 92       	push	r1
    4d68:	8f 93       	push	r24
    4d6a:	86 e5       	ldi	r24, 0x56	; 86
    4d6c:	96 e0       	ldi	r25, 0x06	; 6
    4d6e:	9f 93       	push	r25
    4d70:	8f 93       	push	r24
    4d72:	1f 93       	push	r17
    4d74:	0f 93       	push	r16
    4d76:	0e 94 18 0c 	call	0x1830	; 0x1830 <Print::printf(PGM_t const*, ...) [clone .constprop.17]>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:252
          packet.in.data[0] = _jtag_vpow;
    4d7a:	80 91 c0 60 	lds	r24, 0x60C0	; 0x8060c0 <_jtag_vpow>
    4d7e:	80 93 07 61 	sts	0x6107, r24	; 0x806107 <packet+0x7>
    4d82:	0f 90       	pop	r0
    4d84:	0f 90       	pop	r0
    4d86:	0f 90       	pop	r0
    4d88:	0f 90       	pop	r0
    4d8a:	0f 90       	pop	r0
    4d8c:	0f 90       	pop	r0
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:255
        }
      }
      packet.in.res = 0x184;        /* RSP3_DATA */
    4d8e:	84 e8       	ldi	r24, 0x84	; 132
    4d90:	91 e0       	ldi	r25, 0x01	; 1
    4d92:	80 93 05 61 	sts	0x6105, r24	; 0x806105 <packet+0x5>
    4d96:	90 93 06 61 	sts	0x6106, r25	; 0x806106 <packet+0x6>
/Users/askn/Collaborator/U4AU_46A2/UPDI4AVR-USB/src/jtag.cpp:256
      _rspsize = _length + 1;
    4d9a:	ef ef       	ldi	r30, 0xFF	; 255
    4d9c:	ee 1a       	sub	r14, r30
    4d9e:	fe 0a       	sbc	r15, r30
    4da0:	ca c9       	rjmp	.-3180   	; 0x4136 <main+0xc9c>

00004da2 <setjmp>:
setjmp():
    4da2:	dc 01       	movw	r26, r24
    4da4:	2d 92       	st	X+, r2
    4da6:	3d 92       	st	X+, r3
    4da8:	4d 92       	st	X+, r4
    4daa:	5d 92       	st	X+, r5
    4dac:	6d 92       	st	X+, r6
    4dae:	7d 92       	st	X+, r7
    4db0:	8d 92       	st	X+, r8
    4db2:	9d 92       	st	X+, r9
    4db4:	ad 92       	st	X+, r10
    4db6:	bd 92       	st	X+, r11
    4db8:	cd 92       	st	X+, r12
    4dba:	dd 92       	st	X+, r13
    4dbc:	ed 92       	st	X+, r14
    4dbe:	fd 92       	st	X+, r15
    4dc0:	0d 93       	st	X+, r16
    4dc2:	1d 93       	st	X+, r17
    4dc4:	cd 93       	st	X+, r28
    4dc6:	dd 93       	st	X+, r29
    4dc8:	ff 91       	pop	r31
    4dca:	ef 91       	pop	r30
    4dcc:	8d b7       	in	r24, 0x3d	; 61
    4dce:	8d 93       	st	X+, r24
    4dd0:	8e b7       	in	r24, 0x3e	; 62
    4dd2:	8d 93       	st	X+, r24
    4dd4:	8f b7       	in	r24, 0x3f	; 63
    4dd6:	8d 93       	st	X+, r24
    4dd8:	ed 93       	st	X+, r30
    4dda:	fd 93       	st	X+, r31
    4ddc:	88 27       	eor	r24, r24
    4dde:	99 27       	eor	r25, r25
    4de0:	09 94       	ijmp

00004de2 <longjmp>:
longjmp():
    4de2:	dc 01       	movw	r26, r24
    4de4:	cb 01       	movw	r24, r22
    4de6:	81 30       	cpi	r24, 0x01	; 1
    4de8:	91 05       	cpc	r25, r1
    4dea:	81 1d       	adc	r24, r1
    4dec:	2d 90       	ld	r2, X+
    4dee:	3d 90       	ld	r3, X+
    4df0:	4d 90       	ld	r4, X+
    4df2:	5d 90       	ld	r5, X+
    4df4:	6d 90       	ld	r6, X+
    4df6:	7d 90       	ld	r7, X+
    4df8:	8d 90       	ld	r8, X+
    4dfa:	9d 90       	ld	r9, X+
    4dfc:	ad 90       	ld	r10, X+
    4dfe:	bd 90       	ld	r11, X+
    4e00:	cd 90       	ld	r12, X+
    4e02:	dd 90       	ld	r13, X+
    4e04:	ed 90       	ld	r14, X+
    4e06:	fd 90       	ld	r15, X+
    4e08:	0d 91       	ld	r16, X+
    4e0a:	1d 91       	ld	r17, X+
    4e0c:	cd 91       	ld	r28, X+
    4e0e:	dd 91       	ld	r29, X+
    4e10:	ed 91       	ld	r30, X+
    4e12:	fd 91       	ld	r31, X+
    4e14:	0d 90       	ld	r0, X+
    4e16:	0f be       	out	0x3f, r0	; 63
    4e18:	ed bf       	out	0x3d, r30	; 61
    4e1a:	fe bf       	out	0x3e, r31	; 62
    4e1c:	ed 91       	ld	r30, X+
    4e1e:	fd 91       	ld	r31, X+
    4e20:	09 94       	ijmp

00004e22 <memcpy_P>:
memcpy_P():
    4e22:	fb 01       	movw	r30, r22
    4e24:	dc 01       	movw	r26, r24
    4e26:	02 c0       	rjmp	.+4      	; 0x4e2c <memcpy_P+0xa>
    4e28:	05 90       	lpm	r0, Z+
    4e2a:	0d 92       	st	X+, r0
    4e2c:	41 50       	subi	r20, 0x01	; 1
    4e2e:	50 40       	sbci	r21, 0x00	; 0
    4e30:	d8 f7       	brcc	.-10     	; 0x4e28 <memcpy_P+0x6>
    4e32:	08 95       	ret

00004e34 <vfprintf_P>:
vfprintf_P():
    4e34:	cf 93       	push	r28
    4e36:	df 93       	push	r29
    4e38:	ec 01       	movw	r28, r24
    4e3a:	8b 81       	ldd	r24, Y+3	; 0x03
    4e3c:	88 60       	ori	r24, 0x08	; 8
    4e3e:	8b 83       	std	Y+3, r24	; 0x03
    4e40:	ce 01       	movw	r24, r28
    4e42:	06 d0       	rcall	.+12     	; 0x4e50 <vfprintf>
    4e44:	2b 81       	ldd	r18, Y+3	; 0x03
    4e46:	27 7f       	andi	r18, 0xF7	; 247
    4e48:	2b 83       	std	Y+3, r18	; 0x03
    4e4a:	df 91       	pop	r29
    4e4c:	cf 91       	pop	r28
    4e4e:	08 95       	ret

00004e50 <vfprintf>:
vfprintf():
    4e50:	ab e0       	ldi	r26, 0x0B	; 11
    4e52:	b0 e0       	ldi	r27, 0x00	; 0
    4e54:	ed e2       	ldi	r30, 0x2D	; 45
    4e56:	f7 e2       	ldi	r31, 0x27	; 39
    4e58:	6a c2       	rjmp	.+1236   	; 0x532e <__prologue_saves__>
    4e5a:	7c 01       	movw	r14, r24
    4e5c:	3b 01       	movw	r6, r22
    4e5e:	8a 01       	movw	r16, r20
    4e60:	fc 01       	movw	r30, r24
    4e62:	16 82       	std	Z+6, r1	; 0x06
    4e64:	17 82       	std	Z+7, r1	; 0x07
    4e66:	83 81       	ldd	r24, Z+3	; 0x03
    4e68:	81 ff       	sbrs	r24, 1
    4e6a:	ba c1       	rjmp	.+884    	; 0x51e0 <vfprintf+0x390>
    4e6c:	ce 01       	movw	r24, r28
    4e6e:	01 96       	adiw	r24, 0x01	; 1
    4e70:	5c 01       	movw	r10, r24
    4e72:	f7 01       	movw	r30, r14
    4e74:	93 81       	ldd	r25, Z+3	; 0x03
    4e76:	f3 01       	movw	r30, r6
    4e78:	93 fd       	sbrc	r25, 3
    4e7a:	85 91       	lpm	r24, Z+
    4e7c:	93 ff       	sbrs	r25, 3
    4e7e:	81 91       	ld	r24, Z+
    4e80:	3f 01       	movw	r6, r30
    4e82:	88 23       	and	r24, r24
    4e84:	09 f4       	brne	.+2      	; 0x4e88 <vfprintf+0x38>
    4e86:	49 c1       	rjmp	.+658    	; 0x511a <vfprintf+0x2ca>
    4e88:	85 32       	cpi	r24, 0x25	; 37
    4e8a:	39 f4       	brne	.+14     	; 0x4e9a <vfprintf+0x4a>
    4e8c:	93 fd       	sbrc	r25, 3
    4e8e:	85 91       	lpm	r24, Z+
    4e90:	93 ff       	sbrs	r25, 3
    4e92:	81 91       	ld	r24, Z+
    4e94:	3f 01       	movw	r6, r30
    4e96:	85 32       	cpi	r24, 0x25	; 37
    4e98:	21 f4       	brne	.+8      	; 0x4ea2 <vfprintf+0x52>
    4e9a:	b7 01       	movw	r22, r14
    4e9c:	90 e0       	ldi	r25, 0x00	; 0
    4e9e:	b9 d1       	rcall	.+882    	; 0x5212 <fputc>
    4ea0:	e8 cf       	rjmp	.-48     	; 0x4e72 <vfprintf+0x22>
    4ea2:	91 2c       	mov	r9, r1
    4ea4:	21 2c       	mov	r2, r1
    4ea6:	31 2c       	mov	r3, r1
    4ea8:	ff e1       	ldi	r31, 0x1F	; 31
    4eaa:	f3 15       	cp	r31, r3
    4eac:	38 f0       	brcs	.+14     	; 0x4ebc <vfprintf+0x6c>
    4eae:	8b 32       	cpi	r24, 0x2B	; 43
    4eb0:	11 f1       	breq	.+68     	; 0x4ef6 <vfprintf+0xa6>
    4eb2:	90 f4       	brcc	.+36     	; 0x4ed8 <vfprintf+0x88>
    4eb4:	80 32       	cpi	r24, 0x20	; 32
    4eb6:	09 f1       	breq	.+66     	; 0x4efa <vfprintf+0xaa>
    4eb8:	83 32       	cpi	r24, 0x23	; 35
    4eba:	29 f1       	breq	.+74     	; 0x4f06 <vfprintf+0xb6>
    4ebc:	37 fc       	sbrc	r3, 7
    4ebe:	3c c0       	rjmp	.+120    	; 0x4f38 <vfprintf+0xe8>
    4ec0:	20 ed       	ldi	r18, 0xD0	; 208
    4ec2:	28 0f       	add	r18, r24
    4ec4:	2a 30       	cpi	r18, 0x0A	; 10
    4ec6:	50 f5       	brcc	.+84     	; 0x4f1c <vfprintf+0xcc>
    4ec8:	36 fe       	sbrs	r3, 6
    4eca:	20 c0       	rjmp	.+64     	; 0x4f0c <vfprintf+0xbc>
    4ecc:	8a e0       	ldi	r24, 0x0A	; 10
    4ece:	98 9e       	mul	r9, r24
    4ed0:	20 0d       	add	r18, r0
    4ed2:	11 24       	eor	r1, r1
    4ed4:	92 2e       	mov	r9, r18
    4ed6:	06 c0       	rjmp	.+12     	; 0x4ee4 <vfprintf+0x94>
    4ed8:	8d 32       	cpi	r24, 0x2D	; 45
    4eda:	91 f0       	breq	.+36     	; 0x4f00 <vfprintf+0xb0>
    4edc:	80 33       	cpi	r24, 0x30	; 48
    4ede:	71 f7       	brne	.-36     	; 0x4ebc <vfprintf+0x6c>
    4ee0:	68 94       	set
    4ee2:	30 f8       	bld	r3, 0
    4ee4:	f3 01       	movw	r30, r6
    4ee6:	93 fd       	sbrc	r25, 3
    4ee8:	85 91       	lpm	r24, Z+
    4eea:	93 ff       	sbrs	r25, 3
    4eec:	81 91       	ld	r24, Z+
    4eee:	3f 01       	movw	r6, r30
    4ef0:	81 11       	cpse	r24, r1
    4ef2:	da cf       	rjmp	.-76     	; 0x4ea8 <vfprintf+0x58>
    4ef4:	21 c0       	rjmp	.+66     	; 0x4f38 <vfprintf+0xe8>
    4ef6:	68 94       	set
    4ef8:	31 f8       	bld	r3, 1
    4efa:	68 94       	set
    4efc:	32 f8       	bld	r3, 2
    4efe:	f2 cf       	rjmp	.-28     	; 0x4ee4 <vfprintf+0x94>
    4f00:	68 94       	set
    4f02:	33 f8       	bld	r3, 3
    4f04:	ef cf       	rjmp	.-34     	; 0x4ee4 <vfprintf+0x94>
    4f06:	68 94       	set
    4f08:	34 f8       	bld	r3, 4
    4f0a:	ec cf       	rjmp	.-40     	; 0x4ee4 <vfprintf+0x94>
    4f0c:	ea e0       	ldi	r30, 0x0A	; 10
    4f0e:	2e 9e       	mul	r2, r30
    4f10:	20 0d       	add	r18, r0
    4f12:	11 24       	eor	r1, r1
    4f14:	22 2e       	mov	r2, r18
    4f16:	68 94       	set
    4f18:	35 f8       	bld	r3, 5
    4f1a:	e4 cf       	rjmp	.-56     	; 0x4ee4 <vfprintf+0x94>
    4f1c:	8e 32       	cpi	r24, 0x2E	; 46
    4f1e:	29 f4       	brne	.+10     	; 0x4f2a <vfprintf+0xda>
    4f20:	36 fc       	sbrc	r3, 6
    4f22:	fb c0       	rjmp	.+502    	; 0x511a <vfprintf+0x2ca>
    4f24:	68 94       	set
    4f26:	36 f8       	bld	r3, 6
    4f28:	dd cf       	rjmp	.-70     	; 0x4ee4 <vfprintf+0x94>
    4f2a:	8c 36       	cpi	r24, 0x6C	; 108
    4f2c:	19 f4       	brne	.+6      	; 0x4f34 <vfprintf+0xe4>
    4f2e:	68 94       	set
    4f30:	37 f8       	bld	r3, 7
    4f32:	d8 cf       	rjmp	.-80     	; 0x4ee4 <vfprintf+0x94>
    4f34:	88 36       	cpi	r24, 0x68	; 104
    4f36:	b1 f2       	breq	.-84     	; 0x4ee4 <vfprintf+0x94>
    4f38:	98 2f       	mov	r25, r24
    4f3a:	9f 7d       	andi	r25, 0xDF	; 223
    4f3c:	95 54       	subi	r25, 0x45	; 69
    4f3e:	93 30       	cpi	r25, 0x03	; 3
    4f40:	d8 f0       	brcs	.+54     	; 0x4f78 <vfprintf+0x128>
    4f42:	83 36       	cpi	r24, 0x63	; 99
    4f44:	91 f1       	breq	.+100    	; 0x4faa <vfprintf+0x15a>
    4f46:	83 37       	cpi	r24, 0x73	; 115
    4f48:	b1 f1       	breq	.+108    	; 0x4fb6 <vfprintf+0x166>
    4f4a:	83 35       	cpi	r24, 0x53	; 83
    4f4c:	09 f0       	breq	.+2      	; 0x4f50 <vfprintf+0x100>
    4f4e:	5e c0       	rjmp	.+188    	; 0x500c <vfprintf+0x1bc>
    4f50:	28 01       	movw	r4, r16
    4f52:	f2 e0       	ldi	r31, 0x02	; 2
    4f54:	4f 0e       	add	r4, r31
    4f56:	51 1c       	adc	r5, r1
    4f58:	f8 01       	movw	r30, r16
    4f5a:	c0 80       	ld	r12, Z
    4f5c:	d1 80       	ldd	r13, Z+1	; 0x01
    4f5e:	69 2d       	mov	r22, r9
    4f60:	70 e0       	ldi	r23, 0x00	; 0
    4f62:	36 fc       	sbrc	r3, 6
    4f64:	02 c0       	rjmp	.+4      	; 0x4f6a <vfprintf+0x11a>
    4f66:	6f ef       	ldi	r22, 0xFF	; 255
    4f68:	7f ef       	ldi	r23, 0xFF	; 255
    4f6a:	c6 01       	movw	r24, r12
    4f6c:	3c d1       	rcall	.+632    	; 0x51e6 <strnlen_P>
    4f6e:	4c 01       	movw	r8, r24
    4f70:	68 94       	set
    4f72:	37 f8       	bld	r3, 7
    4f74:	82 01       	movw	r16, r4
    4f76:	0a c0       	rjmp	.+20     	; 0x4f8c <vfprintf+0x13c>
    4f78:	0c 5f       	subi	r16, 0xFC	; 252
    4f7a:	1f 4f       	sbci	r17, 0xFF	; 255
    4f7c:	ff e3       	ldi	r31, 0x3F	; 63
    4f7e:	f9 83       	std	Y+1, r31	; 0x01
    4f80:	88 24       	eor	r8, r8
    4f82:	83 94       	inc	r8
    4f84:	91 2c       	mov	r9, r1
    4f86:	65 01       	movw	r12, r10
    4f88:	e8 94       	clt
    4f8a:	37 f8       	bld	r3, 7
    4f8c:	33 fe       	sbrs	r3, 3
    4f8e:	2a c0       	rjmp	.+84     	; 0x4fe4 <vfprintf+0x194>
    4f90:	52 2c       	mov	r5, r2
    4f92:	81 14       	cp	r8, r1
    4f94:	91 04       	cpc	r9, r1
    4f96:	59 f5       	brne	.+86     	; 0x4fee <vfprintf+0x19e>
    4f98:	55 20       	and	r5, r5
    4f9a:	09 f4       	brne	.+2      	; 0x4f9e <vfprintf+0x14e>
    4f9c:	6a cf       	rjmp	.-300    	; 0x4e72 <vfprintf+0x22>
    4f9e:	b7 01       	movw	r22, r14
    4fa0:	80 e2       	ldi	r24, 0x20	; 32
    4fa2:	90 e0       	ldi	r25, 0x00	; 0
    4fa4:	36 d1       	rcall	.+620    	; 0x5212 <fputc>
    4fa6:	5a 94       	dec	r5
    4fa8:	f7 cf       	rjmp	.-18     	; 0x4f98 <vfprintf+0x148>
    4faa:	f8 01       	movw	r30, r16
    4fac:	80 81       	ld	r24, Z
    4fae:	89 83       	std	Y+1, r24	; 0x01
    4fb0:	0e 5f       	subi	r16, 0xFE	; 254
    4fb2:	1f 4f       	sbci	r17, 0xFF	; 255
    4fb4:	e5 cf       	rjmp	.-54     	; 0x4f80 <vfprintf+0x130>
    4fb6:	28 01       	movw	r4, r16
    4fb8:	f2 e0       	ldi	r31, 0x02	; 2
    4fba:	4f 0e       	add	r4, r31
    4fbc:	51 1c       	adc	r5, r1
    4fbe:	f8 01       	movw	r30, r16
    4fc0:	c0 80       	ld	r12, Z
    4fc2:	d1 80       	ldd	r13, Z+1	; 0x01
    4fc4:	69 2d       	mov	r22, r9
    4fc6:	70 e0       	ldi	r23, 0x00	; 0
    4fc8:	36 fc       	sbrc	r3, 6
    4fca:	02 c0       	rjmp	.+4      	; 0x4fd0 <vfprintf+0x180>
    4fcc:	6f ef       	ldi	r22, 0xFF	; 255
    4fce:	7f ef       	ldi	r23, 0xFF	; 255
    4fd0:	c6 01       	movw	r24, r12
    4fd2:	14 d1       	rcall	.+552    	; 0x51fc <strnlen>
    4fd4:	4c 01       	movw	r8, r24
    4fd6:	82 01       	movw	r16, r4
    4fd8:	d7 cf       	rjmp	.-82     	; 0x4f88 <vfprintf+0x138>
    4fda:	b7 01       	movw	r22, r14
    4fdc:	80 e2       	ldi	r24, 0x20	; 32
    4fde:	90 e0       	ldi	r25, 0x00	; 0
    4fe0:	18 d1       	rcall	.+560    	; 0x5212 <fputc>
    4fe2:	2a 94       	dec	r2
    4fe4:	28 14       	cp	r2, r8
    4fe6:	19 04       	cpc	r1, r9
    4fe8:	09 f0       	breq	.+2      	; 0x4fec <vfprintf+0x19c>
    4fea:	b8 f7       	brcc	.-18     	; 0x4fda <vfprintf+0x18a>
    4fec:	d1 cf       	rjmp	.-94     	; 0x4f90 <vfprintf+0x140>
    4fee:	f6 01       	movw	r30, r12
    4ff0:	37 fc       	sbrc	r3, 7
    4ff2:	85 91       	lpm	r24, Z+
    4ff4:	37 fe       	sbrs	r3, 7
    4ff6:	81 91       	ld	r24, Z+
    4ff8:	6f 01       	movw	r12, r30
    4ffa:	b7 01       	movw	r22, r14
    4ffc:	90 e0       	ldi	r25, 0x00	; 0
    4ffe:	09 d1       	rcall	.+530    	; 0x5212 <fputc>
    5000:	51 10       	cpse	r5, r1
    5002:	5a 94       	dec	r5
    5004:	f1 e0       	ldi	r31, 0x01	; 1
    5006:	8f 1a       	sub	r8, r31
    5008:	91 08       	sbc	r9, r1
    500a:	c3 cf       	rjmp	.-122    	; 0x4f92 <vfprintf+0x142>
    500c:	84 36       	cpi	r24, 0x64	; 100
    500e:	19 f0       	breq	.+6      	; 0x5016 <vfprintf+0x1c6>
    5010:	89 36       	cpi	r24, 0x69	; 105
    5012:	09 f0       	breq	.+2      	; 0x5016 <vfprintf+0x1c6>
    5014:	73 c0       	rjmp	.+230    	; 0x50fc <vfprintf+0x2ac>
    5016:	f8 01       	movw	r30, r16
    5018:	37 fe       	sbrs	r3, 7
    501a:	67 c0       	rjmp	.+206    	; 0x50ea <vfprintf+0x29a>
    501c:	60 81       	ld	r22, Z
    501e:	71 81       	ldd	r23, Z+1	; 0x01
    5020:	82 81       	ldd	r24, Z+2	; 0x02
    5022:	93 81       	ldd	r25, Z+3	; 0x03
    5024:	0c 5f       	subi	r16, 0xFC	; 252
    5026:	1f 4f       	sbci	r17, 0xFF	; 255
    5028:	f3 2d       	mov	r31, r3
    502a:	ff 76       	andi	r31, 0x6F	; 111
    502c:	3f 2e       	mov	r3, r31
    502e:	97 ff       	sbrs	r25, 7
    5030:	09 c0       	rjmp	.+18     	; 0x5044 <vfprintf+0x1f4>
    5032:	90 95       	com	r25
    5034:	80 95       	com	r24
    5036:	70 95       	com	r23
    5038:	61 95       	neg	r22
    503a:	7f 4f       	sbci	r23, 0xFF	; 255
    503c:	8f 4f       	sbci	r24, 0xFF	; 255
    503e:	9f 4f       	sbci	r25, 0xFF	; 255
    5040:	68 94       	set
    5042:	37 f8       	bld	r3, 7
    5044:	2a e0       	ldi	r18, 0x0A	; 10
    5046:	30 e0       	ldi	r19, 0x00	; 0
    5048:	a5 01       	movw	r20, r10
    504a:	13 d1       	rcall	.+550    	; 0x5272 <__ultoa_invert>
    504c:	c8 2e       	mov	r12, r24
    504e:	ca 18       	sub	r12, r10
    5050:	8c 2c       	mov	r8, r12
    5052:	43 2c       	mov	r4, r3
    5054:	36 fe       	sbrs	r3, 6
    5056:	0c c0       	rjmp	.+24     	; 0x5070 <vfprintf+0x220>
    5058:	e8 94       	clt
    505a:	40 f8       	bld	r4, 0
    505c:	c9 14       	cp	r12, r9
    505e:	40 f4       	brcc	.+16     	; 0x5070 <vfprintf+0x220>
    5060:	34 fe       	sbrs	r3, 4
    5062:	05 c0       	rjmp	.+10     	; 0x506e <vfprintf+0x21e>
    5064:	32 fc       	sbrc	r3, 2
    5066:	03 c0       	rjmp	.+6      	; 0x506e <vfprintf+0x21e>
    5068:	f3 2d       	mov	r31, r3
    506a:	fe 7e       	andi	r31, 0xEE	; 238
    506c:	4f 2e       	mov	r4, r31
    506e:	89 2c       	mov	r8, r9
    5070:	44 fe       	sbrs	r4, 4
    5072:	90 c0       	rjmp	.+288    	; 0x5194 <vfprintf+0x344>
    5074:	fe 01       	movw	r30, r28
    5076:	ec 0d       	add	r30, r12
    5078:	f1 1d       	adc	r31, r1
    507a:	80 81       	ld	r24, Z
    507c:	80 33       	cpi	r24, 0x30	; 48
    507e:	09 f0       	breq	.+2      	; 0x5082 <vfprintf+0x232>
    5080:	82 c0       	rjmp	.+260    	; 0x5186 <vfprintf+0x336>
    5082:	24 2d       	mov	r18, r4
    5084:	29 7e       	andi	r18, 0xE9	; 233
    5086:	42 2e       	mov	r4, r18
    5088:	84 2d       	mov	r24, r4
    508a:	88 70       	andi	r24, 0x08	; 8
    508c:	58 2e       	mov	r5, r24
    508e:	43 fc       	sbrc	r4, 3
    5090:	8f c0       	rjmp	.+286    	; 0x51b0 <vfprintf+0x360>
    5092:	40 fe       	sbrs	r4, 0
    5094:	89 c0       	rjmp	.+274    	; 0x51a8 <vfprintf+0x358>
    5096:	9c 2c       	mov	r9, r12
    5098:	82 14       	cp	r8, r2
    509a:	18 f4       	brcc	.+6      	; 0x50a2 <vfprintf+0x252>
    509c:	2c 0c       	add	r2, r12
    509e:	92 2c       	mov	r9, r2
    50a0:	98 18       	sub	r9, r8
    50a2:	44 fe       	sbrs	r4, 4
    50a4:	8b c0       	rjmp	.+278    	; 0x51bc <vfprintf+0x36c>
    50a6:	b7 01       	movw	r22, r14
    50a8:	80 e3       	ldi	r24, 0x30	; 48
    50aa:	90 e0       	ldi	r25, 0x00	; 0
    50ac:	b2 d0       	rcall	.+356    	; 0x5212 <fputc>
    50ae:	42 fe       	sbrs	r4, 2
    50b0:	08 c0       	rjmp	.+16     	; 0x50c2 <vfprintf+0x272>
    50b2:	88 e7       	ldi	r24, 0x78	; 120
    50b4:	90 e0       	ldi	r25, 0x00	; 0
    50b6:	41 fe       	sbrs	r4, 1
    50b8:	02 c0       	rjmp	.+4      	; 0x50be <vfprintf+0x26e>
    50ba:	88 e5       	ldi	r24, 0x58	; 88
    50bc:	90 e0       	ldi	r25, 0x00	; 0
    50be:	b7 01       	movw	r22, r14
    50c0:	a8 d0       	rcall	.+336    	; 0x5212 <fputc>
    50c2:	c9 14       	cp	r12, r9
    50c4:	08 f4       	brcc	.+2      	; 0x50c8 <vfprintf+0x278>
    50c6:	86 c0       	rjmp	.+268    	; 0x51d4 <vfprintf+0x384>
    50c8:	ca 94       	dec	r12
    50ca:	d1 2c       	mov	r13, r1
    50cc:	9f ef       	ldi	r25, 0xFF	; 255
    50ce:	c9 1a       	sub	r12, r25
    50d0:	d9 0a       	sbc	r13, r25
    50d2:	ca 0c       	add	r12, r10
    50d4:	db 1c       	adc	r13, r11
    50d6:	f6 01       	movw	r30, r12
    50d8:	82 91       	ld	r24, -Z
    50da:	6f 01       	movw	r12, r30
    50dc:	b7 01       	movw	r22, r14
    50de:	90 e0       	ldi	r25, 0x00	; 0
    50e0:	98 d0       	rcall	.+304    	; 0x5212 <fputc>
    50e2:	ac 14       	cp	r10, r12
    50e4:	bd 04       	cpc	r11, r13
    50e6:	b9 f7       	brne	.-18     	; 0x50d6 <vfprintf+0x286>
    50e8:	57 cf       	rjmp	.-338    	; 0x4f98 <vfprintf+0x148>
    50ea:	60 81       	ld	r22, Z
    50ec:	71 81       	ldd	r23, Z+1	; 0x01
    50ee:	07 2e       	mov	r0, r23
    50f0:	00 0c       	add	r0, r0
    50f2:	88 0b       	sbc	r24, r24
    50f4:	99 0b       	sbc	r25, r25
    50f6:	0e 5f       	subi	r16, 0xFE	; 254
    50f8:	1f 4f       	sbci	r17, 0xFF	; 255
    50fa:	96 cf       	rjmp	.-212    	; 0x5028 <vfprintf+0x1d8>
    50fc:	d3 2c       	mov	r13, r3
    50fe:	e8 94       	clt
    5100:	d4 f8       	bld	r13, 4
    5102:	2a e0       	ldi	r18, 0x0A	; 10
    5104:	30 e0       	ldi	r19, 0x00	; 0
    5106:	85 37       	cpi	r24, 0x75	; 117
    5108:	31 f1       	breq	.+76     	; 0x5156 <vfprintf+0x306>
    510a:	23 2d       	mov	r18, r3
    510c:	29 7f       	andi	r18, 0xF9	; 249
    510e:	d2 2e       	mov	r13, r18
    5110:	8f 36       	cpi	r24, 0x6F	; 111
    5112:	f9 f0       	breq	.+62     	; 0x5152 <vfprintf+0x302>
    5114:	40 f4       	brcc	.+16     	; 0x5126 <vfprintf+0x2d6>
    5116:	88 35       	cpi	r24, 0x58	; 88
    5118:	a1 f0       	breq	.+40     	; 0x5142 <vfprintf+0x2f2>
    511a:	f7 01       	movw	r30, r14
    511c:	86 81       	ldd	r24, Z+6	; 0x06
    511e:	97 81       	ldd	r25, Z+7	; 0x07
    5120:	2b 96       	adiw	r28, 0x0b	; 11
    5122:	e2 e1       	ldi	r30, 0x12	; 18
    5124:	1d c1       	rjmp	.+570    	; 0x5360 <__epilogue_restores__>
    5126:	80 37       	cpi	r24, 0x70	; 112
    5128:	49 f0       	breq	.+18     	; 0x513c <vfprintf+0x2ec>
    512a:	88 37       	cpi	r24, 0x78	; 120
    512c:	b1 f7       	brne	.-20     	; 0x511a <vfprintf+0x2ca>
    512e:	d4 fe       	sbrs	r13, 4
    5130:	02 c0       	rjmp	.+4      	; 0x5136 <vfprintf+0x2e6>
    5132:	68 94       	set
    5134:	d2 f8       	bld	r13, 2
    5136:	20 e1       	ldi	r18, 0x10	; 16
    5138:	30 e0       	ldi	r19, 0x00	; 0
    513a:	0d c0       	rjmp	.+26     	; 0x5156 <vfprintf+0x306>
    513c:	68 94       	set
    513e:	d4 f8       	bld	r13, 4
    5140:	f6 cf       	rjmp	.-20     	; 0x512e <vfprintf+0x2de>
    5142:	34 fe       	sbrs	r3, 4
    5144:	03 c0       	rjmp	.+6      	; 0x514c <vfprintf+0x2fc>
    5146:	82 2f       	mov	r24, r18
    5148:	86 60       	ori	r24, 0x06	; 6
    514a:	d8 2e       	mov	r13, r24
    514c:	20 e1       	ldi	r18, 0x10	; 16
    514e:	32 e0       	ldi	r19, 0x02	; 2
    5150:	02 c0       	rjmp	.+4      	; 0x5156 <vfprintf+0x306>
    5152:	28 e0       	ldi	r18, 0x08	; 8
    5154:	30 e0       	ldi	r19, 0x00	; 0
    5156:	f8 01       	movw	r30, r16
    5158:	d7 fe       	sbrs	r13, 7
    515a:	0e c0       	rjmp	.+28     	; 0x5178 <vfprintf+0x328>
    515c:	60 81       	ld	r22, Z
    515e:	71 81       	ldd	r23, Z+1	; 0x01
    5160:	82 81       	ldd	r24, Z+2	; 0x02
    5162:	93 81       	ldd	r25, Z+3	; 0x03
    5164:	0c 5f       	subi	r16, 0xFC	; 252
    5166:	1f 4f       	sbci	r17, 0xFF	; 255
    5168:	a5 01       	movw	r20, r10
    516a:	83 d0       	rcall	.+262    	; 0x5272 <__ultoa_invert>
    516c:	c8 2e       	mov	r12, r24
    516e:	ca 18       	sub	r12, r10
    5170:	3d 2c       	mov	r3, r13
    5172:	e8 94       	clt
    5174:	37 f8       	bld	r3, 7
    5176:	6c cf       	rjmp	.-296    	; 0x5050 <vfprintf+0x200>
    5178:	60 81       	ld	r22, Z
    517a:	71 81       	ldd	r23, Z+1	; 0x01
    517c:	90 e0       	ldi	r25, 0x00	; 0
    517e:	80 e0       	ldi	r24, 0x00	; 0
    5180:	0e 5f       	subi	r16, 0xFE	; 254
    5182:	1f 4f       	sbci	r17, 0xFF	; 255
    5184:	f1 cf       	rjmp	.-30     	; 0x5168 <vfprintf+0x318>
    5186:	42 fc       	sbrc	r4, 2
    5188:	02 c0       	rjmp	.+4      	; 0x518e <vfprintf+0x33e>
    518a:	83 94       	inc	r8
    518c:	7d cf       	rjmp	.-262    	; 0x5088 <vfprintf+0x238>
    518e:	83 94       	inc	r8
    5190:	83 94       	inc	r8
    5192:	7a cf       	rjmp	.-268    	; 0x5088 <vfprintf+0x238>
    5194:	84 2d       	mov	r24, r4
    5196:	86 78       	andi	r24, 0x86	; 134
    5198:	09 f4       	brne	.+2      	; 0x519c <vfprintf+0x34c>
    519a:	76 cf       	rjmp	.-276    	; 0x5088 <vfprintf+0x238>
    519c:	f6 cf       	rjmp	.-20     	; 0x518a <vfprintf+0x33a>
    519e:	b7 01       	movw	r22, r14
    51a0:	80 e2       	ldi	r24, 0x20	; 32
    51a2:	90 e0       	ldi	r25, 0x00	; 0
    51a4:	36 d0       	rcall	.+108    	; 0x5212 <fputc>
    51a6:	83 94       	inc	r8
    51a8:	82 14       	cp	r8, r2
    51aa:	c8 f3       	brcs	.-14     	; 0x519e <vfprintf+0x34e>
    51ac:	51 2c       	mov	r5, r1
    51ae:	79 cf       	rjmp	.-270    	; 0x50a2 <vfprintf+0x252>
    51b0:	52 2c       	mov	r5, r2
    51b2:	58 18       	sub	r5, r8
    51b4:	82 14       	cp	r8, r2
    51b6:	08 f4       	brcc	.+2      	; 0x51ba <vfprintf+0x36a>
    51b8:	74 cf       	rjmp	.-280    	; 0x50a2 <vfprintf+0x252>
    51ba:	f8 cf       	rjmp	.-16     	; 0x51ac <vfprintf+0x35c>
    51bc:	84 2d       	mov	r24, r4
    51be:	86 78       	andi	r24, 0x86	; 134
    51c0:	09 f4       	brne	.+2      	; 0x51c4 <vfprintf+0x374>
    51c2:	7f cf       	rjmp	.-258    	; 0x50c2 <vfprintf+0x272>
    51c4:	8b e2       	ldi	r24, 0x2B	; 43
    51c6:	41 fe       	sbrs	r4, 1
    51c8:	80 e2       	ldi	r24, 0x20	; 32
    51ca:	47 fc       	sbrc	r4, 7
    51cc:	8d e2       	ldi	r24, 0x2D	; 45
    51ce:	b7 01       	movw	r22, r14
    51d0:	90 e0       	ldi	r25, 0x00	; 0
    51d2:	76 cf       	rjmp	.-276    	; 0x50c0 <vfprintf+0x270>
    51d4:	b7 01       	movw	r22, r14
    51d6:	80 e3       	ldi	r24, 0x30	; 48
    51d8:	90 e0       	ldi	r25, 0x00	; 0
    51da:	1b d0       	rcall	.+54     	; 0x5212 <fputc>
    51dc:	9a 94       	dec	r9
    51de:	71 cf       	rjmp	.-286    	; 0x50c2 <vfprintf+0x272>
    51e0:	8f ef       	ldi	r24, 0xFF	; 255
    51e2:	9f ef       	ldi	r25, 0xFF	; 255
    51e4:	9d cf       	rjmp	.-198    	; 0x5120 <vfprintf+0x2d0>

000051e6 <strnlen_P>:
strnlen_P():
    51e6:	fc 01       	movw	r30, r24
    51e8:	05 90       	lpm	r0, Z+
    51ea:	61 50       	subi	r22, 0x01	; 1
    51ec:	70 40       	sbci	r23, 0x00	; 0
    51ee:	01 10       	cpse	r0, r1
    51f0:	d8 f7       	brcc	.-10     	; 0x51e8 <strnlen_P+0x2>
    51f2:	80 95       	com	r24
    51f4:	90 95       	com	r25
    51f6:	8e 0f       	add	r24, r30
    51f8:	9f 1f       	adc	r25, r31
    51fa:	08 95       	ret

000051fc <strnlen>:
strnlen():
    51fc:	fc 01       	movw	r30, r24
    51fe:	61 50       	subi	r22, 0x01	; 1
    5200:	70 40       	sbci	r23, 0x00	; 0
    5202:	01 90       	ld	r0, Z+
    5204:	01 10       	cpse	r0, r1
    5206:	d8 f7       	brcc	.-10     	; 0x51fe <strnlen+0x2>
    5208:	80 95       	com	r24
    520a:	90 95       	com	r25
    520c:	8e 0f       	add	r24, r30
    520e:	9f 1f       	adc	r25, r31
    5210:	08 95       	ret

00005212 <fputc>:
fputc():
    5212:	0f 93       	push	r16
    5214:	1f 93       	push	r17
    5216:	cf 93       	push	r28
    5218:	df 93       	push	r29
    521a:	18 2f       	mov	r17, r24
    521c:	09 2f       	mov	r16, r25
    521e:	eb 01       	movw	r28, r22
    5220:	8b 81       	ldd	r24, Y+3	; 0x03
    5222:	81 fd       	sbrc	r24, 1
    5224:	09 c0       	rjmp	.+18     	; 0x5238 <fputc+0x26>
    5226:	1f ef       	ldi	r17, 0xFF	; 255
    5228:	0f ef       	ldi	r16, 0xFF	; 255
    522a:	81 2f       	mov	r24, r17
    522c:	90 2f       	mov	r25, r16
    522e:	df 91       	pop	r29
    5230:	cf 91       	pop	r28
    5232:	1f 91       	pop	r17
    5234:	0f 91       	pop	r16
    5236:	08 95       	ret
    5238:	82 ff       	sbrs	r24, 2
    523a:	14 c0       	rjmp	.+40     	; 0x5264 <fputc+0x52>
    523c:	2e 81       	ldd	r18, Y+6	; 0x06
    523e:	3f 81       	ldd	r19, Y+7	; 0x07
    5240:	8c 81       	ldd	r24, Y+4	; 0x04
    5242:	9d 81       	ldd	r25, Y+5	; 0x05
    5244:	28 17       	cp	r18, r24
    5246:	39 07       	cpc	r19, r25
    5248:	3c f4       	brge	.+14     	; 0x5258 <fputc+0x46>
    524a:	e8 81       	ld	r30, Y
    524c:	f9 81       	ldd	r31, Y+1	; 0x01
    524e:	cf 01       	movw	r24, r30
    5250:	01 96       	adiw	r24, 0x01	; 1
    5252:	88 83       	st	Y, r24
    5254:	99 83       	std	Y+1, r25	; 0x01
    5256:	10 83       	st	Z, r17
    5258:	8e 81       	ldd	r24, Y+6	; 0x06
    525a:	9f 81       	ldd	r25, Y+7	; 0x07
    525c:	01 96       	adiw	r24, 0x01	; 1
    525e:	8e 83       	std	Y+6, r24	; 0x06
    5260:	9f 83       	std	Y+7, r25	; 0x07
    5262:	e3 cf       	rjmp	.-58     	; 0x522a <fputc+0x18>
    5264:	e8 85       	ldd	r30, Y+8	; 0x08
    5266:	f9 85       	ldd	r31, Y+9	; 0x09
    5268:	81 2f       	mov	r24, r17
    526a:	09 95       	icall
    526c:	89 2b       	or	r24, r25
    526e:	a1 f3       	breq	.-24     	; 0x5258 <fputc+0x46>
    5270:	da cf       	rjmp	.-76     	; 0x5226 <fputc+0x14>

00005272 <__ultoa_invert>:
__ultoa_invert():
    5272:	fa 01       	movw	r30, r20
    5274:	aa 27       	eor	r26, r26
    5276:	28 30       	cpi	r18, 0x08	; 8
    5278:	51 f1       	breq	.+84     	; 0x52ce <__ultoa_invert+0x5c>
    527a:	20 31       	cpi	r18, 0x10	; 16
    527c:	81 f1       	breq	.+96     	; 0x52de <__ultoa_invert+0x6c>
    527e:	e8 94       	clt
    5280:	6f 93       	push	r22
    5282:	6e 7f       	andi	r22, 0xFE	; 254
    5284:	6e 5f       	subi	r22, 0xFE	; 254
    5286:	7f 4f       	sbci	r23, 0xFF	; 255
    5288:	8f 4f       	sbci	r24, 0xFF	; 255
    528a:	9f 4f       	sbci	r25, 0xFF	; 255
    528c:	af 4f       	sbci	r26, 0xFF	; 255
    528e:	b1 e0       	ldi	r27, 0x01	; 1
    5290:	3e d0       	rcall	.+124    	; 0x530e <__ultoa_invert+0x9c>
    5292:	b4 e0       	ldi	r27, 0x04	; 4
    5294:	3c d0       	rcall	.+120    	; 0x530e <__ultoa_invert+0x9c>
    5296:	67 0f       	add	r22, r23
    5298:	78 1f       	adc	r23, r24
    529a:	89 1f       	adc	r24, r25
    529c:	9a 1f       	adc	r25, r26
    529e:	a1 1d       	adc	r26, r1
    52a0:	68 0f       	add	r22, r24
    52a2:	79 1f       	adc	r23, r25
    52a4:	8a 1f       	adc	r24, r26
    52a6:	91 1d       	adc	r25, r1
    52a8:	a1 1d       	adc	r26, r1
    52aa:	6a 0f       	add	r22, r26
    52ac:	71 1d       	adc	r23, r1
    52ae:	81 1d       	adc	r24, r1
    52b0:	91 1d       	adc	r25, r1
    52b2:	a1 1d       	adc	r26, r1
    52b4:	20 d0       	rcall	.+64     	; 0x52f6 <__ultoa_invert+0x84>
    52b6:	09 f4       	brne	.+2      	; 0x52ba <__ultoa_invert+0x48>
    52b8:	68 94       	set
    52ba:	3f 91       	pop	r19
    52bc:	2a e0       	ldi	r18, 0x0A	; 10
    52be:	26 9f       	mul	r18, r22
    52c0:	11 24       	eor	r1, r1
    52c2:	30 19       	sub	r19, r0
    52c4:	30 5d       	subi	r19, 0xD0	; 208
    52c6:	31 93       	st	Z+, r19
    52c8:	de f6       	brtc	.-74     	; 0x5280 <__ultoa_invert+0xe>
    52ca:	cf 01       	movw	r24, r30
    52cc:	08 95       	ret
    52ce:	46 2f       	mov	r20, r22
    52d0:	47 70       	andi	r20, 0x07	; 7
    52d2:	40 5d       	subi	r20, 0xD0	; 208
    52d4:	41 93       	st	Z+, r20
    52d6:	b3 e0       	ldi	r27, 0x03	; 3
    52d8:	0f d0       	rcall	.+30     	; 0x52f8 <__ultoa_invert+0x86>
    52da:	c9 f7       	brne	.-14     	; 0x52ce <__ultoa_invert+0x5c>
    52dc:	f6 cf       	rjmp	.-20     	; 0x52ca <__ultoa_invert+0x58>
    52de:	46 2f       	mov	r20, r22
    52e0:	4f 70       	andi	r20, 0x0F	; 15
    52e2:	40 5d       	subi	r20, 0xD0	; 208
    52e4:	4a 33       	cpi	r20, 0x3A	; 58
    52e6:	18 f0       	brcs	.+6      	; 0x52ee <__ultoa_invert+0x7c>
    52e8:	49 5d       	subi	r20, 0xD9	; 217
    52ea:	31 fd       	sbrc	r19, 1
    52ec:	40 52       	subi	r20, 0x20	; 32
    52ee:	41 93       	st	Z+, r20
    52f0:	02 d0       	rcall	.+4      	; 0x52f6 <__ultoa_invert+0x84>
    52f2:	a9 f7       	brne	.-22     	; 0x52de <__ultoa_invert+0x6c>
    52f4:	ea cf       	rjmp	.-44     	; 0x52ca <__ultoa_invert+0x58>
    52f6:	b4 e0       	ldi	r27, 0x04	; 4
    52f8:	a6 95       	lsr	r26
    52fa:	97 95       	ror	r25
    52fc:	87 95       	ror	r24
    52fe:	77 95       	ror	r23
    5300:	67 95       	ror	r22
    5302:	ba 95       	dec	r27
    5304:	c9 f7       	brne	.-14     	; 0x52f8 <__ultoa_invert+0x86>
    5306:	00 97       	sbiw	r24, 0x00	; 0
    5308:	61 05       	cpc	r22, r1
    530a:	71 05       	cpc	r23, r1
    530c:	08 95       	ret
    530e:	9b 01       	movw	r18, r22
    5310:	ac 01       	movw	r20, r24
    5312:	0a 2e       	mov	r0, r26
    5314:	06 94       	lsr	r0
    5316:	57 95       	ror	r21
    5318:	47 95       	ror	r20
    531a:	37 95       	ror	r19
    531c:	27 95       	ror	r18
    531e:	ba 95       	dec	r27
    5320:	c9 f7       	brne	.-14     	; 0x5314 <__ultoa_invert+0xa2>
    5322:	62 0f       	add	r22, r18
    5324:	73 1f       	adc	r23, r19
    5326:	84 1f       	adc	r24, r20
    5328:	95 1f       	adc	r25, r21
    532a:	a0 1d       	adc	r26, r0
    532c:	08 95       	ret

0000532e <__prologue_saves__>:
__prologue_saves__():
    532e:	2f 92       	push	r2
    5330:	3f 92       	push	r3
    5332:	4f 92       	push	r4
    5334:	5f 92       	push	r5
    5336:	6f 92       	push	r6
    5338:	7f 92       	push	r7
    533a:	8f 92       	push	r8
    533c:	9f 92       	push	r9
    533e:	af 92       	push	r10
    5340:	bf 92       	push	r11
    5342:	cf 92       	push	r12
    5344:	df 92       	push	r13
    5346:	ef 92       	push	r14
    5348:	ff 92       	push	r15
    534a:	0f 93       	push	r16
    534c:	1f 93       	push	r17
    534e:	cf 93       	push	r28
    5350:	df 93       	push	r29
    5352:	cd b7       	in	r28, 0x3d	; 61
    5354:	de b7       	in	r29, 0x3e	; 62
    5356:	ca 1b       	sub	r28, r26
    5358:	db 0b       	sbc	r29, r27
    535a:	cd bf       	out	0x3d, r28	; 61
    535c:	de bf       	out	0x3e, r29	; 62
    535e:	09 94       	ijmp

00005360 <__epilogue_restores__>:
__epilogue_restores__():
    5360:	2a 88       	ldd	r2, Y+18	; 0x12
    5362:	39 88       	ldd	r3, Y+17	; 0x11
    5364:	48 88       	ldd	r4, Y+16	; 0x10
    5366:	5f 84       	ldd	r5, Y+15	; 0x0f
    5368:	6e 84       	ldd	r6, Y+14	; 0x0e
    536a:	7d 84       	ldd	r7, Y+13	; 0x0d
    536c:	8c 84       	ldd	r8, Y+12	; 0x0c
    536e:	9b 84       	ldd	r9, Y+11	; 0x0b
    5370:	aa 84       	ldd	r10, Y+10	; 0x0a
    5372:	b9 84       	ldd	r11, Y+9	; 0x09
    5374:	c8 84       	ldd	r12, Y+8	; 0x08
    5376:	df 80       	ldd	r13, Y+7	; 0x07
    5378:	ee 80       	ldd	r14, Y+6	; 0x06
    537a:	fd 80       	ldd	r15, Y+5	; 0x05
    537c:	0c 81       	ldd	r16, Y+4	; 0x04
    537e:	1b 81       	ldd	r17, Y+3	; 0x03
    5380:	aa 81       	ldd	r26, Y+2	; 0x02
    5382:	b9 81       	ldd	r27, Y+1	; 0x01
    5384:	ce 0f       	add	r28, r30
    5386:	d1 1d       	adc	r29, r1
    5388:	cd bf       	out	0x3d, r28	; 61
    538a:	de bf       	out	0x3e, r29	; 62
    538c:	ed 01       	movw	r28, r26
    538e:	08 95       	ret

00005390 <__udivmodhi4>:
__udivmodhi4():
    5390:	aa 1b       	sub	r26, r26
    5392:	bb 1b       	sub	r27, r27
    5394:	51 e1       	ldi	r21, 0x11	; 17
    5396:	07 c0       	rjmp	.+14     	; 0x53a6 <__udivmodhi4_ep>

00005398 <__udivmodhi4_loop>:
    5398:	aa 1f       	adc	r26, r26
    539a:	bb 1f       	adc	r27, r27
    539c:	a6 17       	cp	r26, r22
    539e:	b7 07       	cpc	r27, r23
    53a0:	10 f0       	brcs	.+4      	; 0x53a6 <__udivmodhi4_ep>
    53a2:	a6 1b       	sub	r26, r22
    53a4:	b7 0b       	sbc	r27, r23

000053a6 <__udivmodhi4_ep>:
    53a6:	88 1f       	adc	r24, r24
    53a8:	99 1f       	adc	r25, r25
    53aa:	5a 95       	dec	r21
    53ac:	a9 f7       	brne	.-22     	; 0x5398 <__udivmodhi4_loop>
    53ae:	80 95       	com	r24
    53b0:	90 95       	com	r25
    53b2:	bc 01       	movw	r22, r24
    53b4:	cd 01       	movw	r24, r26
    53b6:	08 95       	ret

000053b8 <__udivmodsi4>:
__udivmodsi4():
    53b8:	a1 e2       	ldi	r26, 0x21	; 33
    53ba:	1a 2e       	mov	r1, r26
    53bc:	aa 1b       	sub	r26, r26
    53be:	bb 1b       	sub	r27, r27
    53c0:	fd 01       	movw	r30, r26
    53c2:	0d c0       	rjmp	.+26     	; 0x53de <__udivmodsi4_ep>

000053c4 <__udivmodsi4_loop>:
    53c4:	aa 1f       	adc	r26, r26
    53c6:	bb 1f       	adc	r27, r27
    53c8:	ee 1f       	adc	r30, r30
    53ca:	ff 1f       	adc	r31, r31
    53cc:	a2 17       	cp	r26, r18
    53ce:	b3 07       	cpc	r27, r19
    53d0:	e4 07       	cpc	r30, r20
    53d2:	f5 07       	cpc	r31, r21
    53d4:	20 f0       	brcs	.+8      	; 0x53de <__udivmodsi4_ep>
    53d6:	a2 1b       	sub	r26, r18
    53d8:	b3 0b       	sbc	r27, r19
    53da:	e4 0b       	sbc	r30, r20
    53dc:	f5 0b       	sbc	r31, r21

000053de <__udivmodsi4_ep>:
    53de:	66 1f       	adc	r22, r22
    53e0:	77 1f       	adc	r23, r23
    53e2:	88 1f       	adc	r24, r24
    53e4:	99 1f       	adc	r25, r25
    53e6:	1a 94       	dec	r1
    53e8:	69 f7       	brne	.-38     	; 0x53c4 <__udivmodsi4_loop>
    53ea:	60 95       	com	r22
    53ec:	70 95       	com	r23
    53ee:	80 95       	com	r24
    53f0:	90 95       	com	r25
    53f2:	9b 01       	movw	r18, r22
    53f4:	ac 01       	movw	r20, r24
    53f6:	bd 01       	movw	r22, r26
    53f8:	cf 01       	movw	r24, r30
    53fa:	08 95       	ret

000053fc <__divmodsi4>:
__divmodsi4():
    53fc:	05 2e       	mov	r0, r21
    53fe:	97 fb       	bst	r25, 7
    5400:	16 f4       	brtc	.+4      	; 0x5406 <__divmodsi4+0xa>
    5402:	00 94       	com	r0
    5404:	0f d0       	rcall	.+30     	; 0x5424 <__negsi2>
    5406:	57 fd       	sbrc	r21, 7
    5408:	05 d0       	rcall	.+10     	; 0x5414 <__divmodsi4_neg2>
    540a:	d6 df       	rcall	.-84     	; 0x53b8 <__udivmodsi4>
    540c:	07 fc       	sbrc	r0, 7
    540e:	02 d0       	rcall	.+4      	; 0x5414 <__divmodsi4_neg2>
    5410:	46 f4       	brtc	.+16     	; 0x5422 <__divmodsi4_exit>
    5412:	08 c0       	rjmp	.+16     	; 0x5424 <__negsi2>

00005414 <__divmodsi4_neg2>:
    5414:	50 95       	com	r21
    5416:	40 95       	com	r20
    5418:	30 95       	com	r19
    541a:	21 95       	neg	r18
    541c:	3f 4f       	sbci	r19, 0xFF	; 255
    541e:	4f 4f       	sbci	r20, 0xFF	; 255
    5420:	5f 4f       	sbci	r21, 0xFF	; 255

00005422 <__divmodsi4_exit>:
    5422:	08 95       	ret

00005424 <__negsi2>:
__negsi2():
    5424:	90 95       	com	r25
    5426:	80 95       	com	r24
    5428:	70 95       	com	r23
    542a:	61 95       	neg	r22
    542c:	7f 4f       	sbci	r23, 0xFF	; 255
    542e:	8f 4f       	sbci	r24, 0xFF	; 255
    5430:	9f 4f       	sbci	r25, 0xFF	; 255
    5432:	08 95       	ret

00005434 <__bswapsi2>:
__bswapsi2():
    5434:	69 27       	eor	r22, r25
    5436:	96 27       	eor	r25, r22
    5438:	69 27       	eor	r22, r25
    543a:	78 27       	eor	r23, r24
    543c:	87 27       	eor	r24, r23
    543e:	78 27       	eor	r23, r24
    5440:	08 95       	ret

00005442 <__tablejump2__>:
__tablejump2__():
    5442:	ee 0f       	add	r30, r30
    5444:	ff 1f       	adc	r31, r31
    5446:	05 90       	lpm	r0, Z+
    5448:	f4 91       	lpm	r31, Z
    544a:	e0 2d       	mov	r30, r0
    544c:	09 94       	ijmp

0000544e <memcmp>:
memcmp():
    544e:	fb 01       	movw	r30, r22
    5450:	dc 01       	movw	r26, r24
    5452:	04 c0       	rjmp	.+8      	; 0x545c <memcmp+0xe>
    5454:	8d 91       	ld	r24, X+
    5456:	01 90       	ld	r0, Z+
    5458:	80 19       	sub	r24, r0
    545a:	21 f4       	brne	.+8      	; 0x5464 <memcmp+0x16>
    545c:	41 50       	subi	r20, 0x01	; 1
    545e:	50 40       	sbci	r21, 0x00	; 0
    5460:	c8 f7       	brcc	.-14     	; 0x5454 <memcmp+0x6>
    5462:	88 1b       	sub	r24, r24
    5464:	99 0b       	sbc	r25, r25
    5466:	08 95       	ret

00005468 <memcpy>:
memcpy():
    5468:	fb 01       	movw	r30, r22
    546a:	dc 01       	movw	r26, r24
    546c:	02 c0       	rjmp	.+4      	; 0x5472 <memcpy+0xa>
    546e:	01 90       	ld	r0, Z+
    5470:	0d 92       	st	X+, r0
    5472:	41 50       	subi	r20, 0x01	; 1
    5474:	50 40       	sbci	r21, 0x00	; 0
    5476:	d8 f7       	brcc	.-10     	; 0x546e <memcpy+0x6>
    5478:	08 95       	ret

0000547a <memset>:
memset():
    547a:	dc 01       	movw	r26, r24
    547c:	01 c0       	rjmp	.+2      	; 0x5480 <memset+0x6>
    547e:	6d 93       	st	X+, r22
    5480:	41 50       	subi	r20, 0x01	; 1
    5482:	50 40       	sbci	r21, 0x00	; 0
    5484:	e0 f7       	brcc	.-8      	; 0x547e <memset+0x4>
    5486:	08 95       	ret

00005488 <_exit>:
exit():
    5488:	f8 94       	cli

0000548a <__stop_program>:
__stop_program():
    548a:	ff cf       	rjmp	.-2      	; 0x548a <__stop_program>

Disassembly of section .nvmem:

00005536 <.nvmem>:
	...

Disassembly of section .eeprom:

00810000 <_EEP>:
  810000:	ff ff ff ff ff ff ff ff                             ........

Disassembly of section .fuse:

00820000 <__fuse>:
  820000:	00 00 00 00 00 d1 08 00 00 00 03 00                 ............
